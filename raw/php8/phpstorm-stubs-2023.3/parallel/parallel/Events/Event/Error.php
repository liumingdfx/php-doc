<?php

namespace parallel\Events\Event;

/**
*<div id="class.error" class="reference"> <h1 class="title">Error</h1>  <div class="partintro"><p class="verinfo">(PHP 7, PHP 8)</p>  <div class="section" id="error.intro">   <h2 class="title">简介</h2>   <p class="para">    <span class="ooclass"><span class="classname"><strong class="classname">Error</strong></span></span> 是所有PHP内部错误类的基类。   </p>  </div>  <div class="section" id="error.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="exceptionname">Error</strong></strong>             <span class="modifier">implements</span>      <a href="https://www.php.net/manual/zh/class.throwable.php" class="interfacename">Throwable</a> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">protected</span>     <span class="type" style="color:#EAB766">string</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.error.php#error.props.message">$<var class="varname">message</var></a></var><span class="initializer"> = &quot;&quot;</span>;</div>    <div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">string</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.error.php#error.props.string">$<var class="varname">string</var></a></var><span class="initializer"> = &quot;&quot;</span>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766">int</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.error.php#error.props.code">$<var class="varname">code</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766">string</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.error.php#error.props.file">$<var class="varname">file</var></a></var><span class="initializer"> = &quot;&quot;</span>;</div>    <div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766">int</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.error.php#error.props.line">$<var class="varname">line</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">array</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.error.php#error.props.trace">$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div>    <div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.error.php#error.props.previous">$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/error.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$message</span><span class="initializer"> = &quot;&quot;</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$code</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$previous</span><span class="initializer"> = <strong><span>null</span></strong></span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/error.getmessage.php" class="methodname" style="color:#CC7832">getMessage</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/error.getprevious.php" class="methodname" style="color:#CC7832">getPrevious</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/error.getcode.php" class="methodname" style="color:#CC7832">getCode</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/error.getfile.php" class="methodname" style="color:#CC7832">getFile</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/error.getline.php" class="methodname" style="color:#CC7832">getLine</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/error.gettrace.php" class="methodname" style="color:#CC7832">getTrace</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/error.gettraceasstring.php" class="methodname" style="color:#CC7832">getTraceAsString</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/error.tostring.php" class="methodname" style="color:#CC7832">__toString</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/error.clone.php" class="methodname" style="color:#CC7832">__clone</a></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>   }</div>  </div>      <div class="section" id="error.props">     <h2 class="title">属性</h2>     <dl>             <dt id="error.props.message"><var class="varname">message</var></dt>       <dd>        <p class="para">错误消息内容</p>       </dd>                   <dt id="error.props.code"><var class="varname">code</var></dt>       <dd>        <p class="para">错误代码</p>       </dd>                   <dt id="error.props.file"><var class="varname">file</var></dt>       <dd>        <p class="para">抛出错误的文件名</p>       </dd>                   <dt id="error.props.line"><var class="varname">line</var></dt>       <dd>        <p class="para">抛出错误的行数</p>        </dd>                   <dt id="error.props.previous"><var class="varname">previous</var></dt>       <dd>        <p class="para">之前抛出的异常</p>       </dd>                   <dt id="error.props.string"><var class="varname">string</var></dt>       <dd>        <p class="para">字符串形式的堆栈跟踪</p>       </dd>                   <dt id="error.props.trace"><var class="varname">trace</var></dt>       <dd>        <p class="para">数组形式的堆栈跟踪</p>       </dd>           </dl>    </div>   </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Error::__construct} — 初始化 error 对象</li><li>{@link Error::getMessage} — 获取错误信息</li><li>{@link Error::getPrevious} — 返回先前的 Throwable</li><li>{@link Error::getCode} — 获取错误代码</li><li>{@link Error::getFile} — 获取错误发生时的文件</li><li>{@link Error::getLine} — 获取错误发生时的行号</li><li>{@link Error::getTrace} — 获取调用栈（stack trace）</li><li>{@link Error::getTraceAsString} — 获取字符串形式的调用栈（stack trace）</li><li>{@link Error::__toString} — error 的字符串表达</li><li>{@link Error::__clone} — 克隆 error</li></ul></div>
*/
class Error extends \parallel\Error {}
