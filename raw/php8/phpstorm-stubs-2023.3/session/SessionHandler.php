<?php

use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
use JetBrains\PhpStorm\Internal\TentativeType;

/**
 * <b>SessionHandlerInterface</b> is an interface which defines
 * a prototype for creating a custom session handler.
 * In order to pass a custom session handler to
 * session_set_save_handler() using its OOP invocation,
 * the class must implement this interface.
 * @link https://php.net/manual/en/class.sessionhandlerinterface.php
 * @since 5.4
 */
interface SessionHandlerInterface
{
    /**
     * Close the session
     * @link https://php.net/manual/en/sessionhandlerinterface.close.php
     * @return bool <p>
     * The return value (usually TRUE on success, FALSE on failure).
     * Note this value is returned internally to PHP for processing.
     * </p>
     * @since 5.4
     */
    #[TentativeType]
    public function close(): bool;

    /**
     * Destroy a session
     * @link https://php.net/manual/en/sessionhandlerinterface.destroy.php
     * @param string $id The session ID being destroyed.
     * @return bool <p>
     * The return value (usually TRUE on success, FALSE on failure).
     * Note this value is returned internally to PHP for processing.
     * </p>
     * @since 5.4
     */
    #[TentativeType]
    public function destroy(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $id): bool;

    /**
     * Cleanup old sessions
     * @link https://php.net/manual/en/sessionhandlerinterface.gc.php
     * @param int $max_lifetime <p>
     * Sessions that have not updated for
     * the last maxlifetime seconds will be removed.
     * </p>
     * @return int|false <p>
     * Returns the number of deleted sessions on success, or false on failure. Prior to PHP version 7.1, the function returned true on success.
     * Note this value is returned internally to PHP for processing.
     * </p>
     * @since 5.4
     */
    #[LanguageLevelTypeAware(['7.1' => 'int|false'], default: 'bool')]
    #[TentativeType]
    public function gc(#[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $max_lifetime): int|false;

    /**
     * Initialize session
     * @link https://php.net/manual/en/sessionhandlerinterface.open.php
     * @param string $path The path where to store/retrieve the session.
     * @param string $name The session name.
     * @return bool <p>
     * The return value (usually TRUE on success, FALSE on failure).
     * Note this value is returned internally to PHP for processing.
     * </p>
     * @since 5.4
     */
    #[TentativeType]
    public function open(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $path,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $name
    ): bool;

    /**
     * Read session data
     * @link https://php.net/manual/en/sessionhandlerinterface.read.php
     * @param string $id The session id to read data for.
     * @return string|false <p>
     * Returns an encoded string of the read data.
     * If nothing was read, it must return false.
     * Note this value is returned internally to PHP for processing.
     * </p>
     * @since 5.4
     */
    #[TentativeType]
    public function read(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $id): string|false;

    /**
     * Write session data
     * @link https://php.net/manual/en/sessionhandlerinterface.write.php
     * @param string $id The session id.
     * @param string $data <p>
     * The encoded session data. This data is the
     * result of the PHP internally encoding
     * the $_SESSION superglobal to a serialized
     * string and passing it as this parameter.
     * Please note sessions use an alternative serialization method.
     * </p>
     * @return bool <p>
     * The return value (usually TRUE on success, FALSE on failure).
     * Note this value is returned internally to PHP for processing.
     * </p>
     * @since 5.4
     */
    #[TentativeType]
    public function write(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $id,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $data
    ): bool;
}

/**
 * <b>SessionIdInterface</b>
 * @link https://php.net/manual/en/class.sessionidinterface.php
 * @since 5.5.1
 */
interface SessionIdInterface
{
    /**
     * Create session ID
     * @link https://php.net/manual/en/sessionidinterface.create-sid.php
     * @return string <p>
     * The new session ID. Note that this value is returned internally to PHP for processing.
     * </p>
     */
    #[TentativeType]
    public function create_sid(): string;
}

/**
 * <b>SessionUpdateTimestampHandlerInterface</b> is an interface which
 * defines a prototype for updating the life time of an existing session.
 * In order to use the lazy_write option must be enabled and a custom session
 * handler must implement this interface.
 * @since 7.0
 */
interface SessionUpdateTimestampHandlerInterface
{
    /**
     * Validate session id
     * @link https://www.php.net/manual/sessionupdatetimestamphandlerinterface.validateid
     * @param string $id The session id
     * @return bool <p>
     * Note this value is returned internally to PHP for processing.
     * </p>
     */
    #[TentativeType]
    public function validateId(string $id): bool;

    /**
     * Update timestamp of a session
     * @link https://www.php.net/manual/sessionupdatetimestamphandlerinterface.updatetimestamp.php
     * @param string $id The session id
     * @param string $data <p>
     * The encoded session data. This data is the
     * result of the PHP internally encoding
     * the $_SESSION superglobal to a serialized
     * string and passing it as this parameter.
     * Please note sessions use an alternative serialization method.
     * </p>
     * @return bool
     */
    #[TentativeType]
    public function updateTimestamp(string $id, string $data): bool;
}

/**
*<div id="class.sessionhandler" class="reference"> <h1 class="title">The SessionHandler class</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8)</p>  <div class="section" id="sessionhandler.intro">   <h2 class="title">简介</h2>   <p class="para">    <span class="classname"><strong class="classname">SessionHandler</strong></span> is a special class that can be used    to expose the current internal PHP session save handler by inheritance.    There are seven methods which wrap the seven internal session save handler    callbacks (<span class="parameter" style="color:#3A95FF">open</span>, <span class="parameter" style="color:#3A95FF">close</span>,    <span class="parameter" style="color:#3A95FF">read</span>, <span class="parameter" style="color:#3A95FF">write</span>,    <span class="parameter" style="color:#3A95FF">destroy</span>, <span class="parameter" style="color:#3A95FF">gc</span> and    <span class="parameter" style="color:#3A95FF">create_sid</span>).  By default, this class will wrap    whatever internal save handler is set as defined by the    <a href="https://www.php.net/manual/zh/session.configuration.php#ini.session.save-handler" class="link">session.save_handler</a>    configuration directive which is usually <span class="parameter" style="color:#3A95FF">files</span> by    default.  Other internal session save handlers are provided by PHP    extensions such as SQLite (as <span class="parameter" style="color:#3A95FF">sqlite</span>), Memcache (as    <span class="parameter" style="color:#3A95FF">memcache</span>), and Memcached (as    <span class="parameter" style="color:#3A95FF">memcached</span>).   </p>   <p class="para">    When a plain instance of <span class="classname"><strong class="classname">SessionHandler</strong></span> is set as the save handler using    <span class="function">{@link session_set_save_handler()}</span> it will wrap the current save handlers.    A class extending from <span class="classname"><strong class="classname">SessionHandler</strong></span> allows you to override    the methods or intercept or filter them by calls the parent class methods which ultimately wrap    the internal PHP session handlers.   </p>   <p class="para">    This allows you, for example, to intercept the <span class="parameter" style="color:#3A95FF">read</span> and <span class="parameter" style="color:#3A95FF">write</span>    methods to encrypt/decrypt the session data and then pass the result to and from the parent class.    Alternatively one might chose to entirely override a method like the garbage collection callback    <span class="parameter" style="color:#3A95FF">gc</span>.   </p>   <p class="para">    Because the <span class="classname"><strong class="classname">SessionHandler</strong></span> wraps the current internal save handler    methods, the above example of encryption can be applied to any internal save handler without    having to know the internals of the handlers.   </p>   <p class="para">    To use this class, first set the save handler you wish to expose using    <a href="https://www.php.net/manual/zh/session.configuration.php#ini.session.save-handler" class="link">session.save_handler</a> and then pass an instance of    <span class="classname"><strong class="classname">SessionHandler</strong></span> or one extending it to <span class="function">{@link session_set_save_handler()}</span>.   </p>   <p class="para">    Please note that the callback methods of this class are designed to be called internally by    PHP and are not meant to be called from user-space code.  The return values are equally processed internally    by PHP.  For more information on the session workflow, please refer to <span class="function">{@link session_set_save_handler()}</span>.   </p>  </div>  <div class="section" id="sessionhandler.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">SessionHandler</strong></strong>             <span class="modifier">implements</span>      <a href="https://www.php.net/manual/zh/class.sessionhandlerinterface.php" class="interfacename">SessionHandlerInterface</a>,     <a href="https://www.php.net/manual/zh/class.sessionidinterface.php" class="interfacename">SessionIdInterface</a> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sessionhandler.close.php" class="methodname" style="color:#CC7832">close</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sessionhandler.create-sid.php" class="methodname" style="color:#CC7832">create_sid</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sessionhandler.destroy.php" class="methodname" style="color:#CC7832">destroy</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$id</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sessionhandler.gc.php" class="methodname" style="color:#CC7832">gc</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$max_lifetime</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sessionhandler.open.php" class="methodname" style="color:#CC7832">open</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$path</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sessionhandler.read.php" class="methodname" style="color:#CC7832">read</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$id</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sessionhandler.write.php" class="methodname" style="color:#CC7832">write</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$id</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$data</span></span>): <span class="type" style="color:#EAB766">bool</span></div>   }</div>  </div>  <div class="section" id="session.notes">   <div class="warning"><strong class="warning">警告</strong>    <p class="para">     This class is designed to expose the current internal PHP session save handler, if you want to     write your own custom save handlers, please implement the <span class="classname"><a href="https://www.php.net/manual/zh/class.sessionhandlerinterface.php" class="classname">SessionHandlerInterface</a></span>     interface instead of extending from <span class="classname"><strong class="classname">SessionHandler</strong></span>.    </p>   </div>  </div>  <div class="section" id="sessionhandler.examples">   <div class="example" id="">    <p><strong>示例 #1      Using <span class="classname"><strong class="classname">SessionHandler</strong></span> to add encryption to internal PHP save handlers.    </strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /> </span><span style="color: #FF8000">//*<br />  * decrypt AES 256<br />  *<br />  * @param data $edata<br />  * @param string $password<br />  * @return decrypted data<br />  <br /></span><span style="color: #007700">function </span><span style="color: #9876AA">decrypt</span><span style="color: #007700">(</span><span style="color: #9876AA">$edata</span><span style="color: #007700">, </span><span style="color: #9876AA">$password</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$data </span><span style="color: #007700">= </span><span style="color: #9876AA">base64_decode</span><span style="color: #007700">(</span><span style="color: #9876AA">$edata</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$salt </span><span style="color: #007700">= </span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">16</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$ct </span><span style="color: #007700">= </span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">, </span><span style="color: #9876AA">16</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$rounds </span><span style="color: #007700">= </span><span style="color: #9876AA">3</span><span style="color: #007700">; </span><span style="color: #FF8000">// depends on key length<br />    </span><span style="color: #9876AA">$data00 </span><span style="color: #007700">= </span><span style="color: #9876AA">$password</span><span style="color: #007700">.</span><span style="color: #9876AA">$salt</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$hash </span><span style="color: #007700">= array();<br />    </span><span style="color: #9876AA">$hash</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">] = </span><span style="color: #9876AA">hash</span><span style="color: #007700">(</span><span style="color: #DD0000">'sha256'</span><span style="color: #007700">, </span><span style="color: #9876AA">$data00</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">$hash</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">];<br />    for (</span><span style="color: #9876AA">$i </span><span style="color: #007700">= </span><span style="color: #9876AA">1</span><span style="color: #007700">; </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">$rounds</span><span style="color: #007700">; </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br />        </span><span style="color: #9876AA">$hash</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">] = </span><span style="color: #9876AA">hash</span><span style="color: #007700">(</span><span style="color: #DD0000">'sha256'</span><span style="color: #007700">, </span><span style="color: #9876AA">$hash</span><span style="color: #007700">[</span><span style="color: #9876AA">$i </span><span style="color: #007700">- </span><span style="color: #9876AA">1</span><span style="color: #007700">].</span><span style="color: #9876AA">$data00</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$result </span><span style="color: #007700">.= </span><span style="color: #9876AA">$hash</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">];<br />    }<br />    </span><span style="color: #9876AA">$key </span><span style="color: #007700">= </span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">32</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$iv  </span><span style="color: #007700">= </span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">, </span><span style="color: #9876AA">32</span><span style="color: #007700">,</span><span style="color: #9876AA">16</span><span style="color: #007700">);<br /><br />    return </span><span style="color: #9876AA">openssl_decrypt</span><span style="color: #007700">(</span><span style="color: #9876AA">$ct</span><span style="color: #007700">, </span><span style="color: #DD0000">'AES-256-CBC'</span><span style="color: #007700">, </span><span style="color: #9876AA">$key</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">, </span><span style="color: #9876AA">$iv</span><span style="color: #007700">);<br />  }<br /><br /></span><span style="color: #FF8000">//*<br /> * crypt AES 256<br /> *<br /> * @param data $data<br /> * @param string $password<br /> * @return base64 encrypted data<br /> <br /></span><span style="color: #007700">function </span><span style="color: #9876AA">encrypt</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">, </span><span style="color: #9876AA">$password</span><span style="color: #007700">) {<br />    </span><span style="color: #FF8000">// Generate a cryptographically secure random salt using random_bytes()<br />    </span><span style="color: #9876AA">$salt </span><span style="color: #007700">= </span><span style="color: #9876AA">random_bytes</span><span style="color: #007700">(</span><span style="color: #9876AA">16</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$salted </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$dx </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />    </span><span style="color: #FF8000">// Salt the key(32) and iv(16) = 48<br />    </span><span style="color: #007700">while (</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$salted</span><span style="color: #007700">) &lt; </span><span style="color: #9876AA">48</span><span style="color: #007700">) {<br />      </span><span style="color: #9876AA">$dx </span><span style="color: #007700">= </span><span style="color: #9876AA">hash</span><span style="color: #007700">(</span><span style="color: #DD0000">'sha256'</span><span style="color: #007700">, </span><span style="color: #9876AA">$dx</span><span style="color: #007700">.</span><span style="color: #9876AA">$password</span><span style="color: #007700">.</span><span style="color: #9876AA">$salt</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br />      </span><span style="color: #9876AA">$salted </span><span style="color: #007700">.= </span><span style="color: #9876AA">$dx</span><span style="color: #007700">;<br />    }<br /><br />    </span><span style="color: #9876AA">$key </span><span style="color: #007700">= </span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$salted</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">32</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$iv  </span><span style="color: #007700">= </span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$salted</span><span style="color: #007700">, </span><span style="color: #9876AA">32</span><span style="color: #007700">,</span><span style="color: #9876AA">16</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$encrypted_data </span><span style="color: #007700">= </span><span style="color: #9876AA">openssl_encrypt</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">, </span><span style="color: #DD0000">'AES-256-CBC'</span><span style="color: #007700">, </span><span style="color: #9876AA">$key</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">, </span><span style="color: #9876AA">$iv</span><span style="color: #007700">);<br />    return </span><span style="color: #9876AA">base64_encode</span><span style="color: #007700">(</span><span style="color: #9876AA">$salt </span><span style="color: #007700">. </span><span style="color: #9876AA">$encrypted_data</span><span style="color: #007700">);<br />}<br /><br />class </span><span style="color: #9876AA">EncryptedSessionHandler </span><span style="color: #007700">extends </span><span style="color: #9876AA">SessionHandler<br /></span><span style="color: #007700">{<br />    private </span><span style="color: #9876AA">$key</span><span style="color: #007700">;<br /><br />    public function </span><span style="color: #9876AA">__construct</span><span style="color: #007700">(</span><span style="color: #9876AA">$key</span><span style="color: #007700">)<br />    {<br />        </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key </span><span style="color: #007700">= </span><span style="color: #9876AA">$key</span><span style="color: #007700">;<br />    }<br /><br />    public function </span><span style="color: #9876AA">read</span><span style="color: #007700">(</span><span style="color: #9876AA">$id</span><span style="color: #007700">)<br />    {<br />        </span><span style="color: #9876AA">$data </span><span style="color: #007700">= </span><span style="color: #9876AA">parent</span><span style="color: #007700">::</span><span style="color: #9876AA">read</span><span style="color: #007700">(</span><span style="color: #9876AA">$id</span><span style="color: #007700">);<br /><br />        if (!</span><span style="color: #9876AA">$data</span><span style="color: #007700">) {<br />            return </span><span style="color: #DD0000">""</span><span style="color: #007700">;<br />        } else {<br />            return </span><span style="color: #9876AA">decrypt</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">, </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">);<br />        }<br />    }<br /><br />    public function </span><span style="color: #9876AA">write</span><span style="color: #007700">(</span><span style="color: #9876AA">$id</span><span style="color: #007700">, </span><span style="color: #9876AA">$data</span><span style="color: #007700">)<br />    {<br />        </span><span style="color: #9876AA">$data </span><span style="color: #007700">= </span><span style="color: #9876AA">encrypt</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">, </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">key</span><span style="color: #007700">);<br /><br />        return </span><span style="color: #9876AA">parent</span><span style="color: #007700">::</span><span style="color: #9876AA">write</span><span style="color: #007700">(</span><span style="color: #9876AA">$id</span><span style="color: #007700">, </span><span style="color: #9876AA">$data</span><span style="color: #007700">);<br />    }<br />}<br /><br /></span><span style="color: #FF8000">// we'll intercept the native 'files' handler, but will equally work<br />// with other internal native handlers like 'sqlite', 'memcache' or 'memcached'<br />// which are provided by PHP extensions.<br /></span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'session.save_handler'</span><span style="color: #007700">, </span><span style="color: #DD0000">'files'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$key </span><span style="color: #007700">= </span><span style="color: #DD0000">'secret_string'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$handler </span><span style="color: #007700">= new </span><span style="color: #9876AA">EncryptedSessionHandler</span><span style="color: #007700">(</span><span style="color: #9876AA">$key</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">session_set_save_handler</span><span style="color: #007700">(</span><span style="color: #9876AA">$handler</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">session_start</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">// proceed to set and retrieve values by key from $_SESSION</span></span></span></div>    </div>   </div>   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     <p class="para">     Since this class&#039; methods are designed to be called internally by PHP as part of the normal session workflow,     child class calls to parent methods (i.e. the actual internal native handlers) will return <strong><span>false</span></strong> unless     the session has actually been started (either automatically, or by explicit <span class="function">{@link session_start()}</span>).     This is important to consider when writing unit tests where the class methods might be invoked manually.    </p>   </p></blockquote>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link SessionHandler::close} — Close the session</li><li>{@link SessionHandler::create_sid} — Return a new session ID</li><li>{@link SessionHandler::destroy} — Destroy a session</li><li>{@link SessionHandler::gc} — Cleanup old sessions</li><li>{@link SessionHandler::open} — Initialize session</li><li>{@link SessionHandler::read} — Read session data</li><li>{@link SessionHandler::write} — Write session data</li></ul></div>
*/
class SessionHandler implements SessionHandlerInterface, SessionIdInterface
{
/**
*<div id="sessionhandler.close" class="refentry"> <div class="refnamediv">  <h1 class="refname">SessionHandler::close</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SessionHandler::close</span> &mdash; <span class="dc-title">Close the session</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sessionhandler.close-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SessionHandler::close</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Closes the current session. This method is automatically executed internally by PHP when   closing the session, or explicitly via <span class="function">{@link session_write_close()}</span> (which   first calls the <span class="function">{@link SessionHandler::write()}</span>).  </p>  <p class="para">   This method wraps the internal PHP save handler defined in the   <a href="https://www.php.net/manual/zh/session.configuration.php#ini.session.save-handler" class="link">session.save_handler</a> ini setting that was set   before this handler was activated by <span class="function">{@link session_set_save_handler()}</span>.  </p>  <p class="para">   If this class is extended by inheritance, calling the parent <span class="parameter" style="color:#3A95FF">close</span> method will invoke the   wrapper for this method and therefore invoke the associated internal callback.  This allows the method to be   overridden and or intercepted.  </p>  <p class="para">   For more information on what this method is expected to do, please refer to the documentation at   <span class="function">{@link SessionHandlerInterface::close()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sessionhandler.close-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sessionhandler.close-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   会话存储的返回值（通常成功返回 0，失败返回 1）。  </p> </div></div>
     * @return bool <p>*/
    public function close(): bool {}

/**
*<div id="sessionhandler.create-sid" class="refentry"> <div class="refnamediv">  <h1 class="refname">SessionHandler::create_sid</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.1, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SessionHandler::create_sid</span> &mdash; <span class="dc-title">Return a new session ID</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sessionhandler.create-sid-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SessionHandler::create_sid</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Generates and returns a new session ID.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sessionhandler.create-sid-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sessionhandler.create-sid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A session ID valid for the default session handler.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-sessionhandler.create-sid-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link session_id()} - 获取/设置当前会话 ID</span></li>    <li class="member"><span class="function">{@link session_create_id()} - Create new session id</span></li>   </ul>  </span> </div></div>
     * @return string <p>A session ID valid for the default session handler.</p>*/
    public function create_sid(): string {}

/**
*<div id="sessionhandler.destroy" class="refentry"> <div class="refnamediv">  <h1 class="refname">SessionHandler::destroy</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SessionHandler::destroy</span> &mdash; <span class="dc-title">Destroy a session</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sessionhandler.destroy-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SessionHandler::destroy</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$id</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Destroys a session. Called internally by PHP with <span class="function">{@link session_regenerate_id()}</span> (assuming   the <span class="parameter" style="color:#3A95FF">$destroy</span> is set to <strong><span>true</span></strong>, by <span class="function">{@link session_destroy()}</span> or when   <span class="function">{@link session_decode()}</span> fails.  </p>  <p class="para">   This method wraps the internal PHP save handler defined in the   <a href="https://www.php.net/manual/zh/session.configuration.php#ini.session.save-handler" class="link">session.save_handler</a> ini setting that was set   before this handler was set by <span class="function">{@link session_set_save_handler()}</span>.  </p>  <p class="para">   If this class is extended by inheritance, calling the parent <span class="parameter" style="color:#3A95FF">destroy</span> method will invoke the   wrapper for this method and therefore invoke the associated internal callback.  This allows this method to be   overridden and or intercepted and filtered.  </p>  <p class="para">   For more information on what this method is expected to do, please refer to the documentation   at <span class="function">{@link SessionHandlerInterface::destroy()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sessionhandler.destroy-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">id</span></dt>     <dd>      <p class="para">       The session ID being destroyed.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sessionhandler.destroy-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   会话存储的返回值（通常成功返回 0，失败返回 1）。  </p> </div></div>
     * @return bool <p>*/
    public function destroy(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $id): bool {}

/**
*<div id="sessionhandler.gc" class="refentry"> <div class="refnamediv">  <h1 class="refname">SessionHandler::gc</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SessionHandler::gc</span> &mdash; <span class="dc-title">Cleanup old sessions</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sessionhandler.gc-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SessionHandler::gc</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$max_lifetime</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   Cleans up expired sessions. Called randomly by PHP internally when a session starts or when   <span class="function">{@link session_start()}</span> is invoked.  The frequency this is called is   based on the <a href="https://www.php.net/manual/zh/session.configuration.php#ini.session.gc-divisor" class="link">session.gc_divisor</a> and   <a href="https://www.php.net/manual/zh/session.configuration.php#ini.session.gc-probability" class="link">session.gc_probability</a> configuration   directives.  </p>  <p class="para">   This method wraps the internal PHP save handler defined in the   <a href="https://www.php.net/manual/zh/session.configuration.php#ini.session.save-handler" class="link">session.save_handler</a> ini setting that was set   before this handler was set by <span class="function">{@link session_set_save_handler()}</span>.  </p>  <p class="para">   If this class is extended by inheritance, calling the parent <span class="parameter" style="color:#3A95FF">gc</span> method will invoke the   wrapper for this method and therefore invoke the associated internal callback.  This allows this method to be   overridden and or intercepted and filtered.  </p>  <p class="para">   For more information on what this method is expected to do, please refer to the documentation at   <span class="function">{@link SessionHandlerInterface::gc()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sessionhandler.gc-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">max_lifetime</span></dt>    <dd>     <span>      Sessions that have not updated for the last <span class="parameter" style="color:#3A95FF">max_lifetime</span> seconds will be removed.     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sessionhandler.gc-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the number of deleted sessions on success,  或者在失败时返回 <strong><span>false</span></strong>.   Note this value is returned internally to PHP for processing.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-sessionhandler.gc-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.1.0</td>      <td>       Prior to this version, the function returned <strong><span>true</span></strong> on success.      </td>     </tr>    </tbody>     </table> </div></div>
     * @return int|bool <p>*/
    public function gc(#[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $max_lifetime): int|false {}

/**
*<div id="sessionhandler.open" class="refentry"> <div class="refnamediv">  <h1 class="refname">SessionHandler::open</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SessionHandler::open</span> &mdash; <span class="dc-title">Initialize session</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sessionhandler.open-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SessionHandler::open</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$path</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Create new session, or re-initialize existing session. Called internally by PHP when   a session starts either automatically or when <span class="function">{@link session_start()}</span> is invoked.  </p>  <p class="para">   This method wraps the internal PHP save handler defined in the   <a href="https://www.php.net/manual/zh/session.configuration.php#ini.session.save-handler" class="link">session.save_handler</a> ini setting that was set   before this handler was set by <span class="function">{@link session_set_save_handler()}</span>.  </p>  <p class="para">   If this class is extended by inheritance, calling the parent <span class="parameter" style="color:#3A95FF">open</span> method will invoke the   wrapper for this method and therefore invoke the associated internal callback.  This allows this method to be   overridden and or intercepted and filtered.  </p>  <p class="para">   For more information on what this method is expected to do, please refer to the documentation at   <span class="function">{@link SessionHandlerInterface::open()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sessionhandler.open-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">path</span></dt>    <dd>     <span>      The path where to store/retrieve the session.     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <p class="para">      The session name.     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sessionhandler.open-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   会话存储的返回值（通常成功返回 0，失败返回 1）。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-sessionhandler.open-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member">     The <a href="https://www.php.net/manual/zh/session.configuration.php#ini.session.auto-start" class="link">session.auto-start</a>     configuration directive.    </li>   </ul>  </span> </div></div>
     * @return bool <p>*/
    public function open(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $path,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $name
    ): bool {}

/**
*<div id="sessionhandler.read" class="refentry"> <div class="refnamediv">  <h1 class="refname">SessionHandler::read</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SessionHandler::read</span> &mdash; <span class="dc-title">Read session data</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sessionhandler.read-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SessionHandler::read</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$id</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   Reads the session data from the session storage, and returns the result back to PHP for internal processing.   This method is called automatically by PHP when a session is started (either automatically or explicitly   with <span class="function">{@link session_start()}</span> and is preceded by an internal call to the   <span class="function">{@link SessionHandler::open()}</span>.  </p>  <p class="para">   This method wraps the internal PHP save handler defined in the   <a href="https://www.php.net/manual/zh/session.configuration.php#ini.session.save-handler" class="link">session.save_handler</a> ini setting that was set   before this handler was set by <span class="function">{@link session_set_save_handler()}</span>.  </p>  <p class="para">   If this class is extended by inheritance, calling the parent <span class="parameter" style="color:#3A95FF">read</span> method will invoke the   wrapper for this method and therefore invoke the associated internal callback.  This allows the method to be   overridden and or intercepted and filtered (for example, decrypting the <span class="parameter" style="color:#3A95FF">$data</span> value   returned by the parent <span class="parameter" style="color:#3A95FF">read</span> method).  </p>  <p class="para">   For more information on what this method is expected to do, please refer to the documentation at   <span class="function">{@link SessionHandlerInterface::read()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sessionhandler.read-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">id</span></dt>    <dd>     <span>      The session id to read data for.     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sessionhandler.read-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an encoded string of the read data. If nothing was read, it must return <strong><span>false</span></strong>. Note this value is returned internally to PHP for processing.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-sessionhandler.read-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member">     The <a href="https://www.php.net/manual/zh/session.configuration.php#ini.session.serialize-handler" class="link">session.serialize_handler</a>     configuration directive.    </li>   </ul>  </span> </div></div>
     * @return string|false <p>*/
    public function read(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $id): string|false {}

/**
*<div id="sessionhandler.write" class="refentry"> <div class="refnamediv">  <h1 class="refname">SessionHandler::write</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SessionHandler::write</span> &mdash; <span class="dc-title">Write session data</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sessionhandler.write-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SessionHandler::write</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$id</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$data</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Writes the session data to the session storage. Called by normal PHP shutdown, by   <span class="function">{@link session_write_close()}</span>, or when <span class="function">{@link session_register_shutdown()}</span> fails.   PHP will call <span class="function">{@link SessionHandler::close()}</span> immediately after this method returns.  </p>  <p class="para">   This method wraps the internal PHP save handler defined in the   <a href="https://www.php.net/manual/zh/session.configuration.php#ini.session.save-handler" class="link">session.save_handler</a> ini setting that was set   before this handler was set by <span class="function">{@link session_set_save_handler()}</span>.  </p>  <p class="para">   If this class is extended by inheritance, calling the parent <span class="parameter" style="color:#3A95FF">write</span> method will invoke the   wrapper for this method and therefore invoke the associated internal callback.  This allows this method to be   overridden and or intercepted and filtered (for example, encrypting the <span class="parameter" style="color:#3A95FF">$data</span> value   before sending it to the parent <span class="parameter" style="color:#3A95FF">write</span> method).  </p>  <p class="para">   For more information on what this method is expected to do, please refer to the documentation   at <span class="function">{@link SessionHandlerInterface::write()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sessionhandler.write-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">id</span></dt>    <dd>     <span>      The session id.     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">data</span></dt>    <dd>     <p class="para">      The encoded session data.  This data is the result of the PHP internally encoding the <var class="varname"><a href="https://www.php.net/manual/zh/reserved.variables.session.php" class="classname">$_SESSION</a></var> superglobal to a serialized      string and passing it as this parameter.  Please note sessions use an alternative serialization method.     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sessionhandler.write-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   会话存储的返回值（通常成功返回 0，失败返回 1）。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-sessionhandler.write-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member">     The <a href="https://www.php.net/manual/zh/session.configuration.php#ini.session.serialize-handler" class="link">session.serialize_handler</a>     configuration directive.    </li>   </ul>  </span> </div></div>
     * @return bool <p>*/
    public function write(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $id,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $data
    ): bool {}

    /**
     * Validate session id
     * @param string $session_id The session id
     * @return bool <p>
     * Note this value is returned internally to PHP for processing.
     * </p>
     */
    public function validateId($session_id) {}

    /**
     * Update timestamp of a session
     * @param string $session_id The session id
     * @param string $session_data <p>
     * The encoded session data. This data is the
     * result of the PHP internally encoding
     * the $_SESSION superglobal to a serialized
     * string and passing it as this parameter.
     * Please note sessions use an alternative serialization method.
     * </p>
     * @return bool
     */
    public function updateTimestamp($session_id, $session_data) {}
}
