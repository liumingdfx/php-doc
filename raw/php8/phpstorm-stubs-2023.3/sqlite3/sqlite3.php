<?php

// Start of sqlite3 v.0.7-dev
use JetBrains\PhpStorm\ArrayShape;
use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
use JetBrains\PhpStorm\Internal\PhpStormStubsElementAvailable;
use JetBrains\PhpStorm\Internal\TentativeType;

/**
 * @since 8.3
 */
class SQLite3Exception extends \Exception {}

/**
*<div id="class.sqlite3" class="reference"> <h1 class="title">SQLite3 类</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p>  <div class="section" id="sqlite3.intro">   <h2 class="title">简介</h2>   <p class="para">    连接 SQLite 3 数据库的类。   </p>  </div>  <div class="section" id="sqlite3.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">SQLite3</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 常量 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.ok"><var class="varname">OK</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.deny"><var class="varname">DENY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.ignore"><var class="varname">IGNORE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.create-index"><var class="varname">CREATE_INDEX</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.create-table"><var class="varname">CREATE_TABLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.create-temp-index"><var class="varname">CREATE_TEMP_INDEX</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.create-temp-table"><var class="varname">CREATE_TEMP_TABLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.create-temp-trigger"><var class="varname">CREATE_TEMP_TRIGGER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.create-temp-view"><var class="varname">CREATE_TEMP_VIEW</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.create-trigger"><var class="varname">CREATE_TRIGGER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.create-view"><var class="varname">CREATE_VIEW</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.delete"><var class="varname">DELETE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.drop-index"><var class="varname">DROP_INDEX</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.drop-table"><var class="varname">DROP_TABLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.drop-temp-index"><var class="varname">DROP_TEMP_INDEX</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.drop-temp-table"><var class="varname">DROP_TEMP_TABLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.drop-temp-trigger"><var class="varname">DROP_TEMP_TRIGGER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.drop-temp-view"><var class="varname">DROP_TEMP_VIEW</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.drop-trigger"><var class="varname">DROP_TRIGGER</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.drop-view"><var class="varname">DROP_VIEW</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.insert"><var class="varname">INSERT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.pragma"><var class="varname">PRAGMA</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.read"><var class="varname">READ</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.select"><var class="varname">SELECT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.transaction"><var class="varname">TRANSACTION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.update"><var class="varname">UPDATE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.attach"><var class="varname">ATTACH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.detach"><var class="varname">DETACH</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.alter-table"><var class="varname">ALTER_TABLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.reindex"><var class="varname">REINDEX</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.analyze"><var class="varname">ANALYZE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.create-vtable"><var class="varname">CREATE_VTABLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.drop-vtable"><var class="varname">DROP_VTABLE</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.function"><var class="varname">FUNCTION</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.savepoint"><var class="varname">SAVEPOINT</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.copy"><var class="varname">COPY</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">const</span>     <span class="type" style="color:#EAB766">int</span>      <var class="fieldsynopsis_varname"><a href="https://www.php.net/manual/zh/class.sqlite3.php#sqlite3.class.constants.recursive"><var class="varname">RECURSIVE</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$encryptionKey</span><span class="initializer"> = &quot;&quot;</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.backup.php" class="methodname" style="color:#CC7832">backup</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.sqlite3.php" class="type SQLite3" style="color:#EAB766">SQLite3</a></span> <span class="parameter" style="color:#3A95FF">$destination</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$sourceDatabase</span><span class="initializer"> = &quot;main&quot;</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$destinationDatabase</span><span class="initializer"> = &quot;main&quot;</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.busytimeout.php" class="methodname" style="color:#CC7832">busyTimeout</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$milliseconds</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.changes.php" class="methodname" style="color:#CC7832">changes</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.close.php" class="methodname" style="color:#CC7832">close</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.createaggregate.php" class="methodname" style="color:#CC7832">createAggregate</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$stepCallback</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$finalCallback</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$argCount</span><span class="initializer"> = -1</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.createcollation.php" class="methodname" style="color:#CC7832">createCollation</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$callback</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link createFunction}</span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$callback</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$argCount</span><span class="initializer"> = -1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = 0</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.enableexceptions.php" class="methodname" style="color:#CC7832">enableExceptions</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$enable</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.escapestring.php" class="methodname" style="color:#CC7832">escapeString</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.exec.php" class="methodname" style="color:#CC7832">exec</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$query</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.lasterrorcode.php" class="methodname" style="color:#CC7832">lastErrorCode</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.lasterrormsg.php" class="methodname" style="color:#CC7832">lastErrorMsg</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.lastinsertrowid.php" class="methodname" style="color:#CC7832">lastInsertRowID</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.loadextension.php" class="methodname" style="color:#CC7832">loadExtension</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.open.php" class="methodname" style="color:#CC7832">open</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$encryptionKey</span><span class="initializer"> = &quot;&quot;</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.openblob.php" class="methodname" style="color:#CC7832">openBlob</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$table</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$column</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rowid</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$database</span><span class="initializer"> = &quot;main&quot;</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = <strong><span>SQLITE3_OPEN_READONLY</span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.prepare.php" class="methodname" style="color:#CC7832">prepare</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$query</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.sqlite3stmt.php" class="type SQLite3Stmt" style="color:#EAB766">SQLite3Stmt</a></span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.query.php" class="methodname" style="color:#CC7832">query</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$query</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.sqlite3result.php" class="type SQLite3Result" style="color:#EAB766">SQLite3Result</a></span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.querysingle.php" class="methodname" style="color:#CC7832">querySingle</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$query</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$entireRow</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.setauthorizer.php" class="methodname" style="color:#CC7832">setAuthorizer</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$callback</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3.version.php" class="methodname" style="color:#CC7832">version</a></span>(): <span class="type" style="color:#EAB766">array</span></div>   }</div>  </div>  <div class="section" id="sqlite3.class.constants">   <h2 class="title">预定义常量</h2>   <dl>         <dt id="sqlite3.class.constants.ok"><strong><span>SQLite3::OK</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.deny"><strong><span>SQLite3::DENY</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.ignore"><strong><span>SQLite3::IGNORE</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.create-index"><strong><span>SQLite3::CREATE_INDEX</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.create-table"><strong><span>SQLite3::CREATE_TABLE</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.create-temp-index"><strong><span>SQLite3::CREATE_TEMP_INDEX</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.create-temp-table"><strong><span>SQLite3::CREATE_TEMP_TABLE</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.create-temp-trigger"><strong><span>SQLite3::CREATE_TEMP_TRIGGER</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.create-temp-view"><strong><span>SQLite3::CREATE_TEMP_VIEW</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.create-trigger"><strong><span>SQLite3::CREATE_TRIGGER</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.create-view"><strong><span>SQLite3::CREATE_VIEW</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.delete"><strong><span>SQLite3::DELETE</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.drop-index"><strong><span>SQLite3::DROP_INDEX</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.drop-table"><strong><span>SQLite3::DROP_TABLE</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.drop-temp-index"><strong><span>SQLite3::DROP_TEMP_INDEX</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.drop-temp-table"><strong><span>SQLite3::DROP_TEMP_TABLE</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.drop-temp-trigger"><strong><span>SQLite3::DROP_TEMP_TRIGGER</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.drop-temp-view"><strong><span>SQLite3::DROP_TEMP_VIEW</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.drop-trigger"><strong><span>SQLite3::DROP_TRIGGER</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.drop-view"><strong><span>SQLite3::DROP_VIEW</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.insert"><strong><span>SQLite3::INSERT</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.pragma"><strong><span>SQLite3::PRAGMA</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.read"><strong><span>SQLite3::READ</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.select"><strong><span>SQLite3::SELECT</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.transaction"><strong><span>SQLite3::TRANSACTION</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.update"><strong><span>SQLite3::UPDATE</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.attach"><strong><span>SQLite3::ATTACH</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.detach"><strong><span>SQLite3::DETACH</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.alter-table"><strong><span>SQLite3::ALTER_TABLE</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.reindex"><strong><span>SQLite3::REINDEX</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.analyze"><strong><span>SQLite3::ANALYZE</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.create-vtable"><strong><span>SQLite3::CREATE_VTABLE</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.drop-vtable"><strong><span>SQLite3::DROP_VTABLE</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.function"><strong><span>SQLite3::FUNCTION</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.savepoint"><strong><span>SQLite3::SAVEPOINT</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.copy"><strong><span>SQLite3::COPY</span></strong></dt>     <dd>      <p class="para"/>     </dd>             <dt id="sqlite3.class.constants.recursive"><strong><span>SQLite3::RECURSIVE</span></strong></dt>     <dd>      <p class="para"/>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link SQLite3::backup} — Backup one database to another database</li><li>{@link SQLite3::busyTimeout} — Sets the busy connection handler</li><li>{@link SQLite3::changes} — Returns the number of database rows that were changed (or inserted or   deleted) by the most recent SQL statement</li><li>{@link SQLite3::close} — Closes the database connection</li><li>{@link SQLite3::__construct} — 实例化 SQLite3 对象并打开 SQLite 3 数据库</li><li>{@link SQLite3::createAggregate} — Registers a PHP function for use as an SQL aggregate function</li><li>{@link SQLite3::createCollation} — Registers a PHP function for use as an SQL collating function</li><li>{@link SQLite3::createFunction} — Registers a PHP function for use as an SQL scalar function</li><li>{@link SQLite3::enableExceptions} — Enable throwing exceptions</li><li>{@link SQLite3::escapeString} — Returns a string that has been properly escaped</li><li>{@link SQLite3::exec} — Executes a result-less query against a given database</li><li>{@link SQLite3::lastErrorCode} — Returns the numeric result code of the most recent failed SQLite request</li><li>{@link SQLite3::lastErrorMsg} — Returns English text describing the most recent failed SQLite request</li><li>{@link SQLite3::lastInsertRowID} — Returns the row ID of the most recent INSERT into the database</li><li>{@link SQLite3::loadExtension} — Attempts to load an SQLite extension library</li><li>{@link SQLite3::open} — Opens an SQLite database</li><li>{@link SQLite3::openBlob} — Opens a stream resource to read a BLOB</li><li>{@link SQLite3::prepare} — Prepares an SQL statement for execution</li><li>{@link SQLite3::query} — Executes an SQL query</li><li>{@link SQLite3::querySingle} — Executes a query and returns a single result</li><li>{@link SQLite3::setAuthorizer} — Configures a callback to be used as an authorizer to limit what a statement can do</li><li>{@link SQLite3::version} — Returns the SQLite3 library version as a string constant and as a number</li></ul></div>
*/
class SQLite3
{
    public const OK = 0;
    public const DENY = 1;
    public const IGNORE = 2;
    public const CREATE_INDEX = 1;
    public const CREATE_TABLE = 2;
    public const CREATE_TEMP_INDEX = 3;
    public const CREATE_TEMP_TABLE = 4;
    public const CREATE_TEMP_TRIGGER = 5;
    public const CREATE_TEMP_VIEW = 6;
    public const CREATE_TRIGGER = 7;
    public const CREATE_VIEW = 8;
    public const DELETE = 9;
    public const DROP_INDEX = 10;
    public const DROP_TABLE = 11;
    public const DROP_TEMP_INDEX = 12;
    public const DROP_TEMP_TABLE = 13;
    public const DROP_TEMP_TRIGGER = 14;
    public const DROP_TEMP_VIEW = 15;
    public const DROP_TRIGGER = 16;
    public const DROP_VIEW = 17;
    public const INSERT = 18;
    public const PRAGMA = 19;
    public const READ = 20;
    public const SELECT = 21;
    public const TRANSACTION = 22;
    public const UPDATE = 23;
    public const ATTACH = 24;
    public const DETACH = 25;
    public const ALTER_TABLE = 26;
    public const REINDEX = 27;
    public const ANALYZE = 28;
    public const CREATE_VTABLE = 29;
    public const DROP_VTABLE = 30;
    public const FUNCTION = 31;
    public const SAVEPOINT = 32;
    public const COPY = 0;
    public const RECURSIVE = 33;

/**
*<div id="sqlite3.open" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::open</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::open</span> &mdash; <span class="dc-title">Opens an SQLite database</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.open-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::open</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$encryptionKey</span><span class="initializer"> = &quot;&quot;</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   Opens an SQLite 3 Database. If the build includes encryption, then it will   attempt to use the key.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.open-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       Path to the SQLite database, or <span>:memory:</span> to use in-memory database.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       Optional flags used to determine how to open the SQLite database. By       default, open uses <span>SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE</span>.       <ul class="itemizedlist">        <li class="listitem">         <p class="para">          <span>SQLITE3_OPEN_READONLY</span>: Open the database for          reading only.         </p>        </li>        <li class="listitem">         <p class="para">          <span>SQLITE3_OPEN_READWRITE</span>: Open the database for          reading and writing.         </p>        </li>        <li class="listitem">         <p class="para">          <span>SQLITE3_OPEN_CREATE</span>: Create the database if it          does not exist.         </p>        </li>       </ul>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encryptionKey</span></dt>     <dd>      <p class="para">       An optional encryption key used when encrypting and decrypting an       SQLite database. If the SQLite encryption module is not installed,       this parameter will have no effect.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.open-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3.open-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">SQLite3::open()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//*<br /> * Simple example of extending the SQLite3 class and changing the __construct<br /> * parameters, then using the open method to initialize the DB.<br /> <br /></span><span style="color: #007700">class </span><span style="color: #9876AA">MyDB </span><span style="color: #007700">extends </span><span style="color: #9876AA">SQLite3<br /></span><span style="color: #007700">{<br />    function </span><span style="color: #9876AA">__construct</span><span style="color: #007700">()<br />    {<br />        </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">open</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb.db'</span><span style="color: #007700">);<br />    }<br />}<br /><br /></span><span style="color: #9876AA">$db </span><span style="color: #007700">= new </span><span style="color: #9876AA">MyDB</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">'CREATE TABLE foo (bar STRING)'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">"INSERT INTO foo (bar) VALUES ('This is a test')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #DD0000">'SELECT bar FROM foo'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fetchArray</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return void No value is returned.*/
    public function open(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $filename,
        #[PhpStormStubsElementAvailable(from: '5.3', to: '5.6')] $flags,
        #[PhpStormStubsElementAvailable(from: '5.3', to: '5.6')] $encryptionKey,
        #[PhpStormStubsElementAvailable(from: '7.0')] #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $flags = SQLITE3_OPEN_READWRITE|SQLITE3_OPEN_CREATE,
        #[PhpStormStubsElementAvailable(from: '7.0')] #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $encryptionKey = ''
    ): void {}

/**
*<div id="sqlite3.close" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::close</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::close</span> &mdash; <span class="dc-title">Closes the database connection</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.close-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::close</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Closes the database connection.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.close-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.close-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3.close-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">SQLite3::close()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$db </span><span style="color: #007700">= new </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb.db'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">close</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success, <b>FALSE</b> on failure.*/
    public function close() {}

/**
*<div id="sqlite3.exec" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::exec</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::exec</span> &mdash; <span class="dc-title">Executes a result-less query against a given database</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.exec-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::exec</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$query</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Executes a result-less query against a given database.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    SQLite3 may need to create <a href="https://www.php.net/manual/zh/https://sqlite.org/tempfiles.php" class="link external">&raquo;&nbsp;temporary files</a>    during the execution of queries, so the respective directories may have to be writable.   </span>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.exec-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">query</span></dt>     <dd>      <p class="para">       The SQL query to execute (typically an INSERT, UPDATE, or DELETE       query).      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.exec-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> if the query succeeded, <strong><span>false</span></strong> on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3.exec-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">SQLite3::exec()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$db </span><span style="color: #007700">= new </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb.db'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">'CREATE TABLE bar (bar TEXT)'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> if the query succeeded, <b>FALSE</b> on failure.*/
    public function exec(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $query): bool {}

/**
*<div id="sqlite3.version" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::version</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::version</span> &mdash; <span class="dc-title">   Returns the SQLite3 library version as a string constant and as a number  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.version-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::version</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns the SQLite3 library version as a string constant and as a number.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.version-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.version-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an associative array with the keys &quot;versionString&quot; and   &quot;versionNumber&quot;.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3.version-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">SQLite3::version()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">::</span><span style="color: #9876AA">version</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [versionString] =&gt; 3.5.9<br>    [versionNumber] =&gt; 3005009<br>)<br></span></div>    </div>   </div>  </span> </div></div>
     * @return array an associative array with the keys "versionString" and*/
    public static function version(): array {}

/**
*<div id="sqlite3.lastinsertrowid" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::lastInsertRowID</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::lastInsertRowID</span> &mdash; <span class="dc-title">Returns the row ID of the most recent INSERT into the database</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.lastinsertrowid-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::lastInsertRowID</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the row ID of the most recent INSERT into the database.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.lastinsertrowid-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.lastinsertrowid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the row ID of the most recent INSERT into the database.   If no successful INSERTs into rowid tables have ever occurred on this database connection,   then <span class="methodname" style="color:#CC7832"><strong>SQLite3::lastInsertRowID()</strong></span> returns <span>0</span>.  </p> </div></div>
     * @return int the row ID of the most recent INSERT into the database*/
    public function lastInsertRowID(): int {}

/**
*<div id="sqlite3.lasterrorcode" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::lastErrorCode</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::lastErrorCode</span> &mdash; <span class="dc-title">   Returns the numeric result code of the most recent failed SQLite request  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.lasterrorcode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::lastErrorCode</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the numeric result code of the most recent failed SQLite request.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.lasterrorcode-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.lasterrorcode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an integer value representing the numeric result code of the most   recent failed SQLite request.  </p> </div></div>
     * @return int an integer value representing the numeric result code of the most*/
    public function lastErrorCode(): int {}

/**
*<div id="sqlite3.lasterrormsg" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::lastErrorMsg</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::lastErrorMsg</span> &mdash; <span class="dc-title">   Returns English text describing the most recent failed SQLite request  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.lasterrormsg-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::lastErrorMsg</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Returns English text describing the most recent failed SQLite request.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.lasterrormsg-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.lasterrormsg-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an English string describing the most recent failed SQLite request.  </p> </div></div>
     * @return string an English string describing the most recent failed SQLite request.*/
    public function lastErrorMsg(): string {}

/**
*<div id="sqlite3.busytimeout" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::busyTimeout</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.3, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::busyTimeout</span> &mdash; <span class="dc-title">Sets the busy connection handler</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.busytimeout-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::busyTimeout</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$milliseconds</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets a busy handler that will sleep until the database is not locked or the timeout is reached.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.busytimeout-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">milliseconds</span></dt>     <dd>      <p class="para">       The milliseconds to sleep. Setting this value to a value less than       or equal to zero, will turn off an already set timeout handler.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.busytimeout-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> on success,  或者在失败时返回 <strong><span>false</span></strong>.  </p> </div></div>
     * @return bool <b>TRUE</b> on success, <b>FALSE</b> on failure.*/
    public function busyTimeout(#[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $milliseconds): bool {}

/**
*<div id="sqlite3.loadextension" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::loadExtension</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::loadExtension</span> &mdash; <span class="dc-title">Attempts to load an SQLite extension library</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.loadextension-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::loadExtension</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Attempts to load an SQLite extension library.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.loadextension-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">       The name of the library to load. The library must be located in the       directory specified in the configure option sqlite3.extension_dir.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.loadextension-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> if the extension is successfully loaded, <strong><span>false</span></strong> on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3.loadextension-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">SQLite3::loadExtension()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$db </span><span style="color: #007700">= new </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb.db'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadExtension</span><span style="color: #007700">(</span><span style="color: #DD0000">'libagg.so'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> if the extension is successfully loaded, <b>FALSE</b> on failure.*/
    public function loadExtension(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $name): bool {}

/**
*<div id="sqlite3.changes" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::changes</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::changes</span> &mdash; <span class="dc-title">   Returns the number of database rows that were changed (or inserted or   deleted) by the most recent SQL statement  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.changes-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::changes</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the number of database rows that were changed (or inserted or   deleted) by the most recent SQL statement.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.changes-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.changes-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an <span class="type" style="color:#EAB766">int</span> value corresponding to the number of   database rows changed (or inserted or deleted) by the most recent SQL   statement.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3.changes-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">SQLite3::changes()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$db </span><span style="color: #007700">= new </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb.db'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$query </span><span style="color: #007700">= </span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">'UPDATE counter SET views=0 WHERE page="test"'</span><span style="color: #007700">);<br />if (</span><span style="color: #9876AA">$query</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">'Number of rows modified: '</span><span style="color: #007700">, </span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">changes</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return int an integer value corresponding to the number of*/
    public function changes(): int {}

/**
*<div id="sqlite3.escapestring" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::escapeString</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::escapeString</span> &mdash; <span class="dc-title">Returns a string that has been properly escaped</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.escapestring-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::escapeString</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Returns a string that has been properly escaped for safe inclusion in an   SQL statement.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数（还）不能安全地适用于二进制对象！</p></div>  <p class="para">   To properly handle BLOB fields which may contain NUL characters, use   <span class="function">{@link SQLite3Stmt::bindParam()}</span> instead.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.escapestring-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       The string to be escaped.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.escapestring-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a properly escaped string that may be used safely in an SQL   statement.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-sqlite3.escapestring-notes">  <h3 class="title">注释</h3>  <div class="warning"><strong class="warning">警告</strong>   <p class="simpara">    <span class="function">{@link addslashes()}</span> should <em>NOT</em> be used to    quote your strings for SQLite queries; it will lead to strange results    when retrieving your data.   </p>  </div> </div></div>
     * @return string a properly escaped string that may be used safely in an SQL*/
    public static function escapeString(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $string): string {}

/**
*<div id="sqlite3.prepare" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::prepare</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::prepare</span> &mdash; <span class="dc-title">Prepares an SQL statement for execution</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.prepare-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::prepare</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$query</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.sqlite3stmt.php" class="type SQLite3Stmt" style="color:#EAB766">SQLite3Stmt</a></span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   Prepares an SQL statement for execution and returns an <span class="classname"><a href="https://www.php.net/manual/zh/class.sqlite3stmt.php" class="classname">SQLite3Stmt</a></span> object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.prepare-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">query</span></dt>     <dd>      <p class="para">       The SQL query to prepare.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.prepare-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an <span class="classname"><a href="https://www.php.net/manual/zh/class.sqlite3stmt.php" class="classname">SQLite3Stmt</a></span> object on success 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3.prepare-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">SQLite3::prepare()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />unlink</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb.db'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db </span><span style="color: #007700">= new </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb.db'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">'CREATE TABLE foo (id INTEGER, bar STRING)'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">"INSERT INTO foo (id, bar) VALUES (1, 'This is a test')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$stmt </span><span style="color: #007700">= </span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">prepare</span><span style="color: #007700">(</span><span style="color: #DD0000">'SELECT bar FROM foo WHERE id=:id'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$stmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">bindValue</span><span style="color: #007700">(</span><span style="color: #DD0000">':id'</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">SQLITE3_INTEGER</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">$stmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">execute</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fetchArray</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-sqlite3.prepare-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link SQLite3Stmt::paramCount()} - Returns the number of parameters within the prepared statement</span></li>   <li class="member"><span class="methodname" style="color:#CC7832">{@link SQLite3Stmt::bindValue()} - Binds the value of a parameter to a statement variable</span></li>   <li class="member"><span class="methodname" style="color:#CC7832">{@link SQLite3Stmt::bindParam()} - Binds a parameter to a statement variable</span></li>  </ul> </div></div>
     * @return SQLite3Stmt|false an <b>SQLite3Stmt</b> object on success or <b>FALSE</b> on failure.*/
    public function prepare(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $query): SQLite3Stmt|false {}

/**
*<div id="sqlite3.query" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::query</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::query</span> &mdash; <span class="dc-title">Executes an SQL query</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.query-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::query</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$query</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.sqlite3result.php" class="type SQLite3Result" style="color:#EAB766">SQLite3Result</a></span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   Executes an SQL query, returning an <span class="classname"><a href="https://www.php.net/manual/zh/class.sqlite3result.php" class="classname">SQLite3Result</a></span> object.   If the query does not yield a result (such as DML statements) the returned   <span class="classname"><a href="https://www.php.net/manual/zh/class.sqlite3result.php" class="classname">SQLite3Result</a></span> object is not really usable.   Use <span class="methodname" style="color:#CC7832">{@link SQLite3::exec()}</span> for such queries instead.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.query-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">query</span></dt>     <dd>      <p class="para">       The SQL query to execute.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.query-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an <span class="classname"><a href="https://www.php.net/manual/zh/class.sqlite3result.php" class="classname">SQLite3Result</a></span> object,  或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3.query-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">SQLite3::query()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$db </span><span style="color: #007700">= new </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb.db'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$results </span><span style="color: #007700">= </span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #DD0000">'SELECT bar FROM foo'</span><span style="color: #007700">);<br />while (</span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">$results</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fetchArray</span><span style="color: #007700">()) {<br />    </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return SQLite3Result|false an <b>SQLite3Result</b> object, or <b>FALSE</b> on failure.*/
    public function query(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $query): SQLite3Result|false {}

/**
*<div id="sqlite3.querysingle" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::querySingle</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::querySingle</span> &mdash; <span class="dc-title">Executes a query and returns a single result</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.querysingle-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::querySingle</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$query</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$entireRow</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">   Executes a query and returns a single result.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.querysingle-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">query</span></dt>     <dd>      <p class="para">       The SQL query to execute.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">entireRow</span></dt>     <dd>      <p class="para">       By default, <span class="function"><strong style="color:#CC7832">querySingle()</strong></span> returns the value of the       first column returned by the query. If       <span class="parameter" style="color:#3A95FF">entireRow</span> is <strong><span>true</span></strong>, then it returns an array       of the entire first row.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.querysingle-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the value of the first column of results or an array of the entire   first row (if <span class="parameter" style="color:#3A95FF">entireRow</span> is <strong><span>true</span></strong>).  </p>  <p class="para">   If the query is valid but no results are returned, then <strong><span>null</span></strong> will be   returned if <span class="parameter" style="color:#3A95FF">entireRow</span> is <strong><span>false</span></strong>, otherwise an   empty array is returned.  </p>  <p class="para">   Invalid or failing queries will return <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3.querysingle-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">SQLite3::querySingle()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$db </span><span style="color: #007700">= new </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb.db'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">querySingle</span><span style="color: #007700">(</span><span style="color: #DD0000">'SELECT username FROM user WHERE userid=1'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">querySingle</span><span style="color: #007700">(</span><span style="color: #DD0000">'SELECT username, email FROM user WHERE userid=1'</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>string(5) &quot;Scott&quot;<br>Array<br>(<br>    [username] =&gt; Scott<br>    [email] =&gt; scott@example.com<br>)<br></span></div>    </div>   </div>  </span> </div></div>
     * @return mixed the value of the first column of results or an array of the entire*/
    public function querySingle(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $query,
        #[LanguageLevelTypeAware(['8.0' => 'bool'], default: '')] $entireRow = false
    ): mixed {}

/**
*<div id="sqlite3.createfunction" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::createFunction</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::createFunction</span> &mdash; <span class="dc-title">Registers a PHP function for use as an SQL scalar function</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.createfunction-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::createFunction</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$callback</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$argCount</span><span class="initializer"> = -1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = 0</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Registers a PHP function or user-defined function for use as an SQL scalar   function for use within SQL statements.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.createfunction-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">       Name of the SQL function to be created or redefined.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">callback</span></dt>     <dd>      <p class="para">       The name of a PHP function or user-defined function to apply as a       callback, defining the behavior of the SQL function.      </p>      <p class="para">       This function need to be defined as:       <div class="methodsynopsis dc-description">        <span class="methodname" style="color:#CC7832"><span class="replaceable">callback</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">...$values</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div>       <dl>                 <dt><span class="parameter" style="color:#3A95FF">value</span></dt>         <dd>          <p class="para">           The first argument passed to the SQL function.          </p>         </dd>                         <dt><span class="parameter" style="color:#3A95FF">values</span></dt>         <dd>          <p class="para">           Further arguments passed to the SQL function.          </p>         </dd>               </dl>      </p>      </dd>             <dt><span class="parameter" style="color:#3A95FF">argCount</span></dt>     <dd>      <p class="para">       The number of arguments that the SQL function takes. If       this parameter is <span>-1</span>, then the SQL function may take       any number of arguments.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       A bitwise conjunction of flags. Currently, only       <strong><span>SQLITE3_DETERMINISTIC</span></strong> is supported, which specifies       that the function always returns the same result given the same inputs       within a single SQL statement.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.createfunction-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> upon successful creation of the function, <strong><span>false</span></strong> on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-sqlite3.createfunction-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.1.4</td>      <td>       The <span class="parameter" style="color:#3A95FF">flags</span> parameter has been added.      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3.createfunction-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">SQLite3::createFunction()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">my_udf_md5</span><span style="color: #007700">(</span><span style="color: #9876AA">$string</span><span style="color: #007700">) {<br />    return </span><span style="color: #9876AA">md5</span><span style="color: #007700">(</span><span style="color: #9876AA">$string</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">$db </span><span style="color: #007700">= new </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">(</span><span style="color: #DD0000">'mysqlitedb.db'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createFunction</span><span style="color: #007700">(</span><span style="color: #DD0000">'my_udf_md5'</span><span style="color: #007700">, </span><span style="color: #DD0000">'my_udf_md5'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">querySingle</span><span style="color: #007700">(</span><span style="color: #DD0000">'SELECT my_udf_md5("test")'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>string(32) &quot;098f6bcd4621d373cade4e832627b4f6&quot;<br></span></div>    </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> upon successful creation of the function, <b>FALSE</b> on failure.*/
    public function createFunction(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $name,
        #[LanguageLevelTypeAware(['8.0' => 'callable'], default: '')] $callback,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $argCount = -1,
        #[PhpStormStubsElementAvailable(from: '7.1')] int $flags = 0
    ): bool {}

/**
*<div id="sqlite3.createaggregate" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::createAggregate</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::createAggregate</span> &mdash; <span class="dc-title">Registers a PHP function for use as an SQL aggregate function</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.createaggregate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::createAggregate</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$stepCallback</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$finalCallback</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$argCount</span><span class="initializer"> = -1</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Registers a PHP function or user-defined function for use as an SQL   aggregate function for use within SQL statements.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.createaggregate-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">       Name of the SQL aggregate to be created or redefined.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">stepCallback</span></dt>     <dd>      <p class="para">       Callback function called for each row of the result set. Your PHP       function should accumulate the result and store it in the aggregation       context.      </p>      <p class="para">       This function need to be defined as:       <div class="methodsynopsis dc-description">        <span class="methodname" style="color:#CC7832"><span class="replaceable">step</span></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$context</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rownumber</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">...$values</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div>       <dl>                 <dt><span class="parameter" style="color:#3A95FF">context</span></dt>         <dd>          <p class="para">           <strong><span>null</span></strong> for the first row; on subsequent rows it will have the value           that was previously returned from the step function; you should use           this to maintain the aggregate state.          </p>         </dd>                         <dt><span class="parameter" style="color:#3A95FF">rownumber</span></dt>         <dd>          <p class="para">           The current row number.          </p>         </dd>                         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>         <dd>          <p class="para">           The first argument passed to the aggregate.          </p>         </dd>                         <dt><span class="parameter" style="color:#3A95FF">values</span></dt>         <dd>          <p class="para">           Further arguments passed to the aggregate.          </p>         </dd>               </dl>       The return value of this function will be used as the       <span class="parameter" style="color:#3A95FF">context</span> argument in the next call of the step or       finalize functions.      </p>      </dd>             <dt><span class="parameter" style="color:#3A95FF">finalCallback</span></dt>     <dd>      <p class="para">       Callback function to aggregate the &quot;stepped&quot; data from each row.        Once all the rows have been processed, this function will be called       and it should then take the data from the aggregation context and       return the result. This callback function should return a type understood       by SQLite (i.e. <a href="https://www.php.net/manual/zh/language.types.intro.php" class="link">scalar type</a>).      </p>      <p class="para">       This function need to be defined as:       <div class="methodsynopsis dc-description">        <span class="methodname" style="color:#CC7832"><span class="replaceable">fini</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$context</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rownumber</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div>       <dl>                 <dt><span class="parameter" style="color:#3A95FF">context</span></dt>         <dd>          <p class="para">           Holds the return value from the very last call to the step function.          </p>         </dd>                         <dt><span class="parameter" style="color:#3A95FF">rownumber</span></dt>         <dd>          <p class="para">           Always <span>0</span>.          </p>         </dd>               </dl>       The return value of this function will be used as the return value for       the aggregate.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">argCount</span></dt>     <dd>      <p class="para">       The number of arguments that the SQL aggregate takes. If       this parameter is negative, then the SQL aggregate may take       any number of arguments.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.createaggregate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> upon successful creation of the aggregate,  或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3.createaggregate-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 max_length aggregation function example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$data </span><span style="color: #007700">= array(<br />   </span><span style="color: #DD0000">'one'</span><span style="color: #007700">,<br />   </span><span style="color: #DD0000">'two'</span><span style="color: #007700">,<br />   </span><span style="color: #DD0000">'three'</span><span style="color: #007700">,<br />   </span><span style="color: #DD0000">'four'</span><span style="color: #007700">,<br />   </span><span style="color: #DD0000">'five'</span><span style="color: #007700">,<br />   </span><span style="color: #DD0000">'six'</span><span style="color: #007700">,<br />   </span><span style="color: #DD0000">'seven'</span><span style="color: #007700">,<br />   </span><span style="color: #DD0000">'eight'</span><span style="color: #007700">,<br />   </span><span style="color: #DD0000">'nine'</span><span style="color: #007700">,<br />   </span><span style="color: #DD0000">'ten'</span><span style="color: #007700">,<br />   );<br /></span><span style="color: #9876AA">$db </span><span style="color: #007700">= new </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">(</span><span style="color: #DD0000">':memory:'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">"CREATE TABLE strings(a)"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$insert </span><span style="color: #007700">= </span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">prepare</span><span style="color: #007700">(</span><span style="color: #DD0000">'INSERT INTO strings VALUES (?)'</span><span style="color: #007700">);<br />foreach (</span><span style="color: #9876AA">$data </span><span style="color: #007700">as </span><span style="color: #9876AA">$str</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$insert</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">bindValue</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$insert</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">execute</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">$insert </span><span style="color: #007700">= </span><span style="color: #9876AA">null</span><span style="color: #007700">;<br /><br />function </span><span style="color: #9876AA">max_len_step</span><span style="color: #007700">(</span><span style="color: #9876AA">$context</span><span style="color: #007700">, </span><span style="color: #9876AA">$rownumber</span><span style="color: #007700">, </span><span style="color: #9876AA">$string</span><span style="color: #007700">)<br />{<br />    if (</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$string</span><span style="color: #007700">) &gt; </span><span style="color: #9876AA">$context</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$context </span><span style="color: #007700">= </span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$string</span><span style="color: #007700">);<br />    }<br />    return </span><span style="color: #9876AA">$context</span><span style="color: #007700">;<br />}<br /><br />function </span><span style="color: #9876AA">max_len_finalize</span><span style="color: #007700">(</span><span style="color: #9876AA">$context</span><span style="color: #007700">, </span><span style="color: #9876AA">$rownumber</span><span style="color: #007700">)<br />{<br />    return </span><span style="color: #9876AA">$context </span><span style="color: #007700">=== </span><span style="color: #9876AA">null </span><span style="color: #007700">? </span><span style="color: #9876AA">0 </span><span style="color: #007700">: </span><span style="color: #9876AA">$context</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createAggregate</span><span style="color: #007700">(</span><span style="color: #DD0000">'max_len'</span><span style="color: #007700">, </span><span style="color: #DD0000">'max_len_step'</span><span style="color: #007700">, </span><span style="color: #DD0000">'max_len_finalize'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">querySingle</span><span style="color: #007700">(</span><span style="color: #DD0000">'SELECT max_len(a) from strings'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>int(5)<br></span></div>    </div>   </div>  </span>  <p class="para">   In this example, we are creating an aggregating function that will   calculate the length of the longest string in one of the columns of the   table.  For each row, the <span>max_len_step</span> function is   called and passed a <span>$context</span> parameter.  The context   parameter is just like any other PHP variable and be set to hold an array   or even an object value.  In this example, we are simply using it to hold   the maximum length we have seen so far; if the   <span>$string</span> has a length longer than the current   maximum, we update the context to hold this new maximum length.  </p>  <p class="para">   After all of the rows have been processed, SQLite calls the   <span>max_len_finalize</span> function to determine the aggregate   result.  Here, we could perform some kind of calculation based on the   data found in the <span>$context</span>.  In our simple example   though, we have been calculating the result as the query progressed, so we   simply need to return the context value.  </p>  <div class="tip"><strong class="tip">小技巧</strong>   <p class="para">    It is NOT recommended for you to store a copy of the values in the context    and then process them at the end, as you would cause SQLite to use a lot of    memory to process the query - just think of how much memory you would need    if a million rows were stored in memory, each containing a string 32 bytes    in length.   </p>  </div>  <div class="tip"><strong class="tip">小技巧</strong>   <p class="para">    You can use <span class="methodname" style="color:#CC7832"><strong>SQLite3::createAggregate()</strong></span> to override SQLite    native SQL functions.   </p>  </div> </div></div>
     * @return bool <b>TRUE</b> upon successful creation of the aggregate, <b>FALSE</b> on*/
    public function createAggregate(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $name,
        #[LanguageLevelTypeAware(['8.0' => 'callable'], default: '')] $stepCallback,
        #[LanguageLevelTypeAware(['8.0' => 'callable'], default: '')] $finalCallback,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $argCount = -1
    ): bool {}

/**
*<div id="sqlite3.createcollation" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::createCollation</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.11, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::createCollation</span> &mdash; <span class="dc-title">Registers a PHP function for use as an SQL collating function</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.createcollation-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::createCollation</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$callback</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Registers a PHP function or user-defined function for use as a collating   function within SQL statements.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.createcollation-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <span>      Name of the SQL collating function to be created or redefined     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">callback</span></dt>    <dd>     <p class="para">      The name of a PHP function or user-defined function to apply as a      callback, defining the behavior of the collation.  It should accept two      values and return as <span class="function">{@link strcmp()}</span> does, i.e. it should      return -1, 1, or 0 if the first string sorts before, sorts after, or is      equal to the second.     </p>      <p class="para">       This function need to be defined as:       <div class="methodsynopsis dc-description">        <span class="methodname" style="color:#CC7832"><span class="replaceable">collation</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value2</span></span>): <span class="type" style="color:#EAB766">int</span></div>      </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.createcollation-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3.createcollation-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">SQLite3::createCollation()</strong></span> example</strong></p>    <div class="example-contents"><p>     Register the PHP function <span class="function">{@link strnatcmp()}</span> as a collating     sequence in the SQLite3 database.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$db </span><span style="color: #007700">= new </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">(</span><span style="color: #DD0000">":memory:"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">"CREATE TABLE test (col1 string)"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">"INSERT INTO test VALUES ('a1')"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">"INSERT INTO test VALUES ('a10')"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">"INSERT INTO test VALUES ('a2')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">createCollation</span><span style="color: #007700">(</span><span style="color: #DD0000">'NATURAL_CMP'</span><span style="color: #007700">, </span><span style="color: #DD0000">'strnatcmp'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$defaultSort </span><span style="color: #007700">= </span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #DD0000">"SELECT col1 FROM test ORDER BY col1"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$naturalSort </span><span style="color: #007700">= </span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #DD0000">"SELECT col1 FROM test ORDER BY col1 COLLATE NATURAL_CMP"</span><span style="color: #007700">);<br /><br />echo </span><span style="color: #DD0000">"default:\n"</span><span style="color: #007700">;<br />while (</span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">$defaultSort</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fetchArray</span><span style="color: #007700">()){<br />    echo </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">'col1'</span><span style="color: #007700">], </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /><br />echo </span><span style="color: #DD0000">"\nnatural:\n"</span><span style="color: #007700">;<br />while (</span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">$naturalSort</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fetchArray</span><span style="color: #007700">()){<br />    echo </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">'col1'</span><span style="color: #007700">], </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">close</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span><br>default:<br>a1<br>a10<br>a2<br><br>natural:<br>a1<br>a2<br>a10<br><br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-sqlite3.createcollation-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member">The SQLite collation documentation: <a href="http://sqlite.org/datatype3.html#collation" class="link external">&raquo;&nbsp;http://sqlite.org/datatype3.html#collation</a></li>  </ul> </div></div>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
    public function createCollation(#[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $name, callable $callback): bool {}

/**
*<div id="sqlite3.openblob" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::openBlob</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::openBlob</span> &mdash; <span class="dc-title">Opens a stream resource to read a BLOB</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.openblob-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::openBlob</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$table</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$column</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rowid</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$database</span><span class="initializer"> = &quot;main&quot;</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = <strong><span>SQLITE3_OPEN_READONLY</span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   Opens a stream resource to read or write a BLOB, which would be selected by:  </p>  <p class="para">   SELECT <span class="parameter" style="color:#3A95FF">column</span> FROM <span class="parameter" style="color:#3A95FF">database</span>.<span class="parameter" style="color:#3A95FF">table</span> WHERE rowid = <span class="parameter" style="color:#3A95FF">rowid</span>  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    It is not possible to change the size of a BLOB by writing to the stream.    Instead, an UPDATE statement has to be executed, possibly using SQLite&#039;s    zeroblob() function to set the desired BLOB size.   </span>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.openblob-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">table</span></dt>     <dd>      <p class="para">       The table name.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">column</span></dt>     <dd>      <p class="para">       The column name.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">rowid</span></dt>     <dd>      <p class="para">       The row ID.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">database</span></dt>     <dd>      <p class="para">       The symbolic name of the DB      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       Either <strong><span>SQLITE3_OPEN_READONLY</span></strong> or        <strong><span>SQLITE3_OPEN_READWRITE</span></strong> to open the stream       for reading only, or for reading and writing, respectively.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.openblob-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a stream resource,  或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-sqlite3.openblob-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.2.0</td>      <td>       The <span class="parameter" style="color:#3A95FF">flags</span> parameter has been added, allowing to       write BLOBs; formerly only reading was supported.      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3.openblob-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">SQLite3::openBlob()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= new </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">(</span><span style="color: #DD0000">':memory:'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$conn</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">'CREATE TABLE test (text text)'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$conn</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">"INSERT INTO test VALUES ('Lorem ipsum')"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$stream </span><span style="color: #007700">= </span><span style="color: #9876AA">$conn</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">openBlob</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">, </span><span style="color: #DD0000">'text'</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">stream_get_contents</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">); </span><span style="color: #FF8000">// mandatory, otherwise the next line would fail<br /></span><span style="color: #9876AA">$conn</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">close</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Lorem ipsum<br></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 Incrementally writing a BLOB</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= new </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">(</span><span style="color: #DD0000">':memory:'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$conn</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">'CREATE TABLE test (text text)'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$conn</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">"INSERT INTO test VALUES (zeroblob(36))"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$stream </span><span style="color: #007700">= </span><span style="color: #9876AA">$conn</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">openBlob</span><span style="color: #007700">(</span><span style="color: #DD0000">'test'</span><span style="color: #007700">, </span><span style="color: #DD0000">'text'</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #DD0000">'main'</span><span style="color: #007700">, </span><span style="color: #9876AA">SQLITE3_OPEN_READWRITE</span><span style="color: #007700">);<br />for (</span><span style="color: #9876AA">$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">3</span><span style="color: #007700">; </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br />    </span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">,  </span><span style="color: #DD0000">"Lorem ipsum\n"</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$conn</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">querySingle</span><span style="color: #007700">(</span><span style="color: #DD0000">"SELECT text FROM test"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$conn</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">close</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Lorem ipsum<br>Lorem ipsum<br>Lorem ipsum<br></span></div>    </div>   </div>  </p> </div></div>
     * @return resource|false Returns a stream resource, or FALSE on failure.*/
    public function openBlob(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $table,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $column,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $rowid,
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $database = 'main',
        #[PhpStormStubsElementAvailable(from: '7.2')] int $flags = SQLITE3_OPEN_READONLY
    ) {}

/**
*<div id="sqlite3.enableexceptions" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::enableExceptions</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::enableExceptions</span> &mdash; <span class="dc-title">   Enable throwing exceptions  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.enableexceptions-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::enableExceptions</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$enable</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Controls whether the <span class="classname"><a href="https://www.php.net/manual/zh/class.sqlite3.php" class="classname">SQLite3</a></span> instance will   throw exceptions or warnings on error.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.enableexceptions-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">enable</span></dt>    <dd>     <span>      When <strong><span>true</span></strong>, the <span class="classname"><a href="https://www.php.net/manual/zh/class.sqlite3.php" class="classname">SQLite3</a></span> instance, and       <span class="classname"><a href="https://www.php.net/manual/zh/class.sqlite3stmt.php" class="classname">SQLite3Stmt</a></span> and <span class="classname"><a href="https://www.php.net/manual/zh/class.sqlite3result.php" class="classname">SQLite3Result</a></span>      instances derived from it, will throw exceptions on error.     </span>     <p class="para">      When <strong><span>false</span></strong>, the <span class="classname"><a href="https://www.php.net/manual/zh/class.sqlite3.php" class="classname">SQLite3</a></span> instance, and      <span class="classname"><a href="https://www.php.net/manual/zh/class.sqlite3stmt.php" class="classname">SQLite3Stmt</a></span> and <span class="classname"><a href="https://www.php.net/manual/zh/class.sqlite3result.php" class="classname">SQLite3Result</a></span>      instances derived from it, will raise warnings on error.     </p>     <p class="para">      For either mode, the error code and message, if any, will be available via      <span class="methodname" style="color:#CC7832">{@link SQLite3::lastErrorCode()}</span> and      <span class="methodname" style="color:#CC7832">{@link SQLite3::lastErrorMsg()}</span> respectively.     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.enableexceptions-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the old value; <strong><span>true</span></strong> if exceptions were enabled, <strong><span>false</span></strong> otherwise.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3.enableexceptions-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>SQLite3::enableExceptions()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$sqlite </span><span style="color: #007700">= new </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">(</span><span style="color: #DD0000">':memory:'</span><span style="color: #007700">);<br />try {<br />    </span><span style="color: #9876AA">$sqlite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">'create table foo'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$sqlite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">enableExceptions</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$sqlite</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">'create table bar'</span><span style="color: #007700">);<br />} catch (</span><span style="color: #9876AA">Exception $e</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">'Caught exception: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Warning: SQLite3::exec(): near &quot;foo&quot;: syntax error in example.php on line 4<br>Caught exception: near &quot;bar&quot;: syntax error<br></span></div>   </div>  </div> </div></div>
     * @return bool Returns the old value; true if exceptions were enabled, false otherwise.*/
    public function enableExceptions(
        #[PhpStormStubsElementAvailable(from: '5.3', to: '5.6')] $enable,
        #[PhpStormStubsElementAvailable(from: '7.0')] #[LanguageLevelTypeAware(['8.0' => 'bool'], default: '')] $enable = false
    ): bool {}

    /**
     * Instantiates an SQLite3 object and opens an SQLite 3 database
     * @link https://php.net/manual/en/sqlite3.construct.php
     * @param string $filename <p>
     * Path to the SQLite database, or :memory: to use in-memory database.
     * </p>
     * @param int $flags <p>
     * Optional flags used to determine how to open the SQLite database. By
     * default, open uses SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE.
     * </p>
     * <p>
     * SQLITE3_OPEN_READONLY: Open the database for
     * reading only.
     * </p>
     * @param string $encryptionKey <p>
     * An optional encryption key used when encrypting and decrypting an
     * SQLite database.
     * </p>
     */
    public function __construct(
        #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $filename,
        #[PhpStormStubsElementAvailable(from: '5.3', to: '5.6')] $flags,
        #[PhpStormStubsElementAvailable(from: '5.3', to: '5.6')] $encryptionKey,
        #[PhpStormStubsElementAvailable(from: '7.0')] #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $flags = SQLITE3_OPEN_READWRITE|SQLITE3_OPEN_CREATE,
        #[PhpStormStubsElementAvailable(from: '7.0')] #[LanguageLevelTypeAware(['8.0' => 'string'], default: '')] $encryptionKey = ''
    ) {}

    /**
     * @return int
     * @since 7.4
     */
    #[TentativeType]
    public function lastExtendedErrorCode(): int {}

    /**
     * @param bool $enable
     * @since 7.4
     */
    #[TentativeType]
    public function enableExtendedResultCodes(
        #[PhpStormStubsElementAvailable(from: '7.4', to: '7.4')] bool $enable,
        #[PhpStormStubsElementAvailable(from: '8.0')] bool $enable = true
    ): bool {}

/**
*<div id="sqlite3.backup" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::backup</h1>  <p class="verinfo">(PHP 7 &gt;= 7.4.0, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::backup</span> &mdash; <span class="dc-title">Backup one database to another database</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.backup-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::backup</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.sqlite3.php" class="type SQLite3" style="color:#EAB766">SQLite3</a></span> <span class="parameter" style="color:#3A95FF">$destination</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$sourceDatabase</span><span class="initializer"> = &quot;main&quot;</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$destinationDatabase</span><span class="initializer"> = &quot;main&quot;</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   <span class="methodname" style="color:#CC7832"><strong>SQLite3::backup()</strong></span> copies the contents of one database   into another, overwriting the contents of the destination database.   It is useful either for creating backups of databases   or for copying in-memory databases to or from persistent files.  </p>  <div class="tip"><strong class="tip">小技巧</strong>   <p class="para">    As of SQLite 3.27.0 (2019-02-07), it is also possible to use the statement    <span>VACUUM INTO &#039;file.db&#039;;</span> to backup the database to a new file.   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.backup-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">destination</span></dt>    <dd>     <span>      A database connection opened with <span class="methodname" style="color:#CC7832">{@link SQLite3::open()}</span>.     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">sourceDatabase</span></dt>    <dd>     <p class="para">      The database name is <span>&quot;main&quot;</span> for the main database,      <span>&quot;temp&quot;</span> for the temporary database,      or the name specified after the <span>AS</span> keyword      in an <span>ATTACH</span> statement for an attached database.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">destinationDatabase</span></dt>    <dd>     <p class="para">      Analogous to <span class="parameter" style="color:#3A95FF">sourceDatabase</span>      but for the <span class="parameter" style="color:#3A95FF">destination</span>.     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.backup-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3.backup-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 Backup an existing database</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// $conn is a connection to an already opened sqlite3 database<br /><br /></span><span style="color: #9876AA">$backup </span><span style="color: #007700">= new </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">(</span><span style="color: #DD0000">'backup.sqlite'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$conn</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">backup</span><span style="color: #007700">(</span><span style="color: #9876AA">$backup</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div></div>
     * @return bool*/
    public function backup(SQLite3 $destination, string $sourceDatabase = 'main', string $destinationDatabase = 'main'): bool {}

/**
*<div id="sqlite3.setauthorizer" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3::setAuthorizer</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3::setAuthorizer</span> &mdash; <span class="dc-title">Configures a callback to be used as an authorizer to limit what a statement can do</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3.setauthorizer-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3::setAuthorizer</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$callback</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets a callback that will be called by SQLite every time an action is performed   (reading, deleting, updating, etc.). This is used when preparing a SQL statement from   an untrusted source to ensure that the SQL statements do not try to access data they   are not allowed to see, or that they do not try to execute malicious statements that   damage the database. For example, an application may allow a user to enter arbitrary   SQL queries for evaluation by a database. But the application does not want the user to   be able to make arbitrary changes to the database. An authorizer could then be put in   place while the user-entered SQL is being prepared that disallows everything except   SELECT statements.  </p>  <p class="para">   The authorizer callback may be called multiple times for each statement prepared by   SQLite. A <span>SELECT</span> or <span>UPDATE</span> query will call the   authorizer for every column that would be read or updated.  </p>  <p class="para">   The authorizer is called with up to five parameters. The first parameter is always   given, and is an <span class="type" style="color:#EAB766">int</span> (action code) matching a constant from   <span>SQLite3</span>. The other parameters are only passed for some actions. The   following table describes the second and third parameters according to the action:   <table class="doctable table">    <caption><strong>List of action codes and parameters</strong></caption>         <thead>      <tr>       <th>Action</th>       <th>Second parameter</th>       <th>Third parameter</th>      </tr>     </thead>     <tbody class="tbody">      <tr><td><strong><span>SQLite3::CREATE_INDEX</span></strong></td><td>Index Name</td><td>Table Name</td></tr>      <tr><td><strong><span>SQLite3::CREATE_TABLE</span></strong></td><td>Table Name</td><td><strong><span>null</span></strong></td></tr>      <tr><td><strong><span>SQLite3::CREATE_TEMP_INDEX</span></strong></td><td>Index Name</td><td>Table Name</td></tr>      <tr><td><strong><span>SQLite3::CREATE_TEMP_TABLE</span></strong></td><td>Table Name</td><td><strong><span>null</span></strong></td></tr>      <tr><td><strong><span>SQLite3::CREATE_TEMP_TRIGGER</span></strong></td><td>Trigger Name</td><td>Table Name</td></tr>      <tr><td><strong><span>SQLite3::CREATE_TEMP_VIEW</span></strong></td><td>View Name</td><td><strong><span>null</span></strong></td></tr>      <tr><td><strong><span>SQLite3::CREATE_TRIGGER</span></strong></td><td>Trigger Name</td><td>Table Name</td></tr>      <tr><td><strong><span>SQLite3::CREATE_VIEW</span></strong></td><td>View Name</td><td><strong><span>null</span></strong></td></tr>      <tr><td><strong><span>SQLite3::DELETE</span></strong></td><td>Table Name</td><td><strong><span>null</span></strong></td></tr>      <tr><td><strong><span>SQLite3::DROP_INDEX</span></strong></td><td>Index Name</td><td>Table Name</td></tr>      <tr><td><strong><span>SQLite3::DROP_TABLE</span></strong></td><td>Table Name</td><td><strong><span>null</span></strong></td></tr>      <tr><td><strong><span>SQLite3::DROP_TEMP_INDEX</span></strong></td><td>Index Name</td><td>Table Name</td></tr>      <tr><td><strong><span>SQLite3::DROP_TEMP_TABLE</span></strong></td><td>Table Name</td><td><strong><span>null</span></strong></td></tr>      <tr><td><strong><span>SQLite3::DROP_TEMP_TRIGGER</span></strong></td><td>Trigger Name</td><td>Table Name</td></tr>      <tr><td><strong><span>SQLite3::DROP_TEMP_VIEW</span></strong></td><td>View Name</td><td><strong><span>null</span></strong></td></tr>      <tr><td><strong><span>SQLite3::DROP_TRIGGER</span></strong></td><td>Trigger Name</td><td>Table Name</td></tr>      <tr><td><strong><span>SQLite3::DROP_VIEW</span></strong></td><td>View Name</td><td><strong><span>null</span></strong></td></tr>      <tr><td><strong><span>SQLite3::INSERT</span></strong></td><td>Table Name</td><td><strong><span>null</span></strong></td></tr>      <tr><td><strong><span>SQLite3::PRAGMA</span></strong></td><td>Pragma Name</td><td>First argument passed to the pragma, or <strong><span>null</span></strong></td></tr>      <tr><td><strong><span>SQLite3::READ</span></strong></td><td>Table Name</td><td>Column Name</td></tr>      <tr><td><strong><span>SQLite3::SELECT</span></strong></td><td><strong><span>null</span></strong></td><td><strong><span>null</span></strong></td></tr>      <tr><td><strong><span>SQLite3::TRANSACTION</span></strong></td><td>Operation</td><td><strong><span>null</span></strong></td></tr>      <tr><td><strong><span>SQLite3::UPDATE</span></strong></td><td>Table Name</td><td>Column Name</td></tr>      <tr><td><strong><span>SQLite3::ATTACH</span></strong></td><td>Filename</td><td><strong><span>null</span></strong></td></tr>      <tr><td><strong><span>SQLite3::DETACH</span></strong></td><td>Database Name</td><td><strong><span>null</span></strong></td></tr>      <tr><td><strong><span>SQLite3::ALTER_TABLE</span></strong></td><td>Database Name</td><td>Table Name</td></tr>      <tr><td><strong><span>SQLite3::REINDEX</span></strong></td><td>Index Name</td><td><strong><span>null</span></strong></td></tr>      <tr><td><strong><span>SQLite3::ANALYZE</span></strong></td><td>Table Name</td><td><strong><span>null</span></strong></td></tr>      <tr><td><strong><span>SQLite3::CREATE_VTABLE</span></strong></td><td>Table Name</td><td>Module Name</td></tr>      <tr><td><strong><span>SQLite3::DROP_VTABLE</span></strong></td><td>Table Name</td><td>Module Name</td></tr>      <tr><td><strong><span>SQLite3::FUNCTION</span></strong></td><td><strong><span>null</span></strong></td><td>Function Name</td></tr>      <tr><td><strong><span>SQLite3::SAVEPOINT</span></strong></td><td>Operation</td><td>Savepoint Name</td></tr>      <tr><td><strong><span>SQLite3::RECURSIVE</span></strong></td><td><strong><span>null</span></strong></td><td><strong><span>null</span></strong></td></tr>     </tbody>       </table>  </p>  <p class="para">   The 4th parameter will be the name of the database (<span>&quot;main&quot;</span>,   <span>&quot;temp&quot;</span>, etc.) if applicable.  </p>  <p class="para">   The 5th parameter to the authorizer callback is the name of the inner-most trigger or   view that is responsible for the access attempt or <strong><span>null</span></strong> if this access attempt is   directly from top-level SQL code.  </p>  <p class="para">   When the callback returns <strong><span>SQLite3::OK</span></strong>, that means the operation   requested is accepted. When the callback returns <strong><span>SQLite3::DENY</span></strong>,   the call that triggered the authorizer will fail with an error message explaining that   access is denied.  </p>  <p class="para">   If the action code is <strong><span>SQLite3::READ</span></strong> and the callback returns   <strong><span>SQLite3::IGNORE</span></strong> then the prepared statement is   constructed to substitute a <strong><span>null</span></strong> value in place of the table column that would have   been read if <strong><span>SQLite3::OK</span></strong> had been returned. The   <strong><span>SQLite3::IGNORE</span></strong> return can be used to deny an untrusted user   access to individual columns of a table.  </p>  <p class="para">   When a table is referenced by a <span>SELECT</span> but no column values are   extracted from that table (for example in a query like <span>&quot;SELECT count(*) FROM   table&quot;</span>) then the <strong><span>SQLite3::READ</span></strong> authorizer callback is   invoked once for that table with a column name that is an empty string.  </p>  <p class="para">   If the action code is <strong><span>SQLite3::DELETE</span></strong> and the callback returns   <strong><span>SQLite3::IGNORE</span></strong> then the DELETE operation proceeds but the   truncate optimization is disabled and all rows are deleted individually.  </p>  <p class="para">   Only a single authorizer can be in place on a database connection at a time. Each call   to <span class="methodname" style="color:#CC7832"><strong>SQLite3::setAuthorizer()</strong></span> overrides the previous call. Disable the   authorizer by installing a <strong><span>null</span></strong> callback. The authorizer is disabled by default.  </p>  <p class="para">   The authorizer callback must not do anything that will modify the database connection   that invoked the authorizer callback.  </p>  <p class="para">   Note that the authorizer is only called when a statement is prepared, not when it&#039;s   executed.  </p>  <p class="para">   More details can be found in the   <a href="http://sqlite.org/c3ref/set_authorizer.html" class="link external">&raquo;&nbsp;SQLite3 documentation</a>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3.setauthorizer-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">callback</span></dt>    <dd>     <span>      The <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> to be called.     </span>     <p class="para">      If <strong><span>null</span></strong> is passed instead, this will disable the current authorizer callback.     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3.setauthorizer-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-sqlite3.setauthorizer-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   This method doesn&#039;t throw any error, but if an authorizer is enabled and returns an   invalid value, the statement preparation will throw an error (or exception, depending   on the use of the <span class="methodname" style="color:#CC7832">{@link SQLite3::enableExceptions()}</span> method).  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3.setauthorizer-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>SQLite3::setAuthorizer()</strong></span> example</strong></p>   <div class="example-contents"><p>     This only allows access to reading, and only some columns of the     <span>users</span> table will be returned. Other columns will be replaced with     <strong><span>null</span></strong>.   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$db </span><span style="color: #007700">= new </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">(</span><span style="color: #DD0000">'data.sqlite'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">'CREATE TABLE users (id, name, password);'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">'INSERT INTO users VALUES (1, \'Pauline\', \'Snails4eva\');'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$allowed_columns </span><span style="color: #007700">= [</span><span style="color: #DD0000">'id'</span><span style="color: #007700">, </span><span style="color: #DD0000">'name'</span><span style="color: #007700">];<br /><br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setAuthorizer</span><span style="color: #007700">(function (</span><span style="color: #9876AA">int $action</span><span style="color: #007700">, ...</span><span style="color: #9876AA">$args</span><span style="color: #007700">) use (</span><span style="color: #9876AA">$allowed_columns</span><span style="color: #007700">) {<br />    if (</span><span style="color: #9876AA">$action </span><span style="color: #007700">=== </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">::</span><span style="color: #9876AA">READ</span><span style="color: #007700">) {<br />        list(</span><span style="color: #9876AA">$table</span><span style="color: #007700">, </span><span style="color: #9876AA">$column</span><span style="color: #007700">) = </span><span style="color: #9876AA">$args</span><span style="color: #007700">;<br /><br />        if (</span><span style="color: #9876AA">$table </span><span style="color: #007700">=== </span><span style="color: #DD0000">'users' </span><span style="color: #007700">&amp;&amp; </span><span style="color: #9876AA">in_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$column</span><span style="color: #007700">, </span><span style="color: #9876AA">$allowed_columns</span><span style="color: #007700">) {<br />            return </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">::</span><span style="color: #9876AA">OK</span><span style="color: #007700">;<br />        }<br /><br />        return </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">::</span><span style="color: #9876AA">IGNORE</span><span style="color: #007700">;<br />    }<br /><br />    return </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">::</span><span style="color: #9876AA">DENY</span><span style="color: #007700">;<br />});<br /><br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">querySingle</span><span style="color: #007700">(</span><span style="color: #DD0000">'SELECT * FROM users WHERE id = 1;'</span><span style="color: #007700">));</span></span></span></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [id] =&gt; 1<br>    [name] =&gt; Pauline<br>    [password] =&gt;<br>)<br></span></div>   </div>  </div> </div></div>
     * @return bool*/
    public function setAuthorizer(?callable $callback): bool {}
}

/**
*<div id="class.sqlite3stmt" class="reference"> <h1 class="title">SQLite3Stmt 类</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p>  <div class="section" id="sqlite3stmt.intro">   <h2 class="title">简介</h2>   <p class="para">    处理 SQLite 3 扩展语句模板的类。   </p>  </div>  <div class="section" id="sqlite3stmt.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">SQLite3Stmt</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">private</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3stmt.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.sqlite3.php" class="type SQLite3" style="color:#EAB766">SQLite3</a></span> <span class="parameter" style="color:#3A95FF">$sqlite3</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$query</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3stmt.bindparam.php" class="methodname" style="color:#CC7832">bindParam</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">int</span></span> <span class="parameter" style="color:#3A95FF">$param</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">&$var</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = <strong><span>SQLITE3_TEXT</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3stmt.bindvalue.php" class="methodname" style="color:#CC7832">bindValue</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">int</span></span> <span class="parameter" style="color:#3A95FF">$param</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = <strong><span>SQLITE3_TEXT</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3stmt.clear.php" class="methodname" style="color:#CC7832">clear</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3stmt.close.php" class="methodname" style="color:#CC7832">close</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3stmt.execute.php" class="methodname" style="color:#CC7832">execute</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.sqlite3result.php" class="type SQLite3Result" style="color:#EAB766">SQLite3Result</a></span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3stmt.getsql.php" class="methodname" style="color:#CC7832">getSQL</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$expand</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3stmt.paramcount.php" class="methodname" style="color:#CC7832">paramCount</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3stmt.readonly.php" class="methodname" style="color:#CC7832">readOnly</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3stmt.reset.php" class="methodname" style="color:#CC7832">reset</a></span>(): <span class="type" style="color:#EAB766">bool</span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link SQLite3Stmt::bindParam} — Binds a parameter to a statement variable</li><li>{@link SQLite3Stmt::bindValue} — Binds the value of a parameter to a statement variable</li><li>{@link SQLite3Stmt::clear} — Clears all current bound parameters</li><li>{@link SQLite3Stmt::close} — Closes the prepared statement</li><li>{@link SQLite3Stmt::__construct} — Constructs an SQLite3Stmt object</li><li>{@link SQLite3Stmt::execute} — Executes a prepared statement and returns a result set object</li><li>{@link SQLite3Stmt::getSQL} — Get the SQL of the statement</li><li>{@link SQLite3Stmt::paramCount} — Returns the number of parameters within the prepared statement</li><li>{@link SQLite3Stmt::readOnly} — Returns whether a statement is definitely read only</li><li>{@link SQLite3Stmt::reset} — Resets the prepared statement</li></ul></div>
*/
class SQLite3Stmt
{
/**
*<div id="sqlite3stmt.paramcount" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3Stmt::paramCount</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3Stmt::paramCount</span> &mdash; <span class="dc-title">Returns the number of parameters within the prepared statement</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3stmt.paramcount-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3Stmt::paramCount</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the number of parameters within the prepared statement.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3stmt.paramcount-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3stmt.paramcount-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the number of parameters within the prepared statement.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-sqlite3stmt.paramcount-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link SQLite3::prepare()} - Prepares an SQL statement for execution</span></li>  </ul> </div></div>
     * @return int the number of parameters within the prepared statement.*/
    public function paramCount(): int {}

/**
*<div id="sqlite3stmt.close" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3Stmt::close</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3Stmt::close</span> &mdash; <span class="dc-title">Closes the prepared statement</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3stmt.close-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3Stmt::close</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Closes the prepared statement.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    Note that all <span class="classname"><a href="https://www.php.net/manual/zh/class.sqlite3result.php" class="classname">SQLite3Result</a></span>s that have been retrieved    by executing this statement will be invalidated when the statement is    closed.   </span>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3stmt.close-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3stmt.close-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong>  </p> </div></div>
     * @return bool <b>TRUE</b>*/
    public function close(): bool {}

/**
*<div id="sqlite3stmt.reset" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3Stmt::reset</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3Stmt::reset</span> &mdash; <span class="dc-title">Resets the prepared statement</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3stmt.reset-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3Stmt::reset</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Resets the prepared statement to its state prior to execution. All bindings   remain intact after reset.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3stmt.reset-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3stmt.reset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> if the statement is successfully reset,  或者在失败时返回 <strong><span>false</span></strong>.  </p> </div></div>
     * @return bool <b>TRUE</b> if the statement is successfully reset, <b>FALSE</b> on failure.*/
    public function reset(): bool {}

/**
*<div id="sqlite3stmt.clear" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3Stmt::clear</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3Stmt::clear</span> &mdash; <span class="dc-title">Clears all current bound parameters</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3stmt.clear-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3Stmt::clear</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Clears all current bound parameters (sets them to <strong><span>null</span></strong>).  </p>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    This method needs to be used with <span class="methodname" style="color:#CC7832">{@link SQLite3Stmt::reset()}</span>.    If used alone, any call to     <span class="methodname" style="color:#CC7832">{@link SQLite3Stmt::bindValue()}</span> or    <span class="methodname" style="color:#CC7832">{@link SQLite3Stmt::bindParam()}</span> will be of no effect    and all bound parameters will have the <strong><span>null</span></strong> value.   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3stmt.clear-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3stmt.clear-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> on successful clearing of bound parameters, <strong><span>false</span></strong> on   failure.  </p> </div></div>
     * @return bool <b>TRUE</b> on successful clearing of bound parameters, <b>FALSE</b> on*/
    public function clear(): bool {}

/**
*<div id="sqlite3stmt.execute" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3Stmt::execute</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3Stmt::execute</span> &mdash; <span class="dc-title">Executes a prepared statement and returns a result set object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3stmt.execute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3Stmt::execute</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.sqlite3result.php" class="type SQLite3Result" style="color:#EAB766">SQLite3Result</a></span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   Executes a prepared statement and returns a result set object.  </p>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    Result set objects retrieved by calling this method on the same statement    object are not independent, but rather share the same underlying structure.    Therefore it is recommended to call    <span class="methodname" style="color:#CC7832">{@link SQLite3Result::finalize()}</span>, before calling    <span class="methodname" style="color:#CC7832"><strong>SQLite3Stmt::execute()</strong></span> on the same statement object    again.   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3stmt.execute-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3stmt.execute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an <span class="classname"><a href="https://www.php.net/manual/zh/class.sqlite3result.php" class="classname">SQLite3Result</a></span> object on successful execution of the prepared   statement, <strong><span>false</span></strong> on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-sqlite3stmt.execute-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link SQLite3::prepare()} - Prepares an SQL statement for execution</span></li>   <li class="member"><span class="methodname" style="color:#CC7832">{@link SQLite3Stmt::bindValue()} - Binds the value of a parameter to a statement variable</span></li>   <li class="member"><span class="methodname" style="color:#CC7832">{@link SQLite3Stmt::bindParam()} - Binds a parameter to a statement variable</span></li>  </ul> </div></div>
     * @return SQLite3Result|false an <b>SQLite3Result</b> object on successful execution of the prepared*/
    public function execute(): SQLite3Result|false {}

/**
*<div id="sqlite3stmt.bindparam" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3Stmt::bindParam</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3Stmt::bindParam</span> &mdash; <span class="dc-title">Binds a parameter to a statement variable</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3stmt.bindparam-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3Stmt::bindParam</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">int</span></span> <span class="parameter" style="color:#3A95FF">$param</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">&$var</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = <strong><span>SQLITE3_TEXT</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Binds a parameter to a statement variable.  </p>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    Before PHP 7.2.14 and 7.3.0, respectively,    <span class="methodname" style="color:#CC7832">{@link SQLite3Stmt::reset()}</span> must be called after the first call to    <span class="methodname" style="color:#CC7832">{@link SQLite3Stmt::execute()}</span> if the bound value should be properly    updated on following calls to <span class="methodname" style="color:#CC7832">{@link SQLite3Stmt::execute()}</span>.    If <span class="methodname" style="color:#CC7832">{@link SQLite3Stmt::reset()}</span> is not called, the bound value will    not change, even if the value assigned to the variable passed to    <span class="methodname" style="color:#CC7832"><strong>SQLite3Stmt::bindParam()</strong></span> has changed, or    <span class="methodname" style="color:#CC7832"><strong>SQLite3Stmt::bindParam()</strong></span> has been called again.   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3stmt.bindparam-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">param</span></dt>     <dd>      <p class="para">       Either a <span class="type" style="color:#EAB766">string</span> (for named parameters) or an <span class="type" style="color:#EAB766">int</span>       (for positional parameters) identifying the statement variable to which the       value should be bound.       If a named parameter does not start with a colon (<span>:</span>) or an       at sign (<span>@</span>), a colon (<span>:</span>) is automatically preprended.       Positional parameters start with <span>1</span>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">var</span></dt>     <dd>      <p class="para">       The parameter to bind to a statement variable.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">type</span></dt>     <dd>      <p class="para">       The data type of the parameter to bind.       <ul class="itemizedlist">        <li class="listitem">         <p class="para">          <strong><span>SQLITE3_INTEGER</span></strong>: The value is a signed integer,          stored in 1, 2, 3, 4, 6, or 8 bytes depending on the magnitude of          the value.         </p>        </li>        <li class="listitem">         <p class="para">          <strong><span>SQLITE3_FLOAT</span></strong>: The value is a floating point          value, stored as an 8-byte IEEE floating point number.         </p>        </li>        <li class="listitem">         <p class="para">          <strong><span>SQLITE3_TEXT</span></strong>: The value is a text string, stored          using the database encoding (UTF-8, UTF-16BE or UTF-16-LE).         </p>        </li>        <li class="listitem">         <p class="para">          <strong><span>SQLITE3_BLOB</span></strong>: The value is a blob of data, stored          exactly as it was input.         </p>        </li>        <li class="listitem">         <p class="para">          <strong><span>SQLITE3_NULL</span></strong>: The value is a NULL value.         </p>        </li>       </ul>      </p>      <p class="para">       As of PHP 7.0.7, if <span class="parameter" style="color:#3A95FF">type</span> is omitted, it is automatically       detected from the type of the <span class="parameter" style="color:#3A95FF">var</span>: <span class="type" style="color:#EAB766">bool</span>       and <span class="type" style="color:#EAB766">int</span> are treated as <strong><span>SQLITE3_INTEGER</span></strong>,       <span class="type" style="color:#EAB766">float</span> as <strong><span>SQLITE3_FLOAT</span></strong>, <span class="type" style="color:#EAB766">null</span>       as <strong><span>SQLITE3_NULL</span></strong> and all others as <strong><span>SQLITE3_TEXT</span></strong>.       Formerly, if <span class="parameter" style="color:#3A95FF">type</span> has been omitted, it has defaulted       to <strong><span>SQLITE3_TEXT</span></strong>.      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        If <span class="parameter" style="color:#3A95FF">var</span> is <strong><span>null</span></strong>, it is always treated as        <strong><span>SQLITE3_NULL</span></strong>, regardless of the given        <span class="parameter" style="color:#3A95FF">type</span>.       </p>      </p></blockquote>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3stmt.bindparam-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> if the parameter is bound to the statement variable, <strong><span>false</span></strong>   on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-sqlite3stmt.bindparam-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.4.0</td>      <td>       <span class="parameter" style="color:#3A95FF">param</span> now also supports the <span>@param</span>       notation.      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3stmt.bindparam-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">SQLite3Stmt::bindParam()</strong></span> Usage</strong></p>    <div class="example-contents"><p>     This example shows how a single prepared statement with a single parameter     binding can be used to insert multiple rows with different values.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$db </span><span style="color: #007700">= new </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">(</span><span style="color: #DD0000">':memory:'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">"CREATE TABLE foo (bar TEXT)"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$stmt </span><span style="color: #007700">= </span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">prepare</span><span style="color: #007700">(</span><span style="color: #DD0000">"INSERT INTO foo VALUES (:bar)"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$stmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">bindParam</span><span style="color: #007700">(</span><span style="color: #DD0000">':bar'</span><span style="color: #007700">, </span><span style="color: #9876AA">$bar</span><span style="color: #007700">, </span><span style="color: #9876AA">SQLITE3_TEXT</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$bar </span><span style="color: #007700">= </span><span style="color: #DD0000">'baz'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$stmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">execute</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$bar </span><span style="color: #007700">= </span><span style="color: #9876AA">42</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$stmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">execute</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$res </span><span style="color: #007700">= </span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #DD0000">"SELECT * FROM foo"</span><span style="color: #007700">);<br />while ((</span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">$res</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fetchArray</span><span style="color: #007700">(</span><span style="color: #9876AA">SQLITE3_ASSOC</span><span style="color: #007700">))) {<br />    </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(1) {<br>  [&quot;bar&quot;]=&gt;<br>  string(3) &quot;baz&quot;<br>}<br>array(1) {<br>  [&quot;bar&quot;]=&gt;<br>  string(2) &quot;42&quot;<br>}<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-sqlite3stmt.bindparam-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link SQLite3Stmt::bindValue()} - Binds the value of a parameter to a statement variable</span></li>   <li class="member"><span class="methodname" style="color:#CC7832">{@link SQLite3::prepare()} - Prepares an SQL statement for execution</span></li>  </ul> </div></div>
     * @return bool <b>TRUE</b> if the parameter is bound to the statement variable, <b>FALSE</b>*/
    public function bindParam(
        #[LanguageLevelTypeAware(['8.0' => 'string|int'], default: '')] $param,
        #[LanguageLevelTypeAware(['8.0' => 'mixed'], default: '')] &$var,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $type = SQLITE3_TEXT
    ): bool {}

/**
*<div id="sqlite3stmt.bindvalue" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3Stmt::bindValue</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3Stmt::bindValue</span> &mdash; <span class="dc-title">Binds the value of a parameter to a statement variable</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3stmt.bindvalue-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3Stmt::bindValue</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">int</span></span> <span class="parameter" style="color:#3A95FF">$param</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = <strong><span>SQLITE3_TEXT</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Binds the value of a parameter to a statement variable.  </p>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    Before PHP 7.2.14 and 7.3.0, respectively,    once the statement has been executed, <span class="methodname" style="color:#CC7832">{@link SQLite3Stmt::reset()}</span>     needs to be called to be able to change the value of bound parameters.   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3stmt.bindvalue-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">param</span></dt>     <dd>      <p class="para">       Either a <span class="type" style="color:#EAB766">string</span> (for named parameters) or an <span class="type" style="color:#EAB766">int</span>       (for positional parameters) identifying the statement variable to which the       value should be bound.       If a named parameter does not start with a colon (<span>:</span>) or an       at sign (<span>@</span>), a colon (<span>:</span>) is automatically preprended.       Positional parameters start with <span>1</span>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       The value to bind to a statement variable.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">type</span></dt>     <dd>      <p class="para">       The data type of the value to bind.       <ul class="itemizedlist">        <li class="listitem">         <p class="para">          <strong><span>SQLITE3_INTEGER</span></strong>: The value is a signed integer,          stored in 1, 2, 3, 4, 6, or 8 bytes depending on the magnitude of          the value.         </p>        </li>        <li class="listitem">         <p class="para">          <strong><span>SQLITE3_FLOAT</span></strong>: The value is a floating point          value, stored as an 8-byte IEEE floating point number.         </p>        </li>        <li class="listitem">         <p class="para">          <strong><span>SQLITE3_TEXT</span></strong>: The value is a text string, stored          using the database encoding (UTF-8, UTF-16BE or UTF-16-LE).         </p>        </li>        <li class="listitem">         <p class="para">          <strong><span>SQLITE3_BLOB</span></strong>: The value is a blob of data, stored          exactly as it was input.         </p>        </li>        <li class="listitem">         <p class="para">          <strong><span>SQLITE3_NULL</span></strong>: The value is a NULL value.         </p>        </li>       </ul>      </p>      <p class="para">       As of PHP 7.0.7, if <span class="parameter" style="color:#3A95FF">type</span> is omitted, it is automatically       detected from the type of the <span class="parameter" style="color:#3A95FF">value</span>: <span class="type" style="color:#EAB766">bool</span>       and <span class="type" style="color:#EAB766">int</span> are treated as <strong><span>SQLITE3_INTEGER</span></strong>,       <span class="type" style="color:#EAB766">float</span> as <strong><span>SQLITE3_FLOAT</span></strong>, <span class="type" style="color:#EAB766">null</span>       as <strong><span>SQLITE3_NULL</span></strong> and all others as <strong><span>SQLITE3_TEXT</span></strong>.       Formerly, if <span class="parameter" style="color:#3A95FF">type</span> has been omitted, it has defaulted       to <strong><span>SQLITE3_TEXT</span></strong>.      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        If <span class="parameter" style="color:#3A95FF">value</span> is <strong><span>null</span></strong>, it is always treated as        <strong><span>SQLITE3_NULL</span></strong>, regardless of the given        <span class="parameter" style="color:#3A95FF">type</span>.       </p>      </p></blockquote>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3stmt.bindvalue-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> if the value is bound to the statement variable,  或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-sqlite3stmt.bindvalue-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.4.0</td>      <td>       <span class="parameter" style="color:#3A95FF">param</span> now also supports the <span>@param</span>       notation.      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3stmt.bindvalue-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">SQLite3Stmt::bindValue()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$db </span><span style="color: #007700">= new </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">(</span><span style="color: #DD0000">':memory:'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">'CREATE TABLE foo (id INTEGER, bar STRING)'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exec</span><span style="color: #007700">(</span><span style="color: #DD0000">"INSERT INTO foo (id, bar) VALUES (1, 'This is a test')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$stmt </span><span style="color: #007700">= </span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">prepare</span><span style="color: #007700">(</span><span style="color: #DD0000">'SELECT bar FROM foo WHERE id=:id'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$stmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">bindValue</span><span style="color: #007700">(</span><span style="color: #DD0000">':id'</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">SQLITE3_INTEGER</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">$stmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">execute</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fetchArray</span><span style="color: #007700">(</span><span style="color: #9876AA">SQLITE3_ASSOC</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(1) {<br>  [&quot;bar&quot;]=&gt;<br>  string(14) &quot;This is a test&quot;<br>}<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-sqlite3stmt.bindvalue-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link SQLite3Stmt::bindParam()} - Binds a parameter to a statement variable</span></li>   <li class="member"><span class="methodname" style="color:#CC7832">{@link SQLite3::prepare()} - Prepares an SQL statement for execution</span></li>  </ul> </div></div>
     * @return bool <b>TRUE</b> if the value is bound to the statement variable, <b>FALSE</b>*/
    public function bindValue(
        #[LanguageLevelTypeAware(['8.0' => 'string|int'], default: '')] $param,
        #[LanguageLevelTypeAware(['8.0' => 'mixed'], default: '')] $value,
        #[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $type = SQLITE3_TEXT
    ): bool {}

/**
*<div id="sqlite3stmt.readonly" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3Stmt::readOnly</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.6, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3Stmt::readOnly</span> &mdash; <span class="dc-title">Returns whether a statement is definitely read only</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3stmt.readonly-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3Stmt::readOnly</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Returns whether a statement is definitely read only. A statement is   considered read only, if it makes no <em>direct</em> changes to   the content of the database file. Note that user defined SQL functions might   change the database <em>indirectly</em> as a side effect.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3stmt.readonly-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3stmt.readonly-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> if a statement is definitely read only, <strong><span>false</span></strong> otherwise.  </p> </div></div>
*/
    public function readOnly(): bool {}

    /**
     * @param SQLite3 $sqlite3
     * @param string $query
     */
    private function __construct(
        #[LanguageLevelTypeAware(['8.0' => 'SQLite3'], default: '')] $sqlite3,
        #[PhpStormStubsElementAvailable(from: '8.0')] string $query
    ) {}

/**
*<div id="sqlite3stmt.getsql" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3Stmt::getSQL</h1>  <p class="verinfo">(PHP 7 &gt;= 7.4.0, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3Stmt::getSQL</span> &mdash; <span class="dc-title">Get the SQL of the statement</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3stmt.getsql-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3Stmt::getSQL</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$expand</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   Retrieves the SQL of the prepared statement. If <span class="parameter" style="color:#3A95FF">expand</span>   is <strong><span>false</span></strong>, the unmodified SQL is retrieved. If <span class="parameter" style="color:#3A95FF">expand</span>   is <strong><span>true</span></strong>, all query parameters are replaced with their bound values, or with   an SQL <span>NULL</span>, if not already bound.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3stmt.getsql-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">expand</span></dt>    <dd>     <span>      Whether to retrieve the expanded SQL. Passing <strong><span>true</span></strong> is only supported as      of libsqlite 3.14.     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3stmt.getsql-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the SQL of the prepared statement,  或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-sqlite3stmt.getsql-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   If <span class="parameter" style="color:#3A95FF">expand</span> is <strong><span>true</span></strong>, but the libsqlite version is less   than 3.14, an error of level <strong><span>E_WARNING</span></strong> or an <span class="classname"><a href="https://www.php.net/manual/zh/class.exception.php" class="classname">Exception</a></span>   is issued, according to <span class="methodname" style="color:#CC7832">{@link SQLite3::enableExceptions()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-sqlite3stmt.getsql-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 Inspecting the expanded SQL</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$db </span><span style="color: #007700">= new </span><span style="color: #9876AA">SQLite3</span><span style="color: #007700">(</span><span style="color: #DD0000">':memory:'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$stmt </span><span style="color: #007700">= </span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">prepare</span><span style="color: #007700">(</span><span style="color: #DD0000">"SELECT :a, ?, :c"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$stmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">bindValue</span><span style="color: #007700">(</span><span style="color: #DD0000">':a'</span><span style="color: #007700">, </span><span style="color: #DD0000">'foo'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$answer </span><span style="color: #007700">= </span><span style="color: #9876AA">42</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$stmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">bindParam</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">$answer</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$stmt</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getSQL</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>string(24) &quot;SELECT &#039;foo&#039;, &#039;42&#039;, NULL&quot;<br></span></div>   </div>  </div> </div></div>
     * @return string|false Returns the SQL of the prepared statement, or FALSE on failure.*/
    public function getSQL(bool $expand = false): string|false {}
}

/**
*<div id="class.sqlite3result" class="reference"> <h1 class="title">SQLite3Result 类</h1>  <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p>  <div class="section" id="sqlite3result.intro">   <h2 class="title">简介</h2>   <p class="para">    处理 SQLite 3 扩展返回结果集的类。   </p>  </div>  <div class="section" id="sqlite3result.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">SQLite3Result</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">private</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3result.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>()</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3result.columnname.php" class="methodname" style="color:#CC7832">columnName</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$column</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3result.columntype.php" class="methodname" style="color:#CC7832">columnType</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$column</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3result.fetcharray.php" class="methodname" style="color:#CC7832">fetchArray</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$mode</span><span class="initializer"> = <strong><span>SQLITE3_BOTH</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3result.finalize.php" class="methodname" style="color:#CC7832">finalize</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3result.numcolumns.php" class="methodname" style="color:#CC7832">numColumns</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/sqlite3result.reset.php" class="methodname" style="color:#CC7832">reset</a></span>(): <span class="type" style="color:#EAB766">bool</span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link SQLite3Result::columnName} — Returns the name of the nth column</li><li>{@link SQLite3Result::columnType} — Returns the type of the nth column</li><li>{@link SQLite3Result::__construct} — Constructs an SQLite3Result</li><li>{@link SQLite3Result::fetchArray} — Fetches a result row as an associative or numerically indexed array or both</li><li>{@link SQLite3Result::finalize} — Closes the result set</li><li>{@link SQLite3Result::numColumns} — Returns the number of columns in the result set</li><li>{@link SQLite3Result::reset} — Resets the result set back to the first row</li></ul></div>
*/
class SQLite3Result
{
/**
*<div id="sqlite3result.numcolumns" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3Result::numColumns</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3Result::numColumns</span> &mdash; <span class="dc-title">Returns the number of columns in the result set</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3result.numcolumns-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3Result::numColumns</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the number of columns in the result set.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3result.numcolumns-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3result.numcolumns-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the number of columns in the result set.  </p> </div></div>
     * @return int the number of columns in the result set.*/
    public function numColumns(): int {}

/**
*<div id="sqlite3result.columnname" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3Result::columnName</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3Result::columnName</span> &mdash; <span class="dc-title">Returns the name of the nth column</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3result.columnname-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3Result::columnName</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$column</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   Returns the name of the column specified by the   <span class="parameter" style="color:#3A95FF">column</span>.   Note that the name of a result column is the value of the <span>AS</span> clause   for that column, if there is an <span>AS</span> clause. If there is no <span>AS</span>   clause then the name of the column is unspecified and may change from one release of libsqlite3   to the next.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3result.columnname-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">column</span></dt>     <dd>      <p class="para">       The numeric zero-based index of the column.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3result.columnname-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the <span class="type" style="color:#EAB766">string</span> name of the column identified by   <span class="parameter" style="color:#3A95FF">column</span>, or <strong><span>false</span></strong> if the column does not exist.  </p> </div></div>
     * @return string|false the string name of the column identified by*/
    public function columnName(#[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $column): string|false {}

/**
*<div id="sqlite3result.columntype" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3Result::columnType</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3Result::columnType</span> &mdash; <span class="dc-title">Returns the type of the nth column</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3result.columntype-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3Result::columnType</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$column</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   Returns the type of the column identified by   <span class="parameter" style="color:#3A95FF">column</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3result.columntype-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">column</span></dt>     <dd>      <p class="para">       The numeric zero-based index of the column.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3result.columntype-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the data type index of the column identified by   <span class="parameter" style="color:#3A95FF">column</span> (one of   <strong><span>SQLITE3_INTEGER</span></strong>, <strong><span>SQLITE3_FLOAT</span></strong>,   <strong><span>SQLITE3_TEXT</span></strong>, <strong><span>SQLITE3_BLOB</span></strong>, or   <strong><span>SQLITE3_NULL</span></strong>), or <strong><span>false</span></strong> if the column does not exist.  </p> </div></div>
     * @return int|false the data type index of the column identified by*/
    public function columnType(#[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $column): int|false {}

/**
*<div id="sqlite3result.fetcharray" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3Result::fetchArray</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3Result::fetchArray</span> &mdash; <span class="dc-title">   Fetches a result row as an associative or numerically indexed array or both  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3result.fetcharray-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3Result::fetchArray</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$mode</span><span class="initializer"> = <strong><span>SQLITE3_BOTH</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   Fetches a result row as an associative or numerically indexed array or both.   By default, fetches as both.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3result.fetcharray-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">mode</span></dt>     <dd>      <p class="para">       Controls how the next row will be returned to the caller. This value       must be one of either <span>SQLITE3_ASSOC</span>,       <span>SQLITE3_NUM</span>, or <span>SQLITE3_BOTH</span>.       <ul class="itemizedlist">        <li class="listitem">         <p class="para">          <span>SQLITE3_ASSOC</span>: returns an array indexed by column          name as returned in the corresponding result set         </p>        </li>        <li class="listitem">         <p class="para">          <span>SQLITE3_NUM</span>: returns an array indexed by column          number as returned in the corresponding result set, starting at          column 0         </p>        </li>        <li class="listitem">         <p class="para">          <span>SQLITE3_BOTH</span>: returns an array indexed by both          column name and number as returned in the corresponding result set,          starting at column 0         </p>        </li>       </ul>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3result.fetcharray-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a result row as an associatively or numerically indexed array or   both. Alternately will return <strong><span>false</span></strong> if there are no more rows.  </p>  <p class="para">   The types of the values of the returned array are mapped from SQLite3 types   as follows: integers are mapped to <span class="type" style="color:#EAB766">int</span> if they fit into the   range <strong><span>PHP_INT_MIN</span></strong>..<strong><span>PHP_INT_MAX</span></strong>, and   to <span class="type" style="color:#EAB766">string</span> otherwise. Floats are mapped to <span class="type" style="color:#EAB766">float</span>,   <span>NULL</span> values are mapped to <span class="type" style="color:#EAB766">null</span>, and strings   and blobs are mapped to <span class="type" style="color:#EAB766">string</span>.  </p> </div></div>
     * @return array|false a result row as an associatively or numerically indexed array or*/
    public function fetchArray(#[LanguageLevelTypeAware(['8.0' => 'int'], default: '')] $mode = SQLITE3_BOTH): array|false {}

/**
*<div id="sqlite3result.reset" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3Result::reset</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3Result::reset</span> &mdash; <span class="dc-title">Resets the result set back to the first row</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3result.reset-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3Result::reset</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Resets the result set back to the first row.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3result.reset-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3result.reset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> if the result set is successfully reset   back to the first row, <strong><span>false</span></strong> on failure.  </p> </div></div>
     * @return bool <b>TRUE</b> if the result set is successfully reset*/
    public function reset(): bool {}

/**
*<div id="sqlite3result.finalize" class="refentry"> <div class="refnamediv">  <h1 class="refname">SQLite3Result::finalize</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">SQLite3Result::finalize</span> &mdash; <span class="dc-title">Closes the result set</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-sqlite3result.finalize-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SQLite3Result::finalize</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Closes the result set.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-sqlite3result.finalize-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-sqlite3result.finalize-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong>.  </p> </div></div>
     * @return bool <b>TRUE</b>.*/
    public function finalize() {}

    private function __construct() {}
}

/**
*       指定 <span class="methodname">{@link Sqlite3Result::fetchArray()}</span>       方法返回按列名称索引的数组，其中列名即相应结果集返回的列名。      
*/
define('SQLITE3_ASSOC', 1);

/**
*       指定 <span class="methodname">{@link Sqlite3Result::fetchArray()}</span>       方法返回按列序号索引的数组，其中列号即相应结果集返回的列号，从第 0 列开始计数。      
*/
define('SQLITE3_NUM', 2);

/**
*       指定 <span class="methodname">{@link Sqlite3Result::fetchArray()}</span>       方法返回同时按列名称与列序号索引的数组，其中列名即相应结果集返回的列名，列号即相应结果集返回的列号，从第 0 列开始计数。      
*/
define('SQLITE3_BOTH', 3);

/**
*       表示 SQLite3 INTEGER (整型) 存储类。      
*/
define('SQLITE3_INTEGER', 1);

/**
*       表示 SQLite3 REAL (FLOAT) (实型) 存储类。      
*/
define('SQLITE3_FLOAT', 2);

/**
*       表示 SQLite3 TEXT (文本) 存储类。      
*/
define('SQLITE3_TEXT', 3);

/**
*       表示 SQLite3 BLOB (二进制对象) 存储类。      
*/
define('SQLITE3_BLOB', 4);

/**
*       表示 SQLite3 NULL 存储类。      
*/
define('SQLITE3_NULL', 5);

/**
*       指定 SQLite3 数据库以只读模式打开。      
*/
define('SQLITE3_OPEN_READONLY', 1);

/**
*       指定 SQLite3 数据库以读写模式打开。      
*/
define('SQLITE3_OPEN_READWRITE', 2);

/**
*       指定 SQLite3 数据库若不存在，则创建并打开。      
*/
define('SQLITE3_OPEN_CREATE', 4);

/**
*       使用 <span class="function">{@link SQLite3::createFunction()}</span> 创建的指定函数是确定性的，即它始终在单个 SQL 语句中指定的相同输入返回相同结果。（自 PHP 7.1.4 起可用。）      
*/
define('SQLITE3_DETERMINISTIC', 2048);

// End of sqlite3 v.0.7-dev
