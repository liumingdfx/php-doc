<?php

use JetBrains\PhpStorm\Internal\TentativeType;
use JetBrains\PhpStorm\Pure;

/**
*<div id="class.reflectiongenerator" class="reference"> <h1 class="title">ReflectionGenerator 类</h1>  <div class="partintro"><p class="verinfo">(PHP 7, PHP 8)</p>  <div class="section" id="reflectiongenerator.intro">   <h2 class="title">简介</h2>   <p class="para">    <span class="classname"><strong class="classname">ReflectionGenerator</strong></span> 类报告有关生成器的信息。   </p>  </div>  <div class="section" id="reflectiongenerator.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">final</span>     <span class="modifier">class</span> <strong class="classname"><strong class="classname">ReflectionGenerator</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/reflectiongenerator.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.generator.php" class="type Generator" style="color:#EAB766">Generator</a></span> <span class="parameter" style="color:#3A95FF">$generator</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/reflectiongenerator.getexecutingfile.php" class="methodname" style="color:#CC7832">getExecutingFile</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/reflectiongenerator.getexecutinggenerator.php" class="methodname" style="color:#CC7832">getExecutingGenerator</a></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.generator.php" class="type Generator" style="color:#EAB766">Generator</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/reflectiongenerator.getexecutingline.php" class="methodname" style="color:#CC7832">getExecutingLine</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link getFunction}</span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.reflectionfunctionabstract.php" class="type ReflectionFunctionAbstract" style="color:#EAB766">ReflectionFunctionAbstract</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/reflectiongenerator.getthis.php" class="methodname" style="color:#CC7832">getThis</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766">object</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/reflectiongenerator.gettrace.php" class="methodname" style="color:#CC7832">getTrace</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = <strong><span>DEBUG_BACKTRACE_PROVIDE_OBJECT</span></strong></span></span>): <span class="type" style="color:#EAB766">array</span></div>   }</div>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <p class="para">    <table class="doctable informaltable">           <thead>       <tr>        <th>版本</th>        <th>说明</th>       </tr>      </thead>      <tbody class="tbody">       <tr>        <td>8.0.0</td>        <td>         类现在是 <span class="modifier">final</span>。        </td>       </tr>      </tbody>         </table>   </p>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link ReflectionGenerator::__construct} — Constructs a ReflectionGenerator object</li><li>{@link ReflectionGenerator::getExecutingFile} — Gets the file name of the currently executing generator</li><li>{@link ReflectionGenerator::getExecutingGenerator} — Gets the executing Generator object</li><li>{@link ReflectionGenerator::getExecutingLine} — Gets the currently executing line of the generator</li><li>{@link ReflectionGenerator::getFunction} — Gets the function name of the generator</li><li>{@link ReflectionGenerator::getThis} — Gets the $this value of the generator</li><li>{@link ReflectionGenerator::getTrace} — Gets the trace of the executing generator</li></ul></div>
*/
class ReflectionGenerator
{
    /**
     * Constructs a ReflectionGenerator object
     *
     * @link https://php.net/manual/en/reflectiongenerator.construct.php
     * @param Generator $generator A generator object.
     * @since 7.0
     */
    public function __construct(Generator $generator) {}

/**
*<div id="reflectiongenerator.getexecutingline" class="refentry"> <div class="refnamediv">  <h1 class="refname">ReflectionGenerator::getExecutingLine</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ReflectionGenerator::getExecutingLine</span> &mdash; <span class="dc-title">Gets the currently executing line of the generator</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-reflectiongenerator.getexecutingline-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getExecutingLine</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Get the currently executing line number of the generator.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-reflectiongenerator.getexecutingline-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-reflectiongenerator.getexecutingline-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the line number of the currently executing statement in the generator.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-reflectiongenerator.getexecutingline-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getExecutingLine()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">class </span><span style="color: #9876AA">GenExample<br /></span><span style="color: #007700">{<br />    public function </span><span style="color: #9876AA">gen</span><span style="color: #007700">()<br />    {<br />        yield </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br />    }<br />}<br /><br /></span><span style="color: #9876AA">$gen </span><span style="color: #007700">= (new </span><span style="color: #9876AA">GenExample</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">gen</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$reflectionGen </span><span style="color: #007700">= new </span><span style="color: #9876AA">ReflectionGenerator</span><span style="color: #007700">(</span><span style="color: #9876AA">$gen</span><span style="color: #007700">);<br /><br />echo </span><span style="color: #DD0000">"Line: </span><span style="color: #007700">{</span><span style="color: #9876AA">$reflectionGen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getExecutingLine</span><span style="color: #007700">()}</span><span style="color: #DD0000">"</span><span style="color: #007700">;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Line: 7<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-reflectiongenerator.getexecutingline-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getExecutingGenerator()} - Gets the executing Generator object</span></li>    <li class="member"><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getExecutingFile()} - Gets the file name of the currently executing generator</span></li>   </ul>  </span> </div></div>
     * @return int Returns the line number of the currently executing statement*/
    public function getExecutingLine(): int {}

/**
*<div id="reflectiongenerator.getexecutingfile" class="refentry"> <div class="refnamediv">  <h1 class="refname">ReflectionGenerator::getExecutingFile</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ReflectionGenerator::getExecutingFile</span> &mdash; <span class="dc-title">Gets the file name of the currently executing generator</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-reflectiongenerator.getexecutingfile-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getExecutingFile</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Get the full path and file name of the currently executing generator.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-reflectiongenerator.getexecutingfile-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-reflectiongenerator.getexecutingfile-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the full path and file name of the currently executing generator.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-reflectiongenerator.getexecutingfile-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getExecutingFile()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">class </span><span style="color: #9876AA">GenExample<br /></span><span style="color: #007700">{<br />    public function </span><span style="color: #9876AA">gen</span><span style="color: #007700">()<br />    {<br />        yield </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br />    }<br />}<br /><br /></span><span style="color: #9876AA">$gen </span><span style="color: #007700">= (new </span><span style="color: #9876AA">GenExample</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">gen</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$reflectionGen </span><span style="color: #007700">= new </span><span style="color: #9876AA">ReflectionGenerator</span><span style="color: #007700">(</span><span style="color: #9876AA">$gen</span><span style="color: #007700">);<br /><br />echo </span><span style="color: #DD0000">"File: </span><span style="color: #007700">{</span><span style="color: #9876AA">$reflectionGen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getExecutingFile</span><span style="color: #007700">()}</span><span style="color: #DD0000">"</span><span style="color: #007700">;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>File: /path/to/file/example.php<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-reflectiongenerator.getexecutingfile-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getExecutingLine()} - Gets the currently executing line of the generator</span></li>    <li class="member"><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getExecutingGenerator()} - Gets the executing Generator object</span></li>   </ul>  </span> </div></div>
     * @return string Returns the full path and file name of the currently*/
    public function getExecutingFile(): string {}

/**
*<div id="reflectiongenerator.gettrace" class="refentry"> <div class="refnamediv">  <h1 class="refname">ReflectionGenerator::getTrace</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ReflectionGenerator::getTrace</span> &mdash; <span class="dc-title">Gets the trace of the executing generator</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-reflectiongenerator.gettrace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getTrace</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = <strong><span>DEBUG_BACKTRACE_PROVIDE_OBJECT</span></strong></span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Get the trace of the currently executing generator.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-reflectiongenerator.gettrace-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       The value of <span class="parameter" style="color:#3A95FF">options</span> can be any of       the following flags.      </p>      <p class="para">       <table class="doctable table">        <caption><strong>Available options</strong></caption>                 <thead>          <tr>           <th>Option</th>           <th>Description</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td>            <strong><span>DEBUG_BACKTRACE_PROVIDE_OBJECT</span></strong>           </td>           <td>            Default.           </td>          </tr>          <tr>           <td>            <strong><span>DEBUG_BACKTRACE_IGNORE_ARGS</span></strong>           </td>           <td>            Don&#039;t include the argument information for functions in the stack            trace.           </td>          </tr>         </tbody>               </table>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-reflectiongenerator.gettrace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the trace of the currently executing generator.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-reflectiongenerator.gettrace-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getTrace()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">foo</span><span style="color: #007700">() {<br />    yield </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br />}<br /><br />function </span><span style="color: #9876AA">bar</span><span style="color: #007700">()<br />{<br />    yield from </span><span style="color: #9876AA">foo</span><span style="color: #007700">();<br />}<br /><br />function </span><span style="color: #9876AA">baz</span><span style="color: #007700">()<br />{<br />    yield from </span><span style="color: #9876AA">bar</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">$gen </span><span style="color: #007700">= </span><span style="color: #9876AA">baz</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$gen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">valid</span><span style="color: #007700">(); </span><span style="color: #FF8000">// start the generator<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">((new </span><span style="color: #9876AA">ReflectionGenerator</span><span style="color: #007700">(</span><span style="color: #9876AA">$gen</span><span style="color: #007700">))-&gt;</span><span style="color: #9876AA">getTrace</span><span style="color: #007700">());</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(2) {<br>  [0]=&gt;<br>  array(4) {<br>    [&quot;file&quot;]=&gt;<br>    string(18) &quot;example.php&quot;<br>    [&quot;line&quot;]=&gt;<br>    int(8)<br>    [&quot;function&quot;]=&gt;<br>    string(3) &quot;foo&quot;<br>    [&quot;args&quot;]=&gt;<br>    array(0) {<br>    }<br>  }<br>  [1]=&gt;<br>  array(4) {<br>    [&quot;file&quot;]=&gt;<br>    string(18) &quot;example.php&quot;<br>    [&quot;line&quot;]=&gt;<br>    int(12)<br>    [&quot;function&quot;]=&gt;<br>    string(3) &quot;bar&quot;<br>    [&quot;args&quot;]=&gt;<br>    array(0) {<br>    }<br>  }<br>}<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-reflectiongenerator.gettrace-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getFunction()} - Gets the function name of the generator</span></li>    <li class="member"><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getThis()} - Gets the $this value of the generator</span></li>   </ul>  </span> </div></div>
     * @return array Returns the trace of the currently executing generator.*/
    public function getTrace(int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT): array {}

/**
*<div id="reflectiongenerator.getfunction" class="refentry"> <div class="refnamediv">  <h1 class="refname">ReflectionGenerator::getFunction</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ReflectionGenerator::getFunction</span> &mdash; <span class="dc-title">Gets the function name of the generator</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-reflectiongenerator.getfunction-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getFunction</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.reflectionfunctionabstract.php" class="type ReflectionFunctionAbstract" style="color:#EAB766">ReflectionFunctionAbstract</a></span></div>  <p class="para rdfs-comment">   Enables the function name of the generator to be obtained by returning a   class derived from <span class="classname"><a href="https://www.php.net/manual/zh/class.reflectionfunctionabstract.php" class="classname">ReflectionFunctionAbstract</a></span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-reflectiongenerator.getfunction-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-reflectiongenerator.getfunction-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <span class="classname"><a href="https://www.php.net/manual/zh/class.reflectionfunctionabstract.php" class="classname">ReflectionFunctionAbstract</a></span> class. This will   be <span class="classname">{@link ReflectionFunction}</span> for functions, or   <span class="classname"><a href="https://www.php.net/manual/zh/class.reflectionmethod.php" class="classname">ReflectionMethod</a></span> for methods.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-reflectiongenerator.getfunction-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getFunction()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">function </span><span style="color: #9876AA">gen</span><span style="color: #007700">()<br />{<br />    yield </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">$gen </span><span style="color: #007700">= </span><span style="color: #9876AA">gen</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$reflectionGen </span><span style="color: #007700">= new </span><span style="color: #9876AA">ReflectionGenerator</span><span style="color: #007700">(</span><span style="color: #9876AA">$gen</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$reflectionGen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getFunction</span><span style="color: #007700">());</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>object(ReflectionFunction)#3 (1) {<br>  [&quot;name&quot;]=&gt;<br>  string(3) &quot;gen&quot;<br>}<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-reflectiongenerator.getfunction-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getThis()} - Gets the $this value of the generator</span></li>    <li class="member"><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getTrace()} - Gets the trace of the executing generator</span></li>   </ul>  </span> </div></div>
     * @return ReflectionFunctionAbstract Returns a {@see ReflectionFunctionAbstract}*/
    public function getFunction(): ReflectionFunctionAbstract {}

/**
*<div id="reflectiongenerator.getthis" class="refentry"> <div class="refnamediv">  <h1 class="refname">ReflectionGenerator::getThis</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ReflectionGenerator::getThis</span> &mdash; <span class="dc-title">Gets the <span>$this</span> value of the generator</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-reflectiongenerator.getthis-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getThis</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766">object</span></span></div>  <p class="para rdfs-comment">   Get the <span>$this</span> value that the generator has access to.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-reflectiongenerator.getthis-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-reflectiongenerator.getthis-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the <span>$this</span> value, or <strong><span>null</span></strong> if the generator was   not created in a class context.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-reflectiongenerator.getthis-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getThis()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">class </span><span style="color: #9876AA">GenExample<br /></span><span style="color: #007700">{<br />    public function </span><span style="color: #9876AA">gen</span><span style="color: #007700">()<br />    {<br />        yield </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br />    }<br />}<br /><br /></span><span style="color: #9876AA">$gen </span><span style="color: #007700">= (new </span><span style="color: #9876AA">GenExample</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">gen</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$reflectionGen </span><span style="color: #007700">= new </span><span style="color: #9876AA">ReflectionGenerator</span><span style="color: #007700">(</span><span style="color: #9876AA">$gen</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$reflectionGen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getThis</span><span style="color: #007700">());</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>object(GenExample)#3 (0) {<br>}<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-reflectiongenerator.getthis-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getFunction()} - Gets the function name of the generator</span></li>    <li class="member"><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getTrace()} - Gets the trace of the executing generator</span></li>   </ul>  </span> </div></div>
     * @return object|null Returns the $this value, or {@see null} if the*/
    public function getThis(): ?object {}

/**
*<div id="reflectiongenerator.getexecutinggenerator" class="refentry"> <div class="refnamediv">  <h1 class="refname">ReflectionGenerator::getExecutingGenerator</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ReflectionGenerator::getExecutingGenerator</span> &mdash; <span class="dc-title">Gets the executing <span class="classname"><a href="https://www.php.net/manual/zh/class.generator.php" class="classname">Generator</a></span> object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-reflectiongenerator.getexecutinggenerator-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getExecutingGenerator</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.generator.php" class="type Generator" style="color:#EAB766">Generator</a></span></div>  <p class="para rdfs-comment">   Get the executing <span class="classname"><a href="https://www.php.net/manual/zh/class.generator.php" class="classname">Generator</a></span> object  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-reflectiongenerator.getexecutinggenerator-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-reflectiongenerator.getexecutinggenerator-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the currently executing <span class="classname"><a href="https://www.php.net/manual/zh/class.generator.php" class="classname">Generator</a></span> object.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-reflectiongenerator.getexecutinggenerator-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>ReflectionGenerator::getExecutingGenerator()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">class </span><span style="color: #9876AA">GenExample<br /></span><span style="color: #007700">{<br />    public function </span><span style="color: #9876AA">gen</span><span style="color: #007700">()<br />    {<br />        yield </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br />    }<br />}<br /><br /></span><span style="color: #9876AA">$gen </span><span style="color: #007700">= (new </span><span style="color: #9876AA">GenExample</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">gen</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$reflectionGen </span><span style="color: #007700">= new </span><span style="color: #9876AA">ReflectionGenerator</span><span style="color: #007700">(</span><span style="color: #9876AA">$gen</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$gen2 </span><span style="color: #007700">= </span><span style="color: #9876AA">$reflectionGen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getExecutingGenerator</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$gen2 </span><span style="color: #007700">=== </span><span style="color: #9876AA">$gen</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$gen2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">current</span><span style="color: #007700">());</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>bool(true)<br>int(1);<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-reflectiongenerator.getexecutinggenerator-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getExecutingLine()} - Gets the currently executing line of the generator</span></li>    <li class="member"><span class="methodname" style="color:#CC7832">{@link ReflectionGenerator::getExecutingFile()} - Gets the file name of the currently executing generator</span></li>   </ul>  </span> </div></div>
     * @return Generator Returns the currently executing Generator object.*/
    public function getExecutingGenerator(): Generator {}
}
