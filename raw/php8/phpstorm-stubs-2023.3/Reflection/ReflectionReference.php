<?php

use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
use JetBrains\PhpStorm\Pure;

/**
*<div id="class.reflectionreference" class="reference"> <h1 class="title">ReflectionReference 类</h1>  <div class="partintro"><p class="verinfo">(PHP 7 &gt;= 7.4.0, PHP 8)</p>  <div class="section" id="reflectionreference.intro">   <h2 class="title">简介</h2>   <p class="para">    <span class="classname"><strong class="classname">ReflectionReference</strong></span> 类提供有关引用的信息。   </p>  </div>  <div class="section" id="reflectionreference.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">final</span>     <span class="modifier">class</span> <strong class="classname"><strong class="classname">ReflectionReference</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">private</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/reflectionreference.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>()</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/reflectionreference.fromarrayelement.php" class="methodname" style="color:#CC7832">fromArrayElement</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$array</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">string</span></span> <span class="parameter" style="color:#3A95FF">$key</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.reflectionreference.php" class="type ReflectionReference" style="color:#EAB766">ReflectionReference</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/reflectionreference.getid.php" class="methodname" style="color:#CC7832">getId</a></span>(): <span class="type" style="color:#EAB766">string</span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link ReflectionReference::__construct} — 私有构造函数以禁用直接实例化</li><li>{@link ReflectionReference::fromArrayElement} — 从数组元素创建一个 ReflectionReference</li><li>{@link ReflectionReference::getId} — 获取引用的唯一 ID</li></ul></div>
*/
class ReflectionReference
{
    /**
     * ReflectionReference cannot be created explicitly.
     */
    private function __construct() {}

/**
*<div id="reflectionreference.fromarrayelement" class="refentry"> <div class="refnamediv">  <h1 class="refname">ReflectionReference::fromArrayElement</h1>  <p class="verinfo">(PHP 7 &gt;= 7.4.0, PHP 8)</p><p class="refpurpose"><span class="refname">ReflectionReference::fromArrayElement</span> &mdash; <span class="dc-title">从数组元素创建一个 ReflectionReference</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-reflectionreference.fromarrayelement-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>ReflectionReference::fromArrayElement</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$array</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">string</span></span> <span class="parameter" style="color:#3A95FF">$key</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.reflectionreference.php" class="type ReflectionReference" style="color:#EAB766">ReflectionReference</a></span></span></div>  <p class="para rdfs-comment">   从数组元素创建一个 <span class="classname"><a href="https://www.php.net/manual/zh/class.reflectionreference.php" class="classname">ReflectionReference</a></span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-reflectionreference.fromarrayelement-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">array</span></dt>    <dd>     <span>      包含潜在引用的 <span class="type" style="color:#EAB766">array</span>。     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <p class="para">      一个 <span class="type" style="color:#EAB766">int</span> 或者 <span class="type" style="color:#EAB766">string</span> 类型的 key。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-reflectionreference.fromarrayelement-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span>$array[$key]</span> 是引用，返回 <span class="classname"><strong class="classname">ReflectionReference </strong></span>   实例，否则返回 <strong><span>null</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-reflectionreference.fromarrayelement-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">array</span> 不是一个 <span class="type" style="color:#EAB766">array</span>，或者 <span class="parameter" style="color:#3A95FF">key</span>   不是 <span class="type" style="color:#EAB766">int</span> 或者 <span class="type" style="color:#EAB766">string</span> 类型，会抛出 <span class="classname"><a href="https://www.php.net/manual/zh/class.typeerror.php" class="classname">TypeError</a></span>。   如果 <span>$array[$key]</span> 不存在，   会抛出 <span class="classname"><a href="https://www.php.net/manual/zh/class.reflectionexception.php" class="classname">ReflectionException</a></span>。  </p> </div></div>
     * @return ReflectionReference|null*/
    public static function fromArrayElement(
        array $array,
        #[LanguageLevelTypeAware(['8.0' => 'string|int'], default: '')] $key
    ): ?ReflectionReference {}

/**
*<div id="reflectionreference.getid" class="refentry"> <div class="refnamediv">  <h1 class="refname">ReflectionReference::getId</h1>  <p class="verinfo">(PHP 7 &gt;= 7.4.0, PHP 8)</p><p class="refpurpose"><span class="refname">ReflectionReference::getId</span> &mdash; <span class="dc-title">获取引用的唯一 ID</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-reflectionreference.getid-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ReflectionReference::getId</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   返回一个 ID，该 ID 在该引用的生命周期内对于该引用是唯一的。   此 ID 可用于比较引用的相等性，或维护已知引用的映射。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-reflectionreference.getid-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-reflectionreference.getid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个未指定格式的 <span class="type" style="color:#EAB766">string</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-reflectionreference.getid-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 基本的 <span class="methodname" style="color:#CC7832"><strong>ReflectionReference::getId()</strong></span> 用法</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$val1 </span><span style="color: #007700">= </span><span style="color: #DD0000">'foo'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$val2 </span><span style="color: #007700">= </span><span style="color: #DD0000">'bar'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$arr </span><span style="color: #007700">= [&amp;</span><span style="color: #9876AA">$val1</span><span style="color: #007700">, &amp;</span><span style="color: #9876AA">$val2</span><span style="color: #007700">, &amp;</span><span style="color: #9876AA">$val1</span><span style="color: #007700">];<br /><br /></span><span style="color: #9876AA">$rr1 </span><span style="color: #007700">= </span><span style="color: #9876AA">ReflectionReference</span><span style="color: #007700">::</span><span style="color: #9876AA">fromArrayElement</span><span style="color: #007700">(</span><span style="color: #9876AA">$arr</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$rr2 </span><span style="color: #007700">= </span><span style="color: #9876AA">ReflectionReference</span><span style="color: #007700">::</span><span style="color: #9876AA">fromArrayElement</span><span style="color: #007700">(</span><span style="color: #9876AA">$arr</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$rr3 </span><span style="color: #007700">= </span><span style="color: #9876AA">ReflectionReference</span><span style="color: #007700">::</span><span style="color: #9876AA">fromArrayElement</span><span style="color: #007700">(</span><span style="color: #9876AA">$arr</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$rr1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getId</span><span style="color: #007700">() === </span><span style="color: #9876AA">$rr2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getId</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$rr1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getId</span><span style="color: #007700">() === </span><span style="color: #9876AA">$rr3</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getId</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>bool(false)<br>bool(true)<br></span></div>   </div>  </div> </div></div>
     * @return int|string Returns an integer or string of unspecified format.*/
    public function getId(): string {}

    /**
     * ReflectionReference cannot be cloned
     *
     * @return void
     */
    private function __clone(): void {}
}
