<?php

/**
*<div id="class.phptoken" class="reference"> <h1 class="title">The PhpToken class</h1>  <div class="partintro"><p class="verinfo">(PHP 8)</p>  <div class="section" id="phptoken.intro">   <h2 class="title">简介</h2>   <p class="para">    This class provides an alternative to <span class="function">{@link token_get_all()}</span>. While the function returns tokens    either as a single-character string, or an array with a token ID, token text and line number,    <span class="function">{@link PhpToken::tokenize()}</span> normalizes all tokens into PhpToken objects, which makes code operating    on tokens more memory efficient and readable.   </p>  </div>  <div class="section" id="phptoken.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">PhpToken</strong></strong>             <span class="modifier">implements</span>      <a href="https://www.php.net/manual/zh/class.stringable.php" class="interfacename">Stringable</a> {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="type" style="color:#EAB766">int</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.phptoken.php#phptoken.props.id">$<var class="varname">id</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">string</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.phptoken.php#phptoken.props.text">$<var class="varname">text</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">int</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.phptoken.php#phptoken.props.line">$<var class="varname">line</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">int</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.phptoken.php#phptoken.props.pos">$<var class="varname">pos</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/phptoken.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$id</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$text</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$line</span><span class="initializer"> = -1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$pos</span><span class="initializer"> = -1</span></span><br>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/phptoken.gettokenname.php" class="methodname" style="color:#CC7832">getTokenName</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766">string</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/phptoken.is.php" class="methodname" style="color:#CC7832">is</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">array</span></span> <span class="parameter" style="color:#3A95FF">$kind</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/phptoken.isignorable.php" class="methodname" style="color:#CC7832">isIgnorable</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/phptoken.tostring.php" class="methodname" style="color:#CC7832">__toString</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/phptoken.tokenize.php" class="methodname" style="color:#CC7832">tokenize</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$code</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766">array</span></div>   }</div>  </div>  <div class="section" id="phptoken.props">   <h2 class="title">属性</h2>   <dl>         <dt id="phptoken.props.id"><var class="varname">id</var></dt>     <dd>      <p class="para">       One of the T_* constants, or an ASCII codepoint representing a single-char token.      </p>     </dd>             <dt id="phptoken.props.text"><var class="varname">text</var></dt>     <dd>      <p class="para">       The textual content of the token.      </p>     </dd>             <dt id="phptoken.props.line"><var class="varname">line</var></dt>     <dd>      <p class="para">       The starting line number (1-based) of the token.      </p>     </dd>             <dt id="phptoken.props.pos"><var class="varname">pos</var></dt>     <dd>      <p class="para">       The starting position (0-based) in the tokenized string (the number of bytes).      </p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link PhpToken::__construct} — Returns a new PhpToken object</li><li>{@link PhpToken::getTokenName} — Returns the name of the token.</li><li>{@link PhpToken::is} — Tells whether the token is of given kind.</li><li>{@link PhpToken::isIgnorable} — Tells whether the token would be ignored by the PHP parser.</li><li>{@link PhpToken::__toString} — Returns the textual content of the token.</li><li>{@link PhpToken::tokenize} — Splits given source into PHP tokens, represented by PhpToken objects.</li></ul></div>
*/
class PhpToken implements Stringable
{
    /**
     * One of the T_* constants, or an integer < 256 representing a
     * single-char token.
     */
    public int $id;

    /**
     * The textual content of the token.
     */
    public string $text;

    /**
     * The starting line number (1-based) of the token.
     */
    public int $line;

    /**
     * The starting position (0-based) in the tokenized string.
     */
    public int $pos;

    /**
     * @param int $id An integer identifier
     * @param string $text Textual content
     * @param int $line Strating line
     * @param int $pos Straring position (line offset)
     */
    final public function __construct(int $id, string $text, int $line = -1, int $pos = -1) {}

/**
*<div id="phptoken.gettokenname" class="refentry"> <div class="refnamediv">  <h1 class="refname">PhpToken::getTokenName</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">PhpToken::getTokenName</span> &mdash; <span class="dc-title">Returns the name of the token.</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-phptoken.gettokenname-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>PhpToken::getTokenName</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766">string</span></span></div>  <p class="para rdfs-comment">   Returns the name of the token.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-phptoken.gettokenname-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-phptoken.gettokenname-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An ASCII character for single-char tokens,   or one of T_* constant names for known tokens (see <a href="https://www.php.net/manual/zh/tokens.php" class="xref">解析器记号（token）列表</a>),   or <strong><span>null</span></strong> for unknown tokens.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-phptoken.gettokenname-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">PhpToken::getTokenName()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// known token<br /></span><span style="color: #9876AA">$token </span><span style="color: #007700">= new </span><span style="color: #9876AA">PhpToken</span><span style="color: #007700">(</span><span style="color: #9876AA">T_ECHO</span><span style="color: #007700">, </span><span style="color: #DD0000">'echo'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$token</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTokenName</span><span style="color: #007700">());   </span><span style="color: #FF8000">// -&gt; string(6) "T_ECHO"<br /><br />// single-char token<br /></span><span style="color: #9876AA">$token </span><span style="color: #007700">= new </span><span style="color: #9876AA">PhpToken</span><span style="color: #007700">(</span><span style="color: #9876AA">ord</span><span style="color: #007700">(</span><span style="color: #DD0000">';'</span><span style="color: #007700">), </span><span style="color: #DD0000">';'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$token</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTokenName</span><span style="color: #007700">());   </span><span style="color: #FF8000">// -&gt; string(1) ";"<br /><br />// unknown token<br /></span><span style="color: #9876AA">$token </span><span style="color: #007700">= new </span><span style="color: #9876AA">PhpToken</span><span style="color: #007700">(</span><span style="color: #9876AA">10000 </span><span style="color: #007700">, </span><span style="color: #DD0000">"\0"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$token</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTokenName</span><span style="color: #007700">());   </span><span style="color: #FF8000">// -&gt; NULL</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-phptoken.gettokenname-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="function">{@link PhpToken::tokenize()} - Splits given source into PHP tokens, represented by PhpToken objects.</span></li>   <li class="member"><span class="function">{@link token_name()} - 获取提供的 PHP 解析器代号的符号名称</span></li>  </ul> </div></div>
     * @return string|null*/
    public function getTokenName(): ?string {}

/**
*<div id="phptoken.tokenize" class="refentry"> <div class="refnamediv">  <h1 class="refname">PhpToken::tokenize</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">PhpToken::tokenize</span> &mdash; <span class="dc-title">Splits given source into PHP tokens, represented by PhpToken objects.</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-phptoken.tokenize-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>PhpToken::tokenize</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$code</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns an array of PhpToken objects representing given <span class="parameter" style="color:#3A95FF">code</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-phptoken.tokenize-parameters">  <h3 class="title">参数</h3>  <dl>        <dt><span class="parameter" style="color:#3A95FF">code</span></dt>     <dd>      <span>       The PHP source to parse.      </span>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       Valid flags:       <ul class="itemizedlist">        <li class="listitem">         <span class="simpara">          <strong><span>TOKEN_PARSE</span></strong> - Recognises the ability to use          reserved words in specific contexts.         </span>        </li>       </ul>      </p>     </dd>      </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-phptoken.tokenize-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An array of PHP tokens represented by instances of PhpToken or its descendants.   This method returns <span class="type" style="color:#EAB766"><span class="type static[]" style="color:#EAB766">static[]</span></span> so that PhpToken can be seamlessly extended.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-phptoken.tokenize-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">PhpToken::tokenize()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$tokens </span><span style="color: #007700">= </span><span style="color: #9876AA">PhpToken</span><span style="color: #007700">::</span><span style="color: #9876AA">tokenize</span><span style="color: #007700">(</span><span style="color: #DD0000">'&lt;?php echo; ?&gt;'</span><span style="color: #007700">);<br /><br />foreach (</span><span style="color: #9876AA">$tokens </span><span style="color: #007700">as </span><span style="color: #9876AA">$token</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"Line </span><span style="color: #007700">{</span><span style="color: #9876AA">$token</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">}</span><span style="color: #DD0000">: </span><span style="color: #007700">{</span><span style="color: #9876AA">$token</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getTokenName</span><span style="color: #007700">()}</span><span style="color: #DD0000"> ('</span><span style="color: #007700">{</span><span style="color: #9876AA">$token</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">text</span><span style="color: #007700">}</span><span style="color: #DD0000">')"</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />}</span></span></span></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Line 1: T_OPEN_TAG (&#039;&lt;?php &#039;)<br>Line 1: T_ECHO (&#039;echo&#039;)<br>Line 1: ; (&#039;;&#039;)<br>Line 1: T_WHITESPACE (&#039; &#039;)<br>Line 1: T_CLOSE_TAG (&#039;?&gt;&#039;)<br></span></div>   </div>  </div>  <div class="example" id="">   <p><strong>示例 #2 Extending PhpToken</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">class </span><span style="color: #9876AA">MyPhpToken </span><span style="color: #007700">extends </span><span style="color: #9876AA">PhpToken </span><span style="color: #007700">{<br />    public function </span><span style="color: #9876AA">getUpperText</span><span style="color: #007700">() {<br />        return </span><span style="color: #9876AA">strtoupper</span><span style="color: #007700">(</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">text</span><span style="color: #007700">);<br />    }<br />}<br /><br /></span><span style="color: #9876AA">$tokens </span><span style="color: #007700">= </span><span style="color: #9876AA">MyPhpToken</span><span style="color: #007700">::</span><span style="color: #9876AA">tokenize</span><span style="color: #007700">(</span><span style="color: #DD0000">'&lt;?php echo; ?&gt;'</span><span style="color: #007700">);<br />echo </span><span style="color: #DD0000">"'</span><span style="color: #007700">{</span><span style="color: #9876AA">$tokens</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]-&gt;</span><span style="color: #9876AA">getUpperText</span><span style="color: #007700">()}</span><span style="color: #DD0000">'"</span><span style="color: #007700">;</span></span></span></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>&#039;&lt;?PHP &#039;<br></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-phptoken.tokenize-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="function">{@link token_get_all()} - 将提供的源码按 PHP 标记进行分割</span></li>  </ul> </div></div>
     * @return static[]*/
    public static function tokenize(string $code, int $flags = 0): array {}

/**
*<div id="phptoken.is" class="refentry"> <div class="refnamediv">  <h1 class="refname">PhpToken::is</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">PhpToken::is</span> &mdash; <span class="dc-title">Tells whether the token is of given kind.</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-phptoken.is-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>PhpToken::is</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">array</span></span> <span class="parameter" style="color:#3A95FF">$kind</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Tells whether the token is of given <span class="parameter" style="color:#3A95FF">kind</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-phptoken.is-parameters">  <h3 class="title">参数</h3>  <dl>        <dt><span class="parameter" style="color:#3A95FF">kind</span></dt>     <dd>      <span>       Either a single value to match the token&#039;s id or textual content, or an array thereof.      </span>     </dd>      </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-phptoken.is-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A boolean value whether the token is of given kind.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-phptoken.is-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">PhpToken::is()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$token </span><span style="color: #007700">= new </span><span style="color: #9876AA">PhpToken</span><span style="color: #007700">(</span><span style="color: #9876AA">T_ECHO</span><span style="color: #007700">, </span><span style="color: #DD0000">'echo'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$token</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">is</span><span style="color: #007700">(</span><span style="color: #9876AA">T_ECHO</span><span style="color: #007700">));        </span><span style="color: #FF8000">// -&gt; bool(true)<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$token</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">is</span><span style="color: #007700">(</span><span style="color: #DD0000">'echo'</span><span style="color: #007700">));        </span><span style="color: #FF8000">// -&gt; bool(true)<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$token</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">is</span><span style="color: #007700">(</span><span style="color: #9876AA">T_FOREACH</span><span style="color: #007700">));     </span><span style="color: #FF8000">// -&gt; bool(false)<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$token</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">is</span><span style="color: #007700">(</span><span style="color: #DD0000">'foreach'</span><span style="color: #007700">));     </span><span style="color: #FF8000">// -&gt; bool(false)</span></span></span></div>   </div>  </div>  <div class="example" id="">   <p><strong>示例 #2 Usage with array</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">isClassType</span><span style="color: #007700">(</span><span style="color: #9876AA">PhpToken $token</span><span style="color: #007700">): </span><span style="color: #9876AA">bool </span><span style="color: #007700">{<br />    return </span><span style="color: #9876AA">$token</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">is</span><span style="color: #007700">([</span><span style="color: #9876AA">T_CLASS</span><span style="color: #007700">, </span><span style="color: #9876AA">T_INTERFACE</span><span style="color: #007700">, </span><span style="color: #9876AA">T_TRAIT</span><span style="color: #007700">]);<br />}<br /><br /></span><span style="color: #9876AA">$interface </span><span style="color: #007700">= new </span><span style="color: #9876AA">PhpToken</span><span style="color: #007700">(</span><span style="color: #9876AA">T_INTERFACE</span><span style="color: #007700">, </span><span style="color: #DD0000">'interface'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">isClassType</span><span style="color: #007700">(</span><span style="color: #9876AA">$interface</span><span style="color: #007700">));   </span><span style="color: #FF8000">// -&gt; bool(true)<br /><br /></span><span style="color: #9876AA">$function </span><span style="color: #007700">= new </span><span style="color: #9876AA">PhpToken</span><span style="color: #007700">(</span><span style="color: #9876AA">T_FUNCTION</span><span style="color: #007700">, </span><span style="color: #DD0000">'function'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">isClassType</span><span style="color: #007700">(</span><span style="color: #9876AA">$function</span><span style="color: #007700">));    </span><span style="color: #FF8000">// -&gt; bool(false)</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-phptoken.is-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="function">{@link token_name()} - 获取提供的 PHP 解析器代号的符号名称</span></li>  </ul> </div></div>
     * @return bool*/
    public function is($kind): bool {}

/**
*<div id="phptoken.isignorable" class="refentry"> <div class="refnamediv">  <h1 class="refname">PhpToken::isIgnorable</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">PhpToken::isIgnorable</span> &mdash; <span class="dc-title">Tells whether the token would be ignored by the PHP parser.</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-phptoken.isignorable-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>PhpToken::isIgnorable</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Tells whether the token would be ignored by the PHP parser.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-phptoken.isignorable-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-phptoken.isignorable-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A boolean value whether the token would be ignored by the PHP parser (such as whitespace or comments).  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-phptoken.isignorable-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">PhpToken::isIgnorable()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$echo </span><span style="color: #007700">= new </span><span style="color: #9876AA">PhpToken</span><span style="color: #007700">(</span><span style="color: #9876AA">T_ECHO</span><span style="color: #007700">, </span><span style="color: #DD0000">'echo'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$echo</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isIgnorable</span><span style="color: #007700">());   </span><span style="color: #FF8000">// -&gt; bool(false)<br /><br /></span><span style="color: #9876AA">$space </span><span style="color: #007700">= new </span><span style="color: #9876AA">PhpToken</span><span style="color: #007700">(</span><span style="color: #9876AA">T_WHITESPACE</span><span style="color: #007700">, </span><span style="color: #DD0000">' '</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$space</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isIgnorable</span><span style="color: #007700">());  </span><span style="color: #FF8000">// -&gt; bool(true)</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-phptoken.isignorable-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="function">{@link PhpToken::tokenize()} - Splits given source into PHP tokens, represented by PhpToken objects.</span></li>  </ul> </div></div>
     * @return bool*/
    public function isIgnorable(): bool {}

    /**
     * {@inheritDoc}
     */
    public function __toString(): string {}
}
