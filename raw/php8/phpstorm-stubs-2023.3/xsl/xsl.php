<?php

// Start of xsl v.0.1

/**
*<div id="class.xsltprocessor" class="reference"> <h1 class="title">The XSLTProcessor class</h1>   <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>   <div class="section" id="xsltprocessor.intro">   <h2 class="title">简介</h2>   <p class="para">       </p>  </div>   <div class="section" id="xsltprocessor.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">XSLTProcessor</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/xsltprocessor.getparameter.php" class="methodname" style="color:#CC7832">getParameter</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/xsltprocessor.getsecurityprefs.php" class="methodname" style="color:#CC7832">getSecurityPrefs</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/xsltprocessor.hasexsltsupport.php" class="methodname" style="color:#CC7832">hasExsltSupport</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/xsltprocessor.importstylesheet.php" class="methodname" style="color:#CC7832">importStylesheet</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#3A95FF">$stylesheet</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/xsltprocessor.registerphpfunctions.php" class="methodname" style="color:#CC7832">registerPHPFunctions</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">null</span></span> <span class="parameter" style="color:#3A95FF">$functions</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/xsltprocessor.removeparameter.php" class="methodname" style="color:#CC7832">removeParameter</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/xsltprocessor.setparameter.php" class="methodname" style="color:#CC7832">setParameter</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/xsltprocessor.setparameter.php" class="methodname" style="color:#CC7832">setParameter</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$options</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/xsltprocessor.setprofiling.php" class="methodname" style="color:#CC7832">setProfiling</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766"><span class="type true" style="color:#EAB766">true</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/xsltprocessor.setsecurityprefs.php" class="methodname" style="color:#CC7832">setSecurityPrefs</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$preferences</span></span>): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/xsltprocessor.transformtodoc.php" class="methodname" style="color:#CC7832">transformToDoc</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#3A95FF">$document</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$returnClass</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">object</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/xsltprocessor.transformtouri.php" class="methodname" style="color:#CC7832">transformToUri</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#3A95FF">$document</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$uri</span></span>): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/xsltprocessor.transformtoxml.php" class="methodname" style="color:#CC7832">transformToXml</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#3A95FF">$document</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">null</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>   }</div>   </div>  </div>   <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link XSLTProcessor::__construct} — Creates a new XSLTProcessor object</li><li>{@link XSLTProcessor::getParameter} — Get value of a parameter</li><li>{@link XSLTProcessor::getSecurityPrefs} — Get security preferences</li><li>{@link XSLTProcessor::hasExsltSupport} — Determine if PHP has EXSLT support</li><li>{@link XSLTProcessor::importStylesheet} — Import stylesheet</li><li>{@link XSLTProcessor::registerPHPFunctions} — Enables the ability to use PHP functions as XSLT functions</li><li>{@link XSLTProcessor::removeParameter} — Remove parameter</li><li>{@link XSLTProcessor::setParameter} — Set value for a parameter</li><li>{@link XSLTProcessor::setProfiling} — Sets profiling output file</li><li>{@link XSLTProcessor::setSecurityPrefs} — Set security preferences</li><li>{@link XSLTProcessor::transformToDoc} — Transform to a document</li><li>{@link XSLTProcessor::transformToUri} — Transform to URI</li><li>{@link XSLTProcessor::transformToXml} — Transform to XML</li></ul></div>
*/
class XSLTProcessor
{
/**
*<div id="xsltprocessor.importstylesheet" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::importStylesheet</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::importStylesheet</span> &mdash; <span class="dc-title">Import stylesheet</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-xsltprocessor.importstylesheet-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::importStylesheet</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#3A95FF">$stylesheet</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   This method imports the stylesheet into the    <span class="classname"><a href="https://www.php.net/manual/zh/class.xsltprocessor.php" class="classname">XSLTProcessor</a></span> for transformations.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-xsltprocessor.importstylesheet-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stylesheet</span></dt>     <dd>      <p class="para">       The imported style sheet as a <span class="classname"><a href="https://www.php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span> or       <span class="classname"><a href="https://www.php.net/manual/zh/class.simplexmlelement.php" class="classname">SimpleXMLElement</a></span> object.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-xsltprocessor.importstylesheet-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
    public function importStylesheet($stylesheet) {}

/**
*<div id="xsltprocessor.transformtodoc" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::transformToDoc</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::transformToDoc</span> &mdash; <span class="dc-title">Transform to a document</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-xsltprocessor.transformtodoc-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::transformToDoc</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#3A95FF">$document</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$returnClass</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">object</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   Transforms the source node to a document (e.g. <span class="classname"><a href="https://www.php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span>) applying   the stylesheet given by the   <span class="function">{@link XSLTProcessor::importStylesheet()}</span> method.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-xsltprocessor.transformtodoc-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">document</span></dt>     <dd>      <p class="para">       The <span class="classname"><a href="https://www.php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span> or <span class="classname"><a href="https://www.php.net/manual/zh/class.simplexmlelement.php" class="classname">SimpleXMLElement</a></span> or libxml-compatible       object to be transformed.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">returnClass</span></dt>     <dd>      <p class="para">       This optional parameter may be used so that       <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::transformToDoc()</strong></span>       will return an object of the specified class.       That class should either extend or be the same class as <span class="parameter" style="color:#3A95FF">document</span>&#039;s class.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-xsltprocessor.transformtodoc-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The resulting document or <strong><span>false</span></strong> on error.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-xsltprocessor.transformtodoc-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Transforming to a DOMDocument</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// Load the XML source<br /></span><span style="color: #9876AA">$xml </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$xml</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xml'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$xsl </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$xsl</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xsl'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Configure the transformer<br /></span><span style="color: #9876AA">$proc </span><span style="color: #007700">= new </span><span style="color: #9876AA">XSLTProcessor</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importStyleSheet</span><span style="color: #007700">(</span><span style="color: #9876AA">$xsl</span><span style="color: #007700">); </span><span style="color: #FF8000">// attach the xsl rules<br /><br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">trim</span><span style="color: #007700">(</span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transformToDoc</span><span style="color: #007700">(</span><span style="color: #9876AA">$xml</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">firstChild</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">wholeText</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Hey! Welcome to Nicolas Eliaszewicz&#039;s sweet CD collection!<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-xsltprocessor.transformtodoc-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link XSLTProcessor::transformToUri()} - Transform to URI</span></li>    <li class="member"><span class="function">{@link XSLTProcessor::transformToXml()} - Transform to XML</span></li>   </ul>  </span> </div></div>
     * @return DOMDocument|false The resulting <b>DOMDocument</b> or <b>FALSE</b> on error.*/
    public function transformToDoc(DOMNode $doc) {}

/**
*<div id="xsltprocessor.transformtouri" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::transformToUri</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::transformToUri</span> &mdash; <span class="dc-title">Transform to URI</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-xsltprocessor.transformtouri-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::transformToUri</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#3A95FF">$document</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$uri</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Transforms the source node to an URI applying the stylesheet given by the   <span class="function">{@link XSLTProcessor::importStylesheet()}</span> method.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-xsltprocessor.transformtouri-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">document</span></dt>     <dd>      <p class="para">       The <span class="classname"><a href="https://www.php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span> or <span class="classname"><a href="https://www.php.net/manual/zh/class.simplexmlelement.php" class="classname">SimpleXMLElement</a></span> object to       be transformed.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">uri</span></dt>     <dd>      <p class="para">        The target URI for the transformation.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-xsltprocessor.transformtouri-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the number of bytes written or <strong><span>false</span></strong> if an error occurred.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-xsltprocessor.transformtouri-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Transforming to a HTML file</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// Load the XML source<br /></span><span style="color: #9876AA">$xml </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$xml</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xml'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$xsl </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$xsl</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xsl'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Configure the transformer<br /></span><span style="color: #9876AA">$proc </span><span style="color: #007700">= new </span><span style="color: #9876AA">XSLTProcessor</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importStyleSheet</span><span style="color: #007700">(</span><span style="color: #9876AA">$xsl</span><span style="color: #007700">); </span><span style="color: #FF8000">// attach the xsl rules<br /><br /></span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transformToURI</span><span style="color: #007700">(</span><span style="color: #9876AA">$xml</span><span style="color: #007700">, </span><span style="color: #DD0000">'file:///tmp/out.html'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-xsltprocessor.transformtouri-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link XSLTProcessor::transformToDoc()} - Transform to a document</span></li>    <li class="member"><span class="function">{@link XSLTProcessor::transformToXml()} - Transform to XML</span></li>   </ul>  </span> </div></div>
     * @return int|false the number of bytes written or <b>FALSE</b> if an error occurred.*/
    public function transformToUri($doc, $uri) {}

/**
*<div id="xsltprocessor.transformtoxml" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::transformToXml</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::transformToXml</span> &mdash; <span class="dc-title">Transform to XML</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-xsltprocessor.transformtoxml-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::transformToXml</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#3A95FF">$document</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">null</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   Transforms the source node to a string applying the stylesheet given by   the <span class="function">{@link xsltprocessor::importStylesheet()}</span> method.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-xsltprocessor.transformtoxml-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">document</span></dt>     <dd>      <p class="para">       The <span class="classname"><a href="https://www.php.net/manual/zh/class.domdocument.php" class="classname">DOMDocument</a></span> or <span class="classname"><a href="https://www.php.net/manual/zh/class.simplexmlelement.php" class="classname">SimpleXMLElement</a></span> object to       be transformed.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-xsltprocessor.transformtoxml-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The result of the transformation as a string or <strong><span>false</span></strong> on error.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-xsltprocessor.transformtoxml-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Transforming to a string</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// Load the XML source<br /></span><span style="color: #9876AA">$xml </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$xml</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xml'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$xsl </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$xsl</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xsl'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Configure the transformer<br /></span><span style="color: #9876AA">$proc </span><span style="color: #007700">= new </span><span style="color: #9876AA">XSLTProcessor</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importStyleSheet</span><span style="color: #007700">(</span><span style="color: #9876AA">$xsl</span><span style="color: #007700">); </span><span style="color: #FF8000">// attach the xsl rules<br /><br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transformToXML</span><span style="color: #007700">(</span><span style="color: #9876AA">$xml</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Hey! Welcome to Nicolas Eliaszewicz&#039;s sweet CD collection!<br><br>&lt;h1&gt;Fight for your mind&lt;/h1&gt;&lt;h2&gt;by Ben Harper - 1995&lt;/h2&gt;&lt;hr&gt;<br>&lt;h1&gt;Electric Ladyland&lt;/h1&gt;&lt;h2&gt;by Jimi Hendrix - 1997&lt;/h2&gt;&lt;hr&gt;<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-xsltprocessor.transformtoxml-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link XSLTProcessor::transformToDoc()} - Transform to a document</span></li>    <li class="member"><span class="function">{@link XSLTProcessor::transformToUri()} - Transform to URI</span></li>   </ul>  </span> </div></div>
     * @return string|false|null The result of the transformation as a string or <b>FALSE</b> on error.*/
    public function transformToXml($doc) {}

/**
*<div id="xsltprocessor.setparameter" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::setParameter</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::setParameter</span> &mdash; <span class="dc-title">Set value for a parameter</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-xsltprocessor.setparameter-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::setParameter</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::setParameter</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$options</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the value of one or more parameters to be used in subsequent    transformations with <span class="classname"><a href="https://www.php.net/manual/zh/class.xsltprocessor.php" class="classname">XSLTProcessor</a></span>. If the    parameter doesn&#039;t exist in the stylesheet it will be ignored.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-xsltprocessor.setparameter-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI of the XSLT parameter.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">       The local name of the XSLT parameter.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       The new value of the XSLT parameter.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       An array of  <span>name =&gt; value</span> pairs.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-xsltprocessor.setparameter-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-xsltprocessor.setparameter-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Changing the owner before the transformation</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$collections </span><span style="color: #007700">= array(<br />    </span><span style="color: #DD0000">'Marc Rutkowski' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'marc'</span><span style="color: #007700">,<br />    </span><span style="color: #DD0000">'Olivier Parmentier' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'olivier'<br /></span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$xsl </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$xsl</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xsl'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Configure the transformer<br /></span><span style="color: #9876AA">$proc </span><span style="color: #007700">= new </span><span style="color: #9876AA">XSLTProcessor</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importStyleSheet</span><span style="color: #007700">(</span><span style="color: #9876AA">$xsl</span><span style="color: #007700">); </span><span style="color: #FF8000">// attach the xsl rules<br /><br /></span><span style="color: #007700">foreach (</span><span style="color: #9876AA">$collections </span><span style="color: #007700">as </span><span style="color: #9876AA">$name </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$file</span><span style="color: #007700">) {<br />    </span><span style="color: #FF8000">// Load the XML source<br />    </span><span style="color: #9876AA">$xml </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$xml</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection_' </span><span style="color: #007700">. </span><span style="color: #9876AA">$file </span><span style="color: #007700">. </span><span style="color: #DD0000">'.xml'</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setParameter</span><span style="color: #007700">(</span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #DD0000">'owner'</span><span style="color: #007700">, </span><span style="color: #9876AA">$name</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transformToURI</span><span style="color: #007700">(</span><span style="color: #9876AA">$xml</span><span style="color: #007700">, </span><span style="color: #DD0000">'file:///tmp/' </span><span style="color: #007700">. </span><span style="color: #9876AA">$file </span><span style="color: #007700">. </span><span style="color: #DD0000">'.html'</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-xsltprocessor.setparameter-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link XSLTProcessor::getParameter()} - Get value of a parameter</span></li>    <li class="member"><span class="function">{@link XSLTProcessor::removeParameter()} - Remove parameter</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
    public function setParameter($namespace, $options) {}

/**
*<div id="xsltprocessor.setparameter" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::setParameter</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::setParameter</span> &mdash; <span class="dc-title">Set value for a parameter</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-xsltprocessor.setparameter-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::setParameter</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::setParameter</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$options</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the value of one or more parameters to be used in subsequent    transformations with <span class="classname"><a href="https://www.php.net/manual/zh/class.xsltprocessor.php" class="classname">XSLTProcessor</a></span>. If the    parameter doesn&#039;t exist in the stylesheet it will be ignored.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-xsltprocessor.setparameter-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI of the XSLT parameter.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">       The local name of the XSLT parameter.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       The new value of the XSLT parameter.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       An array of  <span>name =&gt; value</span> pairs.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-xsltprocessor.setparameter-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-xsltprocessor.setparameter-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Changing the owner before the transformation</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$collections </span><span style="color: #007700">= array(<br />    </span><span style="color: #DD0000">'Marc Rutkowski' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'marc'</span><span style="color: #007700">,<br />    </span><span style="color: #DD0000">'Olivier Parmentier' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'olivier'<br /></span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$xsl </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$xsl</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xsl'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Configure the transformer<br /></span><span style="color: #9876AA">$proc </span><span style="color: #007700">= new </span><span style="color: #9876AA">XSLTProcessor</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importStyleSheet</span><span style="color: #007700">(</span><span style="color: #9876AA">$xsl</span><span style="color: #007700">); </span><span style="color: #FF8000">// attach the xsl rules<br /><br /></span><span style="color: #007700">foreach (</span><span style="color: #9876AA">$collections </span><span style="color: #007700">as </span><span style="color: #9876AA">$name </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$file</span><span style="color: #007700">) {<br />    </span><span style="color: #FF8000">// Load the XML source<br />    </span><span style="color: #9876AA">$xml </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$xml</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection_' </span><span style="color: #007700">. </span><span style="color: #9876AA">$file </span><span style="color: #007700">. </span><span style="color: #DD0000">'.xml'</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setParameter</span><span style="color: #007700">(</span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #DD0000">'owner'</span><span style="color: #007700">, </span><span style="color: #9876AA">$name</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transformToURI</span><span style="color: #007700">(</span><span style="color: #9876AA">$xml</span><span style="color: #007700">, </span><span style="color: #DD0000">'file:///tmp/' </span><span style="color: #007700">. </span><span style="color: #9876AA">$file </span><span style="color: #007700">. </span><span style="color: #DD0000">'.html'</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-xsltprocessor.setparameter-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link XSLTProcessor::getParameter()} - Get value of a parameter</span></li>    <li class="member"><span class="function">{@link XSLTProcessor::removeParameter()} - Remove parameter</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
    public function setParameter($namespace, $name, $value) {}

/**
*<div id="xsltprocessor.getparameter" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::getParameter</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::getParameter</span> &mdash; <span class="dc-title">Get value of a parameter</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-xsltprocessor.getparameter-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::getParameter</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   Gets a parameter if previously set by   <span class="function">{@link XSLTProcessor::setParameter()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-xsltprocessor.getparameter-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI of the XSLT parameter.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">       The local name of the XSLT parameter.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-xsltprocessor.getparameter-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The value of the parameter (as a string), or <strong><span>false</span></strong> if it&#039;s not set.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-xsltprocessor.getparameter-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link XSLTProcessor::setParameter()} - Set value for a parameter</span></li>    <li class="member"><span class="function">{@link XSLTProcessor::removeParameter()} - Remove parameter</span></li>   </ul>  </span> </div></div>
     * @return string|false The value of the parameter (as a string), or <b>FALSE</b> if it's not set.*/
    public function getParameter($namespaceURI, $localName) {}

/**
*<div id="xsltprocessor.removeparameter" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::removeParameter</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::removeParameter</span> &mdash; <span class="dc-title">Remove parameter</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-xsltprocessor.removeparameter-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::removeParameter</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$namespace</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Removes a parameter, if set. This will make the processor use the   default value for the parameter as specified in the stylesheet.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-xsltprocessor.removeparameter-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">namespace</span></dt>     <dd>      <p class="para">       The namespace URI of the XSLT parameter.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">       The local name of the XSLT parameter.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-xsltprocessor.removeparameter-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-xsltprocessor.removeparameter-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link XSLTProcessor::setParameter()} - Set value for a parameter</span></li>    <li class="member"><span class="function">{@link XSLTProcessor::getParameter()} - Get value of a parameter</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
    public function removeParameter($namespaceURI, $localName) {}

/**
*<div id="xsltprocessor.hasexsltsupport" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::hasExsltSupport</h1>  <p class="verinfo">(PHP 5 &gt;= 5.0.4, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::hasExsltSupport</span> &mdash; <span class="dc-title">Determine if PHP has EXSLT support</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-xsltprocessor.hasexsltsupport-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::hasExsltSupport</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   This method determines if PHP was built with the <a href="http://xmlsoft.org/XSLT/EXSLT/index.html" class="link external">&raquo;&nbsp;EXSLT library</a>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-xsltprocessor.hasexsltsupport-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-xsltprocessor.hasexsltsupport-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-xsltprocessor.hasexsltsupport-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Testing EXSLT support</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$proc </span><span style="color: #007700">= new </span><span style="color: #9876AA">XSLTProcessor</span><span style="color: #007700">;<br />if (!</span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">hasExsltSupport</span><span style="color: #007700">()) {<br />    die(</span><span style="color: #DD0000">'EXSLT support not available'</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">// do EXSLT stuff here ..<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>           </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
    public function hasExsltSupport() {}

/**
*<div id="xsltprocessor.registerphpfunctions" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::registerPHPFunctions</h1>  <p class="verinfo">(PHP 5 &gt;= 5.0.4, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::registerPHPFunctions</span> &mdash; <span class="dc-title">Enables the ability to use PHP functions as XSLT functions</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-xsltprocessor.registerphpfunctions-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::registerPHPFunctions</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">null</span></span> <span class="parameter" style="color:#3A95FF">$functions</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   This method enables the ability to use PHP functions as XSLT functions   within XSL stylesheets.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-xsltprocessor.registerphpfunctions-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">functions</span></dt>     <dd>      <p class="para">       Use this parameter to only allow certain functions to be called from        XSLT.      </p>      <p class="para">       This parameter can be either a string (a function name) or an array of       functions.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-xsltprocessor.registerphpfunctions-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-xsltprocessor.registerphpfunctions-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Simple PHP Function call from a stylesheet</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$xml </span><span style="color: #007700">= &lt;&lt;&lt;EOB<br /></span><span style="color: #DD0000">&lt;allusers&gt;<br /> &lt;user&gt;<br />  &lt;uid&gt;bob&lt;/uid&gt;<br /> &lt;/user&gt;<br /> &lt;user&gt;<br />  &lt;uid&gt;joe&lt;/uid&gt;<br /> &lt;/user&gt;<br />&lt;/allusers&gt;<br /></span><span style="color: #007700">EOB;<br /></span><span style="color: #9876AA">$xsl </span><span style="color: #007700">= &lt;&lt;&lt;EOB<br /></span><span style="color: #DD0000">&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br />&lt;xsl:stylesheet version="1.0" <br />     xmlns:xsl="http://www.w3.org/1999/XSL/Transform"<br />     xmlns:php="http://php.net/xsl"&gt;<br />&lt;xsl:output method="html" encoding="utf-8" indent="yes"/&gt;<br /> &lt;xsl:template match="allusers"&gt;<br />  &lt;html&gt;&lt;body&gt;<br />    &lt;h2&gt;Users&lt;/h2&gt;<br />    &lt;table&gt;<br />    &lt;xsl:for-each select="user"&gt;<br />      &lt;tr&gt;&lt;td&gt;<br />        &lt;xsl:value-of<br />             select="php:function('ucfirst',string(uid))"/&gt;<br />      &lt;/td&gt;&lt;/tr&gt;<br />    &lt;/xsl:for-each&gt;<br />    &lt;/table&gt;<br />  &lt;/body&gt;&lt;/html&gt;<br /> &lt;/xsl:template&gt;<br />&lt;/xsl:stylesheet&gt;<br /></span><span style="color: #007700">EOB;<br /></span><span style="color: #9876AA">$xmldoc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$xmldoc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #9876AA">$xml</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$xsldoc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$xsldoc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #9876AA">$xsl</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$proc </span><span style="color: #007700">= new </span><span style="color: #9876AA">XSLTProcessor</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">registerPHPFunctions</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importStyleSheet</span><span style="color: #007700">(</span><span style="color: #9876AA">$xsldoc</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transformToXML</span><span style="color: #007700">(</span><span style="color: #9876AA">$xmldoc</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div></div>    </div>  </span> </div></div>
     * @return void No value is returned.*/
    public function registerPHPFunctions($restrict = null) {}

/**
*<div id="xsltprocessor.setprofiling" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::setProfiling</h1>  <p class="verinfo">(PHP &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::setProfiling</span> &mdash; <span class="dc-title">Sets profiling output file</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-xsltprocessor.setprofiling-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::setProfiling</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766"><span class="type true" style="color:#EAB766">true</span></span></div>  <p class="para rdfs-comment">   Sets the file to output profiling information when processing    a stylesheet.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-xsltprocessor.setprofiling-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       Path to the file to dump profiling information.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-xsltprocessor.setprofiling-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-xsltprocessor.setprofiling-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Example profiling output</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Load the XML source<br /></span><span style="color: #9876AA">$xml </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$xml</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xml'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$xsl </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$xsl</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'collection.xsl'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Configure the transformer<br /></span><span style="color: #9876AA">$proc </span><span style="color: #007700">= new </span><span style="color: #9876AA">XSLTProcessor</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setProfiling</span><span style="color: #007700">(</span><span style="color: #DD0000">'profiling.txt'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importStyleSheet</span><span style="color: #007700">(</span><span style="color: #9876AA">$xsl</span><span style="color: #007700">); </span><span style="color: #FF8000">// attach the xsl rules<br /><br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">trim</span><span style="color: #007700">(</span><span style="color: #9876AA">$proc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transformToDoc</span><span style="color: #007700">(</span><span style="color: #9876AA">$xml</span><span style="color: #007700">)-&gt;</span><span style="color: #9876AA">firstChild</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">wholeText</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>     The above code will produce the following information      in the profiling file:    </p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>number               match                name      mode  Calls Tot 100us Avg<br><br>    0                   cd                                    2      3      1<br>    1           collection                                    1      1      1<br><br>                         Total                                3      4<br><br></span></div>    </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
    public function setProfiling($filename) {}

/**
*<div id="xsltprocessor.setsecurityprefs" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::setSecurityPrefs</h1>  <p class="verinfo">(PHP &gt;= 5.4.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::setSecurityPrefs</span> &mdash; <span class="dc-title">Set security preferences</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-xsltprocessor.setsecurityprefs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::setSecurityPrefs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$preferences</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Sets the security preferences.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-xsltprocessor.setsecurityprefs-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">preferences</span></dt>     <dd>      <p class="para">       The new security preferences. The following constants can be ORed:       <strong><span>XSL_SECPREF_READ_FILE</span></strong>,       <strong><span>XSL_SECPREF_WRITE_FILE</span></strong>,       <strong><span>XSL_SECPREF_CREATE_DIRECTORY</span></strong>,       <strong><span>XSL_SECPREF_READ_NETWORK</span></strong>,       <strong><span>XSL_SECPREF_WRITE_NETWORK</span></strong>. Alternatively,       <strong><span>XSL_SECPREF_NONE</span></strong> or       <strong><span>XSL_SECPREF_DEFAULT</span></strong> can be passed.      </p>     </dd>       </dl>   </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-xsltprocessor.setsecurityprefs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the old security preferences.  </p> </div></div>
     * @return int*/
    public function setSecurityPrefs($securityPrefs) {}

/**
*<div id="xsltprocessor.getsecurityprefs" class="refentry"> <div class="refnamediv">  <h1 class="refname">XSLTProcessor::getSecurityPrefs</h1>  <p class="verinfo">(PHP &gt;= 5.4.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">XSLTProcessor::getSecurityPrefs</span> &mdash; <span class="dc-title">Get security preferences</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-xsltprocessor.getsecurityprefs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>XSLTProcessor::getSecurityPrefs</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the security preferences.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-xsltprocessor.getsecurityprefs-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-xsltprocessor.getsecurityprefs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A bitmask consisting of <strong><span>XSL_SECPREF_READ_FILE</span></strong>,   <strong><span>XSL_SECPREF_WRITE_FILE</span></strong>,   <strong><span>XSL_SECPREF_CREATE_DIRECTORY</span></strong>,   <strong><span>XSL_SECPREF_READ_NETWORK</span></strong>,   <strong><span>XSL_SECPREF_WRITE_NETWORK</span></strong>.  </p> </div></div>
     * @return int*/
    public function getSecurityPrefs() {}
}
define('XSL_CLONE_AUTO', 0);
define('XSL_CLONE_NEVER', -1);
define('XSL_CLONE_ALWAYS', 1);

/**
*Deactivate all security restrictions.     
*/
define('XSL_SECPREF_NONE', 0);
/**
*      Disallows reading files.     
*/
define('XSL_SECPREF_READ_FILE', 2);
/**
*      Disallows writing files.     
*/
define('XSL_SECPREF_WRITE_FILE', 4);
/**
*      Disallows creating directories.     
*/
define('XSL_SECPREF_CREATE_DIRECTORY', 8);
/**
*      Disallows reading network files.     
*/
define('XSL_SECPREF_READ_NETWORK', 16);
/**
*      Disallows writing network files.     
*/
define('XSL_SECPREF_WRITE_NETWORK', 32);
/**
*      Disallows all write access, i.e. a bitmask of      <strong><code>XSL_SECPREF_WRITE_NETWORK</code></strong> |      <strong><code>XSL_SECPREF_CREATE_DIRECTORY</code></strong> |      <strong><code>XSL_SECPREF_WRITE_FILE</code></strong>.     
*/
define('XSL_SECPREF_DEFAULT', 44);

/**
*      libxslt version like 10117.     
*/
define('LIBXSLT_VERSION', 10128);

/**
*      libxslt version like 1.1.17.     
*/
define('LIBXSLT_DOTTED_VERSION', "1.1.28");

/**
*      libexslt version like 813.     
*/
define('LIBEXSLT_VERSION', 817);

/**
*      libexslt version like 1.1.17.     
*/
define('LIBEXSLT_DOTTED_VERSION', "1.1.28");

// End of xsl v.0.1
