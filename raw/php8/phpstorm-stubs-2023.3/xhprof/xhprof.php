<?php

// Start of xhprof v.0.9.4

/**
*<div id="function.xhprof-enable" class="refentry"> <div class="refnamediv">  <h1 class="refname">xhprof_enable</h1>  <p class="verinfo">(PECL xhprof &gt;= 0.9.0)</p><p class="refpurpose"><span class="refname">xhprof_enable</span> &mdash; <span class="dc-title">启动 xhprof 性能分析器</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xhprof-enable-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xhprof_enable</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   启动 xhprof 进行性能分析。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xhprof-enable-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       分析添加额外信息的可选标记。       关于此标记的更多信息参见       <a href="https://www.php.net/manual/zh/xhprof.constants.php" class="link">XHprof 常量</a>，例如，       <strong><span>XHPROF_FLAGS_MEMORY</span></strong>       可以开启内存的分析。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       <span class="type" style="color:#EAB766">array</span> 的可选选项，就是通过传递 &#039;ignored_functions&#039; 选项来忽略性能分析中的某些函数。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xhprof-enable-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <strong><span>null</span></strong>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xhprof-enable-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>PECL xhprof 0.9.2</td>      <td>       添加可选的 <span class="parameter" style="color:#3A95FF">options</span> 参数。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.xhprof-enable-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2039">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">xhprof_enable()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 1. elapsed time + memory + CPU profiling; and ignore built-in (internal) functions<br /></span><span style="color: #9876AA">xhprof_enable</span><span style="color: #007700">(</span><span style="color: #9876AA">XHPROF_FLAGS_NO_BUILTINS </span><span style="color: #007700">| </span><span style="color: #9876AA">XHPROF_FLAGS_CPU </span><span style="color: #007700">| </span><span style="color: #9876AA">XHPROF_FLAGS_MEMORY</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 2. elapsed time profiling; ignore call_user_func* during profiling<br /></span><span style="color: #9876AA">xhprof_enable</span><span style="color: #007700">(<br />    </span><span style="color: #9876AA">0</span><span style="color: #007700">,<br />    array(</span><span style="color: #DD0000">'ignored_functions' </span><span style="color: #007700">=&gt;  array(</span><span style="color: #DD0000">'call_user_func'</span><span style="color: #007700">,<br />                                        </span><span style="color: #DD0000">'call_user_func_array'</span><span style="color: #007700">)));<br />                                       <br /></span><span style="color: #FF8000">// 3. elapsed time + memory profiling; ignore call_user_func* during profiling<br /></span><span style="color: #9876AA">xhprof_enable</span><span style="color: #007700">(<br />    </span><span style="color: #9876AA">XHPROF_FLAGS_MEMORY</span><span style="color: #007700">,<br />    array(</span><span style="color: #DD0000">'ignored_functions' </span><span style="color: #007700">=&gt;  array(</span><span style="color: #DD0000">'call_user_func'</span><span style="color: #007700">,<br />                                        </span><span style="color: #DD0000">'call_user_func_array'</span><span style="color: #007700">)));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.xhprof-enable-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="function">{@link xhprof_disable()} - 停止 xhprof 分析器</span></li>   <li class="member"><span class="function">{@link xhprof_sample_enable()} - 以采样模式启动 XHProf 性能分析</span></li>   <li class="member"><span class="function">{@link memory_get_usage()} - 返回分配给 PHP 的内存量</span></li>   <li class="member"><span class="function">{@link getrusage()} - 获取当前资源使用状况</span></li>  </ul> </div></div>
 * @return null*/
function xhprof_enable($flags = 0, array $options = []) {}

/**
*<div id="function.xhprof-disable" class="refentry"> <div class="refnamediv">  <h1 class="refname">xhprof_disable</h1>  <p class="verinfo">(PECL xhprof &gt;= 0.9.0)</p><p class="refpurpose"><span class="refname">xhprof_disable</span> &mdash; <span class="dc-title">停止 xhprof 分析器</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xhprof-disable-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xhprof_disable</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   停止性能分析，并返回此次运行的 xhprof 数据。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xhprof-disable-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xhprof-disable-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   本次运行的 <span class="type" style="color:#EAB766">array</span> 类型的 xhprof 数据。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.xhprof-disable-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2036">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">xhprof_disable()</strong></span> 范例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />xhprof_enable</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$foo </span><span style="color: #007700">= </span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #DD0000">"foo bar"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$xhprof_data </span><span style="color: #007700">= </span><span style="color: #9876AA">xhprof_disable</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$xhprof_data</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [main()==&gt;strlen] =&gt; Array<br>        (<br>            [ct] =&gt; 1<br>            [wt] =&gt; 279<br>        )<br><br>    [main()==&gt;xhprof_disable] =&gt; Array<br>        (<br>            [ct] =&gt; 1<br>            [wt] =&gt; 9<br>        )<br><br>    [main()] =&gt; Array<br>        (<br>            [ct] =&gt; 1<br>            [wt] =&gt; 610<br>        )<br><br>)<br></span></div>   </div>  </div> </div></div>
 * @return array an array of xhprof data, from the run.*/
function xhprof_disable() {}

/**
*<div id="function.xhprof-sample-enable" class="refentry"> <div class="refnamediv">  <h1 class="refname">xhprof_sample_enable</h1>  <p class="verinfo">(PECL xhprof &gt;= 0.9.0)</p><p class="refpurpose"><span class="refname">xhprof_sample_enable</span> &mdash; <span class="dc-title">以采样模式启动 XHProf 性能分析</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xhprof-sample-enable-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xhprof_sample_enable</strong></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   <span class="function">{@link xhprof_enable()}</span> 的更轻量的版本，以采样模式开始性能分析。   抽样的间隔为 0.1 秒，样本记录了完整的函数调用堆栈。   主要使用的情况是以较低的性能开销来进行性能监控和诊断。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xhprof-sample-enable-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xhprof-sample-enable-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <strong><span>null</span></strong>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.xhprof-sample-enable-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="function">{@link xhprof_sample_disable()} - 停止 xhprof 性能采样分析器</span></li>   <li class="member"><span class="function">{@link xhprof_enable()} - 启动 xhprof 性能分析器</span></li>   <li class="member"><span class="function">{@link memory_get_usage()} - 返回分配给 PHP 的内存量</span></li>   <li class="member"><span class="function">{@link getrusage()} - 获取当前资源使用状况</span></li>  </ul> </div></div>
 * @return null*/
function xhprof_sample_enable() {}

/**
*<div id="function.xhprof-sample-disable" class="refentry"> <div class="refnamediv">  <h1 class="refname">xhprof_sample_disable</h1>  <p class="verinfo">(PECL xhprof &gt;= 0.9.0)</p><p class="refpurpose"><span class="refname">xhprof_sample_disable</span> &mdash; <span class="dc-title">停止 xhprof 性能采样分析器</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xhprof-sample-disable-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xhprof_sample_disable</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   停止采样模式的 xhprof 分析器。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xhprof-sample-disable-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xhprof-sample-disable-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   本次运行的xhprof采样数据，<span class="type" style="color:#EAB766">array</span> 类型。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.xhprof-sample-disable-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-2042">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">xhprof_sample_disable()</strong></span> 范例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />xhprof_sample_enable</span><span style="color: #007700">();<br /><br />for (</span><span style="color: #9876AA">$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt;= </span><span style="color: #9876AA">10000</span><span style="color: #007700">; </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br />    </span><span style="color: #9876AA">$a </span><span style="color: #007700">= </span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$i</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$b </span><span style="color: #007700">= </span><span style="color: #9876AA">$i </span><span style="color: #007700">* </span><span style="color: #9876AA">$a</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$c </span><span style="color: #007700">= </span><span style="color: #9876AA">rand</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">$xhprof_data </span><span style="color: #007700">= </span><span style="color: #9876AA">xhprof_sample_disable</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$xhprof_data</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [1272935300.800000] =&gt; main()<br>    [1272935300.900000] =&gt; main()<br>)<br></span></div>   </div>  </div> </div></div>
 * @return array an array of xhprof sample data, from the run.*/
function xhprof_sample_disable() {}

/**
 * @link https://php.net/manual/en/xhprof.constants.php#constant.xhprof-flags-no-builtins
 */
const XHPROF_FLAGS_NO_BUILTINS = 1;
/**
 * @link https://php.net/manual/en/xhprof.constants.php#constant.xhprof-flags-cpu
 */
const XHPROF_FLAGS_CPU = 2;
/**
 * @link https://php.net/manual/en/xhprof.constants.php##constant.xhprof-flags-memory
 */
const XHPROF_FLAGS_MEMORY = 4;

// End of xhprof v.0.9.4
