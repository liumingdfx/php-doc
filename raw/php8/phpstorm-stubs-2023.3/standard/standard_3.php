<?php

use JetBrains\PhpStorm\ArrayShape;
use JetBrains\PhpStorm\Deprecated;
use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
use JetBrains\PhpStorm\Internal\PhpStormStubsElementAvailable;
use JetBrains\PhpStorm\Internal\ReturnTypeContract as TypeContract;
use JetBrains\PhpStorm\Pure;

/**
*<div id="function.getlastmod" class="refentry"> <div class="refnamediv">  <h1 class="refname">getlastmod</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">getlastmod</span> &mdash; <span class="dc-title">获取页面最后修改的时间</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.getlastmod-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>getlastmod</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   获取执行的主脚本的最后修改时间。  </p>  <p class="para">   如果你对其他文件的最后修改时间的感兴趣，可考虑使用 <span class="function">{@link filemtime()}</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.getlastmod-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.getlastmod-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回当前页面最后修改的时间。这个值是一个 Unix 时间戳，可以传入 <span class="function">{@link date()}</span>。   错误时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.getlastmod-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="example-1694">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">getlastmod()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 输出类似 'Last modified: March 04 1998 20:43:59.'<br /></span><span style="color: #007700">echo </span><span style="color: #DD0000">"Last modified: " </span><span style="color: #007700">. </span><span style="color: #9876AA">date </span><span style="color: #007700">(</span><span style="color: #DD0000">"F d Y H:i:s."</span><span style="color: #007700">, </span><span style="color: #9876AA">getlastmod</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.getlastmod-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link date()} - 格式化 Unix 时间戳</span></li>    <li class="member"><span class="function">{@link getmyuid()} - 获取 PHP 脚本所有者的 UID</span></li>    <li class="member"><span class="function">{@link getmygid()} - 获取当前 PHP 脚本拥有者的 GID</span></li>    <li class="member"><span class="function">{@link get_current_user()} - 获取当前 PHP 脚本所有者名称</span></li>    <li class="member"><span class="function">{@link getmyinode()} - 获取当前脚本的索引节点（inode）</span></li>    <li class="member"><span class="function">{@link getmypid()} - 获取 PHP 进程的 ID</span></li>    <li class="member"><span class="function">{@link filemtime()} - 取得文件修改时间</span></li>   </ul>  </span> </div></div>
 * @return int|false the time of the last modification of the current*/
function getlastmod(): int|false {}

/**
*<div id="function.base64-decode" class="refentry"> <div class="refnamediv">  <h1 class="refname">base64_decode</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">base64_decode</span> &mdash; <span class="dc-title">对使用 MIME base64 编码的数据进行解码</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.base64-decode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>base64_decode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$strict</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   对 base64 编码的 <span class="parameter" style="color:#3A95FF">string</span> 进行解码。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.base64-decode-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       编码过的数据。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">strict</span></dt>     <dd>      <p class="para">       当设置 <span class="parameter" style="color:#3A95FF">strict</span> 为 <strong><span>true</span></strong> 时，一旦输入的数据超出了 base64 字母表，将返回 <strong><span>false</span></strong>。       否则会静默丢弃无效的字符。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.base64-decode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回解码后数据， 或者在失败时返回 <strong><span>false</span></strong>。返回的数据可能是二进制的。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.base64-decode-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">base64_decode()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$str </span><span style="color: #007700">= </span><span style="color: #DD0000">'VGhpcyBpcyBhbiBlbmNvZGVkIHN0cmluZw=='</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">base64_decode</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>This is an encoded string<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.base64-decode-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link base64_encode()} - 使用 MIME base64 对数据进行编码</span></li>    <li class="member">     <a href="http://www.faqs.org/rfcs/rfc2045" class="link external">&raquo;&nbsp;RFC 2045</a> 的 6.8 章节。     </li>   </ul>  </span> </div></div>
 * @return string|false the original data or false on failure. The returned data may be*/
function base64_decode(string $string, bool $strict = false): string|false {}

/**
*<div id="function.base64-encode" class="refentry"> <div class="refnamediv">  <h1 class="refname">base64_encode</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">base64_encode</span> &mdash; <span class="dc-title">使用 MIME base64 对数据进行编码</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.base64-encode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>base64_encode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   使用 base64 对 <span class="parameter" style="color:#3A95FF">string</span> 进行编码。  </p>  <p class="para">   设计此种编码是为了使二进制数据可以通过非纯   8-bit 的传输层传输，例如电子邮件的主体。  </p>  <p class="para">   Base64-encoded 数据要比原始数据多占用 33% 左右的空间。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.base64-encode-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       要编码的数据。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.base64-encode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   编码后的字符串数据。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.base64-encode-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">base64_encode()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$str </span><span style="color: #007700">= </span><span style="color: #DD0000">'This is an encoded string'</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">base64_encode</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>VGhpcyBpcyBhbiBlbmNvZGVkIHN0cmluZw==<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.base64-encode-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link base64_decode()} - 对使用 MIME base64 编码的数据进行解码</span></li>    <li class="member"><span class="function">{@link chunk_split()} - 将字符串分割成小块</span></li>    <li class="member"><span class="function">{@link convert_uuencode()} - 使用 uuencode 编码一个字符串</span></li>    <li class="member"><a href="http://www.faqs.org/rfcs/rfc2045" class="link external">&raquo;&nbsp;RFC 2045</a> 6.8 章节</li>   </ul>  </span> </div></div>
 * @return string The encoded data, as a string.*/
function base64_encode(string $string): string {}

/**
*<div id="function.convert-uuencode" class="refentry"> <div class="refnamediv">  <h1 class="refname">convert_uuencode</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">convert_uuencode</span> &mdash; <span class="dc-title">使用 uuencode 编码一个字符串</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.convert-uuencode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>convert_uuencode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">convert_uuencode()</strong></span> 使用 uuencode 算法对一个字符串进行编码。  </p>  <p class="para">   uuencode 算法会将所有（含二进制数据）字符串转化为可输出的字符，并且可以被安全的应用于网络传输。使用   uuencode 编码后的数据将会比源数据大 35% 左右。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    <span class="function"><strong style="color:#CC7832">convert_uuencode()</strong></span> 既不生成 <span>begin</span> 行也不产生    <span>end</span>，它们是 uuencoded <em>files</em> 的一部分。   </span>  </p></blockquote>  </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.convert-uuencode-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       需要被编码的数据。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.convert-uuencode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 uuencode 编码后的数据。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.convert-uuencode-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       在此版本之前，尝试转换空字符串将返回 <strong><span>false</span></strong>，没有任何特殊原因。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.convert-uuencode-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">convert_uuencode()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$some_string </span><span style="color: #007700">= </span><span style="color: #DD0000">"test\ntext text\r\n"</span><span style="color: #007700">;<br /><br />echo </span><span style="color: #9876AA">convert_uuencode</span><span style="color: #007700">(</span><span style="color: #9876AA">$some_string</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>0=&amp;5S=`IT97AT(&#039;1E&gt;&#039;0-&quot;@``<br>`<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.convert-uuencode-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link convert_uudecode()} - 解码一个 uuencode 编码的字符串</span></li>    <li class="member"><span class="function">{@link base64_encode()} - 使用 MIME base64 对数据进行编码</span></li>   </ul>  </span> </div></div>
 * @return string the uuencoded data.*/
function convert_uuencode(string $string): string {}

/**
*<div id="function.convert-uudecode" class="refentry"> <div class="refnamediv">  <h1 class="refname">convert_uudecode</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">convert_uudecode</span> &mdash; <span class="dc-title">解码一个 uuencode 编码的字符串</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.convert-uudecode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>convert_uudecode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">convert_uudecode()</strong></span> 解码一个 uuencode 编码的字符串。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    <span class="function"><strong style="color:#CC7832">convert_uudecode()</strong></span> 既不接受 <span>begin</span> 行也不接受    <span>end</span>，它们是 uuencoded <em>files</em> 的一部分。   </span>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.convert-uudecode-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       uuencode 编码后的数据。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.convert-uudecode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回解码后的字符串数据， 或者在失败时返回 <strong><span>false</span></strong>.。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.convert-uudecode-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">convert_uudecode()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">convert_uudecode</span><span style="color: #007700">(</span><span style="color: #DD0000">"+22!L;W9E(%!(4\"$`\n`"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>I love PHP!<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.convert-uudecode-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link convert_uuencode()} - 使用 uuencode 编码一个字符串</span></li>   </ul>  </span> </div></div>
 * @return string|false the decoded data as a string.*/
function convert_uudecode(string $string): string|false {}

/**
*<div id="function.abs" class="refentry"> <div class="refnamediv">  <h1 class="refname">abs</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">abs</span> &mdash; <span class="dc-title">绝对值</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.abs-description">  <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>abs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">float</span></span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">float</span></span></div>  <p class="para rdfs-comment">   返回参数 <span class="parameter" style="color:#3A95FF">num</span> 的绝对值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.abs-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要处理的数字值      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.abs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 的绝对值。 如果参数 <span class="parameter" style="color:#3A95FF">num</span>   是 <span class="type" style="color:#EAB766">float</span>，则返回的类型也是 <span class="type" style="color:#EAB766">float</span>，否则返回   <span class="type" style="color:#EAB766">int</span>（因为 <span class="type" style="color:#EAB766">float</span> 通常比 <span class="type" style="color:#EAB766">int</span> 有更大的取值范围）。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.abs-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">num</span> 不再接受支持数字转换的内部对象。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.abs-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">abs()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">abs</span><span style="color: #007700">(-</span><span style="color: #9876AA">4.2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">abs</span><span style="color: #007700">(</span><span style="color: #9876AA">5</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">abs</span><span style="color: #007700">(-</span><span style="color: #9876AA">5</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>float(4.2)<br>int(5)<br>int(5)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.abs-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link gmp_abs()} - Absolute value</span></li>    <li class="member"><span class="function">{@link gmp_sign()} - Sign of number</span></li>   </ul>  </span> </div></div>
 * @return float|int The absolute value of number. If the*/
function abs(int|float $num): int|float {}

/**
*<div id="function.ceil" class="refentry"> <div class="refnamediv">  <h1 class="refname">ceil</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ceil</span> &mdash; <span class="dc-title">进一法取整</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.ceil-description">  <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>ceil</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">float</span></span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="simpara">   如果有必要，通过对 <span class="parameter" style="color:#3A95FF">num</span> 向上取整返回下一个最高的整数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.ceil-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要进一法取整的值      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.ceil-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回不小于 <span class="parameter" style="color:#3A95FF">num</span> 的下一个整数。<span class="function"><strong style="color:#CC7832">ceil()</strong></span>   返回的类型仍然是 <span class="type" style="color:#EAB766">float</span>，因为 <span class="type" style="color:#EAB766">float</span> 值的范围通常比 <span class="type" style="color:#EAB766">int</span> 要大。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.ceil-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">num</span> 不再接受支持数字转换的内部对象。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.ceil-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ceil()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">ceil</span><span style="color: #007700">(</span><span style="color: #9876AA">4.3</span><span style="color: #007700">);    </span><span style="color: #FF8000">// 5<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">ceil</span><span style="color: #007700">(</span><span style="color: #9876AA">9.999</span><span style="color: #007700">);  </span><span style="color: #FF8000">// 10<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">ceil</span><span style="color: #007700">(-</span><span style="color: #9876AA">3.14</span><span style="color: #007700">);  </span><span style="color: #FF8000">// -3<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.ceil-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link floor()} - 舍去法取整</span></li>    <li class="member"><span class="function">{@link round()} - 对浮点数进行四舍五入</span></li>   </ul>  </span> </div></div>
 * @return float|false value rounded up to the next highest*/
function ceil(int|float $num) {}
/**
*<div id="function.floor" class="refentry"> <div class="refnamediv">  <h1 class="refname">floor</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">floor</span> &mdash; <span class="dc-title">舍去法取整</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.floor-description">  <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>floor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">float</span></span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="simpara">   如有必要，通过对 <span class="parameter" style="color:#3A95FF">num</span> 向下取整（作为浮点数）。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.floor-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要取整的数字      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.floor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   对 <span class="parameter" style="color:#3A95FF">num</span> 向下取整。<span class="function"><strong style="color:#CC7832">floor()</strong></span> 返回的类型仍然是   <span class="type" style="color:#EAB766">float</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.floor-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">num</span> 不再接受支持数字转换的内部对象。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.floor-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">floor()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">floor</span><span style="color: #007700">(</span><span style="color: #9876AA">4.3</span><span style="color: #007700">);   </span><span style="color: #FF8000">// 4<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">floor</span><span style="color: #007700">(</span><span style="color: #9876AA">9.999</span><span style="color: #007700">); </span><span style="color: #FF8000">// 9<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">floor</span><span style="color: #007700">(-</span><span style="color: #9876AA">3.14</span><span style="color: #007700">); </span><span style="color: #FF8000">// -4<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.floor-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link ceil()} - 进一法取整</span></li>    <li class="member"><span class="function">{@link round()} - 对浮点数进行四舍五入</span></li>   </ul>  </span> </div></div>
 * @return float|false value rounded to the next lowest integer.*/
function floor(int|float $num) {}

/**
*<div id="function.round" class="refentry"> <div class="refnamediv">  <h1 class="refname">round</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">round</span> &mdash; <span class="dc-title">对浮点数进行四舍五入</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.round-description">  <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>round</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">float</span></span> <span class="parameter" style="color:#3A95FF">$num</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$precision</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$mode</span><span class="initializer"> = <strong><span>PHP_ROUND_HALF_UP</span></strong></span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   返回将 <span class="parameter" style="color:#3A95FF">num</span> 根据指定精度   <span class="parameter" style="color:#3A95FF">precision</span>（十进制小数点后数字的数目）进行四舍五入的结果。<span class="parameter" style="color:#3A95FF">precision</span>   也可以是负数或零（默认值）。  </p>   </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.round-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要处理的值。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">precision</span></dt>     <dd>      <p class="para">       可选的十进制小数点后数字的数目。      </p>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">precision</span> 是正数，则 <span class="parameter" style="color:#3A95FF">num</span>       会四舍五入到小数点后 <span class="parameter" style="color:#3A95FF">precision</span> 位有效数字。      </p>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">precision</span> 是负数，则 <span class="parameter" style="color:#3A95FF">num</span>       四舍五入到小数点前 <span class="parameter" style="color:#3A95FF">precision</span> 位有效数字。即 <span>pow(10,       -$precision)</span> 最接近的倍数，例如，<span class="parameter" style="color:#3A95FF">precision</span>       为 -1，<span class="parameter" style="color:#3A95FF">num</span> 可以四舍五入到十位，<span class="parameter" style="color:#3A95FF">precision</span>       为 -2，<span class="parameter" style="color:#3A95FF">num</span> 可以四舍五入到百位，等等。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">mode</span></dt>     <dd>      <p class="para">       使用以下常量指定四舍五入发生的模式。       <table class="doctable informaltable">                 <thead>          <tr>           <th>常量</th>           <th>说明</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td><strong><span>PHP_ROUND_HALF_UP</span></strong></td>           <td>            当 <span class="parameter" style="color:#3A95FF">num</span> 恰好处于中间时，将其向远离零的方向舍入，使 1.5 变为 2，-1.5 变为 -2。           </td>          </tr>          <tr>           <td><strong><span>PHP_ROUND_HALF_DOWN</span></strong></td>           <td>            当 <span class="parameter" style="color:#3A95FF">num</span> 恰好处于中间时，将其向靠近零的方向舍入，使 1.5 变为 1，-1.5 变为 -1。           </td>          </tr>          <tr>           <td><strong><span>PHP_ROUND_HALF_EVEN</span></strong></td>           <td>            将 <span class="parameter" style="color:#3A95FF">num</span> 四舍五入到最接近的偶数值，1.5 和 2.5 都变为 2。           </td>          </tr>          <tr>           <td><strong><span>PHP_ROUND_HALF_ODD</span></strong></td>           <td>            将 <span class="parameter" style="color:#3A95FF">num</span> 四舍五入到最接近的奇数值，1.5 变为 1，2.5 变为 3。           </td>          </tr>         </tbody>               </table>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.round-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   值是四舍五入到指定 <span class="parameter" style="color:#3A95FF">precision</span> 精度的 <span class="type" style="color:#EAB766">float</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.round-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">num</span> 不再接受支持数字转换的内部对象。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.round-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">round()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">3.4</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">3.5</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">3.6</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">3.6</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">5.045</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">5.055</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">345</span><span style="color: #007700">, -</span><span style="color: #9876AA">2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">345</span><span style="color: #007700">, -</span><span style="color: #9876AA">3</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">678</span><span style="color: #007700">, -</span><span style="color: #9876AA">2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">678</span><span style="color: #007700">, -</span><span style="color: #9876AA">3</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>float(3)<br>float(4)<br>float(4)<br>float(4)<br>float(5.05)<br>float(5.06)<br>float(300)<br>float(0)<br>float(700)<br>float(1000)<br></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 <span class="parameter" style="color:#3A95FF">precision</span> 如何影响 float</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$number </span><span style="color: #007700">= </span><span style="color: #9876AA">135.79</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">$number</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">$number</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">$number</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">$number</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">$number</span><span style="color: #007700">, -</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">$number</span><span style="color: #007700">, -</span><span style="color: #9876AA">2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">$number</span><span style="color: #007700">, -</span><span style="color: #9876AA">3</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>float(135.79)<br>float(135.79)<br>float(135.8)<br>float(136)<br>float(140)<br>float(100)<br>float(0)<br></span></div>    </div>   </div>  </p>  <p class="para">   <div class="example" id="">    <p><strong>示例 #3 <span class="parameter" style="color:#3A95FF">mode</span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #DD0000">'Rounding modes with 9.5' </span><span style="color: #007700">. </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">9.5</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_ROUND_HALF_UP</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">9.5</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_ROUND_HALF_DOWN</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">9.5</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_ROUND_HALF_EVEN</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">9.5</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_ROUND_HALF_ODD</span><span style="color: #007700">));<br /><br />echo </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">'Rounding modes with 8.5' </span><span style="color: #007700">. </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">8.5</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_ROUND_HALF_UP</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">8.5</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_ROUND_HALF_DOWN</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">8.5</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_ROUND_HALF_EVEN</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">8.5</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_ROUND_HALF_ODD</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Rounding modes with 9.5<br>float(10)<br>float(9)<br>float(10)<br>float(9)<br><br>Rounding modes with 8.5<br>float(9)<br>float(8)<br>float(8)<br>float(9)<br></span></div>    </div>   </div>  </p>  <p class="para">   <div class="example" id="">    <p><strong>示例 #4 带 <span class="parameter" style="color:#3A95FF">precision</span> 的 <span class="parameter" style="color:#3A95FF">mode</span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #DD0000">'Using PHP_ROUND_HALF_UP with 1 decimal digit precision' </span><span style="color: #007700">. </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">( </span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_ROUND_HALF_UP</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(-</span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_ROUND_HALF_UP</span><span style="color: #007700">));<br /><br />echo </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">'Using PHP_ROUND_HALF_DOWN with 1 decimal digit precision' </span><span style="color: #007700">. </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">( </span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_ROUND_HALF_DOWN</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(-</span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_ROUND_HALF_DOWN</span><span style="color: #007700">));<br /><br />echo </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">'Using PHP_ROUND_HALF_EVEN with 1 decimal digit precision' </span><span style="color: #007700">. </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">( </span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_ROUND_HALF_EVEN</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(-</span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_ROUND_HALF_EVEN</span><span style="color: #007700">));<br /><br />echo </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">'Using PHP_ROUND_HALF_ODD with 1 decimal digit precision' </span><span style="color: #007700">. </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">( </span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_ROUND_HALF_ODD</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">round</span><span style="color: #007700">(-</span><span style="color: #9876AA">1.55</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_ROUND_HALF_ODD</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Using PHP_ROUND_HALF_UP with 1 decimal digit precision<br>float(1.6)<br>float(-1.6)<br><br>Using PHP_ROUND_HALF_DOWN with 1 decimal digit precision<br>float(1.5)<br>float(-1.5)<br><br>Using PHP_ROUND_HALF_EVEN with 1 decimal digit precision<br>float(1.6)<br>float(-1.6)<br><br>Using PHP_ROUND_HALF_ODD with 1 decimal digit precision<br>float(1.5)<br>float(-1.5)<br></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.round-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link ceil()} - 进一法取整</span></li>    <li class="member"><span class="function">{@link floor()} - 舍去法取整</span></li>    <li class="member"><span class="function">{@link number_format()} - 以千位分隔符方式格式化一个数字</span></li>   </ul>  </span> </div></div>
 * @return float The rounded value*/
function round(int|float $num, int $precision = 0, int $mode = PHP_ROUND_HALF_UP): float {}

/**
*<div id="function.sin" class="refentry"> <div class="refnamediv">  <h1 class="refname">sin</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">sin</span> &mdash; <span class="dc-title">正弦</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.sin-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sin</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">sin()</strong></span> 返回参数 <span class="parameter" style="color:#3A95FF">num</span> 的正弦值。参数   <span class="parameter" style="color:#3A95FF">num</span> 的单位为弧度。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.sin-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       单位是弧度的值。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.sin-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 的正弦值  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.sin-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">sin()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// 返回值的精度由配置中的 precision 指示确定<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">sin</span><span style="color: #007700">(</span><span style="color: #9876AA">deg2rad</span><span style="color: #007700">(</span><span style="color: #9876AA">60</span><span style="color: #007700">));  </span><span style="color: #FF8000">//  0.866025403 ...<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">sin</span><span style="color: #007700">(</span><span style="color: #9876AA">60</span><span style="color: #007700">);           </span><span style="color: #FF8000">// -0.304810621 ...<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.sin-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link asin()} - 反正弦</span></li>    <li class="member"><span class="function">{@link sinh()} - 双曲正弦</span></li>    <li class="member"><span class="function">{@link cos()} - 余弦</span></li>    <li class="member"><span class="function">{@link tan()} - 正切</span></li>    <li class="member"><span class="function">{@link deg2rad()} - 将角度转换为弧度</span></li>   </ul>  </span> </div></div>
 * @return float The sine of arg*/
function sin(float $num): float {}

/**
*<div id="function.cos" class="refentry"> <div class="refnamediv">  <h1 class="refname">cos</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">cos</span> &mdash; <span class="dc-title">余弦</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cos-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cos</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">cos()</strong></span> 返回参数 <span class="parameter" style="color:#3A95FF">num</span>   的余弦值。参数 <span class="parameter" style="color:#3A95FF">num</span> 的单位为弧度。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cos-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       以弧度表示的角度      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cos-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 的余弦值  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cos-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cos()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">cos</span><span style="color: #007700">(</span><span style="color: #9876AA">M_PI</span><span style="color: #007700">); </span><span style="color: #FF8000">// -1<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cos-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link acos()} - 反余弦</span></li>    <li class="member"><span class="function">{@link sin()} - 正弦</span></li>    <li class="member"><span class="function">{@link tan()} - 正切</span></li>    <li class="member"><span class="function">{@link deg2rad()} - 将角度转换为弧度</span></li>   </ul>  </span> </div></div>
 * @return float The cosine of arg*/
function cos(float $num): float {}

/**
*<div id="function.tan" class="refentry"> <div class="refnamediv">  <h1 class="refname">tan</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">tan</span> &mdash; <span class="dc-title">正切</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.tan-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>tan</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">tan()</strong></span> 返回参数 <span class="parameter" style="color:#3A95FF">num</span> 的正切值。参数   <span class="parameter" style="color:#3A95FF">num</span> 的单位为弧度。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.tan-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要处理的以弧度为单位的参数      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.tan-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 的正切值  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.tan-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">tan()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">tan</span><span style="color: #007700">(</span><span style="color: #9876AA">M_PI_4</span><span style="color: #007700">); </span><span style="color: #FF8000">// 1<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.tan-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link atan()} - 反正切</span></li>    <li class="member"><span class="function">{@link atan2()} - 两个参数的反正切</span></li>    <li class="member"><span class="function">{@link sin()} - 正弦</span></li>    <li class="member"><span class="function">{@link cos()} - 余弦</span></li>    <li class="member"><span class="function">{@link tanh()} - 双曲正切</span></li>    <li class="member"><span class="function">{@link deg2rad()} - 将角度转换为弧度</span></li>   </ul>  </span> </div></div>
 * @return float The tangent of arg*/
function tan(float $num): float {}

/**
*<div id="function.asin" class="refentry"> <div class="refnamediv">  <h1 class="refname">asin</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">asin</span> &mdash; <span class="dc-title">反正弦</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.asin-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>asin</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   返回 <span class="parameter" style="color:#3A95FF">num</span> 的反正弦值，单位是弧度。<span class="function"><strong style="color:#CC7832">asin()</strong></span>   是 <span class="function">{@link sin()}</span> 的反函数，它的意思是对于 <span class="function"><strong style="color:#CC7832">asin()</strong></span>   的定义域中的每个 <span class="parameter" style="color:#3A95FF">num</span> 值，<span>$num == sin(asin($num))</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.asin-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       待处理的参数      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.asin-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 的反正弦弧度。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.asin-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link sin()} - 正弦</span></li>    <li class="member"><span class="function">{@link asinh()} - 反双曲正弦</span></li>    <li class="member"><span class="function">{@link acos()} - 反余弦</span></li>    <li class="member"><span class="function">{@link atan()} - 反正切</span></li>   </ul>  </span> </div></div>
 * @return float The arc sine of arg in radians*/
function asin(float $num): float {}

/**
*<div id="function.acos" class="refentry"> <div class="refnamediv">  <h1 class="refname">acos</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">acos</span> &mdash; <span class="dc-title">反余弦</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.acos-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>acos</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   返回 <span class="parameter" style="color:#3A95FF">num</span> 的反余弦值，单位是弧度。<span class="function"><strong style="color:#CC7832">acos()</strong></span>   是 <span class="function">{@link cos()}</span> 的反函数，它的意思是对于 <span class="function"><strong style="color:#CC7832">acos()</strong></span>   的定义域中的每个 <span class="parameter" style="color:#3A95FF">num</span> 值，<span>$num == cos(acos($num))</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.acos-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要处理的参数      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.acos-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 的反余弦弧度。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.acos-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cos()} - 余弦</span></li>    <li class="member"><span class="function">{@link acosh()} - 反双曲余弦</span></li>    <li class="member"><span class="function">{@link asin()} - 反正弦</span></li>    <li class="member"><span class="function">{@link atan()} - 反正切</span></li>   </ul>  </span> </div></div>
 * @return float The arc cosine of arg in radians.*/
function acos(float $num): float {}

/**
*<div id="function.atan" class="refentry"> <div class="refnamediv">  <h1 class="refname">atan</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">atan</span> &mdash; <span class="dc-title">反正切</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.atan-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>atan</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   返回 <span class="parameter" style="color:#3A95FF">num</span> 的反正切值，单位是弧度。<span class="function"><strong style="color:#CC7832">atan()</strong></span> 是   <span class="function">{@link tan()}</span> 的反函数，它的意思是对于 <span class="function"><strong style="color:#CC7832">atan()</strong></span>   的定义域中的每个 <span class="parameter" style="color:#3A95FF">num</span> 值，<span>$num == tan(atan($num))</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.atan-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要处理的参数      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.atan-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 的反正切弧度。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.atan-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link tan()} - 正切</span></li>    <li class="member"><span class="function">{@link atanh()} - 反双曲正切</span></li>    <li class="member"><span class="function">{@link asin()} - 反正弦</span></li>    <li class="member"><span class="function">{@link acos()} - 反余弦</span></li>   </ul>  </span> </div></div>
 * @return float The arc tangent of arg in radians.*/
function atan(float $num): float {}

/**
*<div id="function.atanh" class="refentry"> <div class="refnamediv">  <h1 class="refname">atanh</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">atanh</span> &mdash; <span class="dc-title">反双曲正切</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.atanh-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>atanh</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   返回 <span class="parameter" style="color:#3A95FF">num</span> 的反双曲正切值，即，其双曲正切为   <span class="parameter" style="color:#3A95FF">num</span> 的那个值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.atanh-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要处理的参数      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.atanh-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 的反双曲正切  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.atanh-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link tanh()} - 双曲正切</span></li>    <li class="member"><span class="function">{@link atan()} - 反正切</span></li>    <li class="member"><span class="function">{@link asinh()} - 反双曲正弦</span></li>    <li class="member"><span class="function">{@link acosh()} - 反双曲余弦</span></li>   </ul>  </span> </div></div>
 * @return float Inverse hyperbolic tangent of arg*/
function atanh(float $num): float {}

/**
*<div id="function.atan2" class="refentry">   <div class="refnamediv">    <h1 class="refname">atan2</h1>    <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">atan2</span> &mdash; <span class="dc-title">两个参数的反正切</span></p>   </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.atan2-description">  <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="methodname" style="color:#CC7832"><strong>atan2</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>): <span class="type" style="color:#EAB766">float</span></div>    <p class="simpara">     本函数计算两个变量     <span class="parameter" style="color:#3A95FF">x</span> 和 <span class="parameter" style="color:#3A95FF">y</span>     的反正切值。和计算     <span class="parameter" style="color:#3A95FF">y</span> / <span class="parameter" style="color:#3A95FF">x</span>     的反正切相似，只除了两个参数的符号是用来确定结果的象限之外。    </p>    <p class="simpara">     本函数的结果为弧度，其值在 -PI     和 PI 之间（包括 -PI 和 PI）。    </p>   </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.atan2-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       Dividend parameter      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       Divisor parameter      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.atan2-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">x</span> 和 <span class="parameter" style="color:#3A95FF">y</span>     的反正切弧度值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.atan2-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link atan()} - 反正切</span></li>   </ul>  </span> </div>  </div>
 * @return float The arc tangent of y/x*/
function atan2(float $y, float $x): float {}

/**
*<div id="function.sinh" class="refentry"> <div class="refnamediv">  <h1 class="refname">sinh</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">sinh</span> &mdash; <span class="dc-title">双曲正弦</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.sinh-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sinh</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   返回 <span class="parameter" style="color:#3A95FF">num</span> 的双曲正弦值，定义为   <span>(exp($num) - exp(-$num))/2</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.sinh-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要处理的参数      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.sinh-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 的双曲正弦值  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.sinh-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link sin()} - 正弦</span></li>    <li class="member"><span class="function">{@link asinh()} - 反双曲正弦</span></li>    <li class="member"><span class="function">{@link cosh()} - 双曲余弦</span></li>    <li class="member"><span class="function">{@link tanh()} - 双曲正切</span></li>   </ul>  </span> </div></div>
 * @return float The hyperbolic sine of arg*/
function sinh(float $num): float {}

/**
*<div id="function.cosh" class="refentry"> <div class="refnamediv">  <h1 class="refname">cosh</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">cosh</span> &mdash; <span class="dc-title">双曲余弦</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cosh-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cosh</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   返回 <span class="parameter" style="color:#3A95FF">num</span> 的双曲余弦值，定义为   <span>(exp($num) + exp(-$num))/2</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cosh-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要处理的参数      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cosh-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 的双曲余弦值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cosh-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cos()} - 余弦</span></li>    <li class="member"><span class="function">{@link acosh()} - 反双曲余弦</span></li>    <li class="member"><span class="function">{@link sinh()} - 双曲正弦</span></li>    <li class="member"><span class="function">{@link tanh()} - 双曲正切</span></li>   </ul>  </span> </div></div>
 * @return float The hyperbolic cosine of arg*/
function cosh(float $num): float {}

/**
*<div id="function.tanh" class="refentry"> <div class="refnamediv">  <h1 class="refname">tanh</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">tanh</span> &mdash; <span class="dc-title">双曲正切</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.tanh-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>tanh</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   返回 <span class="parameter" style="color:#3A95FF">num</span> 的双曲正切值，定义为   <span>sinh($num)/cosh($num)</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.tanh-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要处理的参数      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.tanh-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 的双曲正切值  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.tanh-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link tan()} - 正切</span></li>    <li class="member"><span class="function">{@link atanh()} - 反双曲正切</span></li>    <li class="member"><span class="function">{@link sinh()} - 双曲正弦</span></li>    <li class="member"><span class="function">{@link cosh()} - 双曲余弦</span></li>   </ul>  </span> </div></div>
 * @return float The hyperbolic tangent of arg*/
function tanh(float $num): float {}

/**
*<div id="function.asinh" class="refentry"> <div class="refnamediv">  <h1 class="refname">asinh</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">asinh</span> &mdash; <span class="dc-title">反双曲正弦</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.asinh-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>asinh</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   返回 <span class="parameter" style="color:#3A95FF">num</span> 的反双曲正弦值，即，其双曲正弦为   <span class="parameter" style="color:#3A95FF">num</span> 的那个值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.asinh-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要处理的参数      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.asinh-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 <span class="parameter" style="color:#3A95FF">num</span> 的反双曲正弦  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.asinh-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link sinh()} - 双曲正弦</span></li>    <li class="member"><span class="function">{@link asin()} - 反正弦</span></li>    <li class="member"><span class="function">{@link acosh()} - 反双曲余弦</span></li>    <li class="member"><span class="function">{@link atanh()} - 反双曲正切</span></li>   </ul>  </span> </div></div>
 * @return float The inverse hyperbolic sine of arg*/
function asinh(float $num): float {}

/**
*<div id="function.acosh" class="refentry"> <div class="refnamediv">  <h1 class="refname">acosh</h1>   <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">acosh</span> &mdash; <span class="dc-title">反双曲余弦</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.acosh-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>acosh</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   返回 <span class="parameter" style="color:#3A95FF">num</span> 的反双曲余弦值，即其双曲余弦为   <span class="parameter" style="color:#3A95FF">num</span> 的那个值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.acosh-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要处理的值      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.acosh-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 反双曲余弦  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.acosh-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cosh()} - 双曲余弦</span></li>    <li class="member"><span class="function">{@link acos()} - 反余弦</span></li>    <li class="member"><span class="function">{@link asinh()} - 反双曲正弦</span></li>    <li class="member"><span class="function">{@link atanh()} - 反双曲正切</span></li>   </ul>  </span> </div></div>
 * @return float The inverse hyperbolic cosine of arg*/
function acosh(float $num): float {}

/**
*<div id="function.expm1" class="refentry"> <div class="refnamediv">  <h1 class="refname">expm1</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">expm1</span> &mdash; <span class="dc-title">   返回 <span>exp($num) - 1</span>，甚至当 number 的值接近零也能计算出准确结果  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.expm1-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>expm1</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">expm1()</strong></span> 返回“exp(<span class="parameter" style="color:#3A95FF">num</span>) - 1”，甚至当   <span class="parameter" style="color:#3A95FF">num</span> 的值接近零也能计算出准确结果。但是当两个数值趋近于相等的时候，“exp   (<span class="parameter" style="color:#3A95FF">num</span>) - 1”就会变得不太准确。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.expm1-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要处理的参数      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.expm1-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   “e”的 <span class="parameter" style="color:#3A95FF">num</span> 次方减 1  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.expm1-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link log1p()} - 返回 log(1 + number)，甚至当 number 的值接近零也能计算出准确结果</span></li>    <li class="member"><span class="function">{@link exp()} - 计算 e 的指数</span></li>   </ul>  </span> </div></div>
 * @return float 'e' to the power of arg minus one*/
function expm1(float $num): float {}

/**
*<div id="function.log1p" class="refentry"> <div class="refnamediv">  <h1 class="refname">log1p</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">log1p</span> &mdash; <span class="dc-title">   返回 log(1 + number)，甚至当 number 的值接近零也能计算出准确结果  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.log1p-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>log1p</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">log1p()</strong></span> 返回 log(1 + <span class="parameter" style="color:#3A95FF">num</span>)，甚至当   <span class="parameter" style="color:#3A95FF">num</span> 的值接近零也能计算出准确结果。<span class="function">{@link log()}</span>   在这种情况下，可能由于缺乏精度只返回 log(1)。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.log1p-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要处理的参数      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.log1p-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   log(1 + <span class="parameter" style="color:#3A95FF">num</span>)  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.log1p-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link expm1()} - 返回 exp($num) - 1，甚至当 number 的值接近零也能计算出准确结果</span></li>    <li class="member"><span class="function">{@link log()} - 自然对数</span></li>    <li class="member"><span class="function">{@link log10()} - 以 10 为底的对数</span></li>   </ul>  </span> </div></div>
 * @return float log(1 + number)*/
function log1p(float $num): float {}

/**
*<div id="function.pi" class="refentry"> <div class="refnamediv">  <h1 class="refname">pi</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">pi</span> &mdash; <span class="dc-title">得到圆周率值</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.pi-description">  <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="methodname" style="color:#CC7832"><strong>pi</strong></span>(): <span class="type" style="color:#EAB766">float</span></div>  <p class="simpara">   返回圆周率的近似值。也可以使用 <strong><span>M_PI</span></strong> 常量，该常量产生与 <span class="function"><strong style="color:#CC7832">pi()</strong></span> 完全相同的结果。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.pi-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.pi-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   圆周率（pi）的浮点近似值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.pi-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">pi()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">pi</span><span style="color: #007700">(); </span><span style="color: #FF8000">// 3.1415926535898<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">M_PI</span><span style="color: #007700">; </span><span style="color: #FF8000">// 3.1415926535898<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div>  </div>
 * @return float The value of pi as float.*/
function pi(): float {}

/**
*<div id="function.is-finite" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_finite</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_finite</span> &mdash; <span class="dc-title">判断浮点数是否是有效的有限值</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-finite-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_finite</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   返回指定的 <span class="parameter" style="color:#3A95FF">num</span> 是否是有限浮点数。  </p>  <p class="para">   有限浮点数既不是 <span>NAN</span>（<span class="function">{@link is_nan()}</span>）也不是无限的（<span class="function">{@link is_infinite()}</span>）。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-finite-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要检查的 <span class="type" style="color:#EAB766">float</span>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-finite-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">num</span> 不是 <span>NAN</span>、<span>INF</span>   或 <span>-INF</span>，那么为 <strong><span>true</span></strong>，否则为 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-finite-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_finite()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$float </span><span style="color: #007700">= </span><span style="color: #9876AA">1.2345</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$float</span><span style="color: #007700">, </span><span style="color: #9876AA">is_finite</span><span style="color: #007700">(</span><span style="color: #9876AA">$float</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$nan </span><span style="color: #007700">= </span><span style="color: #9876AA">sqrt</span><span style="color: #007700">(-</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$nan</span><span style="color: #007700">, </span><span style="color: #9876AA">is_finite</span><span style="color: #007700">(</span><span style="color: #9876AA">$nan</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$inf </span><span style="color: #007700">= </span><span style="color: #9876AA">1e308 </span><span style="color: #007700">* </span><span style="color: #9876AA">2</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$inf</span><span style="color: #007700">, </span><span style="color: #9876AA">is_finite</span><span style="color: #007700">(</span><span style="color: #9876AA">$inf</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>float(1.2345)<br>bool(true)<br>float(NAN)<br>bool(false)<br>float(INF)<br>bool(false)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-finite-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_infinite()} - 判断浮点数是否为无限值</span></li>    <li class="member"><span class="function">{@link is_nan()} - 判断浮点数是否是否为 NAN</span></li>   </ul>  </span> </div></div>
 * @return bool true if val is a legal finite*/
function is_finite(float $num): bool {}

/**
*<div id="function.is-nan" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_nan</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_nan</span> &mdash; <span class="dc-title">判断浮点数是否是否为 NAN</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-nan-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_nan</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   返回指定的 <span class="parameter" style="color:#3A95FF">num</span> 是否是 <span>NAN</span>（<q class="quote">非数值</q>）。  </p>  <p class="para">   <span>NAN</span> 是从未定义的数学运算中返回的，例如传递的参数在函数的输入域之外的时候。平方根（<span class="function">{@link sqrt()}</span>）仅对正数定义，传递负数将导致   <span>NAN</span>。返回 <span>NAN</span> 的其它操作示例有 <span>INF</span> 除以 <span>INF</span>   以及涉及现有 <span>NAN</span> 值的任何操作。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    尽管名字叫 <q class="quote">Not A Number</q>，但 <span>NAN</span> 是有效的 <span class="type" style="color:#EAB766">float</span> 类型。   </p>  </p></blockquote>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    <span>NAN</span> 不能与 <span>NAN</span> 进行比较。要检测浮点数是否是 <span>NAN</span>，必须使用    <span class="function"><strong style="color:#CC7832">is_nan()</strong></span>。使用 <span>$float === NAN</span> 检测将不起作用。   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-nan-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要检查的 <span class="type" style="color:#EAB766">float</span>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-nan-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">num</span> 是 <span>NAN</span>，返回 <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-nan-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_nan()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$nan </span><span style="color: #007700">= </span><span style="color: #9876AA">sqrt</span><span style="color: #007700">(-</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$nan</span><span style="color: #007700">, </span><span style="color: #9876AA">is_nan</span><span style="color: #007700">(</span><span style="color: #9876AA">$nan</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>float(NAN)<br>bool(true)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-nan-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_finite()} - 判断浮点数是否是有效的有限值</span></li>    <li class="member"><span class="function">{@link is_infinite()} - 判断浮点数是否为无限值</span></li>   </ul>  </span> </div></div>
 * @return bool true if val is 'not a number',*/
function is_nan(float $num): bool {}

/**
*<div id="function.intdiv" class="refentry"> <div class="refnamediv">  <h1 class="refname">intdiv</h1>  <p class="verinfo">(PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">intdiv</span> &mdash; <span class="dc-title">对除法结果取整</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.intdiv-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>intdiv</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num2</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   返回 <span class="parameter" style="color:#3A95FF">num1</span> 除以 <span class="parameter" style="color:#3A95FF">num2</span> 商数的整数部分。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.intdiv-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">num1</span></dt>    <dd>     <span>      被除数。     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">num2</span></dt>    <dd>     <p class="para">      除数。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.intdiv-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num1</span> 除以 <span class="parameter" style="color:#3A95FF">num2</span> 的商，对该商取整。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.intdiv-errors">  <h3 class="title">错误／异常</h3>  <p class="para">    如果 <span class="parameter" style="color:#3A95FF">num2</span> 是 <span>0</span>，将抛出    <span class="classname"><a href="https://www.php.net/manual/zh/class.divisionbyzeroerror.php" class="classname">DivisionByZeroError</a></span> 异常。如果 <span class="parameter" style="color:#3A95FF">num1</span>    是 <strong><span>PHP_INT_MIN</span></strong> 并且 <span class="parameter" style="color:#3A95FF">num2</span> 是    <span>-1</span>，将抛出 <span class="classname"><a href="https://www.php.net/manual/zh/class.arithmeticerror.php" class="classname">ArithmeticError</a></span> 异常.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.intdiv-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">intdiv()</strong></span> 的一些示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">intdiv</span><span style="color: #007700">(</span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">intdiv</span><span style="color: #007700">(-</span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">intdiv</span><span style="color: #007700">(</span><span style="color: #9876AA">3</span><span style="color: #007700">, -</span><span style="color: #9876AA">2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">intdiv</span><span style="color: #007700">(-</span><span style="color: #9876AA">3</span><span style="color: #007700">, -</span><span style="color: #9876AA">2</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">intdiv</span><span style="color: #007700">(</span><span style="color: #9876AA">PHP_INT_MAX</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_INT_MAX</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">intdiv</span><span style="color: #007700">(</span><span style="color: #9876AA">PHP_INT_MIN</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_INT_MIN</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">intdiv</span><span style="color: #007700">(</span><span style="color: #9876AA">PHP_INT_MIN</span><span style="color: #007700">, -</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">intdiv</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>int(1)<br>int(-1)<br>int(-1)<br>int(1)<br>int(1)<br>int(1)<br><br>Fatal error: Uncaught ArithmeticError: Division of PHP_INT_MIN by -1 is not an integer in %s on line 8<br>Fatal error: Uncaught DivisionByZeroError: Division by zero in %s on line 9<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.intdiv-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><a href="https://www.php.net/manual/zh/language.operators.arithmetic.php" class="link"><span>/</span></a>——浮点除法</li>    <li class="member"><a href="https://www.php.net/manual/zh/language.operators.arithmetic.php" class="link"><span>%</span></a>——整数取模</li>    <li class="member"><span class="function">{@link fmod()}</span>——浮点数取模</li>   </ul>  </span> </div></div>
 * @return int*/
function intdiv(int $num1, int $num2): int {}

/**
*<div id="function.is-infinite" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_infinite</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_infinite</span> &mdash; <span class="dc-title">判断浮点数是否为无限值</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-infinite-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_infinite</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   返回指定的 <span class="parameter" style="color:#3A95FF">num</span> 是否是 <span>INF</span>   或 <span>-INF</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-infinite-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要检查的 <span class="type" style="color:#EAB766">float</span>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-infinite-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">num</span> 是 <span>INF</span>   或 <span>-INF</span>，返回 <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-infinite-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_infinite()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$inf </span><span style="color: #007700">= </span><span style="color: #9876AA">1e308 </span><span style="color: #007700">* </span><span style="color: #9876AA">2</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$inf</span><span style="color: #007700">, </span><span style="color: #9876AA">is_infinite</span><span style="color: #007700">(</span><span style="color: #9876AA">$inf</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$negative_inf </span><span style="color: #007700">= -</span><span style="color: #9876AA">$inf</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$negative_inf</span><span style="color: #007700">, </span><span style="color: #9876AA">is_infinite</span><span style="color: #007700">(</span><span style="color: #9876AA">$negative_inf</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>float(INF)<br>bool(true)<br>float(-INF)<br>bool(true)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-infinite-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_finite()} - 判断浮点数是否是有效的有限值</span></li>    <li class="member"><span class="function">{@link is_nan()} - 判断浮点数是否是否为 NAN</span></li>   </ul>  </span> </div></div>
 * @return bool true if val is infinite, else false.*/
function is_infinite(float $num): bool {}

/**
*<div id="function.pow" class="refentry"> <div class="refnamediv">  <h1 class="refname">pow</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">pow</span> &mdash; <span class="dc-title">指数表达式</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.pow-description">  <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>pow</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$num</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$exponent</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">float</span>|<span class="type" style="color:#EAB766">object</span></span></div>  <p class="para rdfs-comment">   返回 <span class="parameter" style="color:#3A95FF">num</span> 的 <span class="parameter" style="color:#3A95FF">exponent</span> 次方的幂。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    可以使用 <a href="https://www.php.net/manual/zh/language.operators.arithmetic.php" class="link">**</a> 运算符代替。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.pow-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       底数      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">exponent</span></dt>     <dd>      <p class="para">       指数      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.pow-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 的 <span class="parameter" style="color:#3A95FF">exponent</span>   次方。如果两个参数都是非负整数且结果可以用整数表示，则返回 <span class="type" style="color:#EAB766">int</span>   类型，否则返回 <span class="type" style="color:#EAB766">float</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.pow-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">pow()</strong></span> 的一些示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">pow</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">8</span><span style="color: #007700">)); </span><span style="color: #FF8000">// int(256)<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">pow</span><span style="color: #007700">(-</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">20</span><span style="color: #007700">); </span><span style="color: #FF8000">// 1<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">pow</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">); </span><span style="color: #FF8000">// 1<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">pow</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">, -</span><span style="color: #9876AA">1</span><span style="color: #007700">); </span><span style="color: #FF8000">// 0.1<br /><br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">pow</span><span style="color: #007700">(-</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">5.5</span><span style="color: #007700">); </span><span style="color: #FF8000">// NAN<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.pow-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    本函数会转换所有输入为数字，甚至是非标量值，将会导致<em>怪异的</em>结果。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.pow-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link exp()} - 计算 e 的指数</span></li>    <li class="member"><span class="function">{@link sqrt()} - 平方根</span></li>    <li class="member"><span class="function">{@link bcpow()} - 任意精度数字的乘方</span></li>    <li class="member"><span class="function">{@link gmp_pow()} - Raise number into power</span></li>   </ul>  </span> </div></div>
 * @return object|int|float base raised to the power of exp.*/
function pow(mixed $num, mixed $exponent): object|int|float {}

/**
*<div id="function.exp" class="refentry"> <div class="refnamediv">  <h1 class="refname">exp</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">exp</span> &mdash; <span class="dc-title">计算 <strong><span>e</span></strong> 的指数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.exp-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>exp</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   返回 <strong><span>e</span></strong> 的 <span class="parameter" style="color:#3A95FF">num</span> 次方值。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    用“<strong><span>e</span></strong>”作为自然对数的底数，大约为 2.718282。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.exp-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要处理的参数      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.exp-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   &#039;e&#039; raised to the power of <span class="parameter" style="color:#3A95FF">num</span>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.exp-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">exp()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">exp</span><span style="color: #007700">(</span><span style="color: #9876AA">12</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">exp</span><span style="color: #007700">(</span><span style="color: #9876AA">5.7</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>1.6275E+005<br>298.87<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.exp-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link log()} - 自然对数</span></li>    <li class="member"><span class="function">{@link pow()} - 指数表达式</span></li>   </ul>  </span> </div></div>
 * @return float 'e' raised to the power of arg*/
function exp(float $num): float {}

/**
*<div id="function.log" class="refentry"> <div class="refnamediv">  <h1 class="refname">log</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">log</span> &mdash; <span class="dc-title">自然对数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.log-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>log</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$base</span><span class="initializer"> = <strong><span>M_E</span></strong></span></span>): <span class="type" style="color:#EAB766">float</span></div>   <p class="para rdfs-comment">    如果指定了可选的参数 <span class="parameter" style="color:#3A95FF">base</span>，<span class="function"><strong style="color:#CC7832">log()</strong></span>    返回 log<sub class="subscript">base</sub>    <span class="parameter" style="color:#3A95FF">num</span>，否则 <span class="function"><strong style="color:#CC7832">log()</strong></span>     返回参数 <span class="parameter" style="color:#3A95FF">num</span> 的自然对数。   </p>  </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.log-parameters">   <h3 class="title">参数</h3>   <span>    <dl>           <dt><span class="parameter" style="color:#3A95FF">num</span></dt>      <dd>       <p class="para">        要计算对数的值       </p>      </dd>                <dt><span class="parameter" style="color:#3A95FF">base</span></dt>      <dd>       <p class="para">        可选的底数（默认是“e”，也可以说是自然对数）。       </p>      </dd>         </dl>   </span>  </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.log-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   以 <span class="parameter" style="color:#3A95FF">base</span> 为底   <span class="parameter" style="color:#3A95FF">num</span> 的对数，如果未指定   <span class="parameter" style="color:#3A95FF">num</span> 则为自然对数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.log-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link log10()} - 以 10 为底的对数</span></li>    <li class="member"><span class="function">{@link exp()} - 计算 e 的指数</span></li>    <li class="member"><span class="function">{@link pow()} - 指数表达式</span></li>    <li class="member"><span class="function">{@link error_log()} - 发送错误信息到某个地方</span></li>   </ul>  </span> </div></div>
 * @return float The logarithm of arg to*/
function log(float $num, float $base = M_E): float {}

/**
*<div id="function.log10" class="refentry"> <div class="refnamediv">  <h1 class="refname">log10</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">log10</span> &mdash; <span class="dc-title">以 10 为底的对数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.log10-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>log10</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   返回参数 <span class="parameter" style="color:#3A95FF">num</span> 以 10 为底的对数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.log10-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要处理的参数      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.log10-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 以 10 为底的对数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.log10-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link log()} - 自然对数</span></li>   </ul>  </span> </div></div>
 * @return float The base-10 logarithm of arg*/
function log10(float $num): float {}

/**
*<div id="function.sqrt" class="refentry"> <div class="refnamediv">  <h1 class="refname">sqrt</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">sqrt</span> &mdash; <span class="dc-title">平方根</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.sqrt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sqrt</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   返回 <span class="parameter" style="color:#3A95FF">num</span> 的平方根。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.sqrt-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要处理的参数      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.sqrt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 <span class="parameter" style="color:#3A95FF">num</span> 的平方根，负数时返回 <span>NAN</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.sqrt-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">sqrt()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 精度取决于精度指令<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">sqrt</span><span style="color: #007700">(</span><span style="color: #9876AA">9</span><span style="color: #007700">); </span><span style="color: #FF8000">// 3<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">sqrt</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">); </span><span style="color: #FF8000">// 3.16227766 ...<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.sqrt-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link pow()} - 指数表达式</span></li>    <li class="member"><strong><span>M_SQRTPI</span></strong>——<span>sqrt(pi)</span></li>    <li class="member"><strong><span>M_2_SQRTPI</span></strong>——<span>2/sqrt(pi)</span></li>    <li class="member"><strong><span>M_SQRT2</span></strong>——<span>sqrt(2)</span></li>    <li class="member"><strong><span>M_SQRT3</span></strong>——<span>sqrt(3)</span></li>    <li class="member"><strong><span>M_SQRT1_2</span></strong>——<span>1/sqrt(2)</span></li>   </ul>  </span> </div></div>
 * @return float The square root of arg*/
function sqrt(float $num): float {}

/**
*<div id="function.hypot" class="refentry"> <div class="refnamediv">  <h1 class="refname">hypot</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">hypot</span> &mdash; <span class="dc-title">   计算直角三角形的斜边长度  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.hypot-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>hypot</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">hypot()</strong></span> 函数将会根据直角三角形的两直角边长度   <span class="parameter" style="color:#3A95FF">x</span> 和 <span class="parameter" style="color:#3A95FF">y</span> 计算其斜边的长度。或者是坐标点   （<span class="parameter" style="color:#3A95FF">x</span>, <span class="parameter" style="color:#3A95FF">y</span>）到原点的距离。该函数的算法等同于   <span>sqrt($x*$x + $y*$y)</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.hypot-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       第一条边的长度      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       第二条边的长度      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.hypot-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   计算斜边的长度  </p> </div>  </div>
 * @return float Calculated length of the hypotenuse*/
function hypot(float $x, float $y): float {}

/**
*<div id="function.deg2rad" class="refentry"> <div class="refnamediv">  <h1 class="refname">deg2rad</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">deg2rad</span> &mdash; <span class="dc-title">   将角度转换为弧度  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.deg2rad-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>deg2rad</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   本函数把 <span class="parameter" style="color:#3A95FF">num</span> 从角度转换成弧度。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.deg2rad-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       以角度为单位的值      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.deg2rad-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    <span class="parameter" style="color:#3A95FF">num</span> 等量的弧度值  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.deg2rad-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">deg2rad()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">deg2rad</span><span style="color: #007700">(</span><span style="color: #9876AA">45</span><span style="color: #007700">); </span><span style="color: #FF8000">// 0.785398163397<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">deg2rad</span><span style="color: #007700">(</span><span style="color: #9876AA">45</span><span style="color: #007700">) === </span><span style="color: #9876AA">M_PI_4</span><span style="color: #007700">); </span><span style="color: #FF8000">// bool(true)<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.deg2rad-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link rad2deg()} - 将弧度数转换为相应的角度数</span></li>   </ul>  </span> </div></div>
 * @return float The radian equivalent of number*/
function deg2rad(float $num): float {}

/**
*<div id="function.rad2deg" class="refentry"> <div class="refnamediv">  <h1 class="refname">rad2deg</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">rad2deg</span> &mdash; <span class="dc-title">   将弧度数转换为相应的角度数  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.rad2deg-description">  <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>rad2deg</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   本函数将 <span class="parameter" style="color:#3A95FF">num</span> 从弧度转换为角度。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.rad2deg-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       一个弧度值      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.rad2deg-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 相应的角度数  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.rad2deg-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">rad2deg()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">rad2deg</span><span style="color: #007700">(</span><span style="color: #9876AA">M_PI_4</span><span style="color: #007700">); </span><span style="color: #FF8000">// 45<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.rad2deg-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link deg2rad()} - 将角度转换为弧度</span></li>   </ul>  </span> </div></div>
 * @return float The equivalent of number in degrees*/
function rad2deg(float $num): float {}

/**
*<div id="function.bindec" class="refentry"> <div class="refnamediv">  <h1 class="refname">bindec</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">bindec</span> &mdash; <span class="dc-title">二进制转换为十进制</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.bindec-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>bindec</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$binary_string</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">float</span></span></div>  <p class="para rdfs-comment">   返回   <span class="parameter" style="color:#3A95FF">binary_string</span> 参数所表示的二进制数的十进制等价值。  </p>  <p class="para">   <span class="function"><strong style="color:#CC7832">bindec()</strong></span> 将一个二进制数转换成   <span class="type" style="color:#EAB766">int</span>，或者出于大小的需要，转换为 <span class="type" style="color:#EAB766">float</span> 类型。  </p>  <p class="para">   <span class="function"><strong style="color:#CC7832">bindec()</strong></span> 将所有的   <span class="parameter" style="color:#3A95FF">binary_string</span> 值解释为无符号整数。这是由于   <span class="function"><strong style="color:#CC7832">bindec()</strong></span> 函数将其最高有效位视为数量级而非符号位。  </p></div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.bindec-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">binary_string</span></dt>     <dd>      <p class="para">       要转换的二进制字符串。<span class="parameter" style="color:#3A95FF">binary_string</span>       中的任何无效字符都会默认忽略。自 PHP 7.4.0 起，弃用使用任何无效字符。      </p>     </dd>       </dl>  </span>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    参数必须为字符串。使用其他数据类型会导致不可预知的结果。   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.bindec-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">binary_string</span> 的十进制数值  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.bindec-changelog">  <h3 class="title">更新日志</h3>  <span>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.4.0</td>      <td>       传递任何无效字符现在将生成弃用通知。但仍会计算结果，就好像无效字符不存在一样。      </td>     </tr>    </tbody>     </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.bindec-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">bindec()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">bindec</span><span style="color: #007700">(</span><span style="color: #DD0000">'110011'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">bindec</span><span style="color: #007700">(</span><span style="color: #DD0000">'000110011'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br />echo </span><span style="color: #9876AA">bindec</span><span style="color: #007700">(</span><span style="color: #DD0000">'111'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>51<br>51<br>7<br></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 <span class="function"><strong style="color:#CC7832">bindec()</strong></span> 将输入解读为无符号整数</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//<br /> * The lesson from this example is in the output<br /> * rather than the PHP code itself.<br /> <br /><br /></span><span style="color: #9876AA">$magnitude_lower </span><span style="color: #007700">= </span><span style="color: #9876AA">pow</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">, (</span><span style="color: #9876AA">PHP_INT_SIZE </span><span style="color: #007700">* </span><span style="color: #9876AA">8</span><span style="color: #007700">) - </span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">p</span><span style="color: #007700">(</span><span style="color: #9876AA">$magnitude_lower </span><span style="color: #007700">- </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">p</span><span style="color: #007700">(</span><span style="color: #9876AA">$magnitude_lower</span><span style="color: #007700">, </span><span style="color: #DD0000">'See the rollover?  Watch it next time around...'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">p</span><span style="color: #007700">(</span><span style="color: #9876AA">PHP_INT_MAX</span><span style="color: #007700">, </span><span style="color: #DD0000">'PHP_INT_MAX'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">p</span><span style="color: #007700">(~</span><span style="color: #9876AA">PHP_INT_MAX</span><span style="color: #007700">, </span><span style="color: #DD0000">'interpreted to be one more than PHP_INT_MAX'</span><span style="color: #007700">);<br /><br />if (</span><span style="color: #9876AA">PHP_INT_SIZE </span><span style="color: #007700">== </span><span style="color: #9876AA">4</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$note </span><span style="color: #007700">= </span><span style="color: #DD0000">'interpreted to be the largest unsigned integer'</span><span style="color: #007700">;<br />} else {<br />    </span><span style="color: #9876AA">$note </span><span style="color: #007700">= </span><span style="color: #DD0000">'interpreted to be the largest unsigned integer<br />              (18446744073709551615) but skewed by float precision'</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">p</span><span style="color: #007700">(-</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$note</span><span style="color: #007700">);<br /><br /><br />function </span><span style="color: #9876AA">p</span><span style="color: #007700">(</span><span style="color: #9876AA">$input</span><span style="color: #007700">, </span><span style="color: #9876AA">$note </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"input:        </span><span style="color: #9876AA">$input</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br /><br />    </span><span style="color: #9876AA">$format </span><span style="color: #007700">= </span><span style="color: #DD0000">'%0' </span><span style="color: #007700">. (</span><span style="color: #9876AA">PHP_INT_SIZE </span><span style="color: #007700">* </span><span style="color: #9876AA">8</span><span style="color: #007700">) . </span><span style="color: #DD0000">'b'</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$bin </span><span style="color: #007700">= </span><span style="color: #9876AA">sprintf</span><span style="color: #007700">(</span><span style="color: #9876AA">$format</span><span style="color: #007700">, </span><span style="color: #9876AA">$input</span><span style="color: #007700">);<br />    echo </span><span style="color: #DD0000">"binary:       </span><span style="color: #9876AA">$bin</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br /><br />    </span><span style="color: #9876AA">ini_set</span><span style="color: #007700">(</span><span style="color: #DD0000">'precision'</span><span style="color: #007700">, </span><span style="color: #9876AA">20</span><span style="color: #007700">);  </span><span style="color: #FF8000">// For readability on 64 bit boxes.<br />    </span><span style="color: #9876AA">$dec </span><span style="color: #007700">= </span><span style="color: #9876AA">bindec</span><span style="color: #007700">(</span><span style="color: #9876AA">$bin</span><span style="color: #007700">);<br />    echo </span><span style="color: #DD0000">'bindec():     ' </span><span style="color: #007700">. </span><span style="color: #9876AA">$dec </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br />    if (</span><span style="color: #9876AA">$note</span><span style="color: #007700">) {<br />        echo </span><span style="color: #DD0000">"NOTE:         </span><span style="color: #9876AA">$note</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />    }<br /><br />    echo </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例在 32 位机器上的输出:</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>input:        1073741823<br>binary:       00111111111111111111111111111111<br>bindec():     1073741823<br><br>input:        1073741824<br>binary:       01000000000000000000000000000000<br>bindec():     1073741824<br>NOTE:         See the rollover?  Watch it next time around...<br><br>input:        2147483647<br>binary:       01111111111111111111111111111111<br>bindec():     2147483647<br>NOTE:         PHP_INT_MAX<br><br>input:        -2147483648<br>binary:       10000000000000000000000000000000<br>bindec():     2147483648<br>NOTE:         interpreted to be one more than PHP_INT_MAX<br><br>input:        -1<br>binary:       11111111111111111111111111111111<br>bindec():     4294967295<br>NOTE:         interpreted to be the largest unsigned integer<br></span></div>    </div>    <div class="example-contents"><p>以上示例在 64 位机器上的输出:</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>input:        4611686018427387903<br>binary:       0011111111111111111111111111111111111111111111111111111111111111<br>bindec():     4611686018427387903<br><br>input:        4611686018427387904<br>binary:       0100000000000000000000000000000000000000000000000000000000000000<br>bindec():     4611686018427387904<br>NOTE:         See the rollover?  Watch it next time around...<br><br>input:        9223372036854775807<br>binary:       0111111111111111111111111111111111111111111111111111111111111111<br>bindec():     9223372036854775807<br>NOTE:         PHP_INT_MAX<br><br>input:        -9223372036854775808<br>binary:       1000000000000000000000000000000000000000000000000000000000000000<br>bindec():     9223372036854775808<br>NOTE:         interpreted to be one more than PHP_INT_MAX<br><br>input:        -1<br>binary:       1111111111111111111111111111111111111111111111111111111111111111<br>bindec():     18446744073709551616<br>NOTE:         interpreted to be the largest unsigned integer<br>              (18446744073709551615) but skewed by float precision<br></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.bindec-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    此函数可以将太大的数字转换为适应平台的 <span class="type" style="color:#EAB766">int</span> 类型，在这种情况下，较大值将会作为    <span class="type" style="color:#EAB766">float</span> 返回。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.bindec-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link decbin()} - 十进制转换为二进制</span></li>    <li class="member"><span class="function">{@link octdec()} - 八进制转换为十进制</span></li>    <li class="member"><span class="function">{@link hexdec()} - 十六进制转换为十进制</span></li>    <li class="member"><span class="function">{@link base_convert()} - 在任意进制之间转换数字</span></li>   </ul>  </span> </div></div>
 * @return int|float The decimal value of binary_string*/
function bindec(string $binary_string): int|float {}

/**
*<div id="function.hexdec" class="refentry"> <div class="refnamediv">  <h1 class="refname">hexdec</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">hexdec</span> &mdash; <span class="dc-title">十六进制转换为十进制</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.hexdec-description">  <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="methodname" style="color:#CC7832"><strong>hexdec</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$hex_string</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">float</span></span></div>  <p class="para rdfs-comment">   返回与 <span class="parameter" style="color:#3A95FF">hex_string</span>   参数所表示的十六进制数等值的的十进制数。<span class="function"><strong style="color:#CC7832">hexdec()</strong></span>   将一个十六进制字符串转换为十进制数。  </p>  <p class="para">   <span class="function"><strong style="color:#CC7832">hexdec()</strong></span> 会忽略它遇到的任意非十六进制的字符。自 PHP 7.4.0 起，弃用使用任何无效字符。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.hexdec-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">hex_string</span></dt>     <dd>      <p class="para">       要转换的十六进制的字符串      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.hexdec-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">hex_string</span> 十进制的表示  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.hexdec-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.4.0</td>      <td>       传递任何无效字符现在将生成弃用通知。但仍会计算结果，就好像无效字符不存在一样。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.hexdec-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">hexdec()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">hexdec</span><span style="color: #007700">(</span><span style="color: #DD0000">"See"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">hexdec</span><span style="color: #007700">(</span><span style="color: #DD0000">"ee"</span><span style="color: #007700">));<br /></span><span style="color: #FF8000">// both print "int(238)"<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">hexdec</span><span style="color: #007700">(</span><span style="color: #DD0000">"that"</span><span style="color: #007700">)); </span><span style="color: #FF8000">// print "int(10)"<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">hexdec</span><span style="color: #007700">(</span><span style="color: #DD0000">"a0"</span><span style="color: #007700">)); </span><span style="color: #FF8000">// print "int(160)"<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.hexdec-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    此函数可以将太大的数字转换为适应平台的 <span class="type" style="color:#EAB766">int</span> 类型，在这种情况下，较大值将会作为    <span class="type" style="color:#EAB766">float</span> 返回。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.hexdec-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link dechex()} - 十进制转换为十六进制</span></li>    <li class="member"><span class="function">{@link bindec()} - 二进制转换为十进制</span></li>    <li class="member"><span class="function">{@link octdec()} - 八进制转换为十进制</span></li>    <li class="member"><span class="function">{@link base_convert()} - 在任意进制之间转换数字</span></li>   </ul>  </span> </div></div>
 * @return int|float The decimal representation of hex_string*/
function hexdec(string $hex_string): int|float {}

/**
*<div id="function.octdec" class="refentry"> <div class="refnamediv">  <h1 class="refname">octdec</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">octdec</span> &mdash; <span class="dc-title">八进制转换为十进制</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.octdec-description">  <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">    <span class="methodname" style="color:#CC7832"><strong>octdec</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$octal_string</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">float</span></span></div>  <p class="para rdfs-comment">   返回 <span class="parameter" style="color:#3A95FF">octal_string</span>   参数所表示的八进制数的十进制等值。<span class="parameter" style="color:#3A95FF">octal_string</span>   中的任何无效字符都会默认忽略。自 PHP 7.4.0 起，弃用使用任何无效字符。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.octdec-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">octal_string</span></dt>     <dd>      <p class="para">       要转换的八进制的字符串。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.octdec-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">octal_string</span> 的十进制的表示  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.octdec-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.4.0</td>      <td>       传递任何无效字符现在将生成弃用通知。但仍会计算结果，就好像无效字符不存在一样。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.octdec-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">octdec()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">octdec</span><span style="color: #007700">(</span><span style="color: #DD0000">'77'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">octdec</span><span style="color: #007700">(</span><span style="color: #9876AA">decoct</span><span style="color: #007700">(</span><span style="color: #9876AA">45</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>63<br>45<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.octdec-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    此函数可以将太大的数字转换为适应平台的 <span class="type" style="color:#EAB766">int</span> 类型，在这种情况下，较大值将会作为    <span class="type" style="color:#EAB766">float</span> 返回。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.octdec-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link decoct()} - 十进制转换为八进制</span></li>    <li class="member"><span class="function">{@link bindec()} - 二进制转换为十进制</span></li>    <li class="member"><span class="function">{@link hexdec()} - 十六进制转换为十进制</span></li>    <li class="member"><span class="function">{@link base_convert()} - 在任意进制之间转换数字</span></li>   </ul>  </span> </div></div>
 * @return int|float The decimal representation of octal_string*/
function octdec(string $octal_string): int|float {}

/**
*<div id="function.decbin" class="refentry"> <div class="refnamediv">  <h1 class="refname">decbin</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">decbin</span> &mdash; <span class="dc-title">十进制转换为二进制</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.decbin-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>decbin</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   返回字符串，包含有给定 <span class="parameter" style="color:#3A95FF">num</span> 参数的二进制表示。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.decbin-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要转换的十进制值      </p>      <table class="doctable table">       <caption><strong>32 位机器上的输入范围</strong></caption>               <col />        <col />        <col />        <thead>         <tr>          <th>正 <span class="parameter" style="color:#3A95FF">num</span></th>          <th>负 <span class="parameter" style="color:#3A95FF">num</span></th>          <th>返回值</th>         </tr>        </thead>        <tbody class="tbody">         <tr>          <td>0</td>          <td class="empty">&nbsp;</td>          <td>0</td>         </tr>         <tr>          <td>1</td>          <td class="empty">&nbsp;</td>          <td>1</td>         </tr>         <tr>          <td>2</td>          <td class="empty">&nbsp;</td>          <td>10</td>         </tr>         <tr>          <td colspan="3">... normal progression ...</td>         </tr>         <tr>          <td>2147483646</td>          <td class="empty">&nbsp;</td>          <td>1111111111111111111111111111110</td>         </tr>         <tr>          <td>2147483647（最大有符号整数）</td>          <td class="empty">&nbsp;</td>          <td>1111111111111111111111111111111 (31 1&#039;s)</td>         </tr>         <tr>          <td>2147483648</td>          <td>-2147483648</td>          <td>10000000000000000000000000000000</td>         </tr>         <tr>          <td colspan="3">... normal progression ...</td>         </tr>         <tr>          <td>4294967294</td>          <td>-2</td>          <td>11111111111111111111111111111110</td>         </tr>         <tr>          <td>4294967295（最大无符号整数）</td>          <td>-1</td>          <td>11111111111111111111111111111111 (32 1&#039;s)</td>         </tr>        </tbody>             </table>      <table class="doctable table">       <caption><strong>64 位机器上的输入范围</strong></caption>               <col />        <col />        <col />        <thead>         <tr>          <th>正 <span class="parameter" style="color:#3A95FF">num</span></th>          <th>负 <span class="parameter" style="color:#3A95FF">num</span></th>          <th>返回值</th>         </tr>        </thead>        <tbody class="tbody">         <tr>          <td>0</td>          <td class="empty">&nbsp;</td>          <td>0</td>         </tr>         <tr>          <td>1</td>          <td class="empty">&nbsp;</td>          <td>1</td>         </tr>         <tr>          <td>2</td>          <td class="empty">&nbsp;</td>          <td>10</td>         </tr>         <tr>          <td colspan="3">... normal progression ...</td>         </tr>         <tr>          <td>9223372036854775806</td>          <td class="empty">&nbsp;</td>          <td>111111111111111111111111111111111111111111111111111111111111110</td>         </tr>         <tr>          <td>9223372036854775807（最大有符号整数）</td>          <td class="empty">&nbsp;</td>          <td>111111111111111111111111111111111111111111111111111111111111111 (63 1&#039;s)</td>         </tr>         <tr>          <td class="empty">&nbsp;</td>          <td>-9223372036854775808</td>          <td>1000000000000000000000000000000000000000000000000000000000000000</td>         </tr>         <tr>          <td colspan="3">... normal progression ...</td>         </tr>         <tr>          <td class="empty">&nbsp;</td>          <td>-2</td>          <td>1111111111111111111111111111111111111111111111111111111111111110</td>         </tr>         <tr>          <td class="empty">&nbsp;</td>          <td>-1</td>          <td>1111111111111111111111111111111111111111111111111111111111111111 (64 1&#039;s)</td>         </tr>        </tbody>             </table>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.decbin-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 的二进制字符串表示  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.decbin-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">decbin()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">decbin</span><span style="color: #007700">(</span><span style="color: #9876AA">12</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">decbin</span><span style="color: #007700">(</span><span style="color: #9876AA">26</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>1100<br>11010<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.decbin-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link bindec()} - 二进制转换为十进制</span></li>    <li class="member"><span class="function">{@link decoct()} - 十进制转换为八进制</span></li>    <li class="member"><span class="function">{@link dechex()} - 十进制转换为十六进制</span></li>    <li class="member"><span class="function">{@link base_convert()} - 在任意进制之间转换数字</span></li>    <li class="member">     <span class="function">{@link printf()} - 输出格式化字符串</span>，格式使用 <span>%b</span>、<span>%032b</span> 或 <span>%064b</span>    </li>    <li class="member">     <span class="function">{@link sprintf()}</span>，格式使用 <span>%b</span>、<span>%032b</span> 或 <span>%064b</span>    </li>   </ul>  </span> </div></div>
 * @return string Binary string representation of number*/
function decbin(int $num): string {}

/**
*<div id="function.decoct" class="refentry"> <div class="refnamediv">  <h1 class="refname">decoct</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">decoct</span> &mdash; <span class="dc-title">十进制转换为八进制</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.decoct-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>decoct</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   返回一字符串，包含有给定 <span class="parameter" style="color:#3A95FF">num</span> 参数的八进制表示。可以转换的最大数字取决于平台。对于   32 位平台通常是十进制的 <span>4294967295</span>，结果是 <span>37777777777</span>。对于   64 位平台通常是十进制的 <span>9223372036854775807</span>，结果是 <span>777777777777777777777</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.decoct-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       待转换的十进制值      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.decoct-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 参数八进制表示的字符串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.decoct-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">decoct()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">decoct</span><span style="color: #007700">(</span><span style="color: #9876AA">15</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">decoct</span><span style="color: #007700">(</span><span style="color: #9876AA">264</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>17<br>410<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.decoct-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link octdec()} - 八进制转换为十进制</span></li>    <li class="member"><span class="function">{@link decbin()} - 十进制转换为二进制</span></li>    <li class="member"><span class="function">{@link dechex()} - 十进制转换为十六进制</span></li>    <li class="member"><span class="function">{@link base_convert()} - 在任意进制之间转换数字</span></li>   </ul>  </span> </div></div>
 * @return string Octal string representation of number*/
function decoct(int $num): string {}

/**
*<div id="function.dechex" class="refentry"> <div class="refnamediv">  <h1 class="refname">dechex</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">dechex</span> &mdash; <span class="dc-title">十进制转换为十六进制</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.dechex-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>dechex</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   返回一字符串，包含有给定   <span class="parameter" style="color:#3A95FF">num</span>   参数的十六进制表示。  </p>  <p class="para">   所能转换的最大数值为十进制的   <strong><span>PHP_INT_MAX</span></strong><span> * 2 + 1</span> (或   <span>-1</span>)：在 32 位平台上是十进制的 <span>4294967295</span>，其 <span class="function"><strong style="color:#CC7832">dechex()</strong></span> 的结果为 <span>ffffffff</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.dechex-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要转换的十进制值      </p>      <p class="para">       PHP 的 <span class="type" style="color:#EAB766">int</span> 类型是有符号的，但 <span class="function"><strong style="color:#CC7832">dechex()</strong></span> 处理无符号整数，负正数会以无符号处理。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.dechex-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 的16进制表示  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.dechex-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">dechex()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">dechex</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">dechex</span><span style="color: #007700">(</span><span style="color: #9876AA">47</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>a<br>2f<br></span></div>    </div>   </div>  </span>   <p class="para">   <div class="example" id="">    <p><strong>示例 #2 大整数的 <span class="function"><strong style="color:#CC7832">dechex()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 下面的输出假设是 32 位平台。<br />// 注意输出的所有值一样。<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">dechex</span><span style="color: #007700">(-</span><span style="color: #9876AA">1</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">dechex</span><span style="color: #007700">(</span><span style="color: #9876AA">PHP_INT_MAX </span><span style="color: #007700">* </span><span style="color: #9876AA">2 </span><span style="color: #007700">+ </span><span style="color: #9876AA">1</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">dechex</span><span style="color: #007700">(</span><span style="color: #9876AA">pow</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">32</span><span style="color: #007700">) - </span><span style="color: #9876AA">1</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>ffffffff<br>ffffffff<br>ffffffff<br></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.dechex-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link hexdec()} - 十六进制转换为十进制</span></li>    <li class="member"><span class="function">{@link decbin()} - 十进制转换为二进制</span></li>    <li class="member"><span class="function">{@link decoct()} - 十进制转换为八进制</span></li>    <li class="member"><span class="function">{@link base_convert()} - 在任意进制之间转换数字</span></li>   </ul>  </span> </div></div>
 * @return string Hexadecimal string representation of number*/
function dechex(int $num): string {}

/**
*<div id="function.base-convert" class="refentry"> <div class="refnamediv">  <h1 class="refname">base_convert</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">base_convert</span> &mdash; <span class="dc-title">在任意进制之间转换数字</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.base-convert-description">  <h3 class="title">说明</h3>   <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>base_convert</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$num</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$from_base</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$to_base</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   返回字符串，包含 <span class="parameter" style="color:#3A95FF">num</span> 以 <span class="parameter" style="color:#3A95FF">to_base</span>   进制的表示。<span class="parameter" style="color:#3A95FF">num</span> 本身的进制由 <span class="parameter" style="color:#3A95FF">from_base</span>   指定。<span class="parameter" style="color:#3A95FF">from_base</span> 和 <span class="parameter" style="color:#3A95FF">to_base</span> 都只能在   2 和 36 之间（包括 2 和 36）。高于十进制的数字用字母 a-z 表示，例如   a 表示 10，b 表示 11 以及 z 表示 35。字母的大小无关紧要，即 <span class="parameter" style="color:#3A95FF">num</span>   不区分大小写。  </p>  <div class="warning"><strong class="warning">警告</strong>   <p class="simpara">    由于使用内部的 <span class="type" style="color:#EAB766">float</span> 类型，<span class="function"><strong style="color:#CC7832">base_convert()</strong></span>    的操作可能会导致大数值中的精度丢失。请参见本手册的<a href="https://www.php.net/manual/zh/language.types.float.php" class="link">浮点数</a>章节以便获得更多详细信息。   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.base-convert-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要转换的数字。<span class="parameter" style="color:#3A95FF">num</span>       中的任何无效字符都会默认忽略。自 PHP 7.4.0 起，弃用使用任何无效字符。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">from_base</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">num</span> 的进制数      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">to_base</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">num</span> 要转换为的进制数      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.base-convert-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 转换为 <span class="parameter" style="color:#3A95FF">to_base</span> 进制  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.base-convert-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.4.0</td>      <td>       传递任何无效字符现在将生成弃用通知。但仍会计算结果，就好像无效字符不存在一样。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.base-convert-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">base_convert()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$hexadecimal </span><span style="color: #007700">= </span><span style="color: #DD0000">'a37334'</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">base_convert</span><span style="color: #007700">(</span><span style="color: #9876AA">$hexadecimal</span><span style="color: #007700">, </span><span style="color: #9876AA">16</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>101000110111001100110100<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.base-convert-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link intval()} - 获取变量的整数值</span></li>   </ul>  </span> </div></div>
 * @return string number converted to base tobase*/
function base_convert(string $num, int $from_base, int $to_base): string {}

/**
*<div id="function.number-format" class="refentry"> <div class="refnamediv">  <h1 class="refname">number_format</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">number_format</span> &mdash; <span class="dc-title">以千位分隔符方式格式化一个数字</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.number-format-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>number_format</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$decimals</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$decimal_separator</span><span class="initializer"> = &quot;.&quot;</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$thousands_separator</span><span class="initializer"> = &quot;,&quot;</span></span><br>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   使用四舍五入的规则，将数字格式化为千位分组和小数位（可选）。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.number-format-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num</span></dt>     <dd>      <p class="para">       要格式化的数字。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">decimals</span></dt>     <dd>      <p class="para">       设置小数位数。如果为 <span>0</span>，则从返回值中忽略 <span class="parameter" style="color:#3A95FF">decimal_separator</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">decimal_separator</span></dt>     <dd>      <p class="para">       指定小数点的分隔符。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">thousands_separator</span></dt>     <dd>      <p class="para">       设置千位分隔符。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.number-format-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num</span> 的格式化版本。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.number-format-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        在此版本之前，<span class="function"><strong style="color:#CC7832">number_format()</strong></span> 接受一个、两个或四个参数（不会是三个）。       </td>      </tr>      <tr>       <td>7.2.0</td>       <td>        <span class="function"><strong style="color:#CC7832">number_format()</strong></span> 现在再也不会返回 <span>-0</span>，之前        <span class="parameter" style="color:#3A95FF">num</span> 为 <span>-0.01</span> 的情况下可以返回 <span>-0</span>。       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.number-format-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">number_format()</strong></span> 示例</strong></p>    <div class="example-contents"><p>     例如，法语计数通常使用两位小数，逗号（“,”）作为小数分隔符，空格（“ ”）作为千位分隔符。以下示例展示了格式化数字的各种方法：    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$number </span><span style="color: #007700">= </span><span style="color: #9876AA">1234.56</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// 英文计数（默认）<br /></span><span style="color: #9876AA">$english_format_number </span><span style="color: #007700">= </span><span style="color: #9876AA">number_format</span><span style="color: #007700">(</span><span style="color: #9876AA">$number</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">// 1,235<br /><br />// 法语计数<br /></span><span style="color: #9876AA">$nombre_format_francais </span><span style="color: #007700">= </span><span style="color: #9876AA">number_format</span><span style="color: #007700">(</span><span style="color: #9876AA">$number</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #DD0000">','</span><span style="color: #007700">, </span><span style="color: #DD0000">' '</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">// 1 234,56<br /><br /></span><span style="color: #9876AA">$number </span><span style="color: #007700">= </span><span style="color: #9876AA">1234.5678</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// 没有千位分隔符的英文计数<br /></span><span style="color: #9876AA">$english_format_number </span><span style="color: #007700">= </span><span style="color: #9876AA">number_format</span><span style="color: #007700">(</span><span style="color: #9876AA">$number</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #DD0000">'.'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">// 1234.57<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.number-format-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link money_format()} - 将数字格式化成货币字符串</span></li>    <li class="member"><span class="function">{@link sprintf()} - 返回格式化字符串</span></li>    <li class="member"><span class="function">{@link printf()} - 输出格式化字符串</span></li>    <li class="member"><span class="function">{@link sscanf()} - 根据指定格式解析输入的字符</span></li>   </ul>  </span> </div></div>
 * @return string A formatted version of number.*/
function number_format(float $num, int $decimals = 0, ?string $decimal_separator = '.', ?string $thousands_separator = ','): string {}

/**
*<div id="function.fmod" class="refentry"> <div class="refnamediv">  <h1 class="refname">fmod</h1>   <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fmod</span> &mdash; <span class="dc-title">返回除法的浮点数余数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fmod-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fmod</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num2</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   返回被除数（<span class="parameter" style="color:#3A95FF">num1</span>）除以除数（<span class="parameter" style="color:#3A95FF">num2</span>）所得的浮点数余数。余数（<var class="varname">r</var>）的定义是：num1   = i * num2 + r，其中 <var class="varname">i</var> 是整数。如果 <span class="parameter" style="color:#3A95FF">num2</span>   是非零值，则 <var class="varname">r</var> 和   <span class="parameter" style="color:#3A95FF">num1</span> 的符号相同并且其数量值小于   <span class="parameter" style="color:#3A95FF">num2</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fmod-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num1</span></dt>     <dd>      <p class="para">       被除数      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">num2</span></dt>     <dd>      <p class="para">       除数      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fmod-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">num1</span>/<span class="parameter" style="color:#3A95FF">num2</span> 的浮点数余数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fmod-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">fmod()</strong></span> 的使用</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$x </span><span style="color: #007700">= </span><span style="color: #9876AA">5.7</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$y </span><span style="color: #007700">= </span><span style="color: #9876AA">1.3</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$r </span><span style="color: #007700">= </span><span style="color: #9876AA">fmod</span><span style="color: #007700">(</span><span style="color: #9876AA">$x</span><span style="color: #007700">, </span><span style="color: #9876AA">$y</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">// $r equals 0.5, because 4 * 1.3 + 0.5 = 5.7<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fmod-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><a href="https://www.php.net/manual/zh/language.operators.arithmetic.php" class="link"><span>/</span></a>——浮点除法</li>    <li class="member"><a href="https://www.php.net/manual/zh/language.operators.arithmetic.php" class="link"><span>%</span></a>——整数取模</li>    <li class="member"><span class="function">{@link intdiv()}</span>——整数除法</li>   </ul>  </span> </div></div>
 * @return float The floating point remainder of*/
function fmod(float $num1, float $num2): float {}

/**
*<div id="function.fdiv" class="refentry"> <div class="refnamediv">  <h1 class="refname">fdiv</h1>  <p class="verinfo">(PHP 8)</p><p class="refpurpose"><span class="refname">fdiv</span> &mdash; <span class="dc-title">Divides two numbers, according to IEEE 754</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fdiv-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fdiv</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$num2</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   Returns the floating point result of dividing the   <span class="parameter" style="color:#3A95FF">num1</span> by the <span class="parameter" style="color:#3A95FF">num2</span>.   If the <span class="parameter" style="color:#3A95FF">num2</span> is zero, then one of <span>INF</span>,   <span>-INF</span>, or <span>NAN</span> will be returned.  </p>  <p class="para">   Note that in comparisons, <span>NAN</span> will never <span>==</span> or <span>===</span>,   any value, including itself.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fdiv-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">num1</span></dt>     <dd>      <p class="para">       The dividend (numerator)      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">num2</span></dt>     <dd>      <p class="para">       The divisor      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fdiv-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The floating point result of   <span class="parameter" style="color:#3A95FF">num1</span>/<span class="parameter" style="color:#3A95FF">num2</span>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fdiv-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">fdiv()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">fdiv</span><span style="color: #007700">(</span><span style="color: #9876AA">5.7</span><span style="color: #007700">, </span><span style="color: #9876AA">1.3</span><span style="color: #007700">)); </span><span style="color: #FF8000">// float(4.384615384615385)<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">fdiv</span><span style="color: #007700">(</span><span style="color: #9876AA">4</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">)); </span><span style="color: #FF8000">// float(2)<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">fdiv</span><span style="color: #007700">(</span><span style="color: #9876AA">1.0</span><span style="color: #007700">, </span><span style="color: #9876AA">0.0</span><span style="color: #007700">)); </span><span style="color: #FF8000">// float(INF)<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">fdiv</span><span style="color: #007700">(-</span><span style="color: #9876AA">1.0</span><span style="color: #007700">, </span><span style="color: #9876AA">0.0</span><span style="color: #007700">)); </span><span style="color: #FF8000">// float(-INF)<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">fdiv</span><span style="color: #007700">(</span><span style="color: #9876AA">0.0</span><span style="color: #007700">, </span><span style="color: #9876AA">0.0</span><span style="color: #007700">)); </span><span style="color: #FF8000">// float(NAN)<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fdiv-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><a href="https://www.php.net/manual/zh/language.operators.arithmetic.php" class="link"><span>/</span></a> - Floating-point division</li>    <li class="member"><span class="function">{@link intdiv()}</span> - Integer division</li>    <li class="member"><span class="function">{@link fmod()}</span> - Modulus</li>   </ul>  </span> </div></div>
 * @return float*/
function fdiv(float $num1, float $num2): float {}

/**
*<div id="function.inet-ntop" class="refentry"> <div class="refnamediv">  <h1 class="refname">inet_ntop</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">inet_ntop</span> &mdash; <span class="dc-title">Converts a packed internet address to a human readable representation</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.inet-ntop-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>inet_ntop</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$ip</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="simpara">   This function converts a 32bit IPv4, or 128bit IPv6 address (if PHP   was built with IPv6 support enabled) into an address family appropriate   string representation.    </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.inet-ntop-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">ip</span></dt>     <dd>      <p class="para">       A 32bit IPv4, or 128bit IPv6 address.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.inet-ntop-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a string representation of the address 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.inet-ntop-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">inet_ntop()</strong></span> Example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$packed </span><span style="color: #007700">= </span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">127</span><span style="color: #007700">) . </span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">) . </span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">) . </span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$expanded </span><span style="color: #007700">= </span><span style="color: #9876AA">inet_ntop</span><span style="color: #007700">(</span><span style="color: #9876AA">$packed</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Outputs: 127.0.0.1 <br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$expanded</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$packed </span><span style="color: #007700">= </span><span style="color: #9876AA">str_repeat</span><span style="color: #007700">(</span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">), </span><span style="color: #9876AA">15</span><span style="color: #007700">) . </span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$expanded </span><span style="color: #007700">= </span><span style="color: #9876AA">inet_ntop</span><span style="color: #007700">(</span><span style="color: #9876AA">$packed</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Outputs: ::1 <br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$expanded</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.inet-ntop-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link long2ip()} - 将长整型转化为字符串形式带点的互联网标准格式地址（IPV4）</span></li>    <li class="member"><span class="function">{@link ip2long()} - 将 IPV4 的字符串互联网协议转换成长整型数字</span></li>    <li class="member"><span class="function">{@link inet_pton()} - Converts a human readable IP address to its packed in_addr representation</span></li>   </ul>  </span> </div></div>
 * @return string|false a string representation of the address or false on failure.*/
function inet_ntop(string $ip): string|false {}

/**
*<div id="function.inet-pton" class="refentry"> <div class="refnamediv">  <h1 class="refname">inet_pton</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">inet_pton</span> &mdash; <span class="dc-title">Converts a human readable IP address to its packed in_addr representation</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.inet-pton-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>inet_pton</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$ip</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   This function converts a human readable IPv4 or IPv6 address (if PHP   was built with IPv6 support enabled) into an address family appropriate   32bit or 128bit binary structure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.inet-pton-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">ip</span></dt>     <dd>      <p class="para">       A human readable IPv4 or IPv6 address.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.inet-pton-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the <span>in_addr</span> representation of the given   <span class="parameter" style="color:#3A95FF">ip</span>, or <strong><span>false</span></strong> if a syntactically invalid   <span class="parameter" style="color:#3A95FF">ip</span> is given (for example, an IPv4 address   without dots or an IPv6 address without colons).  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.inet-pton-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">inet_pton()</strong></span> Example</strong></p>    <div class="example-contents"> <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$in_addr </span><span style="color: #007700">= </span><span style="color: #9876AA">inet_pton</span><span style="color: #007700">(</span><span style="color: #DD0000">'127.0.0.1'</span><span style="color: #007700">);<br /> <br /></span><span style="color: #9876AA">$in6_addr </span><span style="color: #007700">= </span><span style="color: #9876AA">inet_pton</span><span style="color: #007700">(</span><span style="color: #DD0000">'::1'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>     </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.inet-pton-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link ip2long()} - 将 IPV4 的字符串互联网协议转换成长整型数字</span></li>    <li class="member"><span class="function">{@link long2ip()} - 将长整型转化为字符串形式带点的互联网标准格式地址（IPV4）</span></li>    <li class="member"><span class="function">{@link inet_ntop()} - Converts a packed internet address to a human readable representation</span></li>   </ul>  </span> </div></div>
 * @return string|false the in_addr representation of the given*/
function inet_pton(string $ip): string|false {}

/**
*<div id="function.ip2long" class="refentry"> <div class="refnamediv">  <h1 class="refname">ip2long</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ip2long</span> &mdash; <span class="dc-title">将 IPV4 的字符串互联网协议转换成长整型数字</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.ip2long-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>ip2long</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$ip</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   函数 <span class="function"><strong style="color:#CC7832">ip2long()</strong></span> 返回 IPV4 网络地址的长整型格式，从标准网络地址格式(点字符串)转化得到。  </p>  <p class="para">   <span class="function"><strong style="color:#CC7832">ip2long()</strong></span> 还可以与非完整IP进行工作。阅读   <a href="http://ps-2.kev009.com/wisclibrary/aix52/usr/share/man/info/en_US/a_doc_lib/libs/commtrf2/inet_addr.htm" class="link external">&raquo;&nbsp;http://ps-2.kev009.com/wisclibrary/aix52/usr/share/man/info/en_US/a_doc_lib/libs/commtrf2/inet_addr.htm</a>   获得更多信息。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.ip2long-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">ip</span></dt>     <dd>      <p class="para">      一个标准格式的地址。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.ip2long-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回IP地址转换后的数字，如果 <span class="parameter" style="color:#3A95FF">ip</span> 无效，则为 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.ip2long-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ip2long()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$ip </span><span style="color: #007700">= </span><span style="color: #9876AA">gethostbyname</span><span style="color: #007700">(</span><span style="color: #DD0000">'www.example.com'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$out </span><span style="color: #007700">= </span><span style="color: #DD0000">"The following URLs are equivalent:&lt;br /&gt;\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$out </span><span style="color: #007700">.= </span><span style="color: #DD0000">'http://www.example.com/, http://' </span><span style="color: #007700">. </span><span style="color: #9876AA">$ip </span><span style="color: #007700">. </span><span style="color: #DD0000">'/, and http://' </span><span style="color: #007700">. </span><span style="color: #9876AA">sprintf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%u"</span><span style="color: #007700">, </span><span style="color: #9876AA">ip2long</span><span style="color: #007700">(</span><span style="color: #9876AA">$ip</span><span style="color: #007700">)) . </span><span style="color: #DD0000">"/&lt;br /&gt;\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">$out</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 显示 IP 地址</strong></p>    <div class="example-contents"><p>     第二个例子说明使用 <span class="function">{@link printf()}</span> 打印转换后的地址：    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$ip   </span><span style="color: #007700">= </span><span style="color: #9876AA">gethostbyname</span><span style="color: #007700">(</span><span style="color: #DD0000">'www.example.com'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$long </span><span style="color: #007700">= </span><span style="color: #9876AA">ip2long</span><span style="color: #007700">(</span><span style="color: #9876AA">$ip</span><span style="color: #007700">);<br /><br />if (</span><span style="color: #9876AA">$long </span><span style="color: #007700">== -</span><span style="color: #9876AA">1 </span><span style="color: #007700">|| </span><span style="color: #9876AA">$long </span><span style="color: #007700">=== </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">'Invalid IP, please try again'</span><span style="color: #007700">;<br />} else {<br />    echo </span><span style="color: #9876AA">$ip   </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;            </span><span style="color: #FF8000">// 192.0.34.166<br />    </span><span style="color: #007700">echo </span><span style="color: #9876AA">$long </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;            </span><span style="color: #FF8000">// 3221234342 （-1073732954 32 位系统，整型溢出）<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%u\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">ip2long</span><span style="color: #007700">(</span><span style="color: #9876AA">$ip</span><span style="color: #007700">)); </span><span style="color: #FF8000">// 3221234342<br /></span><span style="color: #007700">}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.ip2long-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    因为 PHP 的 <span class="type" style="color:#EAB766">int</span> 类型是有符号，并且有许多的 IP 地址将导致在 32    位系统的情况下为负数，你需要使用“%u”进行转换通过 <span class="function">{@link sprintf()}</span> 或    <span class="function">{@link printf()}</span> 得到的字符串来表示无符号的 IP 地址。   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    由于整数值溢出，<span class="function"><strong style="color:#CC7832">ip2long()</strong></span> 将为 32 位系统上的 IP    <span>255.255.255.255</span> 返回 <span>-1</span>。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.ip2long-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link long2ip()} - 将长整型转化为字符串形式带点的互联网标准格式地址（IPV4）</span></li>    <li class="member"><span class="function">{@link sprintf()} - 返回格式化字符串</span></li>   </ul>  </span> </div></div>
 * @return int|false the IPv4 address or false if ip_address*/
function ip2long(string $ip): int|false {}

/**
*<div id="function.long2ip" class="refentry"> <div class="refnamediv">  <h1 class="refname">long2ip</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">long2ip</span> &mdash; <span class="dc-title">将长整型转化为字符串形式带点的互联网标准格式地址（IPV4）</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.long2ip-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>long2ip</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$ip</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">long2ip()</strong></span> 函数通过长整型的表达形式转化生成带点格式的互联网地址（例如：aaa.bbb.ccc.ddd ）。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.long2ip-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">ip</span></dt>     <dd>      <p class="para">       合格的地址，长整型的表达形式。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.long2ip-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回字符串的互联网 IP 地址， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.long2ip-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.1.0</td>      <td>       参数 <span class="parameter" style="color:#3A95FF">ip</span> 的类型从 <span class="type" style="color:#EAB766">string</span> 改成 <span class="type" style="color:#EAB766">int</span>。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.long2ip-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    在 32 位架构中，从 <span class="type" style="color:#EAB766">string</span> 转换 <span class="type" style="color:#EAB766">int</span> 整型形式的 ip 地址将有可能导致错误的结果，因为结果数字超出了 <strong><span>PHP_INT_MAX</span></strong> 限制。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.long2ip-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link ip2long()} - 将 IPV4 的字符串互联网协议转换成长整型数字</span></li>   </ul>  </span> </div></div>
 * @return string|false the Internet IP address as a string.*/
function long2ip(int $ip): string|false {}

/**
*<div id="function.getenv" class="refentry"> <div class="refnamediv">  <h1 class="refname">getenv</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">getenv</span> &mdash; <span class="dc-title">获取单个或者全部环境变量</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.getenv-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>getenv</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$name</span><span class="initializer"> = <strong><span>null</span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$local_only</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   获取单个或者全部环境变量。  </p>  <p class="para">   使用 <span class="function">{@link phpinfo()}</span> 你可以看到所有环境变量的列表。   这些变量很多都在 <a href="http://www.faqs.org/rfcs/rfc3875" class="link external">&raquo;&nbsp;RFC 3875</a> 的范围之内，   尤其是章节4.1，&quot;Request Meta-Variables&quot;。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.getenv-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">       <span class="type" style="color:#EAB766">string</span> 形式的变量名或为 <strong><span>null</span></strong>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">local_only</span></dt>     <dd>      <p class="para">       当设置为 <strong><span>true</span></strong> 时，仅返回由操作系统或 <span class="function">{@link putenv()}</span>       设置的本地环境变量。这只在 <span class="parameter" style="color:#3A95FF">name</span> 是 <span class="type" style="color:#EAB766">string</span> 时才生效。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.getenv-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回环境变量 <span class="parameter" style="color:#3A95FF">name</span> 的值，如果环境变量 <span class="parameter" style="color:#3A95FF">name</span>   不存在则返回 <strong><span>false</span></strong>。如果 <span class="parameter" style="color:#3A95FF">name</span> 是 <strong><span>null</span></strong>，则所有环境变量都将作为关联   <span class="type" style="color:#EAB766">array</span> 返回。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.getenv-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">name</span> 现在可为 null。      </td>     </tr>     <tr>      <td>7.1.0</td>      <td>       现在可以省略 <span class="parameter" style="color:#3A95FF">name</span> 来检索所有环境变量的关联数组 <span class="type" style="color:#EAB766">array</span>。      </td>     </tr>     <tr>      <td>7.0.9</td>      <td>       添加 <span class="parameter" style="color:#3A95FF">local_only</span> 参数。      </td>     </tr>    </tbody>     </table> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.getenv-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="example-1691">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">getenv()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// getenv() 使用示例<br /></span><span style="color: #9876AA">$ip </span><span style="color: #007700">= </span><span style="color: #9876AA">getenv</span><span style="color: #007700">(</span><span style="color: #DD0000">'REMOTE_ADDR'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 或简单仅使用全局变量（$_SERVER 或 $_ENV）<br /></span><span style="color: #9876AA">$ip </span><span style="color: #007700">= </span><span style="color: #9876AA">$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">'REMOTE_ADDR'</span><span style="color: #007700">];<br /><br /></span><span style="color: #FF8000">// 安全地获取环境变量，忽略通过 SAPI 或 putenv 修改的值<br /></span><span style="color: #9876AA">$ip </span><span style="color: #007700">= </span><span style="color: #9876AA">getenv</span><span style="color: #007700">(</span><span style="color: #DD0000">'REMOTE_ADDR'</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">) ?: </span><span style="color: #9876AA">getenv</span><span style="color: #007700">(</span><span style="color: #DD0000">'REMOTE_ADDR'</span><span style="color: #007700">)<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.getenv-notes">  <h3 class="title">注释</h3>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    如果 PHP 在诸如 Fast CGI 之类的 SAPI 中运行，则此函数将始终返回由 SAPI 设置的环境变量的值，即使已使用    <span class="function">{@link putenv()}</span> 来设置同名的本地环境变量。使用 <span class="parameter" style="color:#3A95FF">local_only</span>    参数返回本地设置的环境变量的值。   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.getenv-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link putenv()} - 设置环境变量的值</span></li>    <li class="member"><span class="function">{@link apache_getenv()} - 获取 Apache subprocess_env 变量</span></li>    <li class="member"><a href="https://www.php.net/manual/zh/language.variables.superglobals.php" class="link">超全局变量</a></li>   </ul>  </span> </div></div>
 * @return string|array|false the value of the environment variable*/
function getenv(
    #[PhpStormStubsElementAvailable(from: '5.3', to: '7.0')] $varname,
    #[PhpStormStubsElementAvailable(from: '7.1')] ?string $name = null,
    #[PhpStormStubsElementAvailable(from: '5.6')] bool $local_only = false
): array|string|false {}

/**
*<div id="function.putenv" class="refentry"> <div class="refnamediv">  <h1 class="refname">putenv</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">putenv</span> &mdash; <span class="dc-title">设置环境变量的值</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.putenv-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>putenv</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$assignment</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   添加 <span class="parameter" style="color:#3A95FF">assignment</span> 到服务器环境变量。   环境变量仅存活于当前请求期间。   在请求结束时环境会恢复到初始状态。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.putenv-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">assignment</span></dt>     <dd>      <p class="para">       设置，例如 <span>&quot;FOO=BAR&quot;</span>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.putenv-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.putenv-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="example-1769">    <p><strong>示例 #1 设置一个环境变量</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />putenv</span><span style="color: #007700">(</span><span style="color: #DD0000">"UNIQID=</span><span style="color: #9876AA">$uniqid</span><span style="color: #DD0000">"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.putenv-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link getenv()} - 获取单个或者全部环境变量</span></li>    <li class="member"><span class="function">{@link apache_setenv()} - 设置 Apache 子进程环境变量</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function putenv(string $assignment): bool {}

/**
*<div id="function.getopt" class="refentry"> <div class="refnamediv">  <h1 class="refname">getopt</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">getopt</span> &mdash; <span class="dc-title">从命令行参数列表中获取选项</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.getopt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>getopt</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$short_options</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$long_options</span><span class="initializer"> = []</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">&$rest_index</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   解析传入脚本的选项。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.getopt-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">short_options</span></dt>     <dd>      <span class="simpara">       该字符串中的每个字符会被当做选项字符，匹配传入脚本的选项以单个连字符 (<span>-</span>) 开头。      </span>      <span class="simpara">       比如，一个选项字符串 <span>&quot;x&quot;</span> 识别了一个选项       <span>-x</span>。      </span>      <span class="simpara">       只允许 a-z、A-Z 和 0-9。      </span>     </dd>             <dt><span class="parameter" style="color:#3A95FF">long_options</span></dt>     <dd>      <span class="simpara">       选项数组。此数组中的每个元素会被作为选项字符串，匹配了以两个连字符       (<span>--</span>) 传入到脚本的选项。      </span>      <span class="simpara">       例如，长选项元素 <span>&quot;opt&quot;</span> 识别了一个选项       <span>--opt</span>。      </span>     </dd>             <dt><span class="parameter" style="color:#3A95FF">rest_index</span></dt>     <dd>      <span class="simpara">       如果传递了 <span class="parameter" style="color:#3A95FF">rest_index</span>       参数，那么参数解析停止时的索引，将被赋值给此变量。      </span>     </dd>       </dl>  </span>  <p class="para">   <span class="parameter" style="color:#3A95FF">short_options</span> 可能包含了以下元素：   <ul class="simplelist">    <li class="member">单独的字符（不接受值）</li>    <li class="member">后面跟随冒号的字符（此选项需要值）</li>    <li class="member">后面跟随两个冒号的字符（此选项的值可选）</li>   </ul>   选项的值是字符串后的第一个参数。如果需要一个值，它不介意值之前是否有前置的空格，参见以下内容。   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     <span class="simpara">     选项的值不接受空格（<span>&quot; &quot;</span>）作为分隔符。    </span>   </p></blockquote>  </p>  <p class="para">   <span class="parameter" style="color:#3A95FF">long_options</span> 数组可能包含了以下元素：    <ul class="simplelist">      <li class="member">字符串（参数不接受任何值）</li>      <li class="member">后面跟随冒号的字符串（此选项需要值）</li>      <li class="member">后面跟随两个冒号的字符串（此选项的值可选）</li>    </ul>  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    <span class="parameter" style="color:#3A95FF">short_options</span> 和 <span class="parameter" style="color:#3A95FF">long_options</span> 的格式几乎是一样的，唯一的不同之处是    <span class="parameter" style="color:#3A95FF">long_options</span> 需要是选项的数组（每个元素为一个选项），而 <span class="parameter" style="color:#3A95FF">short_options</span>    需要一个字符串（每个字符是个选项）。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.getopt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   此函数会返回选项/参数对， 或者在失败时返回 <strong><span>false</span></strong>。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    选项的解析会终止于找到的第一个非选项，之后的任何东西都会被丢弃。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.getopt-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.1.0</td>       <td>        添加 <span class="parameter" style="color:#3A95FF">rest_index</span> 参数。       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.getopt-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="example-1697">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">getopt()</strong></span> 示例：基本用法</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Script example.php<br /></span><span style="color: #9876AA">$options </span><span style="color: #007700">= </span><span style="color: #9876AA">getopt</span><span style="color: #007700">(</span><span style="color: #DD0000">"f:hp:"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$options</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><div class="shellcode"><span>shell&gt; php example.php -fvalue -h</span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(2) {<br>  [&quot;f&quot;]=&gt;<br>  string(5) &quot;value&quot;<br>  [&quot;h&quot;]=&gt;<br>  bool(false)<br>}<br></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="example-1700">    <p><strong>示例 #2 <span class="function"><strong style="color:#CC7832">getopt()</strong></span> 示例：引入长选项</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Script example.php<br /></span><span style="color: #9876AA">$shortopts  </span><span style="color: #007700">= </span><span style="color: #DD0000">""</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$shortopts </span><span style="color: #007700">.= </span><span style="color: #DD0000">"f:"</span><span style="color: #007700">;  </span><span style="color: #FF8000">// Required value<br /></span><span style="color: #9876AA">$shortopts </span><span style="color: #007700">.= </span><span style="color: #DD0000">"v::"</span><span style="color: #007700">; </span><span style="color: #FF8000">// Optional value<br /></span><span style="color: #9876AA">$shortopts </span><span style="color: #007700">.= </span><span style="color: #DD0000">"abc"</span><span style="color: #007700">; </span><span style="color: #FF8000">// These options do not accept values<br /><br /></span><span style="color: #9876AA">$longopts  </span><span style="color: #007700">= array(<br />    </span><span style="color: #DD0000">"required:"</span><span style="color: #007700">,     </span><span style="color: #FF8000">// Required value<br />    </span><span style="color: #DD0000">"optional::"</span><span style="color: #007700">,    </span><span style="color: #FF8000">// Optional value<br />    </span><span style="color: #DD0000">"option"</span><span style="color: #007700">,        </span><span style="color: #FF8000">// No value<br />    </span><span style="color: #DD0000">"opt"</span><span style="color: #007700">,           </span><span style="color: #FF8000">// No value<br /></span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$options </span><span style="color: #007700">= </span><span style="color: #9876AA">getopt</span><span style="color: #007700">(</span><span style="color: #9876AA">$shortopts</span><span style="color: #007700">, </span><span style="color: #9876AA">$longopts</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$options</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><div class="shellcode"><span>shell&gt; php example.php -f &quot;value for f&quot; -v -a --required value --optional=&quot;optional value&quot; --option</span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(6) {<br>  [&quot;f&quot;]=&gt;<br>  string(11) &quot;value for f&quot;<br>  [&quot;v&quot;]=&gt;<br>  bool(false)<br>  [&quot;a&quot;]=&gt;<br>  bool(false)<br>  [&quot;required&quot;]=&gt;<br>  string(5) &quot;value&quot;<br>  [&quot;optional&quot;]=&gt;<br>  string(14) &quot;optional value&quot;<br>  [&quot;option&quot;]=&gt;<br>  bool(false)<br>}<br></span></div>    </div>   </div>  </p>  <p class="para">   <div class="example" id="example-1703">    <p><strong>示例 #3 <span class="function"><strong style="color:#CC7832">getopt()</strong></span> 示例：传递同一多个选项</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Script example.php<br /></span><span style="color: #9876AA">$options </span><span style="color: #007700">= </span><span style="color: #9876AA">getopt</span><span style="color: #007700">(</span><span style="color: #DD0000">"abc"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$options</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><div class="shellcode"><span>shell&gt; php example.php -aaac</span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(2) {<br>  [&quot;a&quot;]=&gt;<br>  array(3) {<br>    [0]=&gt;<br>    bool(false)<br>    [1]=&gt;<br>    bool(false)<br>    [2]=&gt;<br>    bool(false)<br>  }<br>  [&quot;c&quot;]=&gt;<br>  bool(false)<br>}<br></span></div>    </div>   </div>  </p>  <p class="para">   <div class="example" id="example-1706">    <p><strong>示例 #4 <span class="function"><strong style="color:#CC7832">getopt()</strong></span> 示例：使用 <span class="parameter" style="color:#3A95FF">rest_index</span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Script example.php<br /></span><span style="color: #9876AA">$rest_index </span><span style="color: #007700">= </span><span style="color: #9876AA">null</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$opts </span><span style="color: #007700">= </span><span style="color: #9876AA">getopt</span><span style="color: #007700">(</span><span style="color: #DD0000">'a:b:'</span><span style="color: #007700">, [], </span><span style="color: #9876AA">$rest_index</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$pos_args </span><span style="color: #007700">= </span><span style="color: #9876AA">array_slice</span><span style="color: #007700">(</span><span style="color: #9876AA">$argv</span><span style="color: #007700">, </span><span style="color: #9876AA">$rest_index</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$pos_args</span><span style="color: #007700">);</span></span></span></div>    </div>    <div class="example-contents"><div class="shellcode"><span>shell&gt; php example.php -a 1 -b 2 -- test</span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(1) {<br>  [0]=&gt;<br>  string(4) &quot;test&quot;<br>}<br></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.getopt-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><a href="https://www.php.net/manual/zh/reserved.variables.argv.php" class="link"><var class="varname"><a href="https://www.php.net/manual/zh/reserved.variables.argv.php" class="classname">$argv</a></var></a></li>   </ul>  </span> </div></div>
 * @return string[]|false[]|false This function will return an array of option / argument pairs or false on*/
function getopt(
    string $short_options,
    array $long_options = [],
    #[PhpStormStubsElementAvailable(from: '7.1')] &$rest_index
): array|false {}

/**
*<div id="function.sys-getloadavg" class="refentry"> <div class="refnamediv">  <h1 class="refname">sys_getloadavg</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.3, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">sys_getloadavg</span> &mdash; <span class="dc-title">获取系统的负载（load average）</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.sys-getloadavg-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sys_getloadavg</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   返回三个系统负载（系统运行队列中的进程数）的样本数据，分别是 1 分钟、5 分钟和 15 分钟之前。失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.sys-getloadavg-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.sys-getloadavg-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个包含 1 分钟、5 分钟和 15 分钟之前采样数据的 <span class="type" style="color:#EAB766">array</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.sys-getloadavg-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">sys_getloadavg()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$load </span><span style="color: #007700">= </span><span style="color: #9876AA">sys_getloadavg</span><span style="color: #007700">();<br />if (</span><span style="color: #9876AA">$load</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">] &gt; </span><span style="color: #9876AA">80</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'HTTP/1.1 503 Too busy, try again later'</span><span style="color: #007700">);<br />    die(</span><span style="color: #DD0000">'Server too busy. Please try again later.'</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.sys-getloadavg-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数未在 Windows 平台下实现。</span></p></blockquote> </div></div>
 * @return array|false an array with three samples (last 1, 5 and 15*/
function sys_getloadavg(): array|false {}

/**
*<div id="function.microtime" class="refentry"> <div class="refnamediv">  <h1 class="refname">microtime</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">microtime</span> &mdash; <span class="dc-title">返回当前 Unix 时间戳和微秒数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.microtime-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>microtime</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$as_float</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">float</span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">microtime()</strong></span> 返回当前 Unix   时间戳以及微秒数。本函数仅在支持 gettimeofday()   系统调用的操作系统下可用。  </p>  <p class="para">   对于性能测量，建议使用 <span class="function">{@link hrtime()}</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.microtime-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">as_float</span></dt>     <dd>      <p class="para">       如果使用并设置为 <strong><span>true</span></strong>，<span class="function"><strong style="color:#CC7832">microtime()</strong></span>       将返回浮点数而不是字符串，具体查看下面的返回值相关描述。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.microtime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   默认情况下，<span class="function"><strong style="color:#CC7832">microtime()</strong></span> 返回“msec sec”形式的 <span class="type" style="color:#EAB766">string</span>，其中   <span>sec</span> 是自 Unix 纪元（格林威治标准时间 1970 年 1 月 1 日   0:00:00）以来的秒数，<span>msec</span> 是自 <span>sec</span>   以来经过的微秒，表示为秒数的小数部分。  </p>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">as_float</span> 设置为 <strong><span>true</span></strong>，然后 <span class="function"><strong style="color:#CC7832">microtime()</strong></span>   返回 <span class="type" style="color:#EAB766">float</span>，表示自 Unix 纪元以来的当前时间，以秒为单位，精确到最接近的微秒。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.microtime-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 计时脚本执行时间</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$time_start </span><span style="color: #007700">= </span><span style="color: #9876AA">microtime</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Sleep 一会<br /></span><span style="color: #9876AA">usleep</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$time_end </span><span style="color: #007700">= </span><span style="color: #9876AA">microtime</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$time </span><span style="color: #007700">= </span><span style="color: #9876AA">$time_end </span><span style="color: #007700">- </span><span style="color: #9876AA">$time_start</span><span style="color: #007700">;<br /><br />echo </span><span style="color: #DD0000">"Did nothing in </span><span style="color: #9876AA">$time</span><span style="color: #DD0000"> seconds\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>   <div class="example" id="">    <p><strong>示例 #2 <span class="function"><strong style="color:#CC7832">microtime()</strong></span> 和 <span>REQUEST_TIME_FLOAT</span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 随机 sleep 时间<br /></span><span style="color: #9876AA">usleep</span><span style="color: #007700">(</span><span style="color: #9876AA">mt_rand</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">10000</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">// 在 $_SERVER 超全局数组中 REQUEST_TIME_FLOAT 是有效的。<br />// 包含请求开始的时间戳，精度为微秒。<br /></span><span style="color: #9876AA">$time </span><span style="color: #007700">= </span><span style="color: #9876AA">microtime</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">) - </span><span style="color: #9876AA">$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">"REQUEST_TIME_FLOAT"</span><span style="color: #007700">];<br /><br />echo </span><span style="color: #DD0000">"Did nothing in </span><span style="color: #9876AA">$time</span><span style="color: #DD0000"> seconds\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.microtime-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link time()} - 返回当前的 Unix 时间戳</span></li>    <li class="member"><span class="function">{@link hrtime()} - 获取系统的高精度时间</span></li>   </ul>  </span> </div></div>
 * @return string|float*/
function microtime(#[TypeContract(true: "float", false: "string")] bool $as_float = false): string|float {}

/**
*<div id="function.gettimeofday" class="refentry"> <div class="refnamediv">  <h1 class="refname">gettimeofday</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">gettimeofday</span> &mdash; <span class="dc-title">取得当前时间</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.gettimeofday-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>gettimeofday</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$as_float</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766">float</span></span></div>  <p class="para rdfs-comment">   本函数是 gettimeofday(2) 的接口。返回一个关联数组，包含有系统调用返回的数据。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.gettimeofday-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">as_float</span></dt>     <dd>      <p class="para">        当其设为 <strong><span>true</span></strong> 时，会返回浮点数而不是数组。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.gettimeofday-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   默认返回 <span class="type" style="color:#EAB766">array</span>。如果设置了 <span class="parameter" style="color:#3A95FF">as_float</span>   则会返回 <span class="type" style="color:#EAB766">float</span>。  </p>  <p class="para">   数组中的键为：   <ul class="itemizedlist">    <li class="listitem">     <span class="simpara">      &quot;sec&quot; - 自 Unix 纪元起的秒数     </span>    </li>    <li class="listitem">     <span class="simpara">      &quot;usec&quot; - 微秒数     </span>    </li>    <li class="listitem">     <span class="simpara">      &quot;minuteswest&quot; - 格林威治向西的分钟数     </span>    </li>    <li class="listitem">     <span class="simpara">      &quot;dsttime&quot; - 夏令时修正的类型     </span>    </li>   </ul>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.gettimeofday-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">gettimeofday()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">gettimeofday</span><span style="color: #007700">());<br /><br />echo </span><span style="color: #9876AA">gettimeofday</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [sec] =&gt; 1073504408<br>    [usec] =&gt; 238215<br>    [minuteswest] =&gt; 0<br>    [dsttime] =&gt; 1<br>)<br><br>1073504408.23910<br></span></div>    </div>   </div>  </span> </div></div>
 * @return int[]|float By default an array is returned. If return_float*/
function gettimeofday(#[TypeContract(true: "float", false: "int[]")] bool $as_float = false): array|float {}

/**
*<div id="function.getrusage" class="refentry"> <div class="refnamediv">  <h1 class="refname">getrusage</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">getrusage</span> &mdash; <span class="dc-title">获取当前资源使用状况</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.getrusage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>getrusage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$mode</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   这是 <strong class="command">getrusage(2)</strong> 的接口。它返回了调用自系统的数据。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.getrusage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">mode</span></dt>     <dd>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">mode</span> 是 1，getrusage 会使用       <strong><span>RUSAGE_CHILDREN</span></strong> 来调用。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.getrusage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回了一个包含系统返回数据的关联数组。所以条目均可通过文档中字段的名称来访问。失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.getrusage-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.0.0</td>       <td>        此函数现在开始支持 Windows。       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.getrusage-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="example-1709">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">getrusage()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$dat </span><span style="color: #007700">= </span><span style="color: #9876AA">getrusage</span><span style="color: #007700">();<br />echo </span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_oublock"</span><span style="color: #007700">];       </span><span style="color: #FF8000">// 块输出操作数<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_inblock"</span><span style="color: #007700">];       </span><span style="color: #FF8000">// 块输入操作数<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_msgsnd"</span><span style="color: #007700">];        </span><span style="color: #FF8000">// 发送的 IPC 消息数<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_msgrcv"</span><span style="color: #007700">];        </span><span style="color: #FF8000">// 接收的 IPC 消息数<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_maxrss"</span><span style="color: #007700">];        </span><span style="color: #FF8000">// maximum resident set size<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_ixrss"</span><span style="color: #007700">];         </span><span style="color: #FF8000">// 整数类型的共享内存大小<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_idrss"</span><span style="color: #007700">];         </span><span style="color: #FF8000">// 整数类型的非共享内存大小<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_minflt"</span><span style="color: #007700">];        </span><span style="color: #FF8000">// 页面回收次数（软分页错误）<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_majflt"</span><span style="color: #007700">];        </span><span style="color: #FF8000">// 页面错误次数（硬分页错误）<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_nsignals"</span><span style="color: #007700">];      </span><span style="color: #FF8000">// 接收到的信号数<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_nvcsw"</span><span style="color: #007700">];         </span><span style="color: #FF8000">// number of voluntary context switches<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_nivcsw"</span><span style="color: #007700">];        </span><span style="color: #FF8000">// number of involuntary context switches<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_nswap"</span><span style="color: #007700">];         </span><span style="color: #FF8000">// 交换次数<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_utime.tv_usec"</span><span style="color: #007700">]; </span><span style="color: #FF8000">// 用户使用时间（微秒）<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_utime.tv_sec"</span><span style="color: #007700">];  </span><span style="color: #FF8000">// 用户使用时间（秒）<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_stime.tv_usec"</span><span style="color: #007700">]; </span><span style="color: #FF8000">// 系统使用时间（微秒）<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$dat</span><span style="color: #007700">[</span><span style="color: #DD0000">"ru_stime.tv_sec"</span><span style="color: #007700">];  </span><span style="color: #FF8000">// 系统使用时间（秒）<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.getrusage-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    在 Windows 上 <span class="function"><strong style="color:#CC7832">getrusage()</strong></span> 仅会返回以下类型：   </p>   <p class="para">    <ul class="simplelist">     <li class="member"><span>&quot;ru_stime.tv_sec&quot;</span></li>     <li class="member"><span>&quot;ru_stime.tv_usec&quot;</span></li>     <li class="member"><span>&quot;ru_utime.tv_sec&quot;</span></li>     <li class="member"><span>&quot;ru_utime.tv_usec&quot;</span></li>     <li class="member">      <span>&quot;ru_majflt&quot;</span>（仅当 <span class="parameter" style="color:#3A95FF">mode</span> 是      <strong><span>RUSAGE_SELF</span></strong>）     </li>     <li class="member">      <span>&quot;ru_maxrss&quot;</span>（仅当 <span class="parameter" style="color:#3A95FF">mode</span> 是      <strong><span>RUSAGE_SELF</span></strong>）     </li>    </ul>   </p>   <p class="para">    如果使用设置 <span class="parameter" style="color:#3A95FF">mode</span> 为     <span>1</span>（<strong><span>RUSAGE_CHILDREN</span></strong>）的情况下调用    <span class="function"><strong style="color:#CC7832">getrusage()</strong></span>，则会收集线程的资源使用情况（意味着在内部使用    <strong><span>RUSAGE_THREAD</span></strong> 调用此函数）。   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    在 BeOS 2000，仅会返回以下类型：   </p>   <p class="para">    <ul class="simplelist">     <li class="member"><span>&quot;ru_stime.tv_sec&quot;</span></li>     <li class="member"><span>&quot;ru_stime.tv_usec&quot;</span></li>     <li class="member"><span>&quot;ru_utime.tv_sec&quot;</span></li>     <li class="member"><span>&quot;ru_utime.tv_usec&quot;</span></li>    </ul>   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.getrusage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member">系统上 <strong class="command">getrusage(2)</strong> 的 man 页面</li>   </ul>  </span> </div></div>
 * @return array|false an associative array containing the data returned from the system*/
function getrusage(int $mode = 0): array|false {}

/**
*<div id="function.uniqid" class="refentry"> <div class="refnamediv">  <h1 class="refname">uniqid</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">uniqid</span> &mdash; <span class="dc-title">生成一个唯一ID</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.uniqid-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>uniqid</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$prefix</span><span class="initializer"> = &quot;&quot;</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$more_entropy</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   获取一个带前缀、基于当前时间微秒数的唯一ID。  </p>  <div class="caution"><strong class="caution">警告</strong> <p class="para">  本函数并不会生成安全加密的值，并且<em>不可</em>用于加密或者要求返回值不可猜测的目的。 </p> <p class="para">  如果需要加密安全随机，则可以将 <span class="classname"><a href="https://www.php.net/manual/zh/class.random-engine-secure.php" class="classname">Random\Engine\Secure</a></span> 引擎用于  <span class="classname"><a href="https://www.php.net/manual/zh/class.random-randomizer.php" class="classname">Random\Randomizer</a></span>。对于简单的用例，<span class="function">{@link random_int()}</span>  和 <span class="function">{@link random_bytes()}</span> 函数提供了操作系统的 <abbr title="Cryptographically Secure PseudoRandom Number Generator">CSPRNG</abbr> 支持的方便且安全的 <abbr title="Application Programming Interface">API</abbr>。 </p></div>  <div class="warning"><strong class="warning">警告</strong>    <p class="para">     此函数不保证返回值的唯一性。由于绝大多数系统使用 NTP     或者类似服务调整系统的时间，所以系统时间经常发生变化。此外，进程/线程可能不会返回唯一的      ID。用 <span class="parameter" style="color:#3A95FF">more_entropy</span> 来增加唯一性的概率。    </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.uniqid-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">prefix</span></dt>     <dd>      <p class="para">       有用的参数。例如：如果在多台主机上可能在同一微秒生成唯一ID。      </p>      <p class="para">       <span class="parameter" style="color:#3A95FF">prefix</span>为空，则返回的字符串长度为       13。<span class="parameter" style="color:#3A95FF">more_entropy</span> 为 <strong><span>true</span></strong>，则返回的字符串长度为 23。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">more_entropy</span></dt>     <dd>      <p class="para">       如果设置为 <strong><span>true</span></strong>，<span class="function"><strong style="color:#CC7832">uniqid()</strong></span>       会在返回的字符串结尾增加额外的熵（使用线性同余组合发生器）。       使得唯一ID更具唯一性。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.uniqid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回字符串形式的唯一ID。  </p>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    此函数努力创建唯一识别符，但它不保证返回值得唯一性。   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.uniqid-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">uniqid()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 一个 uniqid，像：4b3403665fea6 <br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"uniqid(): %s\r\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">uniqid</span><span style="color: #007700">());<br /><br /></span><span style="color: #FF8000">// 也可以为uniqid 添加前缀，以下两种方式相同：<br /> *<br /> * $uniqid = $prefix . uniqid();<br /> * $uniqid = uniqid($prefix);<br /> <br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"uniqid('php_'): %s\r\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">uniqid</span><span style="color: #007700">(</span><span style="color: #DD0000">'php_'</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">// 还可以启用 more_entropy 参数，在 <br /> * 某些系统上是必须的，比如 Cygwin。这使得 uniqid()<br /> * 产生如下值：4b340550242239.64159797<br /> <br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"uniqid('', true): %s\r\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">uniqid</span><span style="color: #007700">(</span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.uniqid-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    在 Cygwin 环境下，为了使此函数能够工作，<span class="parameter" style="color:#3A95FF">more_entropy</span> 必须设置为 <strong><span>true</span></strong>。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.uniqid-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="function">{@link random_bytes()} - Get cryptographically secure random bytes</span></li>  </ul> </div></div>
 * @return string the unique identifier, as a string.*/
function uniqid(string $prefix = "", bool $more_entropy = false): string {}

/**
*<div id="function.quoted-printable-decode" class="refentry"> <div class="refnamediv">  <h1 class="refname">quoted_printable_decode</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">quoted_printable_decode</span> &mdash; <span class="dc-title">将 quoted-printable 字符串转换为 8-bit 字符串</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.quoted-printable-decode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>quoted_printable_decode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   该函数返回 8 位二进制字符串，对应解码后的带引号可打印的字符串（参考 <a href="http://www.faqs.org/rfcs/rfc2045" class="link external">&raquo;&nbsp;RFC2045</a>   的 6.7 章节，而不是 <a href="http://www.faqs.org/rfcs/rfc2821" class="link external">&raquo;&nbsp;RFC2821</a> 的 4.5.2 章节，因此不会去除行首的附加句号）。  </p>  <p class="para">   该函数与 <span class="function">{@link imap_qprint()}</span> 函数十分相似，但是该函数不需要依赖 IMAP 模块。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.quoted-printable-decode-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       输入的字符串。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.quoted-printable-decode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回的 8-bit 二进制字符串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.quoted-printable-decode-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">quoted_printable_decode()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$encoded </span><span style="color: #007700">= </span><span style="color: #9876AA">quoted_printable_encode</span><span style="color: #007700">(</span><span style="color: #DD0000">'Möchten Sie ein paar Äpfel?'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$encoded</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">quoted_printable_decode</span><span style="color: #007700">(</span><span style="color: #9876AA">$encoded</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>string(37) &quot;M=C3=B6chten Sie ein paar =C3=84pfel?&quot;<br>string(29) &quot;Möchten Sie ein paar Äpfel?&quot;<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.quoted-printable-decode-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link quoted_printable_encode()} - 将 8-bit 字符串转换成 quoted-printable 字符串</span></li>   </ul>  </span> </div></div>
 * @return string the 8-bit binary string.*/
function quoted_printable_decode(string $string): string {}

/**
*<div id="function.quoted-printable-encode" class="refentry"> <div class="refnamediv">  <h1 class="refname">quoted_printable_encode</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">quoted_printable_encode</span> &mdash; <span class="dc-title">将 8-bit 字符串转换成 quoted-printable 字符串</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.quoted-printable-encode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>quoted_printable_encode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   返回 quoted-printable 格式的字符，该格式由 <a href="http://www.faqs.org/rfcs/rfc2045" class="link external">&raquo;&nbsp;RFC2045</a> 6.7.章节里制定。  </p>  <p class="para">   该函数与 <span class="function">{@link imap_8bit()}</span> 函数十分相似，不同的是该函数不需要 IMAP 模块就能运行。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.quoted-printable-encode-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       输入的字符串。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.quoted-printable-encode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回编码之后的字符串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.quoted-printable-encode-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">quoted_printable_encode()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$encoded </span><span style="color: #007700">= </span><span style="color: #9876AA">quoted_printable_encode</span><span style="color: #007700">(</span><span style="color: #DD0000">'Möchten Sie ein paar Äpfel?'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$encoded</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">quoted_printable_decode</span><span style="color: #007700">(</span><span style="color: #9876AA">$encoded</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>string(37) &quot;M=C3=B6chten Sie ein paar =C3=84pfel?&quot;<br>string(29) &quot;Möchten Sie ein paar Äpfel?&quot;<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.quoted-printable-encode-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link quoted_printable_decode()} - 将 quoted-printable 字符串转换为 8-bit 字符串</span></li>    <li class="member"><span class="function">{@link iconv_mime_encode()} - Composes a MIME header field</span></li>   </ul>  </span> </div></div>
 * @return string the encoded string.*/
function quoted_printable_encode(string $string): string {}

/**
*<div id="function.convert-cyr-string" class="refentry"> <div class="refnamediv">  <h1 class="refname">convert_cyr_string</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">convert_cyr_string</span> &mdash; <span class="dc-title">将字符由一种 Cyrillic 字符转换成另一种</span></p> </div> <div id="function.convert-cyr-string-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数已自 PHP 7.4.0起<em>弃用</em>，自 PHP 8.0.0 起<em>移除</em>。强烈建议不要依赖本函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.convert-cyr-string-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>convert_cyr_string</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$str</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$from</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$to</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   此函数将给定的字符串从一种   Cyrillic 字符转换成另一种，返回转换之后的字符串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.convert-cyr-string-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">str</span></dt>     <dd>      <p class="para">       要转换的字符。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">from</span></dt>     <dd>      <p class="para">       单个字符，代表源 Cyrillic 字符集。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">to</span></dt>     <dd>      <p class="para">       单个字符，代表了目标 Cyrillic 字符集。      </p>     </dd>       </dl>  </span>  <p class="para">   支持的类型有：   <ul class="itemizedlist">    <li class="listitem">     <span class="simpara">      k - koi8-r     </span>    </li>    <li class="listitem">     <span class="simpara">      w - windows-1251     </span>    </li>    <li class="listitem">     <span class="simpara">      i - iso8859-5     </span>    </li>    <li class="listitem">     <span class="simpara">      a - x-cp866     </span>    </li>    <li class="listitem">     <span class="simpara">      d - x-cp866     </span>    </li>    <li class="listitem">     <span class="simpara">      m - x-mac-cyrillic     </span>    </li>   </ul>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.convert-cyr-string-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回转换后的字符串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.convert-cyr-string-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数可安全用于二进制对象。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.convert-cyr-string-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_convert_encoding()} - 转换字符串，从一个字符编码到另一个字符编码</span></li>    <li class="member"><span class="function">{@link iconv()} - 将字符串从一个字符编码转换到另一个字符编码</span></li>   </ul>  </span> </div></div>
 * @return string the converted string.*/
function convert_cyr_string(string $str, string $from, string $to): string {}

/**
*<div id="function.get-current-user" class="refentry"> <div class="refnamediv">  <h1 class="refname">get_current_user</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">get_current_user</span> &mdash; <span class="dc-title">获取当前 PHP 脚本所有者名称</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.get-current-user-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>get_current_user</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="simpara">   返回当前 PHP 脚本所有者名称。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.get-current-user-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.get-current-user-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   以字符串返回用户名。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.get-current-user-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="example-1667">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">get_current_user()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #DD0000">'Current script owner: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">get_current_user</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Current script owner: SYSTEM<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.get-current-user-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link getmyuid()} - 获取 PHP 脚本所有者的 UID</span></li>    <li class="member"><span class="function">{@link getmygid()} - 获取当前 PHP 脚本拥有者的 GID</span></li>    <li class="member"><span class="function">{@link getmypid()} - 获取 PHP 进程的 ID</span></li>    <li class="member"><span class="function">{@link getmyinode()} - 获取当前脚本的索引节点（inode）</span></li>    <li class="member"><span class="function">{@link getlastmod()} - 获取页面最后修改的时间</span></li>   </ul>  </span> </div></div>
 * @return string the username as a string.*/
function get_current_user(): string {}

/**
*<div id="function.set-time-limit" class="refentry"> <div class="refnamediv">  <h1 class="refname">set_time_limit</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">set_time_limit</span> &mdash; <span class="dc-title">设置脚本最大执行时间</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.set-time-limit-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>set_time_limit</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$seconds</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">  设置允许脚本运行的时间，单位为秒。如果超过了此设置，脚本返回一个致命的错误。默认值为30秒，或者是在<var class="filename">php.ini</var>的<span>max_execution_time</span>被定义的值，如果此值存在。  </p>  <p class="para">  当此函数被调用时，<span class="function"><strong style="color:#CC7832">set_time_limit()</strong></span>会从零开始重新启动超时计数器。换句话说，如果超时默认是30秒，在脚本运行了25秒时调用 <span>set_time_limit(20)</span>，那么，脚本在超时之前可运行总时间为45秒。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.set-time-limit-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">seconds</span></dt>     <dd>      <p class="para">       最大的执行时间，单位为秒。如果设置为0（零），没有时间方面的限制。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.set-time-limit-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     成功时返回 <strong><span>true</span></strong>，失败时返回  <strong><span>false</span></strong> 。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.set-time-limit-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    <span class="function"><strong style="color:#CC7832">set_time_limit()</strong></span>函数和配置指令<a href="https://www.php.net/manual/zh/info.configuration.php#ini.max-execution-time" class="link">max_execution_time</a>只影响脚本本身执行的时间。任何发生在诸如使用<span class="function">{@link system()}</span>的系统调用，流操作，数据库操作等的脚本执行的最大时间不包括其中，当该脚本已运行。在测量时间是实值的Windows中，情况就不是如此了。      </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.set-time-limit-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><a href="https://www.php.net/manual/zh/info.configuration.php#ini.max-execution-time" class="link">max_execution_time</a></li>    <li class="member"><a href="https://www.php.net/manual/zh/info.configuration.php#ini.max-input-time" class="link">max_input_time</a></li>   </ul>  </span> </div></div>
 * @return bool Returns TRUE on success, or FALSE on failure.*/
function set_time_limit(int $seconds): bool {}

/**
*<div id="function.get-cfg-var" class="refentry"> <div class="refnamediv">  <h1 class="refname">get_cfg_var</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">get_cfg_var</span> &mdash; <span class="dc-title">获取 PHP 配置选项的值</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.get-cfg-var-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>get_cfg_var</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$option</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   获取 PHP 配置选项 <span class="parameter" style="color:#3A95FF">option</span> 的值。  </p>  <p class="para">   此函数不会返回 PHP 编译的配置信息，或从 Apache 配置文件读取。  </p>  <p class="para">   检查系统是否使用了一个<a href="https://www.php.net/manual/zh/configuration.file.php" class="link">配置文件</a>，并尝试获取 cfg_file_path   的配置设置的值。如果有效，将会使用一个配置文件。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.get-cfg-var-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">option</span></dt>     <dd>      <p class="para">       配置选项的名称。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.get-cfg-var-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 <span class="parameter" style="color:#3A95FF">option</span> 指定的当前 PHP 配置变量的值，错误发生时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.get-cfg-var-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link ini_get()} - 获取一个配置选项的值</span></li>    <li class="member"><span class="function">{@link ini_get_all()} - 获取所有配置选项</span></li>   </ul>  </span> </div></div>
 * @return array|string|false the current value of the PHP configuration variable specified by*/
function get_cfg_var(string $option): array|string|false {}

/**
 * Alias:
 * {@see set_magic_quotes_runtime}
 * @link https://php.net/manual/en/function.magic-quotes-runtime.php
 * @param bool $new_setting
 * @removed 7.0
 */
#[Deprecated(since: '5.3')]
function magic_quotes_runtime(bool $new_setting) {}

/**
 * Sets the current active configuration setting of magic_quotes_runtime
 * @link https://php.net/manual/en/function.set-magic-quotes-runtime.php
 * @param bool $new_setting <p>
 * false for off, true for on.
 * </p>
 * @return bool true on success or false on failure.
 * @removed 7.0
 */
#[Deprecated(reason: "This function has been DEPRECATED as of PHP 5.4.0. Raises an E_CORE_ERROR", since: "5.3")]
function set_magic_quotes_runtime(bool $new_setting): bool {}

/**
*<div id="function.get-magic-quotes-gpc" class="refentry"> <div class="refnamediv">  <h1 class="refname">get_magic_quotes_gpc</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">get_magic_quotes_gpc</span> &mdash; <span class="dc-title">获取当前 magic_quotes_gpc 的配置选项设置</span></p> </div> <div id="function.get-magic-quotes-gpc-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数已自 PHP 7.4.0起<em>弃用</em>，自 PHP 8.0.0 起<em>移除</em>。强烈建议不要依赖本函数。</p></div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.get-magic-quotes-gpc-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>get_magic_quotes_gpc</strong></span>(): <span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></div>  <p class="para rdfs-comment">    始终返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.get-magic-quotes-gpc-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.get-magic-quotes-gpc-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   始终返回 <strong><span>false</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.get-magic-quotes-gpc-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.4.0</td>       <td>           该函数已被废弃。       </td>      </tr>     </tbody>       </table>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.get-magic-quotes-gpc-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link addslashes()} - 使用反斜线引用字符串</span></li>    <li class="member"><span class="function">{@link stripslashes()} - 反引用一个引用字符串</span></li>    <li class="member"><span class="function">{@link get_magic_quotes_runtime()} - 获取当前 magic_quotes_runtime 配置选项的激活状态</span></li>    <li class="member"><span class="function">{@link ini_get()} - 获取一个配置选项的值</span></li>   </ul>  </span> </div> </div>
 * @return int 0 if magic quotes gpc are off, 1 otherwise.*/
function get_magic_quotes_gpc(): int {}

/**
*<div id="function.get-magic-quotes-runtime" class="refentry"> <div class="refnamediv">  <h1 class="refname">get_magic_quotes_runtime</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">get_magic_quotes_runtime</span> &mdash; <span class="dc-title">获取当前 magic_quotes_runtime 配置选项的激活状态</span></p> </div>  <div id="function.get-magic-quotes-runtime-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数已自 PHP 7.4.0起<em>弃用</em>，自 PHP 8.0.0 起<em>移除</em>。强烈建议不要依赖本函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.get-magic-quotes-runtime-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>get_magic_quotes_runtime</strong></span>(): <span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></div>  <p class="simpara">   始终返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.get-magic-quotes-runtime-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.get-magic-quotes-runtime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   始终返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.get-magic-quotes-runtime-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.4.0</td>       <td>        弃用此函数。       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.get-magic-quotes-runtime-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link get_magic_quotes_gpc()} - 获取当前 magic_quotes_gpc 的配置选项设置</span></li>   </ul>  </span> </div></div>
 * @return int 0 if magic quotes runtime is off, 1 otherwise.*/
function get_magic_quotes_runtime(): int {}

/**
 * Import GET/POST/Cookie variables into the global scope
 * @link https://php.net/manual/en/function.import-request-variables.php
 * @param string $types <p>
 * Using the types parameter, you can specify
 * which request variables to import. You can use 'G', 'P' and 'C'
 * characters respectively for GET, POST and Cookie. These characters are
 * not case sensitive, so you can also use any combination of 'g', 'p'
 * and 'c'. POST includes the POST uploaded file information.
 * </p>
 * <p>
 * Note that the order of the letters matters, as when using
 * "GP", the
 * POST variables will overwrite GET variables with the same name. Any
 * other letters than GPC are discarded.
 * </p>
 * @param string $prefix [optional] <p>
 * Variable name prefix, prepended before all variable's name imported
 * into the global scope. So if you have a GET value named
 * "userid", and provide a prefix
 * "pref_", then you'll get a global variable named
 * $pref_userid.
 * </p>
 * <p>
 * Although the prefix parameter is optional, you
 * will get an E_NOTICE level
 * error if you specify no prefix, or specify an empty string as a
 * prefix. This is a possible security hazard. Notice level errors are
 * not displayed using the default error reporting level.
 * </p>
 * @return bool true on success or false on failure.
 * @removed 5.4
 */
#[Deprecated(reason: "This function has been DEPRECATED as of PHP 5.3.0", since: "5.3")]
function import_request_variables(string $types, $prefix = null): bool {}

/**
*<div id="function.error-log" class="refentry"> <div class="refnamediv">  <h1 class="refname">error_log</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">error_log</span> &mdash; <span class="dc-title">发送错误信息到某个地方</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.error-log-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>error_log</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$message</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$message_type</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$destination</span><span class="initializer"> = <strong><span>null</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$additional_headers</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   把错误信息发送到 web 服务器的错误日志，或者到一个文件里。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.error-log-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">message</span></dt>     <dd>      <p class="para">       应该被记录的错误信息。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">message_type</span></dt>     <dd>      <p class="para">       设置错误应该发送到何处。可能的信息类型有以下几个：      </p>      <p class="para">       <table class="doctable table">        <caption><strong><span class="function"><strong style="color:#CC7832">error_log()</strong></span> 日志类型</strong></caption>                 <tbody class="tbody">          <tr>           <td>0</td>           <td>            <span class="parameter" style="color:#3A95FF">message</span> 发送到 PHP 的系统日志，使用            操作系统的日志机制或者一个文件，取决于            <a href="https://www.php.net/manual/zh/errorfunc.configuration.php#ini.error-log" class="link">error_log</a> 指令设置了什么。            这是个默认的选项。           </td>          </tr>          <tr>           <td>1</td>           <td>            <span class="parameter" style="color:#3A95FF">message</span> 发送到参数 <span class="parameter" style="color:#3A95FF">destination</span>             设置的邮件地址。            第四个参数 <span class="parameter" style="color:#3A95FF">additional_headers</span> 只有在这个类型里才会被用到。           </td>          </tr>          <tr>           <td>2</td>           <td>            不再是一个选项。           </td>          </tr>          <tr>           <td>3</td>           <td>            <span class="parameter" style="color:#3A95FF">message</span> 被发送到位置为 <span class="parameter" style="color:#3A95FF">destination</span> 的文件里。            字符 <span class="parameter" style="color:#3A95FF">message</span> 不会默认被当做新的一行。           </td>          </tr>          <tr>           <td>4</td>           <td>           <span class="parameter" style="color:#3A95FF">message</span> 直接发送到 SAPI 的日志处理程序中。           </td>          </tr>         </tbody>               </table>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">destination</span></dt>     <dd>      <p class="para">       目标。它的含义描述于以上，由       <span class="parameter" style="color:#3A95FF">message_type</span> 参数所决定。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">additional_headers</span></dt>     <dd>      <p class="para">       额外的头。当 <span class="parameter" style="color:#3A95FF">message_type</span>       设置为 <span>1</span> 的时候使用。       该信息类型使用了 <span class="function">{@link mail()}</span> 的同一个内置函数。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.error-log-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。如果 <span class="parameter" style="color:#3A95FF">message_type</span> 是 0，此函数始终返回   <strong><span>true</span></strong>，无论是否可以记录错误。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.error-log-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">destination</span> 和       <span class="parameter" style="color:#3A95FF">additional_headers</span> 允许为 null。      </td>     </tr>    </tbody>     </table> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.error-log-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="example-1553">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">error_log()</strong></span> 范例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 如果无法连接到数据库，发送通知到服务器日志<br /></span><span style="color: #007700">if (!</span><span style="color: #9876AA">Ora_Logon</span><span style="color: #007700">(</span><span style="color: #9876AA">$username</span><span style="color: #007700">, </span><span style="color: #9876AA">$password</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">error_log</span><span style="color: #007700">(</span><span style="color: #DD0000">"Oracle database not available!"</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">// 如果用尽了 FOO，通过邮件通知管理员<br /></span><span style="color: #007700">if (!(</span><span style="color: #9876AA">$foo </span><span style="color: #007700">= </span><span style="color: #9876AA">allocate_new_foo</span><span style="color: #007700">())) {<br />    </span><span style="color: #9876AA">error_log</span><span style="color: #007700">(</span><span style="color: #DD0000">"Big trouble, we're all out of FOOs!"</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />               </span><span style="color: #DD0000">"operator@example.com"</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">// 调用 error_log() 的另一种方式:<br /></span><span style="color: #9876AA">error_log</span><span style="color: #007700">(</span><span style="color: #DD0000">"You messed up!"</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #DD0000">"/var/tmp/my-errors.log"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.error-log-notes">  <h3 class="title">注释</h3>  <div class="warning"><strong class="warning">警告</strong>   <p class="simpara">    <span class="function"><strong style="color:#CC7832">error_log()</strong></span> 并非二进制安全的。null 字符可能截断 <span class="parameter" style="color:#3A95FF">message</span>。   </p>  </div>  <div class="tip"><strong class="tip">小技巧</strong>   <p class="simpara">    <span class="parameter" style="color:#3A95FF">message</span> 不能包含 null 字符。注意，<span class="parameter" style="color:#3A95FF">message</span>    可能会发送到文件、邮件、syslog 等。所以在调用 <span class="function"><strong style="color:#CC7832">error_log()</strong></span>    前需要使用适合的转换/转义函数：<span class="function">{@link base64_encode()}</span>、<span class="function">{@link rawurlencode()}</span> 或 <span class="function">{@link addslashes()}</span>。   </p>  </div> </div></div>
 * @return bool true on success or false on failure.*/
function error_log(string $message, int $message_type = 0, ?string $destination, ?string $additional_headers): bool {}
