<?php

use JetBrains\PhpStorm\ArrayShape;
use JetBrains\PhpStorm\Deprecated;
use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
use JetBrains\PhpStorm\Internal\PhpStormStubsElementAvailable;
use JetBrains\PhpStorm\Pure;

/**
*<div id="function.fsockopen" class="refentry"> <div class="refnamediv">  <h1 class="refname">fsockopen</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fsockopen</span> &mdash; <span class="dc-title">打开 Internet 或者 Unix 套接字连接</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fsockopen-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fsockopen</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$hostname</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$port</span><span class="initializer"> = -1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">&$error_code</span><span class="initializer"> = <strong><span>null</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">&$error_message</span><span class="initializer"> = <strong><span>null</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">float</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$timeout</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   初始化套接字连接到指定 <span class="parameter" style="color:#3A95FF">hostname</span> 资源。  </p>  <p class="para">   如<a href="https://www.php.net/manual/zh/transports.php" class="xref">所支持的套接字传输器列表</a>所述，PHP 支持 Internet 和 Unix 域中的目标。也可以通过   <span class="function">{@link stream_get_transports()}</span> 获取支持的传输器列表。  </p>  <p class="para">   默认情况下将以阻塞模式开启套接字连接。可以通过 <span class="function">{@link stream_set_blocking()}</span> 将它转换到非阻塞模式。  </p>  <p class="para">   <span class="function">{@link stream_socket_client()}</span> 与之非常相似，而且提供了更加丰富的参数设置，包括非阻塞连接和提供流上下文的能力。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fsockopen-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">hostname</span></dt>     <dd>      <p class="para">       如果安装了 <a href="https://www.php.net/manual/zh/openssl.installation.php" class="link">OpenSSL</a>，那么可以在主机名地址前面添加 <span>ssl://</span>       或者是 <span>tls://</span>，从而可以使用基于 TCP/IP 协议的 SSL 或者 TLS 的客户端连接到远程主机。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">port</span></dt>     <dd>      <p class="para">       端口号。可以省略该参数或传 -1，则表示传输器不使用端口，例如 <span>unix://</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">error_code</span></dt>     <dd>      <p class="para">       如果提供该参数，则会保存调用系统级别 <span>connect()</span> 发生的系统级错误号。      </p>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">error_code</span> 的返回值为 <span>0</span>，且函数的返回值为       <strong><span>false</span></strong>，则表明错误发生在 <span>connect()</span>       调用之前。这很可能是由于初始化套接字的问题。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">error_message</span></dt>     <dd>      <p class="para">       错误信息将以字符串的信息返回。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">timeout</span></dt>     <dd>      <p class="para">       设置连接的时限，单位为秒。当为 <strong><span>null</span></strong> 时，使用 <a href="https://www.php.net/manual/zh/filesystem.configuration.php#ini.default-socket-timeout" class="link">default_socket_timeout</a> <var class="filename">php.ini</var> 设置。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        如果需要对为套接字读/写数据数据操作设置超时，请使用        <span class="function">{@link stream_set_timeout()}</span>，<span class="function"><strong style="color:#CC7832">fsockopen()</strong></span> 的        <span class="parameter" style="color:#3A95FF">timeout</span> 参数仅仅在连接套接字时适用。       </p>      </p></blockquote>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fsockopen-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="function"><strong style="color:#CC7832">fsockopen()</strong></span> 返回文件指针，可以跟其他文件函数（比如   <span class="function">{@link fgets()}</span>、<span class="function">{@link fgetss()}</span>、<span class="function">{@link fwrite()}</span>、<span class="function">{@link fclose()}</span>   和 <span class="function">{@link feof()}</span>）一起使用。如果调用失败，将返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.fsockopen-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">hostname</span> 不是有效域，则抛出 <strong><span>E_WARNING</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.fsockopen-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">timeout</span> 现在可以为 null。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fsockopen-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">fsockopen()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fsockopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"www.example.com"</span><span style="color: #007700">, </span><span style="color: #9876AA">80</span><span style="color: #007700">, </span><span style="color: #9876AA">$errno</span><span style="color: #007700">, </span><span style="color: #9876AA">$errstr</span><span style="color: #007700">, </span><span style="color: #9876AA">30</span><span style="color: #007700">);<br />if (!</span><span style="color: #9876AA">$fp</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$errstr</span><span style="color: #DD0000"> (</span><span style="color: #9876AA">$errno</span><span style="color: #DD0000">)&lt;br /&gt;\n"</span><span style="color: #007700">;<br />} else {<br />    </span><span style="color: #9876AA">$out </span><span style="color: #007700">= </span><span style="color: #DD0000">"GET / HTTP/1.1\r\n"</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$out </span><span style="color: #007700">.= </span><span style="color: #DD0000">"Host: www.example.com\r\n"</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$out </span><span style="color: #007700">.= </span><span style="color: #DD0000">"Connection: Close\r\n\r\n"</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">$out</span><span style="color: #007700">);<br />    while (!</span><span style="color: #9876AA">feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">)) {<br />        echo </span><span style="color: #9876AA">fgets</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">128</span><span style="color: #007700">);<br />    }<br />    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 使用 UDP 连接</strong></p>    <div class="example-contents"><p>     下面这个例子展示了怎么样在自己的机器上通过 UDP 服务“daytime”（端口号 13）中来检索日期和时间。    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fsockopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"udp://127.0.0.1"</span><span style="color: #007700">, </span><span style="color: #9876AA">13</span><span style="color: #007700">, </span><span style="color: #9876AA">$errno</span><span style="color: #007700">, </span><span style="color: #9876AA">$errstr</span><span style="color: #007700">);<br />if (!</span><span style="color: #9876AA">$fp</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"ERROR: </span><span style="color: #9876AA">$errno</span><span style="color: #DD0000"> - </span><span style="color: #9876AA">$errstr</span><span style="color: #DD0000">&lt;br /&gt;\n"</span><span style="color: #007700">;<br />} else {<br />    </span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">26</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fsockopen-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    根据环境的不同，Unix 域或可选的连接超时可能无效。   </p>  </p></blockquote>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    即使远程主机无法访问，UDP    套接字有时候也能打开且无错误。只有当从套接字读/写数据的时候才会出现错误。这样的原因是    UDP 是“无连接”协议，这意味着在真正发送/接收数据之前，操作系统不会尝试为套接字创建连接。   </p>  </div>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">当指定数值型的 IPv6地址（例如 <span>fe80::1</span>）时必须用方括号将 IP 围起来——例如，<span>tcp://[fe80::1]:80</span>。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fsockopen-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link pfsockopen()} - 打开持久的 Internet 或 Unix 套接字连接</span></li>    <li class="member"><span class="function">{@link stream_socket_client()} - Open Internet or Unix domain socket connection</span></li>    <li class="member"><span class="function">{@link stream_set_blocking()} - 为资源流设置阻塞或者阻塞模式</span></li>    <li class="member"><span class="function">{@link stream_set_timeout()} - Set timeout period on a stream</span></li>    <li class="member"><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>    <li class="member"><span class="function">{@link fgetss()} - 从文件指针中读取一行并过滤掉 HTML 标记</span></li>    <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>    <li class="member"><span class="function">{@link fclose()} - 关闭一个已打开的文件指针</span></li>    <li class="member"><span class="function">{@link feof()} - 测试文件指针是否到了文件结束的位置</span></li>    <li class="member"><span class="function">{@link socket_connect()} - 开启一个套接字连接</span></li>    <li class="member"><a href="https://www.php.net/manual/zh/ref.curl.php" class="link">Curl 扩展</a></li>   </ul>  </span> </div></div>
 * @return resource|false fsockopen returns a file pointer which may be used*/
function fsockopen(
    string $hostname,
    #[PhpStormStubsElementAvailable(from: '5.3', to: '7.0')] int $port,
    #[PhpStormStubsElementAvailable(from: '7.1')] int $port = -1,
    &$error_code,
    &$error_message,
    ?float $timeout
) {}

/**
*<div id="function.pfsockopen" class="refentry"> <div class="refnamediv">  <h1 class="refname">pfsockopen</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">pfsockopen</span> &mdash; <span class="dc-title">打开持久的 Internet 或 Unix 套接字连接</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.pfsockopen-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>pfsockopen</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$hostname</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$port</span><span class="initializer"> = -1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">&$error_code</span><span class="initializer"> = <strong><span>null</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">&$error_message</span><span class="initializer"> = <strong><span>null</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">float</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$timeout</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   这个函数的作用与 <span class="function">{@link fsockopen()}</span>   完全一样，不同的地方在于当在脚本执行完后，连接一直不会关闭。可以说它是   <span class="function">{@link fsockopen()}</span> 的长连接版本。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.pfsockopen-parameters">  <h3 class="title">参数</h3>  <span>   对于其参数的信息，请参考 <span class="function">{@link fsockopen()}</span> 的文档。  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.pfsockopen-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="function"><strong style="color:#CC7832">pfsockopen()</strong></span> 返回文件指针，可以跟其他文件函数（比如   <span class="function">{@link fgets()}</span>、<span class="function">{@link fgetss()}</span>、<span class="function">{@link fwrite()}</span>、<span class="function">{@link fclose()}</span>   和 <span class="function">{@link feof()}</span>）一起使用， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.pfsockopen-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">timeout</span> 现在可以为 null。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.pfsockopen-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fsockopen()} - 打开 Internet 或者 Unix 套接字连接</span></li>   </ul>  </span> </div></div>
 * @return resource|false*/
function pfsockopen(
    string $hostname,
    #[PhpStormStubsElementAvailable(from: '5.3', to: '7.0')] int $port,
    #[PhpStormStubsElementAvailable(from: '7.1')] int $port = -1,
    &$error_code,
    &$error_message,
    ?float $timeout
) {}

/**
*<div id="function.pack" class="refentry"> <div class="refnamediv">  <h1 class="refname">pack</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">pack</span> &mdash; <span class="dc-title">将数据打包成二进制字符串</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.pack-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>pack</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$format</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">...$values</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   将输入参数打包成 <span class="parameter" style="color:#3A95FF">format</span> 格式的二进制字符串。  </p>  <p class="para">   这个函数的思想来自 Perl，所有格式化代码（<span class="parameter" style="color:#3A95FF">format</span>）的工作原理都与   Perl 相同。 但是，缺少了部分格式代码，比如 Perl 的 “u”。  </p>  <p class="para">   注意，有符号值和无符号值之间的区别只影响函数   <span class="function">{@link unpack()}</span>，在那些使用有符号和无符号格式代码的地方   <span class="function"><strong style="color:#CC7832">pack()</strong></span> 函数产生相同的结果。  </p> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.pack-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">format</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">format</span>       字符串由格式代码组成，后面跟着一个可选的重复参数。重复参数可以是一个整数值或者       <span>*</span> 值来重复到输入数据的末尾。对于 a, A, h, H       格式化代码，其后的重复参数指定了给定数据将会被使用几个字符串。对于       @，其后的数字表示放置剩余数据的绝对定位（之前的数据将会被空字符串填充），对于其他所有内容，重复数量指定消耗多少个数据参数并将其打包到生成的二进制字符串中。      </p>      <p class="para">       目前已实现的格式如下：       <table class="doctable table">        <caption><strong><span class="function"><strong style="color:#CC7832">pack()</strong></span> 格式字符</strong></caption>                 <thead>          <tr>           <th>代码</th>           <th>描述</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td>a</td>           <td>以 NUL 字节填充字符串</td>          </tr>          <tr>           <td>A</td>           <td>以 SPACE(空格) 填充字符串</td></tr>          <tr>           <td>h</td>           <td>十六进制字符串，低位在前</td></tr>          <tr>           <td>H</td>           <td>十六进制字符串，高位在前</td></tr>          <tr><td>c</td><td>有符号字符</td></tr>          <tr>           <td>C</td>           <td>无符号字符</td></tr>          <tr>           <td>s</td>           <td>有符号短整型(16位，主机字节序)</td>          </tr>          <tr>           <td>S</td>           <td>无符号短整型(16位，主机字节序)</td>          </tr>          <tr>           <td>n</td>           <td>无符号短整型(16位，大端字节序)</td>          </tr>          <tr>           <td>v</td>           <td>无符号短整型(16位，小端字节序)</td>          </tr>          <tr>           <td>i</td>           <td>有符号整型(机器相关大小字节序)</td>          </tr>          <tr>           <td>I</td>           <td>无符号整型(机器相关大小字节序)</td>          </tr>          <tr>           <td>l</td>           <td>有符号长整型(32位，主机字节序)</td>          </tr>          <tr>           <td>L</td>           <td>无符号长整型(32位，主机字节序)</td>          </tr>          <tr>           <td>N</td>           <td>无符号长整型(32位，大端字节序)</td>          </tr>          <tr>           <td>V</td>           <td>无符号长整型(32位，小端字节序)</td>          </tr>          <tr>           <td>q</td>           <td>有符号长长整型(64位，主机字节序)</td>          </tr>          <tr>           <td>Q</td>           <td>无符号长长整型(64位，主机字节序)</td>          </tr>          <tr>           <td>J</td>           <td>无符号长长整型(64位，大端字节序)</td>          </tr>          <tr>           <td>P</td>           <td>无符号长长整型(64位，小端字节序)</td>          </tr>          <tr>           <td>f</td>           <td>单精度浮点型(机器相关大小)</td>          </tr>          <tr>           <td>g</td>           <td>单精度浮点型(机器相关大小，小端字节序)</td>          </tr>          <tr>           <td>G</td>           <td>单精度浮点型(机器相关大小，大端字节序)</td>          </tr>          <tr>           <td>d</td>           <td>双精度浮点型(机器相关大小)</td>          </tr>          <tr>           <td>e</td>           <td>双精度浮点型(机器相关大小，小端字节序)</td>          </tr>          <tr>           <td>E</td>           <td>双精度浮点型(机器相关大小，大端字节序)</td>          </tr>          <tr>           <td>x</td>           <td>NUL 字节</td>          </tr>          <tr>           <td>X</td>           <td>回退一字节</td>          </tr>          <tr>           <td>Z</td>           <td>以 NUL 字节填充字符串空白</td>          </tr>          <tr>           <td>@</td>           <td>NUL 填充到绝对位置</td>          </tr>         </tbody>               </table>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">values</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.pack-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回包含数据的二进制字符串。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.pack-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        此函数不再在失败时返回 <strong><span>false</span></strong> 。       </td>      </tr>      <tr>       <td>7.2.0</td>       <td>        <span class="type" style="color:#EAB766">float</span> 和 <span class="type" style="color:#EAB766">double</span> 类型支持大端和小端。       </td>      </tr>      <tr>       <td>7.0.15,7.1.1</td>       <td>        添加了 “e”,“E”,“g” 和 “G” 代码以启用 float 和 double 的字节顺序支持。       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.pack-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">pack()</strong></span> 范例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$binarydata </span><span style="color: #007700">= </span><span style="color: #9876AA">pack</span><span style="color: #007700">(</span><span style="color: #DD0000">"nvc*"</span><span style="color: #007700">, </span><span style="color: #9876AA">0x1234</span><span style="color: #007700">, </span><span style="color: #9876AA">0x5678</span><span style="color: #007700">, </span><span style="color: #9876AA">65</span><span style="color: #007700">, </span><span style="color: #9876AA">66</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>     输出结果为长度为 6 字节的二进制字符串，包含以下序列     0x12, 0x34, 0x78, 0x56, 0x41, 0x42。    </p></div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.pack-notes">  <h3 class="title">注释</h3>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">Note that PHP internally stores <span class="type" style="color:#EAB766">int</span> values as    signed values of a machine-dependent size (C type <span>long</span>).    Integer literals and operations that yield numbers outside the bounds of the    <span class="type" style="color:#EAB766">int</span> type will be stored as <span class="type" style="color:#EAB766">float</span>.    When packing these floats as integers, they are first cast into the integer    type. This may or may not result in the desired byte pattern.   </p>   <p class="para">The most relevant case is when packing unsigned numbers that would    be representable with the <span class="type" style="color:#EAB766">int</span> type if it were unsigned.    In systems where the <span class="type" style="color:#EAB766">int</span> type has a 32-bit size, the cast    usually results in the same byte pattern as if the <span class="type" style="color:#EAB766">int</span> were    unsigned (although this relies on implementation-defined unsigned to signed    conversions, as per the C standard). In systems where the    <span class="type" style="color:#EAB766">int</span> type has 64-bit size, the <span class="type" style="color:#EAB766">float</span> most    likely does not have a mantissa large enough to hold the value without    loss of precision. If those systems also have a native 64-bit C    <span>int</span> type (most UNIX-like systems don&#039;t), the only way to    use the <span>I</span> pack format in the upper range is to create    <span class="type" style="color:#EAB766">int</span> negative values with the same byte representation    as the desired unsigned value.   </p>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.pack-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link unpack()} - Unpack data from binary string</span></li>   </ul>  </span> </div> </div>
 * @return string|false a binary string containing data or false if the format string contains errors*/
function pack(
    string $format,
    #[PhpStormStubsElementAvailable(from: '5.3', to: '7.3')] $values,
    mixed ...$values
) {}

/**
*<div id="function.unpack" class="refentry"> <div class="refnamediv">  <h1 class="refname">unpack</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">unpack</span> &mdash; <span class="dc-title">Unpack data from binary string</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.unpack-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>unpack</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$format</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   Unpacks from a binary string into an array according to the given   <span class="parameter" style="color:#3A95FF">format</span>.   </p>  <p class="para">   The unpacked data is stored in an associative array. To   accomplish this you have to name the different format codes and   separate them by a slash /. If a repeater argument is present,   then each of the array keys will have a sequence number behind   the given name.  </p>  <p class="para">   Changes were made to bring this function into line with Perl:   <ul class="simplelist">    <li class="member">     The &quot;a&quot; code now retains trailing NULL bytes.    </li>    <li class="member">     The &quot;A&quot; code now strips all trailing ASCII whitespace (spaces, tabs,     newlines, carriage returns, and NULL bytes).    </li>    <li class="member">     The &quot;Z&quot; code was added for NULL-padded strings, and removes trailing     NULL bytes.    </li>   </ul>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.unpack-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">format</span></dt>     <dd>      <p class="para">       See <span class="function">{@link pack()}</span> for an explanation of the format codes.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       The packed data.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       The offset to begin unpacking from.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.unpack-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an associative array containing unpacked elements of binary   string,  或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.unpack-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.2.0</td>       <td>        <span class="type" style="color:#EAB766">float</span> and <span class="type" style="color:#EAB766">double</span> types supports both Big Endian and Little Endian.       </td>      </tr>      <tr>       <td>7.1.0</td>       <td>        The optional <span class="parameter" style="color:#3A95FF">offset</span> has been added.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.unpack-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">unpack()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$binarydata </span><span style="color: #007700">= </span><span style="color: #DD0000">"\x04\x00\xa0\x00"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$array </span><span style="color: #007700">= </span><span style="color: #9876AA">unpack</span><span style="color: #007700">(</span><span style="color: #DD0000">"cchars/nint"</span><span style="color: #007700">, </span><span style="color: #9876AA">$binarydata</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$array</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [chars] =&gt; 4<br>    [int] =&gt; 160<br>)<br></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 <span class="function"><strong style="color:#CC7832">unpack()</strong></span> example with a repeater</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$binarydata </span><span style="color: #007700">= </span><span style="color: #DD0000">"\x04\x00\xa0\x00"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$array </span><span style="color: #007700">= </span><span style="color: #9876AA">unpack</span><span style="color: #007700">(</span><span style="color: #DD0000">"c2chars/nint"</span><span style="color: #007700">, </span><span style="color: #9876AA">$binarydata</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$array</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>     </div>     <div class="example-contents"><p>以上示例会输出：</p></div>     <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [chars1] =&gt; 4<br>    [chars2] =&gt; 0<br>    [int] =&gt; 40960<br>)<br></span></div>     </div>    </div>   </p>  </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.unpack-notes">  <h3 class="title">注释</h3>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    Note that PHP internally stores integral values as signed. If you    unpack a large unsigned long and it is of the same size as PHP    internally stored values the result will be a negative number    even though unsigned unpacking was specified.   </p>  </div>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    If you do not name an element, numeric indices starting from <span>1</span> are used.    Be aware that if you have more than one unnamed element, some data is    overwritten because the numbering restarts from <span>1</span> for each element.   </p>   <p class="para">    <div class="example" id="">     <p><strong>示例 #3 <span class="function"><strong style="color:#CC7832">unpack()</strong></span> example with unnamed keys</strong></p>     <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$binarydata </span><span style="color: #007700">= </span><span style="color: #DD0000">"\x32\x42\x00\xa0"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$array </span><span style="color: #007700">= </span><span style="color: #9876AA">unpack</span><span style="color: #007700">(</span><span style="color: #DD0000">"c2/n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$binarydata</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$array</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>     </div>     <div class="example-contents"><p>以上示例会输出：</p></div>     <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(2) {<br>  [1]=&gt;<br>  int(160)<br>  [2]=&gt;<br>  int(66)<br>}<br></span></div>     </div>     <div class="example-contents"><p>      Note that the      first value from the <span>c</span> specifier is       overwritten by the first value from the <span>n</span>      specifier.     </p></div>    </div>   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.unpack-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link pack()} - 将数据打包成二进制字符串</span></li>   </ul>  </span> </div></div>
 * @return array|false an associative array containing unpacked elements of binary*/
function unpack(
    string $format,
    string $string,
    #[PhpStormStubsElementAvailable(from: '7.1')] int $offset = 0
): array|false {}

/**
*<div id="function.get-browser" class="refentry"> <div class="refnamediv">  <h1 class="refname">get_browser</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">get_browser</span> &mdash; <span class="dc-title">获取浏览器具有的功能</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.get-browser-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>get_browser</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$user_agent</span><span class="initializer"> = <strong><span>null</span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$return_array</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">object</span>|<span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   通过查找 <var class="filename">browscap.ini</var> 文件中的浏览器信息，尝试检测用户的浏览器所具有的功能。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.get-browser-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">user_agent</span></dt>     <dd>      <p class="para">       要分析的用户代理。默认使用HTTP头中User-Agent的值，不过，你可以通过传递该参数改变User-Agent。(比如查找另一个浏览器的信息)       </p>      <p class="para">       你可以传递一个 <strong><span>null</span></strong> 来忽略该参数。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">return_array</span></dt>     <dd>      <p class="para">       如果设置为 <strong><span>true</span></strong>，该函数会返回一个 <span class="type" style="color:#EAB766">array</span>，而不是 <span class="type" style="color:#EAB766">object</span>。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.get-browser-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   信息会以包含一系列数据的数组或者对象返回。例如：浏览器的主版本号、次版本号和ID字符串；框架、JavaScript、cookies等功能是否支持 <strong><span>true</span></strong>/<strong><span>false</span></strong> 的值。  </p>  <p class="para">   <span>cookies</span> 的值仅意味着浏览器是否具有接收cookies的功能，不代表用户是否已允许启用cookies。   测试的唯一办法，只有通过 <span class="function">{@link setcookie()}</span> 设置一个cookie，刷新页面并检测该cookie的值。  </p>  <p class="para">    当无法检索到信息时返回 <strong><span>false</span></strong>，比如未设置 <var class="filename">php.ini</var> 中的    <a href="https://www.php.net/manual/zh/misc.configuration.php#ini.browscap" class="link">browscap</a> 配置项。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.get-browser-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 列出所有用户浏览器的信息</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$_SERVER</span><span style="color: #007700">[</span><span style="color: #DD0000">'HTTP_USER_AGENT'</span><span style="color: #007700">] . </span><span style="color: #DD0000">"\n\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$browser </span><span style="color: #007700">= </span><span style="color: #9876AA">get_browser</span><span style="color: #007700">(</span><span style="color: #9876AA">null</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$browser</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7) Gecko/20040803 Firefox/0.9.3<br><br>Array<br>(<br>    [browser_name_regex] =&gt; ^mozilla/5\.0 (windows; .; windows nt 5\.1; .*rv:.*) gecko/.* firefox/0\.9.*$<br>    [browser_name_pattern] =&gt; Mozilla/5.0 (Windows; ?; Windows NT 5.1; *rv:*) Gecko// Firefox/0.9*<br>    [parent] =&gt; Firefox 0.9<br>    [platform] =&gt; WinXP<br>    [browser] =&gt; Firefox<br>    [version] =&gt; 0.9<br>    [majorver] =&gt; 0<br>    [minorver] =&gt; 9<br>    [cssversion] =&gt; 2<br>    [frames] =&gt; 1<br>    [iframes] =&gt; 1<br>    [tables] =&gt; 1<br>    [cookies] =&gt; 1<br>    [backgroundsounds] =&gt;<br>    [vbscript] =&gt;<br>    [javascript] =&gt; 1<br>    [javaapplets] =&gt; 1<br>    [activexcontrols] =&gt;<br>    [cdf] =&gt;<br>    [aol] =&gt;<br>    [beta] =&gt; 1<br>    [win16] =&gt;<br>    [crawler] =&gt;<br>    [stripper] =&gt;<br>    [wap] =&gt;<br>    [netclr] =&gt;<br>)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.get-browser-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    为了能让该函数运作，在 <var class="filename">php.ini</var> 中配置的 <a href="https://www.php.net/manual/zh/misc.configuration.php#ini.browscap" class="link">browscap</a> 必须指向 <var class="filename">browscap.ini</var> 文件的正确位置。   </p>   <p class="para">    <var class="filename">browscap.ini</var> 并未内置在PHP中，不过你可以在这里找到最新的 <a href="http://browscap.org/" class="link external">&raquo;&nbsp;php_browscap.ini</a>。   </p>   <p class="para">    <var class="filename">browscap.ini</var> 包含的诸多浏览器信息依赖于用户更新该数据库。该文件的格式不言自明。   </p>  </p></blockquote> </div></div>
 * @return array|object|false Returns false if browscap.ini can't be loaded or the user agent can't be found, otherwise the information is returned in an object or an array which will contain*/
function get_browser(?string $user_agent, bool $return_array = false): object|array|false {}

/**
*<div id="function.crypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">crypt</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">crypt</span> &mdash; <span class="dc-title">单向字符串散列</span></p> </div>  <div id="function.crypt-refsynopsisdiv">  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数（还）不能安全地适用于二进制对象！</p></div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.crypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>crypt</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$salt</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">crypt()</strong></span> 返回基于标准 UNIX <abbr class="abbrev">DES</abbr>   算法或替代算法的散列字符串。<span class="function">{@link password_verify()}</span>   兼容 <span class="function"><strong style="color:#CC7832">crypt()</strong></span>。因此，由 <span class="function"><strong style="color:#CC7832">crypt()</strong></span>   创建的密码散列可以跟 <span class="function">{@link password_verify()}</span> 一起使用。  </p>  <p class="para">   在 PHP 8.0.0 之前，<span class="parameter" style="color:#3A95FF">salt</span> 参数是可选的。然而，如果没有   <span class="parameter" style="color:#3A95FF">salt</span>，<span class="function"><strong style="color:#CC7832">crypt()</strong></span>    会创建弱散列。在没有它的情况下引发 <strong><span>E_NOTICE</span></strong>   级别的错误。为了更好的安全性，请确保指定足够强度的盐值。  </p>  <p class="para">   <span class="function">{@link password_hash()}</span> 使用了强散列，产生足够强的盐值，并自动应用合适的轮次。<span class="function">{@link password_hash()}</span>    是<span class="function"><strong style="color:#CC7832">crypt()</strong></span> 的简单封装，并且与现有的密码散列兼容。推荐使用 <span class="function">{@link password_hash()}</span>。  </p>  <p class="para">   散列类型由盐值参数触发。如果没有提供盐值，PHP 将自动生成一个 2 个字符（DES）或者 12 个字符（MD5）的盐值 ，这取决于   MD5 crypt() 的可用性。PHP 设置了名为 <strong><span>CRYPT_SALT_LENGTH</span></strong> 的常量，用来表示可用散列允许的最长有效盐值。  </p>  <p class="para">   基于标准 DES 算法的 <span class="function"><strong style="color:#CC7832">crypt()</strong></span> 在输出内容的开始位置返回两个字符的盐值。它也只使用   <span class="parameter" style="color:#3A95FF">string</span> 的开始 8 个字符，所以更长的以相同 8 个字符开始的字符串也将生成相同的结果（当使用了相同的盐值时）。  </p>  <p class="simpara">   支持以下散列类型：  </p>  <ul class="itemizedlist">   <li class="listitem">    <span class="simpara">     <strong><span>CRYPT_STD_DES</span></strong> - 基于标准 DES 算法的散列使用 &quot;./0-9A-Za-z&quot; 字符中的两个字符作为盐值。在盐值中使用非法的字符将导致 crypt() 失败。    </span>   </li>   <li class="listitem">    <span class="simpara">     <strong><span>CRYPT_EXT_DES</span></strong> - 扩展的基于 DES 算法的散列。“sale” 为 9 个字符的字符串，由 1 个下划线后面跟着 4 字符循环次数和 4 字符盐值组成。这些 4 字符字符串都编码为 24 字节，最低有效位在前。值 <span>0</span> 到 <span>63</span> 被编码为 <span>./0-9A-Za-z</span>。在盐值中使用非法的字符将导致 crypt() 失败。    </span>   </li>   <li class="listitem">    <span class="simpara">     <strong><span>CRYPT_MD5</span></strong> - MD5 散列使用一个以 $1$ 开始的 12 字符的字符串盐值。    </span>   </li>   <li class="listitem">    <span class="simpara">     <strong><span>CRYPT_BLOWFISH</span></strong> - Blowfish 散列使用如下盐值：“$2a$”、“$2x$” 或 “$2y$”，两位 cost 参数，“$” 以及 22 位由 “./0-9A-Za-z” 中的字符组合而成的字符串。在盐值中使用此范围之外的字符将导致 crypt() 返回一个空字符串。两位 cost 参数是循环次数以 2 为底的对数，它的范围是 04-31，超出这个范围将导致 crypt() 失败。     “$2x$” 可能很弱，“$2x$” 散列对其兼容并增强安全性。对于新的散列，应该使用“$2y$”。    </span>   </li>   <li class="listitem">    <span class="simpara">     <strong><span>CRYPT_SHA256</span></strong> - SHA-256 算法使用一个以 $5$ 开头的 16 字符字符串盐值进行散列。如果盐值字符串以 “rounds=&lt;N&gt;$” 开头，N 的数字值将被用来指定散列循环的执行次数，这点很像 Blowfish 算法的 cost 参数。默认的循环次数是 5000，最小是 1000，最大是 999,999,999。超出这个范围的 N 将会被转换为最接近的值。    </span>   </li>   <li class="listitem">    <span class="simpara">     <strong><span>CRYPT_SHA512</span></strong> - SHA-512 算法使用一个以 $6$ 开头的 16 字符字符串盐值进行散列。如果盐值字符串以 “rounds=&lt;N&gt;$” 开头，N 的数字值将被用来指定散列循环的执行次数，这点很像 Blowfish 算法的 cost 参数。默认的循环次数是 5000，最小是 1000，最大是 999,999,999。超出这个范围的 N 将会被转换为最接近的值。    </span>   </li>  </ul> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.crypt-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       待散列的字符串。      </p>      <div class="caution"><strong class="caution">警告</strong>       <p class="para">        使用 <strong><span>CRYPT_BLOWFISH</span></strong> 算法将导致 <span class="parameter" style="color:#3A95FF">string</span> 被裁剪为一个最长72 字节的字符串。       </p>      </div>     </dd>             <dt><span class="parameter" style="color:#3A95FF">salt</span></dt>     <dd>      <p class="para">       盐值字符串。如果没有提供，算法行为将由不同的算法实现决定，并可能导致不可预料的结束。      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.crypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回散列后的字符串或一个少于 13 字符的字符串，从而保证在失败时与盐值区分开来。  </p>  <div class="warning"><strong class="warning">警告</strong>   <p class="simpara">    当校验密码时，应该使用一个不容易被时间攻击的字符串比较函数来比较<span class="function"><strong style="color:#CC7832">crypt()</strong></span>的输出与之前已知的散列。出于这个目的，PHP 提供了<span class="function">{@link hash_equals()}</span>。   </p>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.crypt-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">salt</span>不再可选。      </td>     </tr>    </tbody>     </table> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.crypt-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">crypt()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$user_input </span><span style="color: #007700">= </span><span style="color: #DD0000">'rasmuslerdorf'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$hashed_password </span><span style="color: #007700">= </span><span style="color: #DD0000">'$6$rounds=1000000$NJy4rIPjpOaU$0ACEYGg/aKCY3v8O8AfyiO7CTfZQ8/W231Qfh2tRLmfdvFD6XfHk12u6hMr9cYIA4hnpjLNSTRtUwYr9km9Ij/'</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// 验证现有的 crypt() 哈希值，以便与非 PHP 软件兼容。<br /></span><span style="color: #007700">if (</span><span style="color: #9876AA">hash_equals</span><span style="color: #007700">(</span><span style="color: #9876AA">$hashed_password</span><span style="color: #007700">, </span><span style="color: #9876AA">crypt</span><span style="color: #007700">(</span><span style="color: #9876AA">$user_input</span><span style="color: #007700">, </span><span style="color: #9876AA">$hashed_password</span><span style="color: #007700">))) {<br />   echo </span><span style="color: #DD0000">"Password verified!"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.crypt-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    由于 <span class="function"><strong style="color:#CC7832">crypt()</strong></span> 使用的是单向算法，因此不存在 decrypt 函数。   </span>  </p></blockquote> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.crypt-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link hash_equals()} - 可防止时序攻击的字符串比较</span></li>    <li class="member"><span class="function">{@link password_hash()} - 创建密码的散列（hash）</span></li>    <li class="member">更多关于 crypt 函数的信息，请阅读 Unix man 页面</li>   </ul>  </span> </div> </div>
 * @return string|null the encrypted string or <b>NULL</b> if an error occurs*/
function crypt($string, $salt): ?string {}

/**
*<div id="function.crypt" class="refentry"> <div class="refnamediv">  <h1 class="refname">crypt</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">crypt</span> &mdash; <span class="dc-title">单向字符串散列</span></p> </div>  <div id="function.crypt-refsynopsisdiv">  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数（还）不能安全地适用于二进制对象！</p></div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.crypt-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>crypt</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$salt</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">crypt()</strong></span> 返回基于标准 UNIX <abbr class="abbrev">DES</abbr>   算法或替代算法的散列字符串。<span class="function">{@link password_verify()}</span>   兼容 <span class="function"><strong style="color:#CC7832">crypt()</strong></span>。因此，由 <span class="function"><strong style="color:#CC7832">crypt()</strong></span>   创建的密码散列可以跟 <span class="function">{@link password_verify()}</span> 一起使用。  </p>  <p class="para">   在 PHP 8.0.0 之前，<span class="parameter" style="color:#3A95FF">salt</span> 参数是可选的。然而，如果没有   <span class="parameter" style="color:#3A95FF">salt</span>，<span class="function"><strong style="color:#CC7832">crypt()</strong></span>    会创建弱散列。在没有它的情况下引发 <strong><span>E_NOTICE</span></strong>   级别的错误。为了更好的安全性，请确保指定足够强度的盐值。  </p>  <p class="para">   <span class="function">{@link password_hash()}</span> 使用了强散列，产生足够强的盐值，并自动应用合适的轮次。<span class="function">{@link password_hash()}</span>    是<span class="function"><strong style="color:#CC7832">crypt()</strong></span> 的简单封装，并且与现有的密码散列兼容。推荐使用 <span class="function">{@link password_hash()}</span>。  </p>  <p class="para">   散列类型由盐值参数触发。如果没有提供盐值，PHP 将自动生成一个 2 个字符（DES）或者 12 个字符（MD5）的盐值 ，这取决于   MD5 crypt() 的可用性。PHP 设置了名为 <strong><span>CRYPT_SALT_LENGTH</span></strong> 的常量，用来表示可用散列允许的最长有效盐值。  </p>  <p class="para">   基于标准 DES 算法的 <span class="function"><strong style="color:#CC7832">crypt()</strong></span> 在输出内容的开始位置返回两个字符的盐值。它也只使用   <span class="parameter" style="color:#3A95FF">string</span> 的开始 8 个字符，所以更长的以相同 8 个字符开始的字符串也将生成相同的结果（当使用了相同的盐值时）。  </p>  <p class="simpara">   支持以下散列类型：  </p>  <ul class="itemizedlist">   <li class="listitem">    <span class="simpara">     <strong><span>CRYPT_STD_DES</span></strong> - 基于标准 DES 算法的散列使用 &quot;./0-9A-Za-z&quot; 字符中的两个字符作为盐值。在盐值中使用非法的字符将导致 crypt() 失败。    </span>   </li>   <li class="listitem">    <span class="simpara">     <strong><span>CRYPT_EXT_DES</span></strong> - 扩展的基于 DES 算法的散列。“sale” 为 9 个字符的字符串，由 1 个下划线后面跟着 4 字符循环次数和 4 字符盐值组成。这些 4 字符字符串都编码为 24 字节，最低有效位在前。值 <span>0</span> 到 <span>63</span> 被编码为 <span>./0-9A-Za-z</span>。在盐值中使用非法的字符将导致 crypt() 失败。    </span>   </li>   <li class="listitem">    <span class="simpara">     <strong><span>CRYPT_MD5</span></strong> - MD5 散列使用一个以 $1$ 开始的 12 字符的字符串盐值。    </span>   </li>   <li class="listitem">    <span class="simpara">     <strong><span>CRYPT_BLOWFISH</span></strong> - Blowfish 散列使用如下盐值：“$2a$”、“$2x$” 或 “$2y$”，两位 cost 参数，“$” 以及 22 位由 “./0-9A-Za-z” 中的字符组合而成的字符串。在盐值中使用此范围之外的字符将导致 crypt() 返回一个空字符串。两位 cost 参数是循环次数以 2 为底的对数，它的范围是 04-31，超出这个范围将导致 crypt() 失败。     “$2x$” 可能很弱，“$2x$” 散列对其兼容并增强安全性。对于新的散列，应该使用“$2y$”。    </span>   </li>   <li class="listitem">    <span class="simpara">     <strong><span>CRYPT_SHA256</span></strong> - SHA-256 算法使用一个以 $5$ 开头的 16 字符字符串盐值进行散列。如果盐值字符串以 “rounds=&lt;N&gt;$” 开头，N 的数字值将被用来指定散列循环的执行次数，这点很像 Blowfish 算法的 cost 参数。默认的循环次数是 5000，最小是 1000，最大是 999,999,999。超出这个范围的 N 将会被转换为最接近的值。    </span>   </li>   <li class="listitem">    <span class="simpara">     <strong><span>CRYPT_SHA512</span></strong> - SHA-512 算法使用一个以 $6$ 开头的 16 字符字符串盐值进行散列。如果盐值字符串以 “rounds=&lt;N&gt;$” 开头，N 的数字值将被用来指定散列循环的执行次数，这点很像 Blowfish 算法的 cost 参数。默认的循环次数是 5000，最小是 1000，最大是 999,999,999。超出这个范围的 N 将会被转换为最接近的值。    </span>   </li>  </ul> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.crypt-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       待散列的字符串。      </p>      <div class="caution"><strong class="caution">警告</strong>       <p class="para">        使用 <strong><span>CRYPT_BLOWFISH</span></strong> 算法将导致 <span class="parameter" style="color:#3A95FF">string</span> 被裁剪为一个最长72 字节的字符串。       </p>      </div>     </dd>             <dt><span class="parameter" style="color:#3A95FF">salt</span></dt>     <dd>      <p class="para">       盐值字符串。如果没有提供，算法行为将由不同的算法实现决定，并可能导致不可预料的结束。      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.crypt-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回散列后的字符串或一个少于 13 字符的字符串，从而保证在失败时与盐值区分开来。  </p>  <div class="warning"><strong class="warning">警告</strong>   <p class="simpara">    当校验密码时，应该使用一个不容易被时间攻击的字符串比较函数来比较<span class="function"><strong style="color:#CC7832">crypt()</strong></span>的输出与之前已知的散列。出于这个目的，PHP 提供了<span class="function">{@link hash_equals()}</span>。   </p>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.crypt-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">salt</span>不再可选。      </td>     </tr>    </tbody>     </table> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.crypt-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">crypt()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$user_input </span><span style="color: #007700">= </span><span style="color: #DD0000">'rasmuslerdorf'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$hashed_password </span><span style="color: #007700">= </span><span style="color: #DD0000">'$6$rounds=1000000$NJy4rIPjpOaU$0ACEYGg/aKCY3v8O8AfyiO7CTfZQ8/W231Qfh2tRLmfdvFD6XfHk12u6hMr9cYIA4hnpjLNSTRtUwYr9km9Ij/'</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// 验证现有的 crypt() 哈希值，以便与非 PHP 软件兼容。<br /></span><span style="color: #007700">if (</span><span style="color: #9876AA">hash_equals</span><span style="color: #007700">(</span><span style="color: #9876AA">$hashed_password</span><span style="color: #007700">, </span><span style="color: #9876AA">crypt</span><span style="color: #007700">(</span><span style="color: #9876AA">$user_input</span><span style="color: #007700">, </span><span style="color: #9876AA">$hashed_password</span><span style="color: #007700">))) {<br />   echo </span><span style="color: #DD0000">"Password verified!"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.crypt-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    由于 <span class="function"><strong style="color:#CC7832">crypt()</strong></span> 使用的是单向算法，因此不存在 decrypt 函数。   </span>  </p></blockquote> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.crypt-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link hash_equals()} - 可防止时序攻击的字符串比较</span></li>    <li class="member"><span class="function">{@link password_hash()} - 创建密码的散列（hash）</span></li>    <li class="member">更多关于 crypt 函数的信息，请阅读 Unix man 页面</li>   </ul>  </span> </div> </div>
 * @return string the encrypted string or <b>NULL</b> if an error occurs*/
function crypt(string $string, string $salt): string {}

/**
*<div id="function.opendir" class="refentry"> <div class="refnamediv">  <h1 class="refname">opendir</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">opendir</span> &mdash; <span class="dc-title">打开目录句柄</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.opendir-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>opendir</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$directory</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$context</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   打开一个目录句柄，可用于之后的   <span class="function">{@link closedir()}</span>，<span class="function">{@link readdir()}</span> 和   <span class="function">{@link rewinddir()}</span> 调用中。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.opendir-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">directory</span></dt>     <dd>      <p class="para">       要打开的目录路径      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">context</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">context</span> 参数的说明见手册中的       <a href="https://www.php.net/manual/zh/ref.stream.php" class="link">Streams API</a> 一章。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.opendir-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果成功则返回目录句柄的 <span class="type" style="color:#EAB766">resource</span>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.opendir-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">directory</span> 不是有效的目录，由于权限不足或文件系统错误而无法打开目录，则可能会发生这种情况。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.opendir-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">context</span> 允许为 null。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.opendir-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">opendir()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$dir </span><span style="color: #007700">= </span><span style="color: #DD0000">"/etc/php5/"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// 打开已知目录，然后继续读取内容<br /></span><span style="color: #007700">if (</span><span style="color: #9876AA">is_dir</span><span style="color: #007700">(</span><span style="color: #9876AA">$dir</span><span style="color: #007700">)) {<br />    if (</span><span style="color: #9876AA">$dh </span><span style="color: #007700">= </span><span style="color: #9876AA">opendir</span><span style="color: #007700">(</span><span style="color: #9876AA">$dir</span><span style="color: #007700">)) {<br />        while ((</span><span style="color: #9876AA">$file </span><span style="color: #007700">= </span><span style="color: #9876AA">readdir</span><span style="color: #007700">(</span><span style="color: #9876AA">$dh</span><span style="color: #007700">)) !== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br />            echo </span><span style="color: #DD0000">"filename: </span><span style="color: #9876AA">$file</span><span style="color: #DD0000"> : filetype: " </span><span style="color: #007700">. </span><span style="color: #9876AA">filetype</span><span style="color: #007700">(</span><span style="color: #9876AA">$dir </span><span style="color: #007700">. </span><span style="color: #9876AA">$file</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />        }<br />        </span><span style="color: #9876AA">closedir</span><span style="color: #007700">(</span><span style="color: #9876AA">$dh</span><span style="color: #007700">);<br />    }<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>filename: . : filetype: dir<br>filename: .. : filetype: dir<br>filename: apache : filetype: dir<br>filename: cgi : filetype: dir<br>filename: cli : filetype: dir<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.opendir-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_dir()} - 判断给定文件名是否是一个目录</span></li>    <li class="member"><span class="function">{@link readdir()} - 从目录句柄中读取条目</span></li>    <li class="member"><span class="function">{@link dir()} - 返回一个 Directory 类实例</span></li>   </ul>  </span> </div></div>
 * @return resource|false a directory handle resource on success, or*/
function opendir(string $directory, $context) {}

/**
*<div id="function.closedir" class="refentry"> <div class="refnamediv">  <h1 class="refname">closedir</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">closedir</span> &mdash; <span class="dc-title">关闭目录句柄</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.closedir-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>closedir</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$dir_handle</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   关闭由 <span class="parameter" style="color:#3A95FF">dir_handle</span> 指定的目录流。流必须之前被   <span class="function">{@link opendir()}</span> 所打开。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.closedir-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">dir_handle</span></dt>     <dd>      <p class="para">       目录句柄的 <span class="type" style="color:#EAB766">resource</span>，之前由       <span class="function">{@link opendir()}</span> 所打开的。如果目录句柄没有指定，那么会假定为是       <span class="function">{@link opendir()}</span> 所打开的最后一个句柄。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.closedir-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.closedir-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">closedir()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$dir </span><span style="color: #007700">= </span><span style="color: #DD0000">"/etc/php5/"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// 打开已知目录，读取目录到变量并然后关闭<br /></span><span style="color: #007700">if (</span><span style="color: #9876AA">is_dir</span><span style="color: #007700">(</span><span style="color: #9876AA">$dir</span><span style="color: #007700">)) {<br />    if (</span><span style="color: #9876AA">$dh </span><span style="color: #007700">= </span><span style="color: #9876AA">opendir</span><span style="color: #007700">(</span><span style="color: #9876AA">$dir</span><span style="color: #007700">)) {<br />        </span><span style="color: #9876AA">$directory </span><span style="color: #007700">= </span><span style="color: #9876AA">readdir</span><span style="color: #007700">(</span><span style="color: #9876AA">$dh</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">closedir</span><span style="color: #007700">(</span><span style="color: #9876AA">$dh</span><span style="color: #007700">);<br />    }<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
 * @return void*/
function closedir($dir_handle): void {}

/**
*<div id="function.chdir" class="refentry"> <div class="refnamediv">  <h1 class="refname">chdir</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">chdir</span> &mdash; <span class="dc-title">改变目录</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.chdir-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>chdir</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$directory</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   将 PHP 的当前目录改为   <span class="parameter" style="color:#3A95FF">directory</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.chdir-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">directory</span></dt>     <dd>      <p class="para">       新的当前目录      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.chdir-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.chdir-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   Throws an error of level <strong><span>E_WARNING</span></strong> on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.chdir-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">chdir()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// current directory<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">getcwd</span><span style="color: #007700">() . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">chdir</span><span style="color: #007700">(</span><span style="color: #DD0000">'public_html'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// current directory<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">getcwd</span><span style="color: #007700">() . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>/home/vincent<br>/home/vincent/public_html<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.chdir-notes">  <h3 class="title">注释</h3>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    If the PHP interpreter has been built with ZTS (Zend Thread Safety) enabled,    any changes to the current directory made through <span class="function"><strong style="color:#CC7832">chdir()</strong></span>    will be invisible to the operating system. All built-in PHP functions will    still respect the change in current directory; but external library    functions called using <a href="https://www.php.net/manual/zh/book.ffi.php" class="link">FFI</a> will not. You    can tell whether your copy of PHP was built with ZTS enabled using    <strong class="command">php -i</strong> or the built-in constant    <strong><span>PHP_ZTS</span></strong>.   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.chdir-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link getcwd()} - 取得当前工作目录</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function chdir(string $directory): bool {}

/**
*<div id="function.chroot" class="refentry"> <div class="refnamediv">  <h1 class="refname">chroot</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.5, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">chroot</span> &mdash; <span class="dc-title">改变根目录</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.chroot-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>chroot</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$directory</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   将当前进程的根目录改变为   <span class="parameter" style="color:#3A95FF">directory</span>。  </p>  <p class="para">   本函数仅在系统支持且运行于 CLI，CGI   或嵌入 SAPI 版本时才能正确工作。此外本函数还需要 root 权限。  </p>  <p class="para">   调用此函数不会改变 <span>__DIR__</span> 和 <span>__FILE__</span> 魔术常量的值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.chroot-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">directory</span></dt>     <dd>      <p class="para">       新目录      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.chroot-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.chroot-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id=""><p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">chroot()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />chroot</span><span style="color: #007700">(</span><span style="color: #DD0000">"/path/to/your/chroot/"</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">getcwd</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>/<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.chroot-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数未在 Windows 平台下实现。</span></p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数未在 ZTS (Zend Thread Safety) PHP解释器中实现。确认你的 PHP 版本，可以在命令行输入 <strong class="command">php -i</strong> 来查看是否包含 <strong><span>PHP_ZTS</span></strong> 常量。</span></p></blockquote> </div></div>
 * @return bool true on success or false on failure.*/
function chroot(string $directory): bool {}

/**
*<div id="function.getcwd" class="refentry"> <div class="refnamediv">  <h1 class="refname">getcwd</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">getcwd</span> &mdash; <span class="dc-title">取得当前工作目录</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.getcwd-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>getcwd</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   取得当前工作目录。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.getcwd-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.getcwd-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功则返回当前工作目录，失败返回 <strong><span>false</span></strong>。  </p>  <p class="para">   在某些 Unix 的变种下，如果任何父目录没有设定可读或搜索模式，即使当前目录设定了，<span class="function"><strong style="color:#CC7832">getcwd()</strong></span>   还是会返回 <strong><span>false</span></strong>。有关模式与权限的更多信息见 <span class="function">{@link chmod()}</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.getcwd-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">getcwd()</strong></span> 例子</strong></p>     <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// 当前目录<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">getcwd</span><span style="color: #007700">() . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">chdir</span><span style="color: #007700">(</span><span style="color: #DD0000">'cvs'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 当前目录<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">getcwd</span><span style="color: #007700">() . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>     </div>     <div class="example-contents"><p>以上示例的输出类似于：</p></div>     <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>/home/didou<br>/home/didou/cvs<br></span></div>     </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.getcwd-notes">  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    如果是启用 ZTS（Zend 线程安全）构建的 PHP 解释器，则 <span class="function"><strong style="color:#CC7832">getcwd()</strong></span>    返回的当前工作目录可能与操作系统接口返回的不同。当前工作目录的外部库依赖（通过    <a href="https://www.php.net/manual/zh/book.ffi.php" class="link">FFI</a> 调用）可能会受到影响。   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.getcwd-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link chdir()} - 改变目录</span></li>    <li class="member"><span class="function">{@link chmod()} - 改变文件模式</span></li>   </ul>  </span> </div></div>
 * @return string|false <p>*/
function getcwd(): string|false {}

/**
*<div id="function.rewinddir" class="refentry"> <div class="refnamediv">  <h1 class="refname">rewinddir</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">rewinddir</span> &mdash; <span class="dc-title">倒回目录句柄</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.rewinddir-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>rewinddir</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$dir_handle</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   将 <span class="parameter" style="color:#3A95FF">dir_handle</span> 指定的目录流重置到目录的开头。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.rewinddir-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">dir_handle</span></dt>     <dd>      <p class="para">       之前使用 <span class="function">{@link opendir()}</span> 打开的目录句柄       <span class="type" style="color:#EAB766">resource</span>。如果未指定目录句柄，则假设是       <span class="function">{@link opendir()}</span> 打开的最后一个链接。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.rewinddir-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.rewinddir-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">dir_handle</span> 允许为 null。      </td>     </tr>    </tbody>     </table> </div></div>
*/
function rewinddir($dir_handle): void {}

/**
*<div id="function.readdir" class="refentry"> <div class="refnamediv">  <h1 class="refname">readdir</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">readdir</span> &mdash; <span class="dc-title">从目录句柄中读取条目</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.readdir-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>readdir</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$dir_handle</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   返回目录中下一个文件的文件名。文件名以在文件系统中的排序返回。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.readdir-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">dir_handle</span></dt>     <dd>      <p class="para">       目录句柄的 <span class="type" style="color:#EAB766">resource</span>，之前由       <span class="function">{@link opendir()}</span> 打开      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.readdir-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功则返回文件名 或者在失败时返回 <strong><span>false</span></strong>  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数可能返回布尔值<strong><span>false</span></strong>，但也可能返回等同于 <strong><span>false</span></strong> 的非布尔值。请阅读 <a href="https://www.php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用<a href="https://www.php.net/manual/zh/language.operators.comparison.php" class="link">===运算符</a>来测试此函数的返回值。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.readdir-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">dir_handle</span> 可以为 null。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.readdir-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 列出目录中的所有文件</strong></p>    <div class="example-contents"><p>     请留意下面例子中检查 <span class="function"><strong style="color:#CC7832">readdir()</strong></span>     返回值的风格。这里明确地测试返回值是否全等于（值和类型都相同——更多信息参见<a href="https://www.php.net/manual/zh/language.operators.comparison.php" class="link">比较运算符</a>）<strong><span>false</span></strong>，否则任何目录项的名称求值为     <strong><span>false</span></strong> 的都会导致循环停止（例如一个目录名为“0”）。    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">if (</span><span style="color: #9876AA">$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">opendir</span><span style="color: #007700">(</span><span style="color: #DD0000">'/path/to/files'</span><span style="color: #007700">)) {<br />    echo </span><span style="color: #DD0000">"Directory handle: </span><span style="color: #9876AA">$handle</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />    echo </span><span style="color: #DD0000">"Entries:\n"</span><span style="color: #007700">;<br /><br />    </span><span style="color: #FF8000">// 这是正确地遍历目录方法 <br />    </span><span style="color: #007700">while (</span><span style="color: #9876AA">false </span><span style="color: #007700">!== (</span><span style="color: #9876AA">$entry </span><span style="color: #007700">= </span><span style="color: #9876AA">readdir</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">))) {<br />        echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$entry</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />    }<br /><br />    </span><span style="color: #FF8000">// 这是错误地遍历目录的方法 <br />    </span><span style="color: #007700">while (</span><span style="color: #9876AA">$entry </span><span style="color: #007700">= </span><span style="color: #9876AA">readdir</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">)) {<br />        echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$entry</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />    }<br /><br />    </span><span style="color: #9876AA">closedir</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 列出当前目录的所有文件并去掉 <span>.</span> 和 <span>..</span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">if (</span><span style="color: #9876AA">$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">opendir</span><span style="color: #007700">(</span><span style="color: #DD0000">'.'</span><span style="color: #007700">)) {<br />    while (</span><span style="color: #9876AA">false </span><span style="color: #007700">!== (</span><span style="color: #9876AA">$entry </span><span style="color: #007700">= </span><span style="color: #9876AA">readdir</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">))) {<br />        if (</span><span style="color: #9876AA">$entry </span><span style="color: #007700">!= </span><span style="color: #DD0000">"." </span><span style="color: #007700">&amp;&amp; </span><span style="color: #9876AA">$entry </span><span style="color: #007700">!= </span><span style="color: #DD0000">".."</span><span style="color: #007700">) {<br />            echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$entry</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />        }<br />    }<br />    </span><span style="color: #9876AA">closedir</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.readdir-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_dir()} - 判断给定文件名是否是一个目录</span></li>    <li class="member"><span class="function">{@link glob()} - 寻找与模式匹配的文件路径</span></li>    <li class="member"><span class="function">{@link opendir()} - 打开目录句柄</span></li>    <li class="member"><span class="function">{@link scandir()} - 列出指定路径中的文件和目录</span></li>   </ul>  </span> </div></div>
 * @return string|false the filename on success or false on failure.*/
function readdir($dir_handle): string|false {}

/**
*<div id="function.dir" class="refentry"> <div class="refnamediv">  <h1 class="refname">dir</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">dir</span> &mdash; <span class="dc-title">返回一个 Directory 类实例</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.dir-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>dir</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$directory</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$context</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.directory.php" class="type Directory" style="color:#EAB766">Directory</a></span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>    <p class="para rdfs-comment">   以面向对象的方式访问目录。打开    <span class="parameter" style="color:#3A95FF">directory</span> 参数指定的目录。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.dir-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">directory</span></dt>    <dd>     <span>      被打开的目录     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">context</span></dt>    <dd>      <p class="para"><a href="https://www.php.net/manual/zh/stream.contexts.php" class="link">上下文流（context stream）</a><span class="type" style="color:#EAB766">resource</span>。</p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.dir-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 <span class="classname"><a href="https://www.php.net/manual/zh/class.directory.php" class="classname">Directory</a></span> 的实例，出现错误时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.dir-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">context</span> 现在可为空（nullable）。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.dir-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">dir()</strong></span> 示例</strong></p>    <div class="example-contents"><p>     请特别注意下面示例中 <span class="function">{@link Directory::read()}</span> 函数返回值的判断方式。     我们严格测试（值相等，并且类型相同，请参考 <a href="https://www.php.net/manual/zh/language.operators.comparison.php" class="link">     比较运算符</a> ）返回值等于 <strong><span>false</span></strong> ，因为有些情况下，目录名可能&quot;等于&quot; <strong><span>false</span></strong> ，导致     跳出循环。    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$d </span><span style="color: #007700">= </span><span style="color: #9876AA">dir</span><span style="color: #007700">(</span><span style="color: #DD0000">"/etc/php5"</span><span style="color: #007700">);<br />echo </span><span style="color: #DD0000">"Handle: " </span><span style="color: #007700">. </span><span style="color: #9876AA">$d</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">handle </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">"Path: " </span><span style="color: #007700">. </span><span style="color: #9876AA">$d</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">path </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />while (</span><span style="color: #9876AA">false </span><span style="color: #007700">!== (</span><span style="color: #9876AA">$entry </span><span style="color: #007700">= </span><span style="color: #9876AA">$d</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">read</span><span style="color: #007700">())) {<br />   echo </span><span style="color: #9876AA">$entry</span><span style="color: #007700">.</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">$d</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">close</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Handle: Resource id #2<br>Path: /etc/php5<br>.<br>..<br>apache<br>cgi<br>cli<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.dir-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    目录条目返回的顺序依赖于系统。   </p>  </p></blockquote> </div></div>
 * @return Directory|false an instance of Directory, or <b>NULL</b> with wrong*/
function dir(string $directory, $context): Directory|false {}

/**
 * Alias of dir()
 * @param string $directory
 * @param resource $context
 * @since 8.0
 * @return Directory|false
 * @see dir()
 */
function getdir(string $directory, $context = null): Directory|false {}

/**
*<div id="function.scandir" class="refentry"> <div class="refnamediv">  <h1 class="refname">scandir</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">scandir</span> &mdash; <span class="dc-title">列出指定路径中的文件和目录</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.scandir-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>scandir</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$directory</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$sorting_order</span><span class="initializer"> = <strong><span>SCANDIR_SORT_ASCENDING</span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$context</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   返回 <span class="type" style="color:#EAB766">array</span>，包含有   <span class="parameter" style="color:#3A95FF">directory</span> 中的文件和目录。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.scandir-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">directory</span></dt>     <dd>      <p class="para">       要被浏览的目录      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">sorting_order</span></dt>     <dd>      <p class="para">       默认的排序顺序是按字母升序排列。如果使用了可选参数       <span class="parameter" style="color:#3A95FF">sorting_order</span>（设为       1），则排序顺序是按字母降序排列。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">context</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">context</span> 参数的说明见手册中的       <a href="https://www.php.net/manual/zh/ref.stream.php" class="link">Streams API</a> 一章。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.scandir-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功则返回包含有文件名的 <span class="type" style="color:#EAB766">array</span>，如果失败则返回   <strong><span>false</span></strong>。如果 <span class="parameter" style="color:#3A95FF">directory</span>   不是个目录，则返回布尔值 <strong><span>false</span></strong> 并生成一条   <strong><span>E_WARNING</span></strong> 级的错误。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.scandir-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">context</span> 允许为 null。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.scandir-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 简单的 <span class="function"><strong style="color:#CC7832">scandir()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$dir    </span><span style="color: #007700">= </span><span style="color: #DD0000">'/tmp'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$files1 </span><span style="color: #007700">= </span><span style="color: #9876AA">scandir</span><span style="color: #007700">(</span><span style="color: #9876AA">$dir</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$files2 </span><span style="color: #007700">= </span><span style="color: #9876AA">scandir</span><span style="color: #007700">(</span><span style="color: #9876AA">$dir</span><span style="color: #007700">, </span><span style="color: #9876AA">SCANDIR_SORT_DESCENDING</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$files1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$files2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [0] =&gt; .<br>    [1] =&gt; ..<br>    [2] =&gt; bar.php<br>    [3] =&gt; foo.txt<br>    [4] =&gt; somedir<br>)<br>Array<br>(<br>    [0] =&gt; somedir<br>    [1] =&gt; foo.txt<br>    [2] =&gt; bar.php<br>    [3] =&gt; ..<br>    [4] =&gt; .<br>)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.scandir-notes">  <h3 class="title">注释</h3>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">如已启用<a href="https://www.php.net/manual/zh/filesystem.configuration.php#ini.allow-url-fopen" class="link">fopen 包装器</a>，在此函数中， URL 可作为文件名。关于如何指定文件名详见 <span class="function">{@link fopen()}</span>。各种wapper 的不同功能请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>，注意其用法及其可提供的预定义变量。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.scandir-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link opendir()} - 打开目录句柄</span></li>    <li class="member"><span class="function">{@link readdir()} - 从目录句柄中读取条目</span></li>    <li class="member"><span class="function">{@link glob()} - 寻找与模式匹配的文件路径</span></li>    <li class="member"><span class="function">{@link is_dir()} - 判断给定文件名是否是一个目录</span></li>    <li class="member"><span class="function">{@link sort()} - 对数组升序排序</span></li>   </ul>  </span> </div></div>
 * @return array|false an array of filenames on success, or false on*/
function scandir(string $directory, int $sorting_order = 0, $context): array|false {}

/**
*<div id="function.glob" class="refentry"> <div class="refnamediv">  <h1 class="refname">glob</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">glob</span> &mdash; <span class="dc-title">寻找与模式匹配的文件路径</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.glob-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>glob</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pattern</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">glob()</strong></span> 函数依照 libc glob() 函数使用的规则寻找所有与   <span class="parameter" style="color:#3A95FF">pattern</span> 匹配的文件路径，类似于一般 shells   所用的规则一样。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.glob-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       匹配模式（pattern）。       不进行缩写扩展或参数替代。      </p>      <p class="para">       特殊字符：       <ul class="itemizedlist">        <li class="listitem">         <span class="simpara">          <span>*</span> - 匹配零个或多个字符。         </span>        </li>        <li class="listitem">         <span class="simpara">          <span>?</span> - 只匹配单个字符（任意字符）。         </span>        </li>        <li class="listitem">         <span class="simpara">          <span>[...]</span> - 匹配一组字符中的一个字符。          如果第一个字符是 <span>!</span>，则为否定模式，          即匹配不在这组字符中的任意字符。         </span>        </li>        <li class="listitem">         <span class="simpara">          <span>\</span> - 只要没有使用 <strong><span>GLOB_NOESCAPE</span></strong> 标记，该字符会转义后面的字符。         </span>        </li>       </ul>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       有效标记有：       <ul class="itemizedlist">        <li class="listitem">         <span class="simpara">          <strong><span>GLOB_MARK</span></strong> - 在每个返回的项目中加一个斜线         </span>        </li>        <li class="listitem">         <span class="simpara">           <strong><span>GLOB_NOSORT</span></strong> - 按照文件在目录中出现的原始顺序返回（不排序）         </span>        </li>        <li class="listitem">         <span class="simpara">          <strong><span>GLOB_NOCHECK</span></strong> - 如果没有文件匹配则返回用于搜索的模式         </span>        </li>        <li class="listitem">         <span class="simpara">          <strong><span>GLOB_NOESCAPE</span></strong> - 反斜线不转义元字符         </span>        </li>        <li class="listitem">         <span class="simpara">          <strong><span>GLOB_BRACE</span></strong> - 扩充 {a,b,c} 来匹配 &#039;a&#039;，&#039;b&#039; 或 &#039;c&#039;         </span>        </li>        <li class="listitem">         <span class="simpara">          <strong><span>GLOB_ONLYDIR</span></strong> - 仅返回与模式匹配的目录项         </span>        </li>        <li class="listitem">         <span class="simpara">          <strong><span>GLOB_ERR</span></strong> - 停止并读取错误信息（比如说不可读的目录），默认的情况下忽略所有错误         </span>        </li>       </ul>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         <span class="simpara">         <strong><span>GLOB_BRACE</span></strong> 在一些非 GNU 系统上无效，比如 Solaris 和  Alpine Linux 。        </span>       </p></blockquote>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.glob-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回包含有匹配文件和目录的数组，没有匹配文件时返回空数组，出错返回 <strong><span>false</span></strong>。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    在个别操作系统上，无法区分是否为空匹配或错误。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.glob-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 怎样用 <span class="function"><strong style="color:#CC7832">glob()</strong></span> 方便地替代    <span class="function">{@link opendir()}</span> 和相关函数</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">foreach (</span><span style="color: #9876AA">glob</span><span style="color: #007700">(</span><span style="color: #DD0000">"*.txt"</span><span style="color: #007700">) as </span><span style="color: #9876AA">$filename</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$filename</span><span style="color: #DD0000"> size " </span><span style="color: #007700">. </span><span style="color: #9876AA">filesize</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>funclist.txt size 44686<br>funcsummary.txt size 267625<br>quickref.txt size 137820<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.glob-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数不能作用于<a href="https://www.php.net/manual/zh/features.remote-files.php" class="link">远程文件</a>，被检查的文件必须是可通过服务器的文件系统访问的。</span></p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    此函数在一些系统上还不能工作（例如一些旧的 Sun OS）。   </span>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.glob-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link opendir()} - 打开目录句柄</span></li>    <li class="member"><span class="function">{@link readdir()} - 从目录句柄中读取条目</span></li>    <li class="member"><span class="function">{@link closedir()} - 关闭目录句柄</span></li>    <li class="member"><span class="function">{@link fnmatch()} - 用模式匹配文件名</span></li>   </ul>  </span> </div></div>
 * @return array|false an array containing the matched files/directories, an empty array*/
function glob(string $pattern, int $flags = 0): array|false {}

/**
*<div id="function.fileatime" class="refentry"> <div class="refnamediv">  <h1 class="refname">fileatime</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fileatime</span> &mdash; <span class="dc-title">取得文件的上次访问时间</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fileatime-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fileatime</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="simpara">   取得文件的上次访问时间。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fileatime-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件的路径。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fileatime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回文件上次被访问的时间， 或者在失败时返回 <strong><span>false</span></strong>。时间以 Unix 时间戳的方式返回。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.fileatime-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fileatime-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">fileatime()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// 输出类似：somefile.txt was last accessed: December 29 2002 22:16:23.<br /><br /></span><span style="color: #9876AA">$filename </span><span style="color: #007700">= </span><span style="color: #DD0000">'somefile.txt'</span><span style="color: #007700">;<br />if (</span><span style="color: #9876AA">file_exists</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">)) {<br />    echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$filename</span><span style="color: #DD0000"> was last accessed: " </span><span style="color: #007700">. </span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">"F d Y H:i:s."</span><span style="color: #007700">, </span><span style="color: #9876AA">fileatime</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">));<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fileatime-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">     注意：一个文件的 atime   应该在不论何时读取了此文件中的数据块时被更改。当一个应用程序定期访问大量文件或目录时很影响性能。   </p>   <p class="para">    有些   Unix 文件系统可以在加载时关闭 atime 的更新以提高这类程序的性能。USENET   新闻组假脱机是一个常见的例子。在这种文件系统下本函数没有用处。   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">注意：不同文件系统对时间的判断方法可能是不相同的。</p></p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数的结果会被缓存。参见<span class="function">{@link clearstatcache()}</span> 以获得更多细节。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">自 PHP 5.0.0 起, 此函数也用于<em>某些</em>URL 包装器。请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>以获得支持 <span class="function">{@link stat()}</span> 系列函数功能的包装器列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fileatime-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link filemtime()} - 取得文件修改时间</span></li>    <li class="member"><span class="function">{@link fileinode()} - 取得文件的 inode</span></li>    <li class="member"><span class="function">{@link date()} - 格式化 Unix 时间戳</span></li>   </ul>  </span> </div></div>
 * @return int|false the time the file was last accessed, or false on failure.*/
function fileatime(string $filename): int|false {}

/**
*<div id="function.filectime" class="refentry"> <div class="refnamediv">  <h1 class="refname">filectime</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">filectime</span> &mdash; <span class="dc-title">取得文件的 inode 修改时间</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.filectime-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>filectime</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   取得文件的 inode 修改时间。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.filectime-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件的路径。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.filectime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回文件上次 inode 被修改的时间， 或者在失败时返回 <strong><span>false</span></strong>。   时间以 Unix 时间戳的方式返回。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.filectime-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.filectime-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">filectime()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// 输出类似：  somefile.txt was last changed: December 29 2002 22:16:23.<br /><br /></span><span style="color: #9876AA">$filename </span><span style="color: #007700">= </span><span style="color: #DD0000">'somefile.txt'</span><span style="color: #007700">;<br />if (</span><span style="color: #9876AA">file_exists</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">)) {<br />    echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$filename</span><span style="color: #DD0000"> was last changed: " </span><span style="color: #007700">. </span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">"F d Y H:i:s."</span><span style="color: #007700">, </span><span style="color: #9876AA">filectime</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">));<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.filectime-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">   注意：在大多数 Unix 文件系统中，当一个文件的 inode   数据被改变时则该文件被认为是修改了。也就是说，当文件的权限，所有者，所有组或其它   inode 中的元数据被更新时。参见   <span class="function">{@link filemtime()}</span>（这才是你想用于在 Web   页面中建立“最后更新时间”脚注的函数）和 <span class="function">{@link fileatime()}</span>。   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    注意某些 Unix 说明文本中把 ctime 说成是该文件建立的时间，这是错的。在大多数    Unix 文件系统中没有 Unix 文件的建立时间。   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">注意：不同文件系统对时间的判断方法可能是不相同的。</p></p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数的结果会被缓存。参见<span class="function">{@link clearstatcache()}</span> 以获得更多细节。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">自 PHP 5.0.0 起, 此函数也用于<em>某些</em>URL 包装器。请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>以获得支持 <span class="function">{@link stat()}</span> 系列函数功能的包装器列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.filectime-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link filemtime()} - 取得文件修改时间</span></li>   </ul>  </span> </div></div>
 * @return int|false the time the file was last changed, or false on failure.*/
function filectime(string $filename): int|false {}

/**
*<div id="function.filegroup" class="refentry"> <div class="refnamediv">  <h1 class="refname">filegroup</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">filegroup</span> &mdash; <span class="dc-title">取得文件的组</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.filegroup-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>filegroup</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   取得该文件所属组的 ID。组 ID 以数字格式返回，用   <span class="function">{@link posix_getgrgid()}</span> 来将其解析为组名。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.filegroup-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件的路径。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.filegroup-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回该文件所属组的 ID。或在错误时返回   <strong><span>false</span></strong>。 组 ID 以数字格式返回，用   <span class="function">{@link posix_getgrgid()}</span> 来将其解析为组名。如果出错则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.filegroup-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   失败时会发出 <strong><span>E_WARNING</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.filegroup-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 查找文件所在的组</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$filename </span><span style="color: #007700">= </span><span style="color: #DD0000">'index.php'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">posix_getgrgid</span><span style="color: #007700">(</span><span style="color: #9876AA">filegroup</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">)));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.filegroup-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数的结果会被缓存。参见<span class="function">{@link clearstatcache()}</span> 以获得更多细节。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">自 PHP 5.0.0 起, 此函数也用于<em>某些</em>URL 包装器。请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>以获得支持 <span class="function">{@link stat()}</span> 系列函数功能的包装器列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.filegroup-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fileowner()} - 取得文件的所有者</span></li>    <li class="member"><span class="function">{@link posix_getgrgid()} - Return info about a group by group id</span></li>   </ul>  </span> </div></div>
 * @return int|false the group ID of the file, or false in case*/
function filegroup(string $filename): int|false {}

/**
*<div id="function.fileinode" class="refentry"> <div class="refnamediv">  <h1 class="refname">fileinode</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fileinode</span> &mdash; <span class="dc-title">取得文件的 inode</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fileinode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fileinode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   取得文件的 inode。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fileinode-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件的路径。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fileinode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回文件的 inode 节点号， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.fileinode-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fileinode-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 将某个文件和当前文件的 inode 进行对比 </strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$filename </span><span style="color: #007700">= </span><span style="color: #DD0000">'index.php'</span><span style="color: #007700">;<br />if (</span><span style="color: #9876AA">getmyinode</span><span style="color: #007700">() == </span><span style="color: #9876AA">fileinode</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">)) {<br />    echo </span><span style="color: #DD0000">'You are checking the current file.'</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fileinode-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数的结果会被缓存。参见<span class="function">{@link clearstatcache()}</span> 以获得更多细节。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">自 PHP 5.0.0 起, 此函数也用于<em>某些</em>URL 包装器。请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>以获得支持 <span class="function">{@link stat()}</span> 系列函数功能的包装器列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fileinode-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link getmyinode()} - 获取当前脚本的索引节点（inode）</span></li>    <li class="member"><span class="function">{@link stat()} - 给出文件的信息</span></li>   </ul>  </span> </div></div>
 * @return int|false the inode number of the file, or false on failure.*/
function fileinode(string $filename): int|false {}

/**
*<div id="function.filemtime" class="refentry"> <div class="refnamediv">  <h1 class="refname">filemtime</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">filemtime</span> &mdash; <span class="dc-title">取得文件修改时间</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.filemtime-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>filemtime</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   本函数返回文件中的数据块上次被写入的时间，也就是说，文件的内容上次被修改的时间。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.filemtime-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件的路径。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.filemtime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">      返回文件上次被修改的时间， 或者在失败时返回 <strong><span>false</span></strong>。时间以 Unix 时间戳的方式返回，可用于   <span class="function">{@link date()}</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.filemtime-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.filemtime-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">filemtime()</strong></span>  例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// outputs e.g.  somefile.txt was last modified: December 29 2002 22:16:23.<br /><br /></span><span style="color: #9876AA">$filename </span><span style="color: #007700">= </span><span style="color: #DD0000">'somefile.txt'</span><span style="color: #007700">;<br />if (</span><span style="color: #9876AA">file_exists</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">)) {<br />    echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$filename</span><span style="color: #DD0000"> was last modified: " </span><span style="color: #007700">. </span><span style="color: #9876AA">date </span><span style="color: #007700">(</span><span style="color: #DD0000">"F d Y H:i:s."</span><span style="color: #007700">, </span><span style="color: #9876AA">filemtime</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">));<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.filemtime-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">注意：不同文件系统对时间的判断方法可能是不相同的。</p></p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数的结果会被缓存。参见<span class="function">{@link clearstatcache()}</span> 以获得更多细节。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">自 PHP 5.0.0 起, 此函数也用于<em>某些</em>URL 包装器。请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>以获得支持 <span class="function">{@link stat()}</span> 系列函数功能的包装器列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.filemtime-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link filectime()} - 取得文件的 inode 修改时间</span></li>    <li class="member"><span class="function">{@link stat()} - 给出文件的信息</span></li>    <li class="member"><span class="function">{@link touch()} - 设定文件的访问和修改时间</span></li>    <li class="member"><span class="function">{@link getlastmod()} - 获取页面最后修改的时间</span></li>   </ul>  </span> </div></div>
 * @return int|false the time the file was last modified, or false on failure.*/
function filemtime(string $filename): int|false {}

/**
*<div id="function.fileowner" class="refentry"> <div class="refnamediv">  <h1 class="refname">fileowner</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fileowner</span> &mdash; <span class="dc-title">取得文件的所有者</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fileowner-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fileowner</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   取得文件的所有者。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fileowner-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件的路径。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fileowner-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回文件所有的用户 ID，如果出错则返回 <strong><span>false</span></strong>。用户   ID 以数字格式返回，用   <span class="function">{@link posix_getpwuid()}</span> 来将其解析为用户名。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.fileowner-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fileowner-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 找到文件的所有者</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$filename </span><span style="color: #007700">= </span><span style="color: #DD0000">'index.php'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">posix_getpwuid</span><span style="color: #007700">(</span><span style="color: #9876AA">fileowner</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">)));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fileowner-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数的结果会被缓存。参见<span class="function">{@link clearstatcache()}</span> 以获得更多细节。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">自 PHP 5.0.0 起, 此函数也用于<em>某些</em>URL 包装器。请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>以获得支持 <span class="function">{@link stat()}</span> 系列函数功能的包装器列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fileowner-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link filegroup()} - 取得文件的组</span></li>    <li class="member"><span class="function">{@link stat()} - 给出文件的信息</span></li>    <li class="member"><span class="function">{@link posix_getpwuid()} - Return info about a user by user id</span></li>   </ul>  </span> </div></div>
 * @return int|false the user ID of the owner of the file, or false on failure.*/
function fileowner(string $filename): int|false {}

/**
*<div id="function.fileperms" class="refentry"> <div class="refnamediv">  <h1 class="refname">fileperms</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fileperms</span> &mdash; <span class="dc-title">获取文件权限</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fileperms-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fileperms</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   获取指定文件权限。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fileperms-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件的路径。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fileperms-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   以数字模式返回文件权限。此模式的低位与 <span class="function">{@link chmod()}</span>   期望权限相同，然而在大多数平台上，返回值还将会包含指定 <span class="parameter" style="color:#3A95FF">filename</span>   的文件类型信息。下面的示例示范了如何在 POSIX 系统上测试特定权限和文件类型的返回值。  </p>  <p class="para">   对于本地文件，特定的返回值是通过 C 库的 <span class="function">{@link stat()}</span> 函数返回结构中的   <span>st_mode</span> 成员的值。Exactly which bits are set   can vary from platform to platform, and looking up your specific platform&#039;s   documentation is recommended if parsing the non-permission bits of the   return value is required.  </p>  <p class="para">   失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.fileperms-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fileperms-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 以八进制的形式显示文件的权限</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">sprintf</span><span style="color: #007700">(</span><span style="color: #DD0000">'%o'</span><span style="color: #007700">, </span><span style="color: #9876AA">fileperms</span><span style="color: #007700">(</span><span style="color: #DD0000">'/tmp'</span><span style="color: #007700">)), -</span><span style="color: #9876AA">4</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">sprintf</span><span style="color: #007700">(</span><span style="color: #DD0000">'%o'</span><span style="color: #007700">, </span><span style="color: #9876AA">fileperms</span><span style="color: #007700">(</span><span style="color: #DD0000">'/etc/passwd'</span><span style="color: #007700">)), -</span><span style="color: #9876AA">4</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>1777<br>0644<br></span></div>    </div>   </div>   <div class="example" id="">    <p><strong>示例 #2 输出全部权限</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$perms </span><span style="color: #007700">= </span><span style="color: #9876AA">fileperms</span><span style="color: #007700">(</span><span style="color: #DD0000">'/etc/passwd'</span><span style="color: #007700">);<br /><br />switch (</span><span style="color: #9876AA">$perms </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0xF000</span><span style="color: #007700">) {<br />    case </span><span style="color: #9876AA">0xC000</span><span style="color: #007700">: </span><span style="color: #FF8000">// 套接字<br />        </span><span style="color: #9876AA">$info </span><span style="color: #007700">= </span><span style="color: #DD0000">'s'</span><span style="color: #007700">;<br />        break;<br />    case </span><span style="color: #9876AA">0xA000</span><span style="color: #007700">: </span><span style="color: #FF8000">// 符号链接<br />        </span><span style="color: #9876AA">$info </span><span style="color: #007700">= </span><span style="color: #DD0000">'l'</span><span style="color: #007700">;<br />        break;<br />    case </span><span style="color: #9876AA">0x8000</span><span style="color: #007700">: </span><span style="color: #FF8000">// regular<br />        </span><span style="color: #9876AA">$info </span><span style="color: #007700">= </span><span style="color: #DD0000">'r'</span><span style="color: #007700">;<br />        break;<br />    case </span><span style="color: #9876AA">0x6000</span><span style="color: #007700">: </span><span style="color: #FF8000">// 块设备<br />        </span><span style="color: #9876AA">$info </span><span style="color: #007700">= </span><span style="color: #DD0000">'b'</span><span style="color: #007700">;<br />        break;<br />    case </span><span style="color: #9876AA">0x4000</span><span style="color: #007700">: </span><span style="color: #FF8000">// 目录<br />        </span><span style="color: #9876AA">$info </span><span style="color: #007700">= </span><span style="color: #DD0000">'d'</span><span style="color: #007700">;<br />        break;<br />    case </span><span style="color: #9876AA">0x2000</span><span style="color: #007700">: </span><span style="color: #FF8000">// 字符设备<br />        </span><span style="color: #9876AA">$info </span><span style="color: #007700">= </span><span style="color: #DD0000">'c'</span><span style="color: #007700">;<br />        break;<br />    case </span><span style="color: #9876AA">0x1000</span><span style="color: #007700">: </span><span style="color: #FF8000">// FIFO 管道<br />        </span><span style="color: #9876AA">$info </span><span style="color: #007700">= </span><span style="color: #DD0000">'p'</span><span style="color: #007700">;<br />        break;<br />    default: </span><span style="color: #FF8000">// 位置<br />        </span><span style="color: #9876AA">$info </span><span style="color: #007700">= </span><span style="color: #DD0000">'u'</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #FF8000">// 所有者<br /></span><span style="color: #9876AA">$info </span><span style="color: #007700">.= ((</span><span style="color: #9876AA">$perms </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0100</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'r' </span><span style="color: #007700">: </span><span style="color: #DD0000">'-'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$info </span><span style="color: #007700">.= ((</span><span style="color: #9876AA">$perms </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0080</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'w' </span><span style="color: #007700">: </span><span style="color: #DD0000">'-'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$info </span><span style="color: #007700">.= ((</span><span style="color: #9876AA">$perms </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0040</span><span style="color: #007700">) ?<br />            ((</span><span style="color: #9876AA">$perms </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0800</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'s' </span><span style="color: #007700">: </span><span style="color: #DD0000">'x' </span><span style="color: #007700">) :<br />            ((</span><span style="color: #9876AA">$perms </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0800</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'S' </span><span style="color: #007700">: </span><span style="color: #DD0000">'-'</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">// 组<br /></span><span style="color: #9876AA">$info </span><span style="color: #007700">.= ((</span><span style="color: #9876AA">$perms </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0020</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'r' </span><span style="color: #007700">: </span><span style="color: #DD0000">'-'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$info </span><span style="color: #007700">.= ((</span><span style="color: #9876AA">$perms </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0010</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'w' </span><span style="color: #007700">: </span><span style="color: #DD0000">'-'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$info </span><span style="color: #007700">.= ((</span><span style="color: #9876AA">$perms </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0008</span><span style="color: #007700">) ?<br />            ((</span><span style="color: #9876AA">$perms </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0400</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'s' </span><span style="color: #007700">: </span><span style="color: #DD0000">'x' </span><span style="color: #007700">) :<br />            ((</span><span style="color: #9876AA">$perms </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0400</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'S' </span><span style="color: #007700">: </span><span style="color: #DD0000">'-'</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">// 其它<br /></span><span style="color: #9876AA">$info </span><span style="color: #007700">.= ((</span><span style="color: #9876AA">$perms </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0004</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'r' </span><span style="color: #007700">: </span><span style="color: #DD0000">'-'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$info </span><span style="color: #007700">.= ((</span><span style="color: #9876AA">$perms </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0002</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'w' </span><span style="color: #007700">: </span><span style="color: #DD0000">'-'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$info </span><span style="color: #007700">.= ((</span><span style="color: #9876AA">$perms </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0001</span><span style="color: #007700">) ?<br />            ((</span><span style="color: #9876AA">$perms </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0200</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'t' </span><span style="color: #007700">: </span><span style="color: #DD0000">'x' </span><span style="color: #007700">) :<br />            ((</span><span style="color: #9876AA">$perms </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0x0200</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'T' </span><span style="color: #007700">: </span><span style="color: #DD0000">'-'</span><span style="color: #007700">));<br /><br />echo </span><span style="color: #9876AA">$info</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>-rw-r--r--<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fileperms-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数的结果会被缓存。参见<span class="function">{@link clearstatcache()}</span> 以获得更多细节。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">自 PHP 5.0.0 起, 此函数也用于<em>某些</em>URL 包装器。请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>以获得支持 <span class="function">{@link stat()}</span> 系列函数功能的包装器列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fileperms-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link chmod()} - 改变文件模式</span></li>    <li class="member"><span class="function">{@link is_readable()} - 判断给定文件名是否可读</span></li>    <li class="member"><span class="function">{@link stat()} - 给出文件的信息</span></li>   </ul>  </span> </div></div>
 * @return int|false the permissions on the file, or false on failure.*/
function fileperms(string $filename): int|false {}

/**
*<div id="function.filesize" class="refentry"> <div class="refnamediv">  <h1 class="refname">filesize</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">filesize</span> &mdash; <span class="dc-title">取得文件大小</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.filesize-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>filesize</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   取得指定文件的大小。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.filesize-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件的路径。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.filesize-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回文件大小的字节数，如果出错返回 <strong><span>false</span></strong> 并生成一条   <strong><span>E_WARNING</span></strong> 级的错误。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">因为 PHP 的整数类型是有符号整型而且很多平台使用 32 位整型，对 2GB以上的文件，一些文件系统函数可能返回无法预期的结果。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.filesize-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.filesize-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">filesize()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// 输出类似：somefile.txt: 1024 bytes<br /><br /></span><span style="color: #9876AA">$filename </span><span style="color: #007700">= </span><span style="color: #DD0000">'somefile.txt'</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">$filename </span><span style="color: #007700">. </span><span style="color: #DD0000">': ' </span><span style="color: #007700">. </span><span style="color: #9876AA">filesize</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">) . </span><span style="color: #DD0000">' bytes'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.filesize-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数的结果会被缓存。参见<span class="function">{@link clearstatcache()}</span> 以获得更多细节。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">自 PHP 5.0.0 起, 此函数也用于<em>某些</em>URL 包装器。请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>以获得支持 <span class="function">{@link stat()}</span> 系列函数功能的包装器列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.filesize-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link file_exists()} - 检查文件或目录是否存在</span></li>   </ul>  </span> </div></div>
 * @return int|false the size of the file in bytes, or false (and generates an error*/
function filesize(string $filename): int|false {}

/**
*<div id="function.filetype" class="refentry"> <div class="refnamediv">  <h1 class="refname">filetype</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">filetype</span> &mdash; <span class="dc-title">取得文件类型</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.filetype-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>filetype</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   返回文件的类型。  </p> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.filetype-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件的路径。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.filetype-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回文件的类型。 可能的值有   fifo，char，dir，block，link，file 和 unknown。  </p>  <p class="para">    如果出错则返回 <strong><span>false</span></strong>。如果 stat 调用失败或者文件类型未知的话   <span class="function"><strong style="color:#CC7832">filetype()</strong></span> 还会产生一个 <strong><span>E_NOTICE</span></strong> 消息。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.filetype-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.filetype-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">filetype()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">filetype</span><span style="color: #007700">(</span><span style="color: #DD0000">'/etc/passwd'</span><span style="color: #007700">);<br />echo </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">filetype</span><span style="color: #007700">(</span><span style="color: #DD0000">'/etc/'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;">     <div class="cdata"><span>file<br>dir<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.filetype-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数的结果会被缓存。参见<span class="function">{@link clearstatcache()}</span> 以获得更多细节。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">自 PHP 5.0.0 起, 此函数也用于<em>某些</em>URL 包装器。请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>以获得支持 <span class="function">{@link stat()}</span> 系列函数功能的包装器列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.filetype-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_dir()} - 判断给定文件名是否是一个目录</span></li>    <li class="member"><span class="function">{@link is_file()} - 判断给定文件名是否为一个正常的文件</span></li>    <li class="member"><span class="function">{@link is_link()} - 判断给定文件名是否为一个符号连接</span></li>    <li class="member"><span class="function">{@link file_exists()} - 检查文件或目录是否存在</span></li>    <li class="member"><span class="function">{@link mime_content_type()} - 检测文件的 MIME 类型</span></li>    <li class="member"><span class="function">{@link pathinfo()} - 返回文件路径的信息</span></li>    <li class="member"><span class="function">{@link stat()} - 给出文件的信息</span></li>   </ul>  </span> </div></div>
 * @return string|false the type of the file. Possible values are fifo, char,*/
function filetype(string $filename): string|false {}

/**
*<div id="function.file-exists" class="refentry"> <div class="refnamediv">  <h1 class="refname">file_exists</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">file_exists</span> &mdash; <span class="dc-title">检查文件或目录是否存在</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.file-exists-description">  <h3 class="title">说明</h3> <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>file_exists</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div>    <p class="para rdfs-comment">     检查文件或目录是否存在。    </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.file-exists-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件或目录的路径。      </p>      <p class="para">       在 Windows 中要用 <var class="filename">//computername/share/filename</var> 或者   <var class="filename">\\computername\share\filename</var> 来检查网络中的共享文件。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.file-exists-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果由 <span class="parameter" style="color:#3A95FF">filename</span> 指定的文件或目录存在则返回   <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    对于指向文件不存在的符号链接，此函数将会返回 <strong><span>false</span></strong>。   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    The check is done using the real UID/GID instead of the effective one.   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">因为 PHP 的整数类型是有符号整型而且很多平台使用 32 位整型，对 2GB以上的文件，一些文件系统函数可能返回无法预期的结果。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.file-exists-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.file-exists-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 测试一个文件是否存在</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$filename </span><span style="color: #007700">= </span><span style="color: #DD0000">'/path/to/foo.txt'</span><span style="color: #007700">;<br /><br />if (</span><span style="color: #9876AA">file_exists</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">)) {<br />    echo </span><span style="color: #DD0000">"The file </span><span style="color: #9876AA">$filename</span><span style="color: #DD0000"> exists"</span><span style="color: #007700">;<br />} else {<br />    echo </span><span style="color: #DD0000">"The file </span><span style="color: #9876AA">$filename</span><span style="color: #DD0000"> does not exist"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.file-exists-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.file-exists-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_readable()} - 判断给定文件名是否可读</span></li>    <li class="member"><span class="function">{@link is_writable()} - 判断给定的文件名是否可写</span></li>    <li class="member"><span class="function">{@link is_file()} - 判断给定文件名是否为一个正常的文件</span></li>    <li class="member"><span class="function">{@link file()} - 把整个文件读入一个数组中</span></li>    <li class="member"><span class="classname"><a href="https://www.php.net/manual/zh/class.splfileinfo.php" class="classname">SplFileInfo</a></span></li>   </ul>  </span> </div></div>
 * @return bool true if the file or directory specified by*/
function file_exists(string $filename): bool {}

/**
*<div id="function.is-writable" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_writable</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_writable</span> &mdash; <span class="dc-title">判断给定的文件名是否可写</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-writable-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_writable</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   如果文件存在并且可写则返回 <strong><span>true</span></strong>。<span class="parameter" style="color:#3A95FF">filename</span>   参数可以是一个允许进行是否可写检查的目录名。  </p>  <p class="para">   记住 PHP 也许只能以运行 webserver 的用户名（通常为   &#039;nobody&#039;）来访问文件。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-writable-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       要检查的文件名称。      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-writable-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">如果文件 <span class="parameter" style="color:#3A95FF">filename</span> 存在并且可写则返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.is-writable-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-writable-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_writable()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$filename </span><span style="color: #007700">= </span><span style="color: #DD0000">'test.txt'</span><span style="color: #007700">;<br />if (</span><span style="color: #9876AA">is_writable</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">)) {<br />    echo </span><span style="color: #DD0000">'The file is writable'</span><span style="color: #007700">;<br />} else {<br />    echo </span><span style="color: #DD0000">'The file is not writable'</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.is-writable-notes">  <h3 class="title">注释</h3>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数的结果会被缓存。参见<span class="function">{@link clearstatcache()}</span> 以获得更多细节。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">自 PHP 5.0.0 起, 此函数也用于<em>某些</em>URL 包装器。请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>以获得支持 <span class="function">{@link stat()}</span> 系列函数功能的包装器列表。</p></div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-writable-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_readable()} - 判断给定文件名是否可读</span></li>    <li class="member"><span class="function">{@link file_exists()} - 检查文件或目录是否存在</span></li>    <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>   </ul>  </span> </div></div>
 * @return bool true if the filename exists and is*/
function is_writable(string $filename): bool {}

/**
*<div id="function.is-writeable" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_writeable</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_writeable</span> &mdash; <span class="dc-title"><span class="function">{@link is_writable()}</span> 的别名</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-writeable-description">  <h3 class="title">说明</h3>  <p class="simpara">   此函数是该函数的别名：<span class="function">{@link is_writable()}</span>。  </p> </div></div>
 * @return bool true if the filename exists and is*/
function is_writeable(string $filename): bool {}

/**
*<div id="function.is-readable" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_readable</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_readable</span> &mdash; <span class="dc-title">判断给定文件名是否可读</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-readable-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_readable</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   判断给定文件名是否存在并且可读。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-readable-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件的路径。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-readable-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果由 <span class="parameter" style="color:#3A95FF">filename</span>   指定的文件或目录存在并且可读则返回 <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.is-readable-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-readable-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_readable()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$filename </span><span style="color: #007700">= </span><span style="color: #DD0000">'test.txt'</span><span style="color: #007700">;<br />if (</span><span style="color: #9876AA">is_readable</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">)) {<br />    echo </span><span style="color: #DD0000">'The file is readable'</span><span style="color: #007700">;<br />} else {<br />    echo </span><span style="color: #DD0000">'The file is not readable'</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.is-readable-notes">  <h3 class="title">注释</h3>  <p class="para">   记住 PHP 也许只能以运行 webserver 的用户名（通常为   &#039;nobody&#039;）来访问文件。不计入安全模式的限制。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数的结果会被缓存。参见<span class="function">{@link clearstatcache()}</span> 以获得更多细节。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">自 PHP 5.0.0 起, 此函数也用于<em>某些</em>URL 包装器。请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>以获得支持 <span class="function">{@link stat()}</span> 系列函数功能的包装器列表。</p></div>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    The check is done using the real UID/GID instead of the effective one.   </p>  </p></blockquote>  <p class="para">   对于目录这个函数可能会返回 <strong><span>true</span></strong>。请使用 <span class="function">{@link is_dir()}</span> 来区分文件和目录。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-readable-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_writable()} - 判断给定的文件名是否可写</span></li>    <li class="member"><span class="function">{@link file_exists()} - 检查文件或目录是否存在</span></li>    <li class="member"><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>   </ul>  </span> </div></div>
 * @return bool true if the file or directory specified by*/
function is_readable(string $filename): bool {}

/**
*<div id="function.is-executable" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_executable</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_executable</span> &mdash; <span class="dc-title">判断给定文件名是否可执行</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-executable-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_executable</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   判断给定文件名是否可执行。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-executable-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件的路径。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-executable-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果文件存在且可执行则返回 <strong><span>true</span></strong>，错误时返回 <strong><span>false</span></strong>。在 POSIX   系统中，如果设置了文件权限的可执行位，则文件可执行。对于 Windows，请参阅下面的注释。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.is-executable-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-executable-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_executable()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$file </span><span style="color: #007700">= </span><span style="color: #DD0000">'/home/vincent/somefile.sh'</span><span style="color: #007700">;<br /><br />if (</span><span style="color: #9876AA">is_executable</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">)) {<br />    echo </span><span style="color: #9876AA">$file</span><span style="color: #007700">.</span><span style="color: #DD0000">' is executable'</span><span style="color: #007700">;<br />} else {<br />    echo </span><span style="color: #9876AA">$file</span><span style="color: #007700">.</span><span style="color: #DD0000">' is not executable'</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.is-executable-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数的结果会被缓存。参见<span class="function">{@link clearstatcache()}</span> 以获得更多细节。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">自 PHP 5.0.0 起, 此函数也用于<em>某些</em>URL 包装器。请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>以获得支持 <span class="function">{@link stat()}</span> 系列函数功能的包装器列表。</p></div>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    在 Windows 上，如果文件是 Win API <span>GetBinaryType()</span>    报告的正确可执行文件，则该文件视为可执行文件；由于 BC 原因，扩展名是    <var class="filename">.bat</var> 或 <var class="filename">.cmd</var>    的文件也被视为可执行文件。在 PHP 7.4.0 之前，任何扩展名是    <var class="filename">.bat</var> 或 <var class="filename">.cmd</var>    的非空文件都被视为可执行文件。注意 <var class="envar">PATHEXT</var> 与    <span class="function"><strong style="color:#CC7832">is_executable()</strong></span> 无关。   </span>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-executable-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_file()} - 判断给定文件名是否为一个正常的文件</span></li>    <li class="member"><span class="function">{@link is_link()} - 判断给定文件名是否为一个符号连接</span></li>   </ul>  </span> </div></div>
 * @return bool true if the filename exists and is executable, or false on*/
function is_executable(string $filename): bool {}

/**
*<div id="function.is-file" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_file</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_file</span> &mdash; <span class="dc-title">判断给定文件名是否为一个正常的文件</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-file-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_file</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   判断给定文件名是否为一个正常的文件。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-file-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件的路径。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-file-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果文件存在且为正常的文件则返回 <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">因为 PHP 的整数类型是有符号整型而且很多平台使用 32 位整型，对 2GB以上的文件，一些文件系统函数可能返回无法预期的结果。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.is-file-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-file-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_file()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">is_file</span><span style="color: #007700">(</span><span style="color: #DD0000">'a_file.txt'</span><span style="color: #007700">)) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">is_file</span><span style="color: #007700">(</span><span style="color: #DD0000">'/usr/bin/'</span><span style="color: #007700">)) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>bool(true)<br>bool(false)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.is-file-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数的结果会被缓存。参见<span class="function">{@link clearstatcache()}</span> 以获得更多细节。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">自 PHP 5.0.0 起, 此函数也用于<em>某些</em>URL 包装器。请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>以获得支持 <span class="function">{@link stat()}</span> 系列函数功能的包装器列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-file-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_dir()} - 判断给定文件名是否是一个目录</span></li>    <li class="member"><span class="function">{@link is_link()} - 判断给定文件名是否为一个符号连接</span></li>    <li class="member"><span class="classname"><a href="https://www.php.net/manual/zh/class.splfileinfo.php" class="classname">SplFileInfo</a></span></li>   </ul>  </span> </div></div>
 * @return bool true if the filename exists and is a regular file, false*/
function is_file(string $filename): bool {}

/**
*<div id="function.is-dir" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_dir</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_dir</span> &mdash; <span class="dc-title">判断给定文件名是否是一个目录</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-dir-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_dir</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   判断给定文件名是否是一个目录。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-dir-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件路径，如果 <span class="parameter" style="color:#3A95FF">filename</span> 是相对文件名，会相对于当前工作目录进行检查。如果       <span class="parameter" style="color:#3A95FF">filename</span> 是符号链接或者硬链接，然后解析链接并检查。如果启用了 <a href="https://www.php.net/manual/zh/ini.core.php#ini.open-basedir" class="link">open_basedir</a>，则会应用更多限制。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-dir-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果文件名存在，并且是个目录，返回 <strong><span>true</span></strong>，否则返回<strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.is-dir-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-dir-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_dir()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">is_dir</span><span style="color: #007700">(</span><span style="color: #DD0000">'a_file.txt'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">is_dir</span><span style="color: #007700">(</span><span style="color: #DD0000">'bogus_dir/abc'</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">is_dir</span><span style="color: #007700">(</span><span style="color: #DD0000">'..'</span><span style="color: #007700">)); </span><span style="color: #FF8000">//one dir up<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>bool(false)<br>bool(false)<br>bool(true)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.is-dir-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数的结果会被缓存。参见<span class="function">{@link clearstatcache()}</span> 以获得更多细节。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">自 PHP 5.0.0 起, 此函数也用于<em>某些</em>URL 包装器。请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>以获得支持 <span class="function">{@link stat()}</span> 系列函数功能的包装器列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-dir-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link chdir()} - 改变目录</span></li>    <li class="member"><span class="function">{@link dir()} - 返回一个 Directory 类实例</span></li>    <li class="member"><span class="function">{@link opendir()} - 打开目录句柄</span></li>    <li class="member"><span class="function">{@link is_file()} - 判断给定文件名是否为一个正常的文件</span></li>    <li class="member"><span class="function">{@link is_link()} - 判断给定文件名是否为一个符号连接</span></li>   </ul>  </span> </div></div>
 * @return bool true if the filename exists and is a directory, false*/
function is_dir(string $filename): bool {}

/**
*<div id="function.is-link" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_link</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_link</span> &mdash; <span class="dc-title">判断给定文件名是否为一个符号连接</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-link-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_link</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   判断给定文件名是否为一个符号连接。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-link-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件的路径。      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-link-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果文件存在并且是一个符号连接则返回 <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.is-link-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-link-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 创建并确认一个文件是否为符号连接</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$link </span><span style="color: #007700">= </span><span style="color: #DD0000">'uploads'</span><span style="color: #007700">;<br /><br />if (</span><span style="color: #9876AA">is_link</span><span style="color: #007700">(</span><span style="color: #9876AA">$link</span><span style="color: #007700">)) {<br />    echo </span><span style="color: #9876AA">readlink</span><span style="color: #007700">(</span><span style="color: #9876AA">$link</span><span style="color: #007700">);<br />} else {<br />    </span><span style="color: #9876AA">symlink</span><span style="color: #007700">(</span><span style="color: #DD0000">'uploads.php'</span><span style="color: #007700">, </span><span style="color: #9876AA">$link</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.is-link-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数的结果会被缓存。参见<span class="function">{@link clearstatcache()}</span> 以获得更多细节。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">自 PHP 5.0.0 起, 此函数也用于<em>某些</em>URL 包装器。请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>以获得支持 <span class="function">{@link stat()}</span> 系列函数功能的包装器列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-link-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_dir()} - 判断给定文件名是否是一个目录</span></li>    <li class="member"><span class="function">{@link is_file()} - 判断给定文件名是否为一个正常的文件</span></li>    <li class="member"><span class="function">{@link readlink()} - 返回符号连接指向的目标</span></li>   </ul>  </span> </div></div>
 * @return bool true if the filename exists and is a symbolic link, false*/
function is_link(string $filename): bool {}

/**
 * Gives information about a file
 * @link https://php.net/manual/en/function.stat.php
 * @param string $filename <p>
 * Path to the file.
 * </p>
 * @return array|false <table>
 * stat and fstat result
 * format
 * <tr valign="top">
 * <td>Numeric</td>
 * <td>Associative (since PHP 4.0.6)</td>
 * <td>Description</td>
 * </tr>
 * <tr valign="top">
 * <td>0</td>
 * <td>dev</td>
 * <td>device number</td>
 * </tr>
 * <tr valign="top">
 * <td>1</td>
 * <td>ino</td>
 * <td>inode number *</td>
 * </tr>
 * <tr valign="top">
 * <td>2</td>
 * <td>mode</td>
 * <td>inode protection mode</td>
 * </tr>
 * <tr valign="top">
 * <td>3</td>
 * <td>nlink</td>
 * <td>number of links</td>
 * </tr>
 * <tr valign="top">
 * <td>4</td>
 * <td>uid</td>
 * <td>userid of owner *</td>
 * </tr>
 * <tr valign="top">
 * <td>5</td>
 * <td>gid</td>
 * <td>groupid of owner *</td>
 * </tr>
 * <tr valign="top">
 * <td>6</td>
 * <td>rdev</td>
 * <td>device type, if inode device</td>
 * </tr>
 * <tr valign="top">
 * <td>7</td>
 * <td>size</td>
 * <td>size in bytes</td>
 * </tr>
 * <tr valign="top">
 * <td>8</td>
 * <td>atime</td>
 * <td>time of last access (Unix timestamp)</td>
 * </tr>
 * <tr valign="top">
 * <td>9</td>
 * <td>mtime</td>
 * <td>time of last modification (Unix timestamp)</td>
 * </tr>
 * <tr valign="top">
 * <td>10</td>
 * <td>ctime</td>
 * <td>time of last inode change (Unix timestamp)</td>
 * </tr>
 * <tr valign="top">
 * <td>11</td>
 * <td>blksize</td>
 * <td>blocksize of filesystem IO **</td>
 * </tr>
 * <tr valign="top">
 * <td>12</td>
 * <td>blocks</td>
 * <td>number of 512-byte blocks allocated **</td>
 * </tr>
 * </table>
 * * On Windows this will always be 0.
 * </p>
 * <p>
 * ** Only valid on systems supporting the st_blksize type - other
 * systems (e.g. Windows) return -1.
 * </p>
 * <p>
 * In case of error, stat returns false.
 */
#[Pure(true)]
#[ArrayShape([
    "dev" => "int",
    "ino" => "int",
    "mode" => "int",
    "nlink" => "int",
    "uid" => "int",
    "gid" => "int",
    "rdev" => "int",
    "size" => "int",
    "atime" => "int",
    "mtime" => "int",
    "ctime" => "int",
    "blksize" => "int",
    "blocks" => "int"
])]
/**
*<div id="function.stat" class="refentry"> <div class="refnamediv">  <h1 class="refname">stat</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">stat</span> &mdash; <span class="dc-title">给出文件的信息</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.stat-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>stat</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   获取由 <span class="parameter" style="color:#3A95FF">filename</span> 指定的文件的统计信息。如果   <span class="parameter" style="color:#3A95FF">filename</span>   是符号连接，则统计信息是关于被连接文件本身的，而不是符号连接。在 PHP 7.4.0   之前，使用 Windows <abbr class="abbrev">NTS</abbr> 版本获取   <span>size</span>、<span>atime</span>、<span>mtime</span>   和 <span>ctime</span> 统计信息将从符号链接获取。  </p>  <p class="para">   <span class="function">{@link lstat()}</span> 和 <span class="function"><strong style="color:#CC7832">stat()</strong></span> 相同，只除了它会返回符号连接的状态。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.stat-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件的路径。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.stat-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <table class="doctable table">    <caption><strong><span class="function"><strong style="color:#CC7832">stat()</strong></span> 和 <span class="function">{@link fstat()}</span> 返回格式</strong></caption>         <thead>      <tr>       <th>数字下标</th>       <th>关联键名</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>0</td>       <td>dev</td>       <td>设备号 ***</td>      </tr>      <tr>       <td>1</td>       <td>ino</td>       <td>inode 号 ****</td>      </tr>      <tr>       <td>2</td>       <td>mode</td>       <td>inode 保护模式 *****</td>      </tr>      <tr>       <td>3</td>       <td>nlink</td>       <td>连接数目</td>      </tr>      <tr>       <td>4</td>       <td>uid</td>       <td>所有者的用户 id *</td>      </tr>      <tr>       <td>5</td>       <td>gid</td>       <td>所有者的组 id *</td>      </tr>      <tr>       <td>6</td>       <td>rdev</td>       <td>设备类型，如果是 inode 设备的话</td>      </tr>      <tr>       <td>7</td>       <td>size</td>       <td>文件大小的字节数</td>      </tr>      <tr>       <td>8</td>       <td>atime</td>       <td>上次访问时间（Unix 时间戳）</td>      </tr>      <tr>       <td>9</td>       <td>mtime</td>       <td>上次修改时间（Unix 时间戳）</td>      </tr>      <tr>       <td>10</td>       <td>ctime</td>       <td>上次 inodb 改变时间（Unix 时间戳）</td>      </tr>      <tr>       <td>11</td>       <td>blksize</td>       <td>文件系统 IO 的块大小 **</td>      </tr>      <tr>       <td>12</td>       <td>blocks</td>       <td>分配的 512 字节块数 **</td>      </tr>     </tbody>       </table>  </p>  <p class="para">   * Windows 下总是 <span>0</span>。  </p>  <p class="para">   * - 仅在支持 st_blksize 类型的系统下有效。其它系统（如 Windows）返回 <span>-1</span>。  </p>  <p class="para">   *** On Windows, as of PHP 7.4.0, this is the serial number of the volume that contains the file,   which is a 64-bit <em>unsigned</em> integer, so may overflow.   Previously, it was the numeric representation of the drive letter (e.g. <span>2</span>   for <span>C:</span>) for <span class="function"><strong style="color:#CC7832">stat()</strong></span>, and <span>0</span> for   <span class="function">{@link lstat()}</span>.  </p>  <p class="para">   **** 在 Windows 上，自 PHP 7.4.0 起，这是跟文件相关的标识符，因为是64位   <em>unsigned</em> 整数，因此可能会溢出。之前始终为 <span>0</span>。  </p>  <p class="para">   ***** On Windows, the writable permission bit is set according to the read-only   file attribute, and the same value is reported for all users, group and owner.   The ACL is not taken into account, contrary to <span class="function">{@link is_writable()}</span>.  </p>  <p class="para">  <span>mode</span> 的值包含几个函数读取到的信息。当用八进制编写时，从右开始，前三位由  <span class="function">{@link chmod()}</span> 返回。PHP 忽略下一个数字。接下来的两位数字表示文件类型：   <table class="doctable table">    <caption><strong><span>mode</span> 文件类型</strong></caption>         <thead>      <tr>       <th>八进制表示 <span>mode</span></th>       <th>含义</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td><strong><span>0140000</span></strong></td>       <td>socket</td>      </tr>      <tr>       <td><strong><span>0120000</span></strong></td>       <td>link</td>      </tr>      <tr>       <td><strong><span>0100000</span></strong></td>       <td>常规文件</td>      </tr>      <tr>       <td><strong><span>0060000</span></strong></td>       <td>块设备</td>      </tr>      <tr>       <td><strong><span>0040000</span></strong></td>       <td>目录</td>      </tr>      <tr>       <td><strong><span>0020000</span></strong></td>       <td>字符设备</td>      </tr>      <tr>       <td><strong><span>0010000</span></strong></td>       <td>fifo</td>      </tr>     </tbody>       </table>   例如普通文件可能是 <strong><span>0100644</span></strong>，目录可能是 <strong><span>0040755</span></strong>。  </p>  <p class="para">   如果出错，<span class="function"><strong style="color:#CC7832">stat()</strong></span> 返回 <strong><span>false</span></strong>。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">因为 PHP 的整数类型是有符号整型而且很多平台使用 32 位整型，对 2GB以上的文件，一些文件系统函数可能返回无法预期的结果。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.stat-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时会产生 <strong><span>E_WARNING</span></strong> 级别的错误。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.stat-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.4.0</td>      <td>       On Windows, the device number is now the serial number of the volume that       contains the file, and the inode number is the identifier associated with the file.      </td>     </tr>     <tr>      <td>7.4.0</td>      <td>       The <span>size</span>, <span>atime</span>, <span>mtime</span> and       <span>ctime</span> statistics of symlinks are always those of the target.       This was previously not the case for <abbr class="abbrev">NTS</abbr> builds on Windows.      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.stat-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">stat()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Get file stat <br /></span><span style="color: #9876AA">$stat </span><span style="color: #007700">= </span><span style="color: #9876AA">stat</span><span style="color: #007700">(</span><span style="color: #DD0000">'C:\php\php.exe'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//<br /> * Print file access time, this is the same <br /> * as calling fileatime()<br /> <br /></span><span style="color: #007700">echo </span><span style="color: #DD0000">'Access time: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">$stat</span><span style="color: #007700">[</span><span style="color: #DD0000">'atime'</span><span style="color: #007700">];<br /><br /></span><span style="color: #FF8000">//<br /> * Print file modification time, this is the <br /> * same as calling filemtime()<br /> <br /></span><span style="color: #007700">echo </span><span style="color: #DD0000">'Modification time: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">$stat</span><span style="color: #007700">[</span><span style="color: #DD0000">'mtime'</span><span style="color: #007700">];<br /><br /></span><span style="color: #FF8000">// Print the device number <br /></span><span style="color: #007700">echo </span><span style="color: #DD0000">'Device number: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">$stat</span><span style="color: #007700">[</span><span style="color: #DD0000">'dev'</span><span style="color: #007700">];<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 Using <span class="function"><strong style="color:#CC7832">stat()</strong></span> information together with <span class="function">{@link touch()}</span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Get file stat <br /></span><span style="color: #9876AA">$stat </span><span style="color: #007700">= </span><span style="color: #9876AA">stat</span><span style="color: #007700">(</span><span style="color: #DD0000">'C:\php\php.exe'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Did we failed to get stat information? <br /></span><span style="color: #007700">if (!</span><span style="color: #9876AA">$stat</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">'stat() call failed...'</span><span style="color: #007700">;<br />} else {<br />    </span><span style="color: #FF8000">//<br />     * We want the access time to be 1 week <br />     * after the current access time.<br />     <br />    </span><span style="color: #9876AA">$atime </span><span style="color: #007700">= </span><span style="color: #9876AA">$stat</span><span style="color: #007700">[</span><span style="color: #DD0000">'atime'</span><span style="color: #007700">] + </span><span style="color: #9876AA">604800</span><span style="color: #007700">;<br /><br />    </span><span style="color: #FF8000">// Touch the file <br />    </span><span style="color: #007700">if (!</span><span style="color: #9876AA">touch</span><span style="color: #007700">(</span><span style="color: #DD0000">'some_file.txt'</span><span style="color: #007700">, </span><span style="color: #9876AA">time</span><span style="color: #007700">(), </span><span style="color: #9876AA">$atime</span><span style="color: #007700">)) {<br />        echo </span><span style="color: #DD0000">'Failed to touch file...'</span><span style="color: #007700">;<br />    } else {<br />        echo </span><span style="color: #DD0000">'touch() returned success...'</span><span style="color: #007700">;<br />    }<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.stat-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">注意：不同文件系统对时间的判断方法可能是不相同的。</p></p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数的结果会被缓存。参见<span class="function">{@link clearstatcache()}</span> 以获得更多细节。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">自 PHP 5.0.0 起, 此函数也用于<em>某些</em>URL 包装器。请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>以获得支持 <span class="function"><strong style="color:#CC7832">stat()</strong></span> 系列函数功能的包装器列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.stat-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link lstat()} - 给出一个文件或符号连接的信息</span></li>    <li class="member"><span class="function">{@link fstat()} - 通过已打开的文件指针取得文件信息</span></li>    <li class="member"><span class="function">{@link filemtime()} - 取得文件修改时间</span></li>    <li class="member"><span class="function">{@link filegroup()} - 取得文件的组</span></li>    <li class="member"><span class="classname"><a href="https://www.php.net/manual/zh/class.splfileinfo.php" class="classname">SplFileInfo</a></span></li>   </ul>  </span> </div></div>
*/
function stat(string $filename): array|false {}

/**
*<div id="function.lstat" class="refentry"> <div class="refnamediv">  <h1 class="refname">lstat</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">lstat</span> &mdash; <span class="dc-title">给出一个文件或符号连接的信息</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.lstat-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>lstat</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   获取由 <span class="parameter" style="color:#3A95FF">filename</span> 指定的文件或符号连接的统计信息。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.lstat-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件或符号连接的路径。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.lstat-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   有关 <span class="function"><strong style="color:#CC7832">lstat()</strong></span>   返回的数组结构见手册中 <span class="function">{@link stat()}</span> 函数的页面。   本函数和   <span class="function">{@link stat()}</span> 函数相同，只除了如果   <span class="parameter" style="color:#3A95FF">filename</span> 参数是符号连接的话，则该符号连接的状态被返回，而不是该符号连接所指向的文件的状态。  </p>  <p class="para">   失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.lstat-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.lstat-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1  <span class="function">{@link stat()}</span> 和 <span class="function"><strong style="color:#CC7832">lstat()</strong></span> 的对照</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />symlink</span><span style="color: #007700">(</span><span style="color: #DD0000">'uploads.php'</span><span style="color: #007700">, </span><span style="color: #DD0000">'uploads'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Contrast information for uploads.php and uploads<br /></span><span style="color: #9876AA">array_diff</span><span style="color: #007700">(</span><span style="color: #9876AA">stat</span><span style="color: #007700">(</span><span style="color: #DD0000">'uploads'</span><span style="color: #007700">), </span><span style="color: #9876AA">lstat</span><span style="color: #007700">(</span><span style="color: #DD0000">'uploads'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents"><p>     Information that differs between the two files.    </p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [ino] =&gt; 97236376<br>    [mode] =&gt; 33188<br>    [size] =&gt; 34<br>    [atime] =&gt; 1223580003<br>    [mtime] =&gt; 1223581848<br>    [ctime] =&gt; 1223581848<br>    [blocks] =&gt; 8<br>)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.lstat-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数的结果会被缓存。参见<span class="function">{@link clearstatcache()}</span> 以获得更多细节。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">自 PHP 5.0.0 起, 此函数也用于<em>某些</em>URL 包装器。请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>以获得支持 <span class="function">{@link stat()}</span> 系列函数功能的包装器列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.lstat-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link stat()} - 给出文件的信息</span></li>   </ul>  </span> </div></div>
 * @return array|false See the manual page for stat for information on*/
function lstat(string $filename): array|false {}

/**
*<div id="function.chown" class="refentry"> <div class="refnamediv">  <h1 class="refname">chown</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">chown</span> &mdash; <span class="dc-title">改变文件的所有者</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.chown-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>chown</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">int</span></span> <span class="parameter" style="color:#3A95FF">$user</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   尝试将文件 <span class="parameter" style="color:#3A95FF">filename</span> 的所有者改成用户   <span class="parameter" style="color:#3A95FF">user</span>（由用户名或用户 ID 指定）。   只有超级用户可以改变文件的所有者。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.chown-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件路径。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">user</span></dt>     <dd>      <p class="para">       用户名或数字。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.chown-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.chown-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 简单的 <span class="function"><strong style="color:#CC7832">chown()</strong></span> 用法</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// 要使用的文件名和用户名<br /></span><span style="color: #9876AA">$file_name</span><span style="color: #007700">= </span><span style="color: #DD0000">"foo.php"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$path </span><span style="color: #007700">= </span><span style="color: #DD0000">"/home/sites/php.net/public_html/sandbox/" </span><span style="color: #007700">. </span><span style="color: #9876AA">$file_name </span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$user_name </span><span style="color: #007700">= </span><span style="color: #DD0000">"root"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// 设置用户<br /></span><span style="color: #9876AA">chown</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">, </span><span style="color: #9876AA">$user_name</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 检测结果<br /></span><span style="color: #9876AA">$stat </span><span style="color: #007700">= </span><span style="color: #9876AA">stat</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">posix_getpwuid</span><span style="color: #007700">(</span><span style="color: #9876AA">$stat</span><span style="color: #007700">[</span><span style="color: #DD0000">'uid'</span><span style="color: #007700">]));<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [name] =&gt; root<br>    [passwd] =&gt; x<br>    [uid] =&gt; 0<br>    [gid] =&gt; 0<br>    [gecos] =&gt; root<br>    [dir] =&gt; /root<br>    [shell] =&gt; /bin/bash<br>)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.chown-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数不能作用于<a href="https://www.php.net/manual/zh/features.remote-files.php" class="link">远程文件</a>，被检查的文件必须是可通过服务器的文件系统访问的。</span></p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    在 Windows 上对普通文件使用此函数会静默失败。   </span>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.chown-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link chmod()} - 改变文件模式</span></li>    <li class="member"><span class="function">{@link chgrp()} - 改变文件所属的组</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function chown(string $filename, string|int $user): bool {}

/**
*<div id="function.chgrp" class="refentry"> <div class="refnamediv">  <h1 class="refname">chgrp</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">chgrp</span> &mdash; <span class="dc-title">改变文件所属的组</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.chgrp-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>chgrp</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">int</span></span> <span class="parameter" style="color:#3A95FF">$group</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   尝试将文件 <span class="parameter" style="color:#3A95FF">filename</span> 所属的组改成   <span class="parameter" style="color:#3A95FF">group</span>（通过组名或组 ID   指定）。  </p>  <p class="para">   只有超级用户可以任意修改文件的组，其它用户可能只能将文件的组改成该用户自己所在的组。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.chgrp-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件的路径。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">group</span></dt>     <dd>      <p class="para">       组的名称或数字。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.chgrp-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.chgrp-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 改变文件所属的组</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$filename </span><span style="color: #007700">= </span><span style="color: #DD0000">'shared_file.txt'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$format </span><span style="color: #007700">= </span><span style="color: #DD0000">"%s's Group ID @ %s: %d\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #9876AA">$format</span><span style="color: #007700">, </span><span style="color: #9876AA">$filename</span><span style="color: #007700">, </span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">'r'</span><span style="color: #007700">), </span><span style="color: #9876AA">filegroup</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">chgrp</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">, </span><span style="color: #9876AA">8</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">clearstatcache</span><span style="color: #007700">(); </span><span style="color: #FF8000">// 不要缓存 filegroup() 结果<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #9876AA">$format</span><span style="color: #007700">, </span><span style="color: #9876AA">$filename</span><span style="color: #007700">, </span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">'r'</span><span style="color: #007700">), </span><span style="color: #9876AA">filegroup</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.chgrp-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数不能作用于<a href="https://www.php.net/manual/zh/features.remote-files.php" class="link">远程文件</a>，被检查的文件必须是可通过服务器的文件系统访问的。</span></p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    在 Windows 上，此函数应用在常规文件时会默默失败。   </span>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.chgrp-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link chown()} - 改变文件的所有者</span></li>    <li class="member"><span class="function">{@link chmod()} - 改变文件模式</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function chgrp(string $filename, string|int $group): bool {}

/**
*<div id="function.lchown" class="refentry"> <div class="refnamediv">  <h1 class="refname">lchown</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.3, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">lchown</span> &mdash; <span class="dc-title">修改符号链接的所有者</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.lchown-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>lchown</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">int</span></span> <span class="parameter" style="color:#3A95FF">$user</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   尝试修改符号链接 <span class="parameter" style="color:#3A95FF">filename</span> 的 所有者 <span class="parameter" style="color:#3A95FF">user</span>  </p>  <p class="para">   只有超级用户任意修改符号链接的所有者。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.lchown-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">          文件路径。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">user</span></dt>     <dd>      <p class="para">          所有者名称或编号      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.lchown-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.lchown-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Changing the owner of a symbolic link</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$target </span><span style="color: #007700">= </span><span style="color: #DD0000">'output.php'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$link </span><span style="color: #007700">= </span><span style="color: #DD0000">'output.html'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">symlink</span><span style="color: #007700">(</span><span style="color: #9876AA">$target</span><span style="color: #007700">, </span><span style="color: #9876AA">$link</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">lchown</span><span style="color: #007700">(</span><span style="color: #9876AA">$link</span><span style="color: #007700">, </span><span style="color: #9876AA">8</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.lchown-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数不能作用于<a href="https://www.php.net/manual/zh/features.remote-files.php" class="link">远程文件</a>，被检查的文件必须是可通过服务器的文件系统访问的。</span></p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数未在 Windows 平台下实现。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.lchown-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link chown()} - 改变文件的所有者</span></li>    <li class="member"><span class="function">{@link lchgrp()} - 修改符号链接的所有组</span></li>    <li class="member"><span class="function">{@link chgrp()} - 改变文件所属的组</span></li>    <li class="member"><span class="function">{@link chmod()} - 改变文件模式</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function lchown(string $filename, string|int $user): bool {}

/**
*<div id="function.lchgrp" class="refentry"> <div class="refnamediv">  <h1 class="refname">lchgrp</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.3, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">lchgrp</span> &mdash; <span class="dc-title">修改符号链接的所有组</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.lchgrp-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>lchgrp</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">int</span></span> <span class="parameter" style="color:#3A95FF">$group</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   尝试修改符号链接 <span class="parameter" style="color:#3A95FF">filename</span> 的所有组 <span class="parameter" style="color:#3A95FF">group</span>  </p>  <p class="para">   只有超级用户可以任意修改符号链接的所有组;其他用户可能需要有修改目标组的权限才能修改至目标所有组。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.lchgrp-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       符号链接路径      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">group</span></dt>     <dd>      <p class="para">       所有组的名字或者编号      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.lchgrp-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.lchgrp-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 更改符号链接的所有组</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$target </span><span style="color: #007700">= </span><span style="color: #DD0000">'output.php'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$link </span><span style="color: #007700">= </span><span style="color: #DD0000">'output.html'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">symlink</span><span style="color: #007700">(</span><span style="color: #9876AA">$target</span><span style="color: #007700">, </span><span style="color: #9876AA">$link</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">lchgrp</span><span style="color: #007700">(</span><span style="color: #9876AA">$link</span><span style="color: #007700">, </span><span style="color: #9876AA">8</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.lchgrp-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数不能作用于<a href="https://www.php.net/manual/zh/features.remote-files.php" class="link">远程文件</a>，被检查的文件必须是可通过服务器的文件系统访问的。</span></p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数未在 Windows 平台下实现。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.lchgrp-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link chgrp()} - 改变文件所属的组</span></li>    <li class="member"><span class="function">{@link lchown()} - 修改符号链接的所有者</span></li>    <li class="member"><span class="function">{@link chown()} - 改变文件的所有者</span></li>    <li class="member"><span class="function">{@link chmod()} - 改变文件模式</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function lchgrp(string $filename, string|int $group): bool {}

/**
*<div id="function.chmod" class="refentry"> <div class="refnamediv">  <h1 class="refname">chmod</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">chmod</span> &mdash; <span class="dc-title">改变文件模式</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.chmod-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>chmod</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$permissions</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   尝试将 <span class="parameter" style="color:#3A95FF">filename</span> 所指定文件的模式改成   <span class="parameter" style="color:#3A95FF">permissions</span> 所给定的。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.chmod-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件的路径。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">permissions</span></dt>     <dd>      <p class="para">       注意 <span class="parameter" style="color:#3A95FF">permissions</span> 不会被自动当成八进制数值，因此为确保正确操作，需要给       <span class="parameter" style="color:#3A95FF">permissions</span> 前面加上 0。诸如“g+w”之类的字符串将无法正常工作。      </p>      <p class="para">       <div class="informalexample">        <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />chmod</span><span style="color: #007700">(</span><span style="color: #DD0000">"/somedir/somefile"</span><span style="color: #007700">, </span><span style="color: #9876AA">755</span><span style="color: #007700">);   </span><span style="color: #FF8000">// 十进制数，可能不对<br /></span><span style="color: #9876AA">chmod</span><span style="color: #007700">(</span><span style="color: #DD0000">"/somedir/somefile"</span><span style="color: #007700">, </span><span style="color: #DD0000">"u+rwx,go+rx"</span><span style="color: #007700">); </span><span style="color: #FF8000">// 字符串，不对<br /></span><span style="color: #9876AA">chmod</span><span style="color: #007700">(</span><span style="color: #DD0000">"/somedir/somefile"</span><span style="color: #007700">, </span><span style="color: #9876AA">0755</span><span style="color: #007700">);  </span><span style="color: #FF8000">// 八进制数，正确的 mode 值<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>        </div>       </div>      </p>      <p class="para">       <span class="parameter" style="color:#3A95FF">permissions</span>       参数包含三个八进制数按顺序分别指定了所有者、所有者所在的组以及所有人的访问限制。每一部分都可以通过加入所需的权限来计算出所要的权限。数字 1       表示使文件可执行，数字 2 表示使文件可写，数字 4 表示使文件可读。加入这些数字来制定所需要的权限。有关 UNIX       系统的文件权限可以阅读手册“<strong class="command">man 1 chmod</strong>”和“<strong class="command">man 2 chmod</strong>”。      </p>      <p class="para">       <div class="informalexample">        <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 所有者可以读写，其他人什么也不能做<br /></span><span style="color: #9876AA">chmod</span><span style="color: #007700">(</span><span style="color: #DD0000">"/somedir/somefile"</span><span style="color: #007700">, </span><span style="color: #9876AA">0600</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 所有者可以读写，其他人可以读<br /></span><span style="color: #9876AA">chmod</span><span style="color: #007700">(</span><span style="color: #DD0000">"/somedir/somefile"</span><span style="color: #007700">, </span><span style="color: #9876AA">0644</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 所有者可以读写执行，其他人可以读和执行<br /></span><span style="color: #9876AA">chmod</span><span style="color: #007700">(</span><span style="color: #DD0000">"/somedir/somefile"</span><span style="color: #007700">, </span><span style="color: #9876AA">0755</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 所有者可以读写执行，所有者同组可以读和执行<br /></span><span style="color: #9876AA">chmod</span><span style="color: #007700">(</span><span style="color: #DD0000">"/somedir/somefile"</span><span style="color: #007700">, </span><span style="color: #9876AA">0750</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>        </div>       </div>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.chmod-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.chmod-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   失败时会发出 <strong><span>E_WARNING</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.chmod-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    当前用户指的是执行 PHP 的用户。很可能和通常访问 shell 或者 FTP    的用户不是同一个。在大多数系统下文件模式只能被拥有该文件的用户改变。   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数不能作用于<a href="https://www.php.net/manual/zh/features.remote-files.php" class="link">远程文件</a>，被检查的文件必须是可通过服务器的文件系统访问的。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.chmod-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link chown()} - 改变文件的所有者</span></li>    <li class="member"><span class="function">{@link chgrp()} - 改变文件所属的组</span></li>    <li class="member"><span class="function">{@link fileperms()} - 获取文件权限</span></li>    <li class="member"><span class="function">{@link stat()} - 给出文件的信息</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function chmod(string $filename, int $permissions): bool {}

/**
*<div id="function.touch" class="refentry"> <div class="refnamediv">  <h1 class="refname">touch</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">touch</span> &mdash; <span class="dc-title">设定文件的访问和修改时间</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.touch-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>touch</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$mtime</span><span class="initializer"> = <strong><span>null</span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$atime</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   尝试将由 <span class="parameter" style="color:#3A95FF">filename</span>   给出的文件的访问和修改时间设定为给出的 <span class="parameter" style="color:#3A95FF">mtime</span>。   注意访问时间总是会被修改的，不论有几个参数。  </p>  <p class="para">   如果文件不存在，则会被创建。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.touch-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       要设定的文件名。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">mtime</span></dt>     <dd>      <p class="para">       要设定的时间。如果参数 <span class="parameter" style="color:#3A95FF">mtime</span> 为 <strong><span>null</span></strong>，则会使用当前系统的 <span class="function">{@link time()}</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">atime</span></dt>     <dd>      <p class="para">       如果这个参数不是 <strong><span>null</span></strong>，则给定文件的访问时间会被设为 <span class="parameter" style="color:#3A95FF">atime</span>。       否则会设置为 <span class="parameter" style="color:#3A95FF">mtime</span>。       如果两个参数都是 <strong><span>null</span></strong>，则使用当前系统时间。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.touch-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">mtime</span> 和 <span class="parameter" style="color:#3A95FF">atime</span>       现在可以为空。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.touch-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.touch-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">touch()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">if (</span><span style="color: #9876AA">touch</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">)) {<br />    echo </span><span style="color: #9876AA">$filename </span><span style="color: #007700">. </span><span style="color: #DD0000">' modification time has been changed to present time'</span><span style="color: #007700">;<br />} else {<br />    echo </span><span style="color: #DD0000">'Sorry, could not change modification time of ' </span><span style="color: #007700">. </span><span style="color: #9876AA">$filename</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 使用 <span class="parameter" style="color:#3A95FF">mtime</span> 参数的 <span class="function"><strong style="color:#CC7832">touch()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// This is the touch time, we'll set it to one hour in the past.<br /></span><span style="color: #9876AA">$time </span><span style="color: #007700">= </span><span style="color: #9876AA">time</span><span style="color: #007700">() - </span><span style="color: #9876AA">3600</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// Touch the file<br /></span><span style="color: #007700">if (!</span><span style="color: #9876AA">touch</span><span style="color: #007700">(</span><span style="color: #DD0000">'some_file.txt'</span><span style="color: #007700">, </span><span style="color: #9876AA">$time</span><span style="color: #007700">)) {<br />    echo </span><span style="color: #DD0000">'Whoops, something went wrong...'</span><span style="color: #007700">;<br />} else {<br />    echo </span><span style="color: #DD0000">'Touched file with success'</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.touch-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">注意：不同文件系统对时间的判断方法可能是不相同的。</p></p></blockquote> </div></div>
 * @return bool true on success or false on failure.*/
function touch(string $filename, ?int $mtime, ?int $atime): bool {}

/**
*<div id="function.clearstatcache" class="refentry"> <div class="refnamediv">  <h1 class="refname">clearstatcache</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">clearstatcache</span> &mdash; <span class="dc-title">清除文件状态缓存</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.clearstatcache-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>clearstatcache</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$clear_realpath_cache</span><span class="initializer"> = <strong><span>false</span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span><span class="initializer"> = &quot;&quot;</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   当使用 <span class="function">{@link stat()}</span>，<span class="function">{@link lstat()}</span>   或者任何列在受影响函数表（见下面）中的函数时，PHP   将缓存这些函数的返回信息以提供更快的性能。然而在某些情况下，你可能想清除被缓存的信息。例如如果在一个脚本中多次检查同一个文件，而该文件在此脚本执行期间有被删除或修改的危险时，你需要清除文件状态缓存。这种情况下，可以用   <span class="function"><strong style="color:#CC7832">clearstatcache()</strong></span> 函数来清除被   PHP 缓存的该文件信息。  </p>  <p class="para">   必须注意的是，对于不存在的文件，PHP 并不会缓存其信息。所以如果调用   <span class="function">{@link file_exists()}</span> 来检查不存在的文件，在该文件没有被创建之前，它都会返回   <strong><span>false</span></strong>。如果该文件被创建了，就算以后被删除，它都会返回 <strong><span>true</span></strong>   函数 <span class="function">{@link unlink()}</span> 会自动清除该缓存.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    本函数缓存特定文件名的信息，因此只在对同一个文件名进行多次操作并且需要该文件信息不被缓存时才需要调用    <span class="function"><strong style="color:#CC7832">clearstatcache()</strong></span>。   </p>  </p></blockquote>  <p class="para">   受影响的函数包括   <span class="function">{@link stat()}</span>，   <span class="function">{@link lstat()}</span>，   <span class="function">{@link file_exists()}</span>，   <span class="function">{@link is_writable()}</span>，   <span class="function">{@link is_readable()}</span>，   <span class="function">{@link is_executable()}</span>，   <span class="function">{@link is_file()}</span>，   <span class="function">{@link is_dir()}</span>，   <span class="function">{@link is_link()}</span>，   <span class="function">{@link filectime()}</span>，   <span class="function">{@link fileatime()}</span>，   <span class="function">{@link filemtime()}</span>，   <span class="function">{@link fileinode()}</span>，   <span class="function">{@link filegroup()}</span>，   <span class="function">{@link fileowner()}</span>，   <span class="function">{@link filesize()}</span>，   <span class="function">{@link filetype()}</span>   和 <span class="function">{@link fileperms()}</span>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.clearstatcache-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">clear_realpath_cache</span></dt>     <dd>      <p class="para">       是否<em>也</em>清除真实路径缓存      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       仅清除指定文件名的真实路径缓存; 只在       <span class="parameter" style="color:#3A95FF">clear_realpath_cache</span> 为 <strong><span>true</span></strong>        时启用。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.clearstatcache-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.clearstatcache-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">clearstatcache()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$file </span><span style="color: #007700">= </span><span style="color: #DD0000">'output_log.txt'</span><span style="color: #007700">;<br /><br />function </span><span style="color: #9876AA">get_owner</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">)<br />{<br />    </span><span style="color: #9876AA">$stat </span><span style="color: #007700">= </span><span style="color: #9876AA">stat</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$user </span><span style="color: #007700">= </span><span style="color: #9876AA">posix_getpwuid</span><span style="color: #007700">(</span><span style="color: #9876AA">$stat</span><span style="color: #007700">[</span><span style="color: #DD0000">'uid'</span><span style="color: #007700">]);<br />    return </span><span style="color: #9876AA">$user</span><span style="color: #007700">[</span><span style="color: #DD0000">'name'</span><span style="color: #007700">];<br />}<br /><br /></span><span style="color: #9876AA">$format </span><span style="color: #007700">= </span><span style="color: #DD0000">"UID @ %s: %s\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #9876AA">$format</span><span style="color: #007700">, </span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">'r'</span><span style="color: #007700">), </span><span style="color: #9876AA">get_owner</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">chown</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">, </span><span style="color: #DD0000">'ross'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #9876AA">$format</span><span style="color: #007700">, </span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">'r'</span><span style="color: #007700">), </span><span style="color: #9876AA">get_owner</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">clearstatcache</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #9876AA">$format</span><span style="color: #007700">, </span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">'r'</span><span style="color: #007700">), </span><span style="color: #9876AA">get_owner</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>UID @ Sun, 12 Oct 2008 20:48:28 +0100: root<br>UID @ Sun, 12 Oct 2008 20:48:28 +0100: root<br>UID @ Sun, 12 Oct 2008 20:48:28 +0100: ross<br></span></div>    </div>   </div>  </span> </div></div>
 * @return void*/
function clearstatcache(bool $clear_realpath_cache = false, string $filename = ''): void {}

/**
*<div id="function.disk-total-space" class="refentry"> <div class="refnamediv">  <h1 class="refname">disk_total_space</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">disk_total_space</span> &mdash; <span class="dc-title">返回一个目录的磁盘总大小</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.disk-total-space-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>disk_total_space</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$directory</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">float</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   给出一个包含有一个目录的字符串，本函数将根据相应的文件系统或磁盘分区返回所有的字节数。   【译者注】本函数返回的是该目录所在的磁盘分区的总大小，因此在给出同一个磁盘分区的不同目录作为参数所得到的结果完全相同。   在 Unix 和 Windows 200x/XP 中都支持将一个磁盘分区加载为一个子目录，这时正确使用本函数就很有意义。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.disk-total-space-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">directory</span></dt>     <dd>      <p class="para">       文件系统的目录或者磁盘分区。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.disk-total-space-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   以浮点返回一个目录的磁盘总大小字节数， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.disk-total-space-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">disk_total_space()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// $df 包含 "/" 目录的磁盘大小<br /></span><span style="color: #9876AA">$ds </span><span style="color: #007700">= </span><span style="color: #9876AA">disk_total_space</span><span style="color: #007700">(</span><span style="color: #DD0000">"/"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//在 Windows 下:<br /></span><span style="color: #9876AA">$ds </span><span style="color: #007700">= </span><span style="color: #9876AA">disk_total_space</span><span style="color: #007700">(</span><span style="color: #DD0000">"C:"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$ds </span><span style="color: #007700">= </span><span style="color: #9876AA">disk_total_space</span><span style="color: #007700">(</span><span style="color: #DD0000">"D:"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.disk-total-space-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数不能作用于<a href="https://www.php.net/manual/zh/features.remote-files.php" class="link">远程文件</a>，被检查的文件必须是可通过服务器的文件系统访问的。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.disk-total-space-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link disk_free_space()} - 返回目录中的可用空间</span></li>   </ul>  </span> </div></div>
 * @return float|false the total number of bytes as a float*/
function disk_total_space(string $directory): float|false {}

/**
*<div id="function.disk-free-space" class="refentry"> <div class="refnamediv">  <h1 class="refname">disk_free_space</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">disk_free_space</span> &mdash; <span class="dc-title">返回目录中的可用空间</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.disk-free-space-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>disk_free_space</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$directory</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">float</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   给出一个包含有一个目录的字符串，本函数将根据相应的文件系统或磁盘分区返回可用的字节数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.disk-free-space-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">directory</span></dt>     <dd>      <p class="para">       文件系统目录或者磁盘分区。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        如果指定了文件名而不是文件目录，这个函数的行为将并不统一，会因操作系统和 PHP 版本而异。       </p>      </p></blockquote>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.disk-free-space-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   以浮点返回可用的字节数， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.disk-free-space-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">disk_free_space()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// $df 包含根目录下可用的字节数<br /></span><span style="color: #9876AA">$df </span><span style="color: #007700">= </span><span style="color: #9876AA">disk_free_space</span><span style="color: #007700">(</span><span style="color: #DD0000">"/"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//在 Windows 下:<br /></span><span style="color: #9876AA">$df_c </span><span style="color: #007700">= </span><span style="color: #9876AA">disk_free_space</span><span style="color: #007700">(</span><span style="color: #DD0000">"C:"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$df_d </span><span style="color: #007700">= </span><span style="color: #9876AA">disk_free_space</span><span style="color: #007700">(</span><span style="color: #DD0000">"D:"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.disk-free-space-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数不能作用于<a href="https://www.php.net/manual/zh/features.remote-files.php" class="link">远程文件</a>，被检查的文件必须是可通过服务器的文件系统访问的。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.disk-free-space-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link disk_total_space()} - 返回一个目录的磁盘总大小</span></li>   </ul>  </span> </div></div>
 * @return float|false the number of available bytes as a float*/
function disk_free_space(string $directory): float|false {}

/**
*<div id="function.diskfreespace" class="refentry"> <div class="refnamediv">  <h1 class="refname">diskfreespace</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">diskfreespace</span> &mdash; <span class="dc-title"><span class="function">{@link disk_free_space()}</span> 的别名</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.diskfreespace-description">  <h3 class="title">说明</h3>  <p class="simpara">   此函数是该函数的别名：<span class="function">{@link disk_free_space()}</span>。  </p> </div></div>
 * @return float|false*/
function diskfreespace(string $directory): float|false {}

/**
*<div id="function.mail" class="refentry"> <div class="refnamediv">  <h1 class="refname">mail</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mail</span> &mdash; <span class="dc-title">发送邮件</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mail-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mail</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$to</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$subject</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$message</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766">string</span></span> <span class="parameter" style="color:#3A95FF">$additional_headers</span><span class="initializer"> = []</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$additional_params</span><span class="initializer"> = &quot;&quot;</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   发送一封电子邮件。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mail-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">to</span></dt>     <dd>      <p class="para">       电子邮件收件人，或收件人列表。      </p>      <p class="para">       本字符串的格式必须符合       <a href="http://www.faqs.org/rfcs/rfc2822" class="link external">&raquo;&nbsp;RFC 2822</a>。例如：       <ul class="simplelist">        <li class="member">user@example.com</li>        <li class="member">user@example.com, anotheruser@example.com</li>        <li class="member">User &lt;user@example.com&gt;</li>        <li class="member">User &lt;user@example.com&gt;, Another User &lt;anotheruser@example.com&gt;</li>       </ul>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">subject</span></dt>     <dd>      <p class="para">       电子邮件的主题。      </p>      <div class="caution"><strong class="caution">警告</strong>       <p class="para">        本项不能包含任何换行符，否则邮件可能无法正确发送。       </p>      </div>     </dd>             <dt><span class="parameter" style="color:#3A95FF">message</span></dt>     <dd>      <p class="para">       所要发送的消息。      </p>      <p class="para">       行之间必须以一个 CRLF（\r\n）分隔。每行不能超过 70 个字符。      </p>      <div class="caution"><strong class="caution">警告</strong>       <p class="para">        （Windows 下）当 PHP 直接连接到 SMTP 服务器时，如果在一行开头发现一个句号，则会被删掉。要避免此问题，将单个句号替换成两个句号。        <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$text </span><span style="color: #007700">= </span><span style="color: #9876AA">str_replace</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n."</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n.."</span><span style="color: #007700">, </span><span style="color: #9876AA">$text</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>        </div>       </p>      </div>     </dd>             <dt><span class="parameter" style="color:#3A95FF">additional_headers</span>（可选项）</dt>     <dd>      <p class="para">       <span class="type" style="color:#EAB766">String</span> or <span class="type" style="color:#EAB766">array</span> to be inserted at the end of the email header.      </p>      <p class="para">       This is typically used to add extra headers (From, Cc, and Bcc).       Multiple extra headers should be separated with a CRLF (\r\n).       If outside data are used to compose this header, the data should be sanitized       so that no unwanted headers could be injected.       </p>      <p class="para">       If an <span class="type" style="color:#EAB766">array</span> is passed, its keys are the header names and its       values are the respective header values.      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        Before PHP 5.4.42 and 5.5.27, repectively, <span class="parameter" style="color:#3A95FF">additional_headers</span> did not have mail header        injection protection. Therefore, users must make sure specified headers        are safe and contains headers only. i.e. Never start mail body by putting        multiple newlines.       </p>      </p></blockquote>            <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        When sending mail, the mail <em>must</em> contain        a <span>From</span> header. This can be set with the        <span class="parameter" style="color:#3A95FF">additional_headers</span> parameter, or a default        can be set in <var class="filename">php.ini</var>.       </p>       <p class="para">        Failing to do this will result in an error        message similar to <span>Warning: mail(): &quot;sendmail_from&quot; not        set in php.ini or custom &quot;From:&quot; header missing</span>.        The <span>From</span> header sets also        <span>Return-Path</span> when sending directly via SMTP (Windows only).       </p>      </p></blockquote>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        If messages are not received, try using a LF (\n) only.        Some Unix mail transfer agents (most notably        <a href="http://cr.yp.to/qmail.html" class="link external">&raquo;&nbsp;qmail</a>) replace LF by CRLF        automatically (which leads to doubling CR if CRLF is used).        This should be a last resort, as it does not comply with        <a href="http://www.faqs.org/rfcs/rfc2822" class="link external">&raquo;&nbsp;RFC 2822</a>.       </p>      </p></blockquote>     </dd>             <dt><span class="parameter" style="color:#3A95FF">additional_params</span> (optional)</dt>     <dd>      <p class="para">       The <span class="parameter" style="color:#3A95FF">additional_params</span> parameter       can be used to pass additional flags as command line options to the       program configured to be used when sending mail, as defined by the       <span>sendmail_path</span> configuration setting. For example,       this can be used to set the envelope sender address when using       sendmail with the <span>-f</span> sendmail option.      </p>      <p class="para">       This parameter is escaped by <span class="function">{@link escapeshellcmd()}</span> internally       to prevent command execution. <span class="function">{@link escapeshellcmd()}</span> prevents       command execution, but allows to add additional parameters. For security reasons,       it is recommended for the user to sanitize this parameter to avoid adding unwanted       parameters to the shell command.      </p>      <p class="para">       Since <span class="function">{@link escapeshellcmd()}</span> is applied automatically, some characters       that are allowed as email addresses by internet RFCs cannot be used.        <span class="function"><strong style="color:#CC7832">mail()</strong></span> can not allow such characters, so in programs where the use of       such characters is required, alternative means of sending emails (such as using a framework       or a library) is recommended.       </p>      <p class="para">       The user that the webserver runs as should be added as a trusted user to the       sendmail configuration to prevent a &#039;X-Warning&#039; header from being added       to the message when the envelope sender (-f) is set using this method.       For sendmail users, this file is <var class="filename">/etc/mail/trusted-users</var>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mail-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果邮件成功接受投递，返回 <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>。  </p>  <p class="para">   同样重要的是要注意到，邮件仅接受了投递并不意味着邮件实际上达到预定目的地。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mail-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.2.0</td>       <td>        现在 <span class="parameter" style="color:#3A95FF">additional_headers</span> 参数开始支持 <span class="type" style="color:#EAB766">array</span>。       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mail-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 发送邮件</strong></p>    <div class="example-contents"><p>     使用 <span class="function"><strong style="color:#CC7832">mail()</strong></span> 发送简单的邮件：    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 消息<br /></span><span style="color: #9876AA">$message </span><span style="color: #007700">= </span><span style="color: #DD0000">"Line 1\r\nLine 2\r\nLine 3"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// 如果任何一行超过 70 个字符，应该使用 wordwrap()<br /></span><span style="color: #9876AA">$message </span><span style="color: #007700">= </span><span style="color: #9876AA">wordwrap</span><span style="color: #007700">(</span><span style="color: #9876AA">$message</span><span style="color: #007700">, </span><span style="color: #9876AA">70</span><span style="color: #007700">, </span><span style="color: #DD0000">"\r\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 发送<br /></span><span style="color: #9876AA">mail</span><span style="color: #007700">(</span><span style="color: #DD0000">'caffeinated@example.com'</span><span style="color: #007700">, </span><span style="color: #DD0000">'My Subject'</span><span style="color: #007700">, </span><span style="color: #9876AA">$message</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>   <div class="example" id="">    <p><strong>示例 #2 使用额外标头发送邮件</strong></p>    <div class="example-contents"><p>     The addition of basic headers, telling the MUA     the From and Reply-To addresses:    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$to      </span><span style="color: #007700">= </span><span style="color: #DD0000">'nobody@example.com'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$subject </span><span style="color: #007700">= </span><span style="color: #DD0000">'the subject'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$message </span><span style="color: #007700">= </span><span style="color: #DD0000">'hello'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$headers </span><span style="color: #007700">= </span><span style="color: #DD0000">'From: webmaster@example.com' </span><span style="color: #007700">. </span><span style="color: #DD0000">"\r\n" </span><span style="color: #007700">.<br />    </span><span style="color: #DD0000">'Reply-To: webmaster@example.com' </span><span style="color: #007700">. </span><span style="color: #DD0000">"\r\n" </span><span style="color: #007700">.<br />    </span><span style="color: #DD0000">'X-Mailer: PHP/' </span><span style="color: #007700">. </span><span style="color: #9876AA">phpversion</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">mail</span><span style="color: #007700">(</span><span style="color: #9876AA">$to</span><span style="color: #007700">, </span><span style="color: #9876AA">$subject</span><span style="color: #007700">, </span><span style="color: #9876AA">$message</span><span style="color: #007700">, </span><span style="color: #9876AA">$headers</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>   <div class="example" id="">    <p><strong>示例 #3 使用 <span class="type" style="color:#EAB766">array</span> 形式的额外标头发送邮件</strong></p>    <div class="example-contents"><p>     This example sends the same mail as the example immediately above, but     passes the additional headers as array (available as of PHP 7.2.0).    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$to      </span><span style="color: #007700">= </span><span style="color: #DD0000">'nobody@example.com'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$subject </span><span style="color: #007700">= </span><span style="color: #DD0000">'the subject'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$message </span><span style="color: #007700">= </span><span style="color: #DD0000">'hello'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$headers </span><span style="color: #007700">= array(<br />    </span><span style="color: #DD0000">'From' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'webmaster@example.com'</span><span style="color: #007700">,<br />    </span><span style="color: #DD0000">'Reply-To' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'webmaster@example.com'</span><span style="color: #007700">,<br />    </span><span style="color: #DD0000">'X-Mailer' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'PHP/' </span><span style="color: #007700">. </span><span style="color: #9876AA">phpversion</span><span style="color: #007700">()<br />);<br /><br /></span><span style="color: #9876AA">mail</span><span style="color: #007700">(</span><span style="color: #9876AA">$to</span><span style="color: #007700">, </span><span style="color: #9876AA">$subject</span><span style="color: #007700">, </span><span style="color: #9876AA">$message</span><span style="color: #007700">, </span><span style="color: #9876AA">$headers</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>   <div class="example" id="">    <p><strong>示例 #4 Sending mail with an additional command line parameter.</strong></p>    <div class="example-contents"><p>     The <span class="parameter" style="color:#3A95FF">additional_params</span> parameter     can be used to pass an additional parameter to the program configured     to use when sending mail using the <span>sendmail_path</span>.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />mail</span><span style="color: #007700">(</span><span style="color: #DD0000">'nobody@example.com'</span><span style="color: #007700">, </span><span style="color: #DD0000">'the subject'</span><span style="color: #007700">, </span><span style="color: #DD0000">'the message'</span><span style="color: #007700">, </span><span style="color: #9876AA">null</span><span style="color: #007700">,<br />   </span><span style="color: #DD0000">'-fwebmaster@example.com'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>   <div class="example" id="">    <p><strong>示例 #5 Sending HTML email</strong></p>    <div class="example-contents"><p>     It is also possible to send HTML email with <span class="function"><strong style="color:#CC7832">mail()</strong></span>.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Multiple recipients<br /></span><span style="color: #9876AA">$to </span><span style="color: #007700">= </span><span style="color: #DD0000">'johny@example.com, sally@example.com'</span><span style="color: #007700">; </span><span style="color: #FF8000">// note the comma<br /><br />// Subject<br /></span><span style="color: #9876AA">$subject </span><span style="color: #007700">= </span><span style="color: #DD0000">'Birthday Reminders for August'</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// Message<br /></span><span style="color: #9876AA">$message </span><span style="color: #007700">= </span><span style="color: #DD0000">'<br />&lt;html&gt;<br />&lt;head&gt;<br />  &lt;title&gt;Birthday Reminders for August&lt;/title&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br />  &lt;p&gt;Here are the birthdays upcoming in August!&lt;/p&gt;<br />  &lt;table&gt;<br />    &lt;tr&gt;<br />      &lt;th&gt;Person&lt;/th&gt;&lt;th&gt;Day&lt;/th&gt;&lt;th&gt;Month&lt;/th&gt;&lt;th&gt;Year&lt;/th&gt;<br />    &lt;/tr&gt;<br />    &lt;tr&gt;<br />      &lt;td&gt;Johny&lt;/td&gt;&lt;td&gt;10th&lt;/td&gt;&lt;td&gt;August&lt;/td&gt;&lt;td&gt;1970&lt;/td&gt;<br />    &lt;/tr&gt;<br />    &lt;tr&gt;<br />      &lt;td&gt;Sally&lt;/td&gt;&lt;td&gt;17th&lt;/td&gt;&lt;td&gt;August&lt;/td&gt;&lt;td&gt;1973&lt;/td&gt;<br />    &lt;/tr&gt;<br />  &lt;/table&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;<br />'</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// To send HTML mail, the Content-type header must be set<br /></span><span style="color: #9876AA">$headers</span><span style="color: #007700">[] = </span><span style="color: #DD0000">'MIME-Version: 1.0'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$headers</span><span style="color: #007700">[] = </span><span style="color: #DD0000">'Content-type: text/html; charset=iso-8859-1'</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// Additional headers<br /></span><span style="color: #9876AA">$headers</span><span style="color: #007700">[] = </span><span style="color: #DD0000">'To: Mary &lt;mary@example.com&gt;, Kelly &lt;kelly@example.com&gt;'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$headers</span><span style="color: #007700">[] = </span><span style="color: #DD0000">'From: Birthday Reminder &lt;birthday@example.com&gt;'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$headers</span><span style="color: #007700">[] = </span><span style="color: #DD0000">'Cc: birthdayarchive@example.com'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$headers</span><span style="color: #007700">[] = </span><span style="color: #DD0000">'Bcc: birthdaycheck@example.com'</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// Mail it<br /></span><span style="color: #9876AA">mail</span><span style="color: #007700">(</span><span style="color: #9876AA">$to</span><span style="color: #007700">, </span><span style="color: #9876AA">$subject</span><span style="color: #007700">, </span><span style="color: #9876AA">$message</span><span style="color: #007700">, </span><span style="color: #9876AA">implode</span><span style="color: #007700">(</span><span style="color: #DD0000">"\r\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$headers</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>     <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:       <p class="para">       If intending to send HTML or otherwise Complex mails, it is recommended       to use the PEAR package {@link &raquo;&nbsp;PEAR::Mail}.      </p>     </p></blockquote>    </p></div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mail-notes">      <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    The SMTP implementation (Windows only) of <span class="function"><strong style="color:#CC7832">mail()</strong></span> differs in many    ways from the sendmail implementation. First, it doesn&#039;t use a local binary    for composing messages but only operates on direct sockets which means a    <span>MTA</span> is needed listening on a network socket (which    can either on the localhost or a remote machine).   </p>   <p class="para">    Second, the custom headers like    <span>From:</span>,    <span>Cc:</span>,    <span>Bcc:</span> and    <span>Date:</span> are    <strong>not</strong> interpreted by the    <span>MTA</span> in the first place, but are parsed by PHP.   </p>   <p class="para">    As such, the <span class="parameter" style="color:#3A95FF">to</span> parameter should not be an address    in the form of &quot;Something &lt;someone@example.com&gt;&quot;. The    mail command may not parse this properly while talking with     the MTA.   </p>  </p></blockquote>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    值得注意的是，<span class="function"><strong style="color:#CC7832">mail()</strong></span> 不适合在循环中发送大量邮件。发送每封邮件，此函数为打开和关闭一个套接字，效率不高。   </p>   <p class="para">    要发送大量邮件，请参阅    {@link &raquo;&nbsp;PEAR::Mail} 和    {@link &raquo;&nbsp;PEAR::Mail_Queue} 包。   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    以下 RFC 可能有用：    <a href="http://www.faqs.org/rfcs/rfc1896" class="link external">&raquo;&nbsp;RFC 1896</a>、<a href="http://www.faqs.org/rfcs/rfc2045" class="link external">&raquo;&nbsp;RFC 2045</a>、    <a href="http://www.faqs.org/rfcs/rfc2046" class="link external">&raquo;&nbsp;RFC 2046</a>、<a href="http://www.faqs.org/rfcs/rfc2047" class="link external">&raquo;&nbsp;RFC 2047</a>、    <a href="http://www.faqs.org/rfcs/rfc2048" class="link external">&raquo;&nbsp;RFC 2048</a>、<a href="http://www.faqs.org/rfcs/rfc2049" class="link external">&raquo;&nbsp;RFC 2049</a> 和    <a href="http://www.faqs.org/rfcs/rfc2822" class="link external">&raquo;&nbsp;RFC 2822</a>。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mail-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_send_mail()} - 发送编码过的邮件</span></li>    <li class="member"><span class="function">{@link imap_mail()} - Send an email message</span></li>    <li class="member">{@link &raquo;&nbsp;PEAR::Mail}</li>    <li class="member">{@link &raquo;&nbsp;PEAR::Mail_Mime}</li>   </ul>  </span> </div></div>
 * @return bool true if the mail was successfully accepted for delivery, false otherwise.*/
function mail(string $to, string $subject, string $message, array|string $additional_headers = [], string $additional_params = ''): bool {}

/**
*<div id="function.ezmlm-hash" class="refentry"> <div class="refnamediv">  <h1 class="refname">ezmlm_hash</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.2, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">ezmlm_hash</span> &mdash; <span class="dc-title">计算 EZMLM 所需的散列值</span></p> </div> <div id="function.ezmlm-hash-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数已自 PHP 7.4.0起<em>弃用</em>，自 PHP 8.0.0 起<em>移除</em>。强烈建议不要依赖本函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.ezmlm-hash-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>ezmlm_hash</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$addr</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="simpara">   <span class="function"><strong style="color:#CC7832">ezmlm_hash()</strong></span> 计算用于在 MySQL 数据库中保存 EZMLM 邮件列表的散列值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.ezmlm-hash-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">addr</span></dt>     <dd>      <p class="para">       要进行散列算法的电子邮件地址。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.ezmlm-hash-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">addr</span> 的散列值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.ezmlm-hash-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 计算散列值并订阅一个用户</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$user </span><span style="color: #007700">= </span><span style="color: #DD0000">"joecool@example.com"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$hash </span><span style="color: #007700">= </span><span style="color: #9876AA">ezmlm_hash</span><span style="color: #007700">(</span><span style="color: #9876AA">$user</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$query </span><span style="color: #007700">= </span><span style="color: #9876AA">sprintf</span><span style="color: #007700">(</span><span style="color: #DD0000">"INSERT INTO sample VALUES (%s, '%s')"</span><span style="color: #007700">, </span><span style="color: #9876AA">$hash</span><span style="color: #007700">, </span><span style="color: #9876AA">$user</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">query</span><span style="color: #007700">(</span><span style="color: #9876AA">$query</span><span style="color: #007700">); </span><span style="color: #FF8000">// using PHPLIB db interface<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
 * @return int The hash value of addr.*/
function ezmlm_hash(string $addr): int {}

/**
*<div id="function.openlog" class="refentry"> <div class="refnamediv">  <h1 class="refname">openlog</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">openlog</span> &mdash; <span class="dc-title">Open connection to system logger</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.openlog-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>openlog</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$prefix</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$facility</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">openlog()</strong></span> opens a connection to the system   logger for a program.    </p>  <p class="para">    The use of <span class="function"><strong style="color:#CC7832">openlog()</strong></span> is optional. It   will automatically be called by <span class="function">{@link syslog()}</span> if   necessary, in which case <span class="parameter" style="color:#3A95FF">prefix</span> will default   to <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.openlog-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">prefix</span></dt>     <dd>      <p class="para">       The string <span class="parameter" style="color:#3A95FF">prefix</span> is added to each message.       </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       The <span class="parameter" style="color:#3A95FF">flags</span> argument is used to indicate       what logging options will be used when generating a log message.       <table class="doctable table">        <caption><strong><span class="function"><strong style="color:#CC7832">openlog()</strong></span> Options</strong></caption>                 <thead>          <tr>           <th>Constant</th>           <th>Description</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td><strong><span>LOG_CONS</span></strong></td>           <td>            if there is an error while sending data to the system logger,            write directly to the system console           </td>          </tr>          <tr>           <td><strong><span>LOG_NDELAY</span></strong></td>           <td>            open the connection to the logger immediately           </td>          </tr>          <tr>           <td><strong><span>LOG_ODELAY</span></strong></td>           <td>            (default) delay opening the connection until the first            message is logged           </td>          </tr>          <tr>           <td><strong><span>LOG_PERROR</span></strong></td>           <td>print log message also to standard error</td>          </tr>          <tr>           <td><strong><span>LOG_PID</span></strong></td>           <td>include PID with each message</td>          </tr>         </tbody>               </table>       You can use one or more of these options. When using multiple options       you need to <span>OR</span> them, i.e. to open the connection       immediately, write to the console and include the PID in each message,       you will use: <span>LOG_CONS | LOG_NDELAY | LOG_PID</span>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">facility</span></dt>     <dd>      <p class="para">       The <span class="parameter" style="color:#3A95FF">facility</span> argument is used to specify what       type of program is logging the message. This allows you to specify       (in your machine&#039;s syslog configuration) how messages coming from       different facilities will be handled.       <table class="doctable table">        <caption><strong><span class="function"><strong style="color:#CC7832">openlog()</strong></span> Facilities</strong></caption>                 <thead>          <tr>           <th>Constant</th>           <th>Description</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td><strong><span>LOG_AUTH</span></strong></td>           <td>            security/authorization messages (use             <strong><span>LOG_AUTHPRIV</span></strong> instead            in systems where that constant is defined)           </td>          </tr>          <tr>           <td><strong><span>LOG_AUTHPRIV</span></strong></td>           <td>security/authorization messages (private)</td>          </tr>          <tr>           <td><strong><span>LOG_CRON</span></strong></td>           <td>clock daemon (cron and at)</td>          </tr>          <tr>           <td><strong><span>LOG_DAEMON</span></strong></td>           <td>other system daemons</td>          </tr>          <tr>           <td><strong><span>LOG_KERN</span></strong></td>           <td>kernel messages</td>          </tr>          <tr>           <td><strong><span>LOG_LOCAL0</span></strong> ... <strong><span>LOG_LOCAL7</span></strong></td>           <td>reserved for local use, these are not available in Windows</td>          </tr>          <tr>           <td><strong><span>LOG_LPR</span></strong></td>           <td>line printer subsystem</td>          </tr>          <tr>           <td><strong><span>LOG_MAIL</span></strong></td>           <td>mail subsystem</td>          </tr>          <tr>           <td><strong><span>LOG_NEWS</span></strong></td>           <td>USENET news subsystem</td>          </tr>          <tr>           <td><strong><span>LOG_SYSLOG</span></strong></td>           <td>messages generated internally by syslogd</td>          </tr>          <tr>           <td><strong><span>LOG_USER</span></strong></td>           <td>generic user-level messages</td>          </tr>          <tr>           <td><strong><span>LOG_UUCP</span></strong></td>           <td>UUCP subsystem</td>          </tr>         </tbody>               </table>      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        <strong><span>LOG_USER</span></strong> is the only valid log type under Windows        operating systems       </p>      </p></blockquote>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.openlog-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.openlog-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link syslog()} - Generate a system log message</span></li>    <li class="member"><span class="function">{@link closelog()} - 关闭系统日志链接</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function openlog(string $prefix, int $flags, int $facility) {}
