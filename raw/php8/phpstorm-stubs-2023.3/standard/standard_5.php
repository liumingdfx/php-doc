<?php

use JetBrains\PhpStorm\Deprecated;
use JetBrains\PhpStorm\ExpectedValues;
use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
use JetBrains\PhpStorm\Pure;

/**
*<div id="function.boolval" class="refentry"> <div class="refnamediv">  <h1 class="refname">boolval</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">boolval</span> &mdash; <span class="dc-title">获取变量的布尔值</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.boolval-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>boolval</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   返回 <span class="parameter" style="color:#3A95FF">value</span> 的 <span class="type" style="color:#EAB766">bool</span> 值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.boolval-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <span>     标量值会被转化成 <span class="type" style="color:#EAB766">bool</span> 值。     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.boolval-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">value</span> 的 <span class="type" style="color:#EAB766">bool</span> 值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.boolval-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">boolval()</strong></span> examples</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #DD0000">'0:        '</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'true' </span><span style="color: #007700">: </span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">'42:       '</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">(</span><span style="color: #9876AA">42</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'true' </span><span style="color: #007700">: </span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">'0.0:      '</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">(</span><span style="color: #9876AA">0.0</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'true' </span><span style="color: #007700">: </span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">'4.2:      '</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">(</span><span style="color: #9876AA">4.2</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'true' </span><span style="color: #007700">: </span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">'"":       '</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">(</span><span style="color: #DD0000">""</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'true' </span><span style="color: #007700">: </span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">'"string": '</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">(</span><span style="color: #DD0000">"string"</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'true' </span><span style="color: #007700">: </span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">'"0":      '</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">(</span><span style="color: #DD0000">"0"</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'true' </span><span style="color: #007700">: </span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">'"1":      '</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">(</span><span style="color: #DD0000">"1"</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'true' </span><span style="color: #007700">: </span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">'[1, 2]:   '</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">([</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">]) ? </span><span style="color: #DD0000">'true' </span><span style="color: #007700">: </span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">'[]:       '</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">([]) ? </span><span style="color: #DD0000">'true' </span><span style="color: #007700">: </span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">'stdClass: '</span><span style="color: #007700">.(</span><span style="color: #9876AA">boolval</span><span style="color: #007700">(new </span><span style="color: #9876AA">stdClass</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'true' </span><span style="color: #007700">: </span><span style="color: #DD0000">'false'</span><span style="color: #007700">).</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>0:        false<br>42:       true<br>0.0:      false<br>4.2:      true<br>&quot;&quot;:       false<br>&quot;string&quot;: true<br>&quot;0&quot;:      false<br>&quot;1&quot;:      true<br>[1, 2]:   true<br>[]:       false<br>stdClass: true<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.boolval-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link floatval()} - 获取变量的浮点值</span></li>    <li class="member"><span class="function">{@link intval()} - 获取变量的整数值</span></li>    <li class="member"><span class="function">{@link strval()} - 获取变量的字符串值</span></li>    <li class="member"><span class="function">{@link settype()} - 设置变量的类型</span></li>    <li class="member"><span class="function">{@link is_bool()} - 检测变量是否是布尔值</span></li>    <li class="member"><a href="https://www.php.net/manual/zh/language.types.type-juggling.php" class="link">类型转换的判别</a></li>   </ul>  </span> </div></div>
 * @return bool The boolean value of var.*/
function boolval(mixed $value): bool {}

/**
*<div id="function.intval" class="refentry"> <div class="refnamediv">  <h1 class="refname">intval</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">intval</span> &mdash; <span class="dc-title">获取变量的整数值</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.intval-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>intval</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$base</span><span class="initializer"> = 10</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   通过使用指定的进制 <span class="parameter" style="color:#3A95FF">base</span> 转换（默认是十进制），返回变量 <span class="parameter" style="color:#3A95FF">value</span>   的 <span class="type" style="color:#EAB766">int</span> 数值。   <span class="function"><strong style="color:#CC7832">intval()</strong></span> 不能用于 object，否则会产生   <strong><span>E_WARNING</span></strong> 错误并返回 1。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.intval-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       要转换成 integer 的数量值      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">base</span></dt>     <dd>      <p class="para">       转化所使用的进制      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        如果 <span class="parameter" style="color:#3A95FF">base</span> 是 0，通过检测 <span class="parameter" style="color:#3A95FF">value</span> 的格式来决定使用的进制：        <ul class="itemizedlist">         <li class="listitem">          <span class="simpara">           如果字符串包括了 &quot;0x&quot; (或 &quot;0X&quot;) 的前缀，使用 16 进制 (hex)；否则，          </span>         </li>         <li class="listitem">          <span class="simpara">           如果字符串以 &quot;0b&quot; (或 &quot;0B&quot;) 开头，使用 2 进制 (binary)；否则，          </span>         </li>         <li class="listitem">          <span class="simpara">           如果字符串以 &quot;0&quot; 开始，使用 8 进制(octal)；否则，          </span>         </li>         <li class="listitem">          <span class="simpara">           将使用 10 进制 (decimal)。          </span>         </li>        </ul>       </p>      </p></blockquote>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.intval-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <span class="parameter" style="color:#3A95FF">value</span> 的 integer 值，失败时返回 0。   空的 array 返回 0，非空的 array 返回 1。  </p>  <p class="para">   最大的值取决于操作系统。 32 位系统最大带符号的 integer 范围是 -2147483648 到 2147483647。举例，在这样的系统上，<span>intval(&#039;1000000000000&#039;)</span> 会返回   2147483647。64 位系统上，最大带符号的 integer 值是   9223372036854775807。  </p>  <p class="para">   字符串有可能返回 0，虽然取决于字符串最左侧的字符。   使用   <a href="https://www.php.net/manual/zh/language.types.integer.php#language.types.integer.casting" class="link">整型转换</a>   的共同规则。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.intval-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       对象转换时的错误级别已从 <strong><span>E_NOTICE</span></strong> 更改为 <strong><span>E_WARNING</span></strong>。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.intval-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">intval()</strong></span> 例子</strong></p>    <div class="example-contents"><p>     下面的例子运行于 64 位系统上。    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">42</span><span style="color: #007700">);                      </span><span style="color: #FF8000">// 42<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">4.2</span><span style="color: #007700">);                     </span><span style="color: #FF8000">// 4<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #DD0000">'42'</span><span style="color: #007700">);                    </span><span style="color: #FF8000">// 42<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #DD0000">'+42'</span><span style="color: #007700">);                   </span><span style="color: #FF8000">// 42<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #DD0000">'-42'</span><span style="color: #007700">);                   </span><span style="color: #FF8000">// -42<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">042</span><span style="color: #007700">);                     </span><span style="color: #FF8000">// 34<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #DD0000">'042'</span><span style="color: #007700">);                   </span><span style="color: #FF8000">// 42<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">1e10</span><span style="color: #007700">);                    </span><span style="color: #FF8000">// 10000000000<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #DD0000">'1e10'</span><span style="color: #007700">);                  </span><span style="color: #FF8000">// 10000000000<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">0x1A</span><span style="color: #007700">);                    </span><span style="color: #FF8000">// 26<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #DD0000">'0x1A'</span><span style="color: #007700">);                  </span><span style="color: #FF8000">// 0<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #DD0000">'0x1A'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);               </span><span style="color: #FF8000">// 26<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">42000000</span><span style="color: #007700">);                </span><span style="color: #FF8000">// 42000000<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">420000000000000000000</span><span style="color: #007700">);   </span><span style="color: #FF8000">// -4275113695319687168<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #DD0000">'420000000000000000000'</span><span style="color: #007700">); </span><span style="color: #FF8000">// 9223372036854775807<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">42</span><span style="color: #007700">, </span><span style="color: #9876AA">8</span><span style="color: #007700">);                   </span><span style="color: #FF8000">// 42<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #DD0000">'42'</span><span style="color: #007700">, </span><span style="color: #9876AA">8</span><span style="color: #007700">);                 </span><span style="color: #FF8000">// 34<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(array());                 </span><span style="color: #FF8000">// 0<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">, </span><span style="color: #DD0000">'bar'</span><span style="color: #007700">));     </span><span style="color: #FF8000">// 1<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">false</span><span style="color: #007700">);                   </span><span style="color: #FF8000">// 0<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);                    </span><span style="color: #FF8000">// 1<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.intval-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    除非 <span class="parameter" style="color:#3A95FF">value</span> 是一个字符串，否则 <span class="parameter" style="color:#3A95FF">base</span> 不会起作用。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.intval-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link boolval()} - 获取变量的布尔值</span></li>    <li class="member"><span class="function">{@link floatval()} - 获取变量的浮点值</span></li>    <li class="member"><span class="function">{@link strval()} - 获取变量的字符串值</span></li>    <li class="member"><span class="function">{@link settype()} - 设置变量的类型</span></li>    <li class="member"><span class="function">{@link is_numeric()} - 检测变量是否为数字或数字字符串</span></li>    <li class="member"><a href="https://www.php.net/manual/zh/language.types.type-juggling.php" class="link">类型转换的判别</a></li>    <li class="member"><a href="https://www.php.net/manual/zh/ref.bc.php" class="link">BCMath 任意精度数学函数</a></li>   </ul>  </span> </div></div>
 * @return int The integer value of var on success, or 0 on*/
function intval(mixed $value, int $base = 10): int {}

/**
*<div id="function.floatval" class="refentry"> <div class="refnamediv">  <h1 class="refname">floatval</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">floatval</span> &mdash; <span class="dc-title">获取变量的浮点值</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.floatval-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>floatval</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   获取变量 <span class="parameter" style="color:#3A95FF">value</span> 的 <span class="type" style="color:#EAB766">float</span> 值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.floatval-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       可以是任何标量类型。<span class="function"><strong style="color:#CC7832">floatval()</strong></span> 不能用于对象，这样做会发出       <strong><span>E_WARNING</span></strong> 级别的错误并返回 1。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.floatval-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   指定变量的浮点值。空数组返回 0，非空数组返回 1。  </p>  <p class="para">   字符串很可能返回 0，尽管这取决于字符串最左边的字符。适用<a href="https://www.php.net/manual/zh/language.types.float.php#language.types.float.casting" class="link">浮点数强制转换</a>的通用规则。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.floatval-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       对象转换时的错误级别已从 <strong><span>E_NOTICE</span></strong> 更改为 <strong><span>E_WARNING</span></strong>。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.floatval-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">floatval()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$var </span><span style="color: #007700">= </span><span style="color: #DD0000">'122.34343The'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$float_value_of_var </span><span style="color: #007700">= </span><span style="color: #9876AA">floatval</span><span style="color: #007700">(</span><span style="color: #9876AA">$var</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$float_value_of_var</span><span style="color: #007700">; </span><span style="color: #FF8000">// 122.34343<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 <span class="function"><strong style="color:#CC7832">floatval()</strong></span> 最左边的字符为非数字的示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$var </span><span style="color: #007700">= </span><span style="color: #DD0000">'The122.34343'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$float_value_of_var </span><span style="color: #007700">= </span><span style="color: #9876AA">floatval</span><span style="color: #007700">(</span><span style="color: #9876AA">$var</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$float_value_of_var</span><span style="color: #007700">; </span><span style="color: #FF8000">// 0<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.floatval-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link boolval()} - 获取变量的布尔值</span></li>    <li class="member"><span class="function">{@link intval()} - 获取变量的整数值</span></li>    <li class="member"><span class="function">{@link strval()} - 获取变量的字符串值</span></li>    <li class="member"><span class="function">{@link settype()} - 设置变量的类型</span></li>    <li class="member"><a href="https://www.php.net/manual/zh/language.types.type-juggling.php" class="link">类型转换</a></li>   </ul>  </span> </div></div>
 * @return float value of the given variable. Empty arrays return 0, non-empty arrays return 1.*/
function floatval(mixed $value): float {}

/**
*<div id="function.doubleval" class="refentry"> <div class="refnamediv">  <h1 class="refname">doubleval</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">doubleval</span> &mdash; <span class="dc-title">别名 <span class="function">{@link floatval()}</span></span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.doubleval-description">  <h3 class="title">说明</h3>  <p class="simpara">   此函数是该函数的别名：   <span class="function">{@link floatval()}</span>.  </p> </div></div>
 * @return float value of the given variable. Empty arrays return 0, non-empty arrays return 1.*/
function doubleval(mixed $value): float {}

/**
*<div id="function.strval" class="refentry"> <div class="refnamediv">  <h1 class="refname">strval</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">strval</span> &mdash; <span class="dc-title">获取变量的字符串值</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.strval-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>strval</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="simpara">   返回变量的字符串值。参见 <span class="type" style="color:#EAB766">string</span> 文档获取更多关于转换为字符串的信息。  </p>  <p class="simpara">   此函数对返回值不执行任何格式设置。如果需要将数值格式化字符串的方法，请参阅   <span class="function">{@link sprintf()}</span> 和 <span class="function">{@link number_format()}</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.strval-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       可以转换为 <span class="type" style="color:#EAB766">string</span> 的变量。      </p>      <p class="para">       <span class="parameter" style="color:#3A95FF">value</span> 可以是任何标量类型、<span class="type" style="color:#EAB766">null</span>       或者实现了 <a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.tostring" class="link">__toString()</a>       方法的对象。不能在数组或者未实现 <a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.tostring" class="link">__toString()</a>       方法的对象上使用 <span class="function"><strong style="color:#CC7832">strval()</strong></span>。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.strval-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">value</span> 的 <span class="type" style="color:#EAB766">string</span> 值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.strval-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1      使用 PHP 魔术方法 <a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.tostring" class="link">__toString()</a>     的 <span class="function"><strong style="color:#CC7832">strval()</strong></span> 示例。    </strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class </span><span style="color: #9876AA">StrValTest<br /></span><span style="color: #007700">{<br />    public function </span><span style="color: #9876AA">__toString</span><span style="color: #007700">()<br />    {<br />        return </span><span style="color: #9876AA">__CLASS__</span><span style="color: #007700">;<br />    }<br />}<br /><br /></span><span style="color: #FF8000">// 打印“StrValTest”<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">strval</span><span style="color: #007700">(new </span><span style="color: #9876AA">StrValTest</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.strval-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link boolval()} - 获取变量的布尔值</span></li>    <li class="member"><span class="function">{@link floatval()} - 获取变量的浮点值</span></li>    <li class="member"><span class="function">{@link intval()} - 获取变量的整数值</span></li>    <li class="member"><span class="function">{@link settype()} - 设置变量的类型</span></li>    <li class="member"><span class="function">{@link sprintf()} - 返回格式化字符串</span></li>    <li class="member"><span class="function">{@link number_format()} - 以千位分隔符方式格式化一个数字</span></li>    <li class="member"><a href="https://www.php.net/manual/zh/language.types.type-juggling.php" class="link">Type juggling</a></li>    <li class="member"><a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.tostring" class="link">__toString()</a></li>   </ul>  </span> </div></div>
 * @return string The string value of var.*/
function strval(mixed $value): string {}

/**
 * Get the type of a variable
 * @link https://php.net/manual/en/function.gettype.php
 * @param mixed $value <p>
 * The variable being type checked.
 * </p>
 * @return string Possibles values for the returned string are:
 * "boolean"
 * "integer"
 * "double" (for historical reasons "double" is
 * returned in case of a float, and not simply
 * "float")
 * "string"
 * "array"
 * "object"
 * "resource"
 * "NULL"
 * "unknown type"
 * "resource (closed)" since 7.2.0
 */
#[Pure]
#[ExpectedValues([
    "boolean", "integer", "double", "string", "array", "object", "resource", "NULL", "unknown type", "resource (closed)"
])]
/**
*<div id="function.gettype" class="refentry"> <div class="refnamediv">  <h1 class="refname">gettype</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">gettype</span> &mdash; <span class="dc-title">获取变量的类型</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.gettype-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>gettype</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   返回 PHP <span class="parameter" style="color:#3A95FF">value</span> 变量的类型。   对于类型检查，请使用 <span>is_*</span> 函数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.gettype-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       要检查类型的变量。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.gettype-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回字符串，可能值为：   <ul class="simplelist">    <li class="member">      <span>&quot;boolean&quot;</span>     </li>    <li class="member">     <span>&quot;integer&quot;</span>    </li>    <li class="member">     <span>&quot;double&quot;</span>     （由于历史原因，如果是浮点型，则返回 <span>&quot;double&quot;</span>，而不仅仅是 <span>&quot;float&quot;</span>）    </li>    <li class="member">     <span>&quot;string&quot;</span>    </li>    <li class="member">     <span>&quot;array&quot;</span>    </li>    <li class="member">     <span>&quot;object&quot;</span>    </li>    <li class="member">     <span>&quot;resource&quot;</span>    </li>    <li class="member">     <span>&quot;resource (closed)&quot;</span> 自 PHP 7.2.0 起    </li>    <li class="member">     <span>&quot;NULL&quot;</span>    </li>    <li class="member">     <span>&quot;unknown type&quot;</span>    </li>   </ul>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.gettype-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.2.0</td>       <td>        现在，已关闭的资源报告为 <span>&#039;resource (closed)&#039;</span>。此前，已关闭的资源报告为        <span>&#039;unknown type&#039;</span>。       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.gettype-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">gettype()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$data </span><span style="color: #007700">= array(</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">1.</span><span style="color: #007700">, </span><span style="color: #9876AA">NULL</span><span style="color: #007700">, new </span><span style="color: #9876AA">stdClass</span><span style="color: #007700">, </span><span style="color: #DD0000">'foo'</span><span style="color: #007700">);<br /><br />foreach (</span><span style="color: #9876AA">$data </span><span style="color: #007700">as </span><span style="color: #9876AA">$value</span><span style="color: #007700">) {<br />    echo </span><span style="color: #9876AA">gettype</span><span style="color: #007700">(</span><span style="color: #9876AA">$value</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>integer<br>double<br>NULL<br>object<br>string<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.gettype-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link get_debug_type()} - 以适合调试的方式获取变量的类型名称</span></li>    <li class="member"><span class="function">{@link settype()} - 设置变量的类型</span></li>    <li class="member"><span class="function">{@link get_class()} - 返回对象的类名</span></li>    <li class="member"><span class="function">{@link is_array()} - 检测变量是否是数组</span></li>    <li class="member"><span class="function">{@link is_bool()} - 检测变量是否是布尔值</span></li>    <li class="member"><span class="function">{@link is_callable()} - 验证值是否可以在当前范围内作为函数调用。</span></li>    <li class="member"><span class="function">{@link is_float()} - 查找变量的类型是否是浮点型</span></li>    <li class="member"><span class="function">{@link is_int()} - 检测变量是否是整数</span></li>    <li class="member"><span class="function">{@link is_null()} - 检测变量是否是 null</span></li>    <li class="member"><span class="function">{@link is_numeric()} - 检测变量是否为数字或数字字符串</span></li>    <li class="member"><span class="function">{@link is_object()} - 查找变量是否是对象</span></li>    <li class="member"><span class="function">{@link is_resource()} - 查找变量是否为资源</span></li>    <li class="member"><span class="function">{@link is_scalar()} - 检测变量是否是一个标量</span></li>    <li class="member"><span class="function">{@link is_string()} - 查找变量的类型是否是字符串</span></li>    <li class="member"><span class="function">{@link function_exists()} - 如果给定的函数已经被定义就返回 true</span></li>    <li class="member"><span class="function">{@link method_exists()} - 检查类的方法是否存在</span></li>   </ul>  </span> </div></div>
*/
function gettype(mixed $value): string {}

/**
*<div id="function.settype" class="refentry"> <div class="refnamediv">  <h1 class="refname">settype</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">settype</span> &mdash; <span class="dc-title">设置变量的类型</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.settype-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>settype</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">&$var</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$type</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   将变量 <span class="parameter" style="color:#3A95FF">var</span> 的类型设置成 <span class="parameter" style="color:#3A95FF">type</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.settype-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">var</span></dt>     <dd>      <p class="para">       要转换的变量。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">type</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">type</span> 的可能值为：       <ul class="itemizedlist">        <li class="listitem">         <span class="simpara">        “boolean”或“bool”         </span>        </li>        <li class="listitem">         <span class="simpara">        “integer”或“int”         </span>        </li>        <li class="listitem">         <span class="simpara">        “float”或“double”         </span>        </li>        <li class="listitem">         <span class="simpara">          &quot;string&quot;         </span>        </li>        <li class="listitem">         <span class="simpara">          &quot;array&quot;         </span>        </li>        <li class="listitem">         <span class="simpara">          &quot;object&quot;         </span>        </li>        <li class="listitem">         <span class="simpara">        “null”         </span>        </li>       </ul>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.settype-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.settype-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">settype()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$foo </span><span style="color: #007700">= </span><span style="color: #DD0000">"5bar"</span><span style="color: #007700">; </span><span style="color: #FF8000">// string<br /></span><span style="color: #9876AA">$bar </span><span style="color: #007700">= </span><span style="color: #9876AA">true</span><span style="color: #007700">;   </span><span style="color: #FF8000">// boolean<br /><br /></span><span style="color: #9876AA">settype</span><span style="color: #007700">(</span><span style="color: #9876AA">$foo</span><span style="color: #007700">, </span><span style="color: #DD0000">"integer"</span><span style="color: #007700">); </span><span style="color: #FF8000">// $foo 现在是 5   (integer)<br /></span><span style="color: #9876AA">settype</span><span style="color: #007700">(</span><span style="color: #9876AA">$bar</span><span style="color: #007700">, </span><span style="color: #DD0000">"string"</span><span style="color: #007700">);  </span><span style="color: #FF8000">// $bar 现在是 "1" (string)<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.settype-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    “int”的最小值是 <strong><span>PHP_INT_MAX</span></strong>。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.settype-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link gettype()} - 获取变量的类型</span></li>    <li class="member"><a href="https://www.php.net/manual/zh/language.types.type-juggling.php#language.types.typecasting" class="link">类型转换</a></li>    <li class="member"><a href="https://www.php.net/manual/zh/language.types.type-juggling.php" class="link">类型戏法</a></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function settype(mixed &$var, #[ExpectedValues(["bool", "boolean", "int", "integer", "float", "double", "string", "array", "object", "null"])] string $type): bool {}

/**
*<div id="function.is-null" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_null</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_null</span> &mdash; <span class="dc-title">   检测变量是否是 <strong><span>null</span></strong>  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-null-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_null</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   检测变量是否是 <strong><span>null</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-null-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       需要检测的变量。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-null-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">value</span> 是 <span class="type" style="color:#EAB766">null</span>，返回 <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-null-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_null()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />error_reporting</span><span style="color: #007700">(</span><span style="color: #9876AA">E_ALL</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$foo </span><span style="color: #007700">= </span><span style="color: #9876AA">NULL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">is_null</span><span style="color: #007700">(</span><span style="color: #9876AA">$inexistent</span><span style="color: #007700">), </span><span style="color: #9876AA">is_null</span><span style="color: #007700">(</span><span style="color: #9876AA">$foo</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Notice: Undefined variable: inexistent in ...<br>bool(true)<br>bool(true)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-null-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><a href="https://www.php.net/manual/zh/language.types.null.php#language.types.null.syntax" class="link"><strong><span>null</span></strong></a> 类型</li>    <li class="member"><span class="function">{@link isset()} - 检测变量是否已声明并且其值不为 null</span></li>    <li class="member"><span class="function">{@link is_bool()} - 检测变量是否是布尔值</span></li>    <li class="member"><span class="function">{@link is_numeric()} - 检测变量是否为数字或数字字符串</span></li>    <li class="member"><span class="function">{@link is_float()} - 查找变量的类型是否是浮点型</span></li>    <li class="member"><span class="function">{@link is_int()} - 检测变量是否是整数</span></li>    <li class="member"><span class="function">{@link is_string()} - 查找变量的类型是否是字符串</span></li>    <li class="member"><span class="function">{@link is_object()} - 查找变量是否是对象</span></li>    <li class="member"><span class="function">{@link is_array()} - 检测变量是否是数组</span></li>   </ul>  </span> </div></div>
 * @return bool true if var is null, false*/
function is_null(mixed $value): bool {}

/**
*<div id="function.is-resource" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_resource</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_resource</span> &mdash; <span class="dc-title">   查找变量是否为资源  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-resource-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_resource</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   查找指定变量是否为 <span class="type" style="color:#EAB766">resource</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-resource-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       要计算的变量。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-resource-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">value</span> 是 <span class="type" style="color:#EAB766">resource</span>，则返回   <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-resource-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_resource()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"php://stdout"</span><span style="color: #007700">, </span><span style="color: #DD0000">"w"</span><span style="color: #007700">);<br />if (</span><span style="color: #9876AA">is_resource</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">)) {<br />    echo </span><span style="color: #DD0000">'$handle is a resource'</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>$handle is a resource<br></span></div>    </div>   </div>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.is-resource-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    <span class="function"><strong style="color:#CC7832">is_resource()</strong></span> 不是严格的类型检查方法：如果 <span class="parameter" style="color:#3A95FF">value</span>    是已关闭的资源变量，将返回 <strong><span>false</span></strong>。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-resource-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><a href="https://www.php.net/manual/zh/language.types.resource.php" class="link">资源类型文档</a></li>    <li class="member"><span class="function">{@link get_resource_type()} - 返回资源类型</span></li>   </ul>  </span>   </div></div>
 * @return bool true if var is a resource,*/
function is_resource(mixed $value): bool {}

/**
*<div id="function.is-bool" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_bool</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_bool</span> &mdash; <span class="dc-title">   检测变量是否是布尔值  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-bool-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_bool</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   检查变量是否为布尔值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-bool-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       要检查的变量。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-bool-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">value</span> 是布尔值则返回 <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-bool-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_bool()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$a </span><span style="color: #007700">= </span><span style="color: #9876AA">false</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$b </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// 因为 $a 是布尔值，所以结果为 true<br /></span><span style="color: #007700">if (</span><span style="color: #9876AA">is_bool</span><span style="color: #007700">(</span><span style="color: #9876AA">$a</span><span style="color: #007700">) === </span><span style="color: #9876AA">true</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"Yes, this is a boolean"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #FF8000">// 因为 $b 不是布尔值，所以结果为 false<br /></span><span style="color: #007700">if (</span><span style="color: #9876AA">is_bool</span><span style="color: #007700">(</span><span style="color: #9876AA">$b</span><span style="color: #007700">) === </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"No, this is not a boolean"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-bool-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_float()} - 查找变量的类型是否是浮点型</span></li>    <li class="member"><span class="function">{@link is_int()} - 检测变量是否是整数</span></li>    <li class="member"><span class="function">{@link is_string()} - 查找变量的类型是否是字符串</span></li>    <li class="member"><span class="function">{@link is_object()} - 查找变量是否是对象</span></li>    <li class="member"><span class="function">{@link is_array()} - 检测变量是否是数组</span></li>   </ul>  </span> </div></div>
 * @return bool true if var is a boolean,*/
function is_bool(mixed $value): bool {}

/**
*<div id="function.is-long" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_long</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_long</span> &mdash; <span class="dc-title">别名 <span class="function">{@link is_int()}</span></span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-long-description">  <h3 class="title">说明</h3>  <p class="simpara">   此函数是该函数的别名：   <span class="function">{@link is_int()}</span>.  </p> </div></div>
 * @return bool true if var is an integer,*/
function is_long(mixed $value): bool {}

/**
*<div id="function.is-float" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_float</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_float</span> &mdash; <span class="dc-title">查找变量的类型是否是浮点型</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-float-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_float</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   查找指定变量的类型是否是浮点型。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    测试变量是数字还是数字字符串（如表单输入，始终是字符串），必须使用    <span class="function">{@link is_numeric()}</span>。  </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-float-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       要求值的变量。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-float-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">value</span> 是 <span class="type" style="color:#EAB766">float</span>，返回   <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-float-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_float()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000">var_dump(is_float(27.25));<br />var_dump(is_float('abc'));<br />var_dump(is_float(23));<br />var_dump(is_float(23.5));<br />var_dump(is_float(1e7));  // 科学计数<br />var_dump(is_float(true));<br />?&gt;</span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>bool(true)<br>bool(false)<br>bool(false)<br>bool(true)<br>bool(true)<br>bool(false)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-float-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_bool()} - 检测变量是否是布尔值</span></li>    <li class="member"><span class="function">{@link is_int()} - 检测变量是否是整数</span></li>    <li class="member"><span class="function">{@link is_numeric()} - 检测变量是否为数字或数字字符串</span></li>    <li class="member"><span class="function">{@link is_string()} - 查找变量的类型是否是字符串</span></li>    <li class="member"><span class="function">{@link is_array()} - 检测变量是否是数组</span></li>    <li class="member"><span class="function">{@link is_object()} - 查找变量是否是对象</span></li>   </ul>  </span> </div></div>
 * @return bool true if var is a float,*/
function is_float(mixed $value): bool {}

/**
*<div id="function.is-int" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_int</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_int</span> &mdash; <span class="dc-title">检测变量是否是整数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-int-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_int</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   检测变量的类型是否为整数（integer）。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    若想检测变量是否是数字或数字字符串（如表单输入，它们通常为字符串），则必须使用    <span class="function">{@link is_numeric()}</span> 。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-int-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       要检测的变量。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-int-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">value</span> 是 <span class="type" style="color:#EAB766">int</span>，则返回 <strong><span>true</span></strong>，否则返回   <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-int-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_int()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$values </span><span style="color: #007700">= array(</span><span style="color: #9876AA">23</span><span style="color: #007700">, </span><span style="color: #DD0000">"23"</span><span style="color: #007700">, </span><span style="color: #9876AA">23.5</span><span style="color: #007700">, </span><span style="color: #DD0000">"23.5"</span><span style="color: #007700">, </span><span style="color: #9876AA">null</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">);<br />foreach (</span><span style="color: #9876AA">$values </span><span style="color: #007700">as </span><span style="color: #9876AA">$value</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"is_int("</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">$value</span><span style="color: #007700">);<br />    echo </span><span style="color: #DD0000">") = "</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">is_int</span><span style="color: #007700">(</span><span style="color: #9876AA">$value</span><span style="color: #007700">));<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>is_int(23) = bool(true)<br>is_int(&#039;23&#039;) = bool(false)<br>is_int(23.5) = bool(false)<br>is_int(&#039;23.5&#039;) = bool(false)<br>is_int(NULL) = bool(false)<br>is_int(true) = bool(false)<br>is_int(false) = bool(false)<br><br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-int-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_bool()} - 检测变量是否是布尔值</span></li>    <li class="member"><span class="function">{@link is_float()} - 查找变量的类型是否是浮点型</span></li>    <li class="member"><span class="function">{@link is_numeric()} - 检测变量是否为数字或数字字符串</span></li>    <li class="member"><span class="function">{@link is_string()} - 查找变量的类型是否是字符串</span></li>    <li class="member"><span class="function">{@link is_array()} - 检测变量是否是数组</span></li>    <li class="member"><span class="function">{@link is_object()} - 查找变量是否是对象</span></li>   </ul>  </span> </div></div>
 * @return bool true if var is an integer,*/
function is_int(mixed $value): bool {}

/**
*<div id="function.is-integer" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_integer</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_integer</span> &mdash; <span class="dc-title">别名 <span class="function">{@link is_int()}</span></span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-integer-description">  <h3 class="title">说明</h3>  <p class="simpara">   此函数是该函数的别名：   <span class="function">{@link is_int()}</span>.  </p> </div></div>
 * @return bool true if var is an integer,*/
function is_integer(mixed $value): bool {}

/**
*<div id="function.is-double" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_double</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_double</span> &mdash; <span class="dc-title">别名 <span class="function">{@link is_float()}</span></span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-double-description">  <h3 class="title">说明</h3>  <p class="simpara">   此函数是该函数的别名：   <span class="function">{@link is_float()}</span>.  </p> </div></div>
 * @return bool true if var is a float,*/
function is_double(mixed $value): bool {}

/**
*<div id="function.is-real" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_real</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_real</span> &mdash; <span class="dc-title">别名 <span class="function">{@link is_float()}</span></span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-real-description">  <h3 class="title">说明</h3>  <p class="simpara">   此函数是该函数的别名：   <span class="function">{@link is_float()}</span>.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">该别名已在 PHP 7.4.0 中<em>废弃</em>，并且自 PHP 8.0.0 起已被<em>移除</em>。</p></div> </div></div>
 * @return bool true if var is a float,*/
function is_real(mixed $var): bool {}

/**
*<div id="function.is-numeric" class="refentry"> <div class="refnamediv">     <h1 class="refname">is_numeric</h1>     <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_numeric</span> &mdash; <span class="dc-title">      检测变量是否为数字或数字字符串     </span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-numeric-description">    <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">     <span class="methodname" style="color:#CC7832"><strong>is_numeric</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>    <p class="para rdfs-comment">     检测指定的变量是否为数字或<a href="https://www.php.net/manual/zh/language.types.numeric-strings.php" class="link">数字字符串</a>。    </p>  </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-numeric-parameters">   <h3 class="title">参数</h3>   <span>    <dl>           <dt><span class="parameter" style="color:#3A95FF">value</span></dt>      <dd>       <p class="para">        需要检测的变量。       </p>      </dd>         </dl>   </span>  </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-numeric-returnvalues">   <h3 class="title">返回值</h3>   <p class="para">    如果 <span class="parameter" style="color:#3A95FF">value</span> 是数字或<a href="https://www.php.net/manual/zh/language.types.numeric-strings.php" class="link">数字字符串</a>，    返回 <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>。   </p>  </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.is-numeric-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       以空格结尾的数字字符串（<span>&quot;42 &quot;</span>）现在将返回 <strong><span>true</span></strong>。以前，会返回 <strong><span>false</span></strong>。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-numeric-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_numeric()</strong></span> 示例</strong></p>    <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$tests </span><span style="color: #007700">= array(<br />    </span><span style="color: #DD0000">"42"</span><span style="color: #007700">,<br />    </span><span style="color: #9876AA">1337</span><span style="color: #007700">,<br />    </span><span style="color: #9876AA">0x539</span><span style="color: #007700">,<br />    </span><span style="color: #9876AA">02471</span><span style="color: #007700">,<br />    </span><span style="color: #9876AA">0b10100111001</span><span style="color: #007700">,<br />    </span><span style="color: #9876AA">1337e0</span><span style="color: #007700">,<br />    </span><span style="color: #DD0000">"0x539"</span><span style="color: #007700">,<br />    </span><span style="color: #DD0000">"02471"</span><span style="color: #007700">,<br />    </span><span style="color: #DD0000">"0b10100111001"</span><span style="color: #007700">,<br />    </span><span style="color: #DD0000">"1337e0"</span><span style="color: #007700">,<br />    </span><span style="color: #DD0000">"not numeric"</span><span style="color: #007700">,<br />    array(),<br />    </span><span style="color: #9876AA">9.1</span><span style="color: #007700">,<br />    </span><span style="color: #9876AA">null</span><span style="color: #007700">,<br />    </span><span style="color: #DD0000">''</span><span style="color: #007700">,<br />);<br /><br />foreach (</span><span style="color: #9876AA">$tests </span><span style="color: #007700">as </span><span style="color: #9876AA">$element</span><span style="color: #007700">) {<br />    if (</span><span style="color: #9876AA">is_numeric</span><span style="color: #007700">(</span><span style="color: #9876AA">$element</span><span style="color: #007700">)) {<br />        echo </span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">$element</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">) . </span><span style="color: #DD0000">" is numeric"</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />    } else {<br />        echo </span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">$element</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">) . </span><span style="color: #DD0000">" is NOT numeric"</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />    }<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;">     <div class="cdata"><span>&#039;42&#039; is numeric<br>1337 is numeric<br>1337 is numeric<br>1337 is numeric<br>1337 is numeric<br>1337.0 is numeric<br>&#039;0x539&#039; is NOT numeric<br>&#039;02471&#039; is numeric<br>&#039;0b10100111001&#039; is NOT numeric<br>&#039;1337e0&#039; is numeric<br>&#039;not numeric&#039; is NOT numeric<br>array (<br>) is NOT numeric<br>9.1 is numeric<br>NULL is NOT numeric<br>&#039;&#039; is NOT numeric<br></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 带有空格的 <span class="function"><strong style="color:#CC7832">is_numeric()</strong></span></strong></p>    <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$tests </span><span style="color: #007700">= [<br />    </span><span style="color: #DD0000">" 42"</span><span style="color: #007700">,<br />    </span><span style="color: #DD0000">"42 "</span><span style="color: #007700">,<br />    </span><span style="color: #DD0000">"\u{A0}9001"</span><span style="color: #007700">, </span><span style="color: #FF8000">// non-breaking space<br />    </span><span style="color: #DD0000">"9001\u{A0}"</span><span style="color: #007700">, </span><span style="color: #FF8000">// non-breaking space<br /></span><span style="color: #007700">];<br />foreach (</span><span style="color: #9876AA">$tests </span><span style="color: #007700">as </span><span style="color: #9876AA">$element</span><span style="color: #007700">) {<br />    if (</span><span style="color: #9876AA">is_numeric</span><span style="color: #007700">(</span><span style="color: #9876AA">$element</span><span style="color: #007700">)) {<br />        echo </span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">$element</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">) . </span><span style="color: #DD0000">" is numeric"</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />    } else {<br />        echo </span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">$element</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">) . </span><span style="color: #DD0000">" is NOT numeric"</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />    }<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例在 PHP 8 中的输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;">     <div class="cdata"><span>&#039; 42&#039; is numeric<br>&#039;42 &#039; is numeric<br>&#039; 9001&#039; is NOT numeric<br>&#039;9001 &#039; is NOT numeric<br></span></div>    </div>    <div class="example-contents"><p>以上示例在 PHP 7 中的输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;">     <div class="cdata"><span>&#039; 42&#039; is numeric<br>&#039;42 &#039; is NOT numeric<br>&#039; 9001&#039; is NOT numeric<br>&#039;9001 &#039; is NOT numeric<br></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-numeric-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><a href="https://www.php.net/manual/zh/language.types.numeric-strings.php" class="link">数字字符串</a></li>    <li class="member"><span class="function">{@link ctype_digit()} - 检测数字字符</span></li>    <li class="member"><span class="function">{@link is_bool()} - 检测变量是否是布尔值</span></li>    <li class="member"><span class="function">{@link is_null()} - 检测变量是否是 null</span></li>    <li class="member"><span class="function">{@link is_float()} - 查找变量的类型是否是浮点型</span></li>    <li class="member"><span class="function">{@link is_int()} - 检测变量是否是整数</span></li>    <li class="member"><span class="function">{@link is_string()} - 查找变量的类型是否是字符串</span></li>    <li class="member"><span class="function">{@link is_object()} - 查找变量是否是对象</span></li>    <li class="member"><span class="function">{@link is_array()} - 检测变量是否是数组</span></li>    <li class="member"><span class="function">{@link filter_var()} - 使用特定的过滤器过滤一个变量</span></li>   </ul>  </span> </div></div>
 * @return bool true if var is a number or a numeric*/
function is_numeric(mixed $value): bool {}

/**
*<div id="function.is-string" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_string</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_string</span> &mdash; <span class="dc-title">查找变量的类型是否是字符串</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-string-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_string</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   查找指定变量的类型是否是字符串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-string-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       要计算的变量。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-string-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">value</span> 是类型 <span class="type" style="color:#EAB766">string</span>，返回   <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-string-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_string()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$values </span><span style="color: #007700">= array(</span><span style="color: #9876AA">false</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">, </span><span style="color: #9876AA">null</span><span style="color: #007700">, </span><span style="color: #DD0000">'abc'</span><span style="color: #007700">, </span><span style="color: #DD0000">'23'</span><span style="color: #007700">, </span><span style="color: #9876AA">23</span><span style="color: #007700">, </span><span style="color: #DD0000">'23.5'</span><span style="color: #007700">, </span><span style="color: #9876AA">23.5</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #DD0000">' '</span><span style="color: #007700">, </span><span style="color: #DD0000">'0'</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />foreach (</span><span style="color: #9876AA">$values </span><span style="color: #007700">as </span><span style="color: #9876AA">$value</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"is_string("</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">var_export</span><span style="color: #007700">(</span><span style="color: #9876AA">$value</span><span style="color: #007700">);<br />    echo </span><span style="color: #DD0000">") = "</span><span style="color: #007700">;<br />    echo </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">is_string</span><span style="color: #007700">(</span><span style="color: #9876AA">$value</span><span style="color: #007700">));<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>is_string(false) = bool(false)<br>is_string(true) = bool(false)<br>is_string(NULL) = bool(false)<br>is_string(&#039;abc&#039;) = bool(true)<br>is_string(&#039;23&#039;) = bool(true)<br>is_string(23) = bool(false)<br>is_string(&#039;23.5&#039;) = bool(true)<br>is_string(23.5) = bool(false)<br>is_string(&#039;&#039;) = bool(true)<br>is_string(&#039; &#039;) = bool(true)<br>is_string(&#039;0&#039;) = bool(true)<br>is_string(0) = bool(false)<br><br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-string-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_float()} - 查找变量的类型是否是浮点型</span></li>    <li class="member"><span class="function">{@link is_int()} - 检测变量是否是整数</span></li>    <li class="member"><span class="function">{@link is_bool()} - 检测变量是否是布尔值</span></li>    <li class="member"><span class="function">{@link is_object()} - 查找变量是否是对象</span></li>    <li class="member"><span class="function">{@link is_array()} - 检测变量是否是数组</span></li>   </ul>  </span> </div></div>
 * @return bool true if var is of type string,*/
function is_string(mixed $value): bool {}

/**
*<div id="function.is-array" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_array</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_array</span> &mdash; <span class="dc-title">检测变量是否是数组</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-array-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_array</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   检测变量是否是数组。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-array-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       待检测的变量。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-array-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">value</span>   是 <span class="type" style="color:#EAB766">array</span>，则返回 <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-array-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 检测变量是否为数组</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$yes </span><span style="color: #007700">= array(</span><span style="color: #DD0000">'this'</span><span style="color: #007700">, </span><span style="color: #DD0000">'is'</span><span style="color: #007700">, </span><span style="color: #DD0000">'an array'</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">is_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$yes</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'Array' </span><span style="color: #007700">: </span><span style="color: #DD0000">'not an Array'</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$no </span><span style="color: #007700">= </span><span style="color: #DD0000">'this is a string'</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">is_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$no</span><span style="color: #007700">) ? </span><span style="color: #DD0000">'Array' </span><span style="color: #007700">: </span><span style="color: #DD0000">'not an Array'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>not an Array<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-array-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link array_is_list()} - 判断给定的 array 是否为 list</span></li>    <li class="member"><span class="function">{@link is_float()} - 查找变量的类型是否是浮点型</span></li>    <li class="member"><span class="function">{@link is_int()} - 检测变量是否是整数</span></li>    <li class="member"><span class="function">{@link is_string()} - 查找变量的类型是否是字符串</span></li>    <li class="member"><span class="function">{@link is_object()} - 查找变量是否是对象</span></li>   </ul>  </span> </div></div>
 * @return bool true if var is an array,*/
function is_array(mixed $value): bool {}

/**
*<div id="function.is-object" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_object</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_object</span> &mdash; <span class="dc-title">查找变量是否是对象</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-object-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_object</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   查找指定变量是否是对象。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-object-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       要计算的变量。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-object-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">value</span> 是 <span class="type" style="color:#EAB766">object</span>，返回   <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.is-object-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.2.0</td>       <td>        没有定义类（<span class="classname"><strong class="classname">__PHP_Incomplete_Class</strong></span> 类）的未序列化对象，<span class="function"><strong style="color:#CC7832">is_object()</strong></span>        现在返回 <strong><span>true</span></strong>，之前返回 <strong><span>false</span></strong>。       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-object-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_object()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 声明简单的函数，从对象中返回数组<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">get_students</span><span style="color: #007700">(</span><span style="color: #9876AA">$obj</span><span style="color: #007700">)<br />{<br />    if (!</span><span style="color: #9876AA">is_object</span><span style="color: #007700">(</span><span style="color: #9876AA">$obj</span><span style="color: #007700">)) {<br />        return </span><span style="color: #9876AA">false</span><span style="color: #007700">;<br />    }<br /><br />    return </span><span style="color: #9876AA">$obj</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">students</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #FF8000">// 声明新的类实例并填充值<br /></span><span style="color: #9876AA">$obj </span><span style="color: #007700">= new </span><span style="color: #9876AA">stdClass</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$obj</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">students </span><span style="color: #007700">= array(</span><span style="color: #DD0000">'Kalle'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Ross'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Felipe'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">get_students</span><span style="color: #007700">(</span><span style="color: #9876AA">null</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">get_students</span><span style="color: #007700">(</span><span style="color: #9876AA">$obj</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-object-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_bool()} - 检测变量是否是布尔值</span></li>    <li class="member"><span class="function">{@link is_int()} - 检测变量是否是整数</span></li>    <li class="member"><span class="function">{@link is_float()} - 查找变量的类型是否是浮点型</span></li>    <li class="member"><span class="function">{@link is_string()} - 查找变量的类型是否是字符串</span></li>    <li class="member"><span class="function">{@link is_array()} - 检测变量是否是数组</span></li>   </ul>  </span> </div></div>
 * @return bool true if var is an object, false otherwise.<br/>*/
function is_object(mixed $value): bool {}

/**
*<div id="function.is-scalar" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_scalar</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.5, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_scalar</span> &mdash; <span class="dc-title">     检测变量是否是一个标量  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-scalar-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_scalar</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   检测变量是否为标量  </p>  <p class="para">   标量变量是指 <span class="type" style="color:#EAB766">int</span>、<span class="type" style="color:#EAB766">float</span>、<span class="type" style="color:#EAB766">string</span> 或 <span class="type" style="color:#EAB766">bool</span> 类型的变量。   <span class="type" style="color:#EAB766">array</span>、<span class="type" style="color:#EAB766">object</span> 、 <span class="type" style="color:#EAB766">resource</span> 和 <span class="type" style="color:#EAB766">null</span> 类型不是标量。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    <span class="function"><strong style="color:#CC7832">is_scalar()</strong></span> 不会将 <span class="type" style="color:#EAB766">resource</span> 类型值视为标量，    因为当前 resources 是基于整数（integer）的抽象数据类型。    不能依赖该执行细节，因为它可能会改变。   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    <span class="function"><strong style="color:#CC7832">is_scalar()</strong></span> 不会将 NULL 检测为标量。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-scalar-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       需要检测的变量。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-scalar-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">value</span> 是标量，则返回 <strong><span>true</span></strong> ，否则返回 <strong><span>false</span></strong> 。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-scalar-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_scalar()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">show_var</span><span style="color: #007700">(</span><span style="color: #9876AA">$var</span><span style="color: #007700">)<br />{<br />    if (</span><span style="color: #9876AA">is_scalar</span><span style="color: #007700">(</span><span style="color: #9876AA">$var</span><span style="color: #007700">)) {<br />        echo </span><span style="color: #9876AA">$var</span><span style="color: #007700">;<br />    } else {<br />        </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$var</span><span style="color: #007700">);<br />    }<br />}<br /></span><span style="color: #9876AA">$pi </span><span style="color: #007700">= </span><span style="color: #9876AA">3.1416</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$proteins </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"hemoglobin"</span><span style="color: #007700">, </span><span style="color: #DD0000">"cytochrome c oxidase"</span><span style="color: #007700">, </span><span style="color: #DD0000">"ferredoxin"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">show_var</span><span style="color: #007700">(</span><span style="color: #9876AA">$pi</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">show_var</span><span style="color: #007700">(</span><span style="color: #9876AA">$proteins</span><span style="color: #007700">)<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>3.1416<br>array(3) {<br>  [0]=&gt;<br>  string(10) &quot;hemoglobin&quot;<br>  [1]=&gt;<br>  string(20) &quot;cytochrome c oxidase&quot;<br>  [2]=&gt;<br>  string(10) &quot;ferredoxin&quot;<br>}<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-scalar-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_float()} - 查找变量的类型是否是浮点型</span></li>    <li class="member"><span class="function">{@link is_int()} - 检测变量是否是整数</span></li>    <li class="member"><span class="function">{@link is_numeric()} - 检测变量是否为数字或数字字符串</span></li>    <li class="member"><span class="function">{@link is_real()} - 别名 is_float</span></li>    <li class="member"><span class="function">{@link is_string()} - 查找变量的类型是否是字符串</span></li>    <li class="member"><span class="function">{@link is_bool()} - 检测变量是否是布尔值</span></li>    <li class="member"><span class="function">{@link is_object()} - 查找变量是否是对象</span></li>    <li class="member"><span class="function">{@link is_array()} - 检测变量是否是数组</span></li>   </ul>  </span> </div></div>
 * @return bool true if var is a scalar false*/
function is_scalar(mixed $value): bool {}

/**
*<div id="function.is-callable" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_callable</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">is_callable</span> &mdash; <span class="dc-title">   验证值是否可以在当前范围内作为函数调用。  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-callable-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_callable</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$syntax_only</span><span class="initializer"> = <strong><span>false</span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">&$callable_name</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   验证值是 <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-callable-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       要验证的值      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">syntax_only</span></dt>     <dd>      <p class="para">       如果设置为 <strong><span>true</span></strong>，则函数仅验证 <span class="parameter" style="color:#3A95FF">value</span>       可能是函数或方法。它仅拒绝不是字符串的简单变量，或者不能用作回调的有效结构的数组。只有       2 个条目有效，一个是对象或者字符串，其次是字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">callable_name</span></dt>     <dd>      <p class="para">       接受“可调用的名称”。下面的例子是“someClass::someMethod”。注意，尽管        someClass::SomeMethod() 暗示是可调用的静态方法，但事实并非如此。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-callable-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">value</span> 可调用则返回 <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-callable-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_callable()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//  如何检测变量以查看是否可以作为函数调用。<br /><br />//<br />//  包含函数的简单变量<br />//<br /><br /></span><span style="color: #007700">function </span><span style="color: #9876AA">someFunction</span><span style="color: #007700">() <br />{<br />}<br /><br /></span><span style="color: #9876AA">$functionVariable </span><span style="color: #007700">= </span><span style="color: #DD0000">'someFunction'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">is_callable</span><span style="color: #007700">(</span><span style="color: #9876AA">$functionVariable</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">, </span><span style="color: #9876AA">$callable_name</span><span style="color: #007700">));  </span><span style="color: #FF8000">// bool(true)<br /><br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$callable_name</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;  </span><span style="color: #FF8000">// someFunction<br /><br />//<br />//  包含方法的数组<br />//<br /><br /></span><span style="color: #007700">class </span><span style="color: #9876AA">someClass </span><span style="color: #007700">{<br /><br />  function </span><span style="color: #9876AA">someMethod</span><span style="color: #007700">() <br />  {<br />  }<br /><br />}<br /><br /></span><span style="color: #9876AA">$anObject </span><span style="color: #007700">= new </span><span style="color: #9876AA">someClass</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$methodVariable </span><span style="color: #007700">= array(</span><span style="color: #9876AA">$anObject</span><span style="color: #007700">, </span><span style="color: #DD0000">'someMethod'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">is_callable</span><span style="color: #007700">(</span><span style="color: #9876AA">$methodVariable</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">, </span><span style="color: #9876AA">$callable_name</span><span style="color: #007700">));  </span><span style="color: #FF8000">//  bool(true)<br /><br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$callable_name</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;  </span><span style="color: #FF8000">//  someClass::someMethod<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>      <div class="example" id="">    <p><strong>示例 #2 <span class="function"><strong style="color:#CC7832">is_callable()</strong></span> 和构造函数</strong></p>    <div class="example-contents"><p>     <span class="function"><strong style="color:#CC7832">is_callable()</strong></span> 报告构造函数不可调用。    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">class </span><span style="color: #9876AA">Foo<br /></span><span style="color: #007700">{<br />    public function </span><span style="color: #9876AA">__construct</span><span style="color: #007700">() {}<br />    public function </span><span style="color: #9876AA">foo</span><span style="color: #007700">() {}<br />}<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(<br />    </span><span style="color: #9876AA">is_callable</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'Foo'</span><span style="color: #007700">, </span><span style="color: #DD0000">'__construct'</span><span style="color: #007700">)),<br />    </span><span style="color: #9876AA">is_callable</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'Foo'</span><span style="color: #007700">, </span><span style="color: #DD0000">'foo'</span><span style="color: #007700">))<br />);</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>bool(false)<br>bool(false)<br></span></div>    </div>   </div>  </span>    </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.is-callable-notes">  <h3 class="title">注释</h3>  <ul class="simplelist">   <li class="member">    如果对象实现了 <a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.invoke" class="link">__invoke()</a> 且该方法在当前作用域可见，则始终可调用。   </li>   <li class="member">    如果类名实现了 <a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.callstatic" class="link">__callStatic()</a>，则可调用。   </li>   <li class="member">    如果对象实现 <a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.call" class="link">__call()</a>，则此函数对该对象的任何方法将返回    <strong><span>true</span></strong>，即使该方法没有定义。   </li>   <li class="member">    如果使用类名调用此函数，则会触发自动加载。   </li>  </ul> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-callable-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link function_exists()} - 如果给定的函数已经被定义就返回 true</span></li>    <li class="member"><span class="function">{@link method_exists()} - 检查类的方法是否存在</span></li>   </ul>  </span> </div></div>
 * @return bool <b>TRUE</b> if $var is callable, <b>FALSE</b>*/
function is_callable(mixed $value, bool $syntax_only = false, &$callable_name): bool {}

/**
*<div id="function.is-countable" class="refentry"> <div class="refnamediv">  <h1 class="refname">is_countable</h1>  <p class="verinfo">(PHP 7 &gt;= 7.3.0, PHP 8)</p><p class="refpurpose"><span class="refname">is_countable</span> &mdash; <span class="dc-title">   验证变量内容是否为可数值  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.is-countable-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>is_countable</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   验证变量的内容是数组还是实现了 <span class="classname"><a href="https://www.php.net/manual/zh/class.countable.php" class="classname">Countable</a></span> 接口的对象  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.is-countable-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       需要检查的值      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.is-countable-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">value</span> 是可数值，返回 <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.is-countable-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.3.0</td>      <td>       <span class="function"><strong style="color:#CC7832">is_countable()</strong></span> 被添加。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.is-countable-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">is_countable()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">is_countable</span><span style="color: #007700">([</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">])); </span><span style="color: #FF8000">// bool(true)<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">is_countable</span><span style="color: #007700">(new </span><span style="color: #9876AA">ArrayIterator</span><span style="color: #007700">([</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">, </span><span style="color: #DD0000">'bar'</span><span style="color: #007700">, </span><span style="color: #DD0000">'baz'</span><span style="color: #007700">]))); </span><span style="color: #FF8000">// bool(true)<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">is_countable</span><span style="color: #007700">(new </span><span style="color: #9876AA">ArrayIterator</span><span style="color: #007700">())); </span><span style="color: #FF8000">// bool(true)<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">is_countable</span><span style="color: #007700">(new </span><span style="color: #9876AA">stdClass</span><span style="color: #007700">())); </span><span style="color: #FF8000">// bool(false)</span></span></span></div>    </div>   </div>     </span>    </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.is-countable-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_array()} - 检测变量是否是数组</span></li>    <li class="member"><span class="function">{@link is_object()} - 查找变量是否是对象</span></li>    <li class="member"><span class="function">{@link is_iterable()} - 验证变量的内容是否为可迭代值</span></li>    <li class="member"><span class="function">{@link is_bool()} - 检测变量是否是布尔值</span></li>   </ul>  </span> </div></div>
 * @return bool <b>TRUE</b> if $var is countable, <b>FALSE</b> otherwise.*/
function is_countable(mixed $value): bool {}

/**
*<div id="function.pclose" class="refentry"> <div class="refnamediv">  <h1 class="refname">pclose</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">pclose</span> &mdash; <span class="dc-title">关闭进程文件指针</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.pclose-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>pclose</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$handle</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   关闭用 <span class="function">{@link popen()}</span> 打开的指向管道的文件指针。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.pclose-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">handle</span></dt>     <dd>      <p class="para">       文件指针必须有效，且必须是成功调用 <span class="function">{@link popen()}</span> 所返回的。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.pclose-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回运行的进程的终止状态。发生错误时会返回 <span>-1</span>。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:  <p class="para">  如果 PHP 是通过 --enable-sigchild 编译的，此函数将没有返回值。 </p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.pclose-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">pclose()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">popen</span><span style="color: #007700">(</span><span style="color: #DD0000">'/bin/ls'</span><span style="color: #007700">, </span><span style="color: #DD0000">'r'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">pclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.pclose-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <strong>仅限 Unix</strong><br />   <p class="para">    <span class="function"><strong style="color:#CC7832">pclose()</strong></span> 在内部使用 <span>waitpid(3)</span>    系统调用实现的。要获得真正的退出状态码，应该使用 <span class="function">{@link pcntl_wexitstatus()}</span> 函数。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.pclose-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>   </ul>  </span> </div></div>
 * @return int the termination status of the process that was run. In case of an error then -1 is returned.*/
function pclose($handle): int {}

/**
*<div id="function.popen" class="refentry"> <div class="refnamediv">  <h1 class="refname">popen</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">popen</span> &mdash; <span class="dc-title">打开进程文件指针</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.popen-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>popen</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$command</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$mode</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   打开一个指向进程的管道，该进程由派生给定的 command 命令执行而产生。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.popen-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">command</span></dt>     <dd>      <p class="para">       命令。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">mode</span></dt>     <dd>      <p class="para">       模式。<span>&#039;r&#039;</span> 表示阅读，<span>&#039;w&#039;</span> 表示写入。      </p>      <p class="para">       在 Windows 上，<span class="function"><strong style="color:#CC7832">popen()</strong></span> 默认是文本模式，即任何从管道中读取/写入的 <span>\n</span>       字符都将转换为 <span>\r\n</span>。如果避免这种情况，可以通过将 <span class="parameter" style="color:#3A95FF">mode</span>       设置为 <span>&#039;rb&#039;</span> 和 <span>&#039;wb&#039;</span> 来强制执行二进制模式。      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.popen-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个和 <span class="function">{@link fopen()}</span>   所返回的相同的文件指针，只不过它是单向的（只能用于读或写）并且必须用   <span class="function">{@link pclose()}</span> 来关闭。此指针可以用于   <span class="function">{@link fgets()}</span>，<span class="function">{@link fgetss()}</span> 和   <span class="function">{@link fwrite()}</span>。   当模式为 &#039;r&#039;，返回的文件指针等于命令的 STDOUT，当模式为 &#039;w&#039;，返回的文件指针等于命令的 STDIN。  </p>  <p class="para">   如果出错返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.popen-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">popen()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">popen</span><span style="color: #007700">(</span><span style="color: #DD0000">"/bin/ls"</span><span style="color: #007700">, </span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   如果未找到要执行的命令，会返回一个合法的资源。这看上去很怪，但有道理。它允许访问   shell 返回的任何错误信息：   <div class="example" id="">    <p><strong>示例 #2 <span class="function"><strong style="color:#CC7832">popen()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />error_reporting</span><span style="color: #007700">(</span><span style="color: #9876AA">E_ALL</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 加入重定向以得到标准错误输出 stderr。 <br /></span><span style="color: #9876AA">$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">popen</span><span style="color: #007700">(</span><span style="color: #DD0000">'/path/to/executable 2&gt;&amp;1'</span><span style="color: #007700">, </span><span style="color: #DD0000">'r'</span><span style="color: #007700">);<br />echo </span><span style="color: #DD0000">"'</span><span style="color: #9876AA">$handle</span><span style="color: #DD0000">'; " </span><span style="color: #007700">. </span><span style="color: #9876AA">gettype</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$read </span><span style="color: #007700">= </span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">, </span><span style="color: #9876AA">2096</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$read</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">pclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.popen-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    如果需要双向支持，使用 <span class="function">{@link proc_open()}</span>。   </p>  </p></blockquote> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.popen-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link pclose()} - 关闭进程文件指针</span></li>    <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>    <li class="member"><span class="function">{@link proc_open()} - 执行一个命令，并且打开用来输入/输出的文件指针。</span></li>   </ul>  </span> </div></div>
 * @return resource|false a file pointer identical to that returned by*/
function popen(string $command, string $mode) {}

/**
*<div id="function.readfile" class="refentry"> <div class="refnamediv">  <h1 class="refname">readfile</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">readfile</span> &mdash; <span class="dc-title">输出文件</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.readfile-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>readfile</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$use_include_path</span><span class="initializer"> = <strong><span>false</span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$context</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   读取文件并写入到输出缓冲。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.readfile-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       要读取的文件名。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">use_include_path</span></dt>     <dd>      <p class="para">       想要在 <a href="https://www.php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a>       中搜索文件，可使用这个可选的第二个参数，设为 <strong><span>true</span></strong>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">context</span></dt>     <dd>       <p class="para"><a href="https://www.php.net/manual/zh/stream.contexts.php" class="link">上下文流（context stream）</a><span class="type" style="color:#EAB766">resource</span>。</p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.readfile-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回从文件中读入的字节数， 或者在失败时返回 <strong><span>false</span></strong>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.readfile-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.readfile-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 使用 <span class="function"><strong style="color:#CC7832">readfile()</strong></span> 强制下载</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$file </span><span style="color: #007700">= </span><span style="color: #DD0000">'monkey.gif'</span><span style="color: #007700">;<br /><br />if (</span><span style="color: #9876AA">file_exists</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-Description: File Transfer'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-Type: application/octet-stream'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-Disposition: attachment; filename="'</span><span style="color: #007700">.</span><span style="color: #9876AA">basename</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">).</span><span style="color: #DD0000">'"'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Expires: 0'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Cache-Control: must-revalidate'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Pragma: public'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-Length: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">filesize</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">readfile</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br />    exit;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="mediaobject">          <div class="imageobject">      <img src="images/e88cefb5c3fca5060e2490b9763c4433-readfile.png" alt="打开 / 保存对话框" width="319" height="245" />     </div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.readfile-notes">  <h3 class="title">注释</h3> <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    <span class="function"><strong style="color:#CC7832">readfile()</strong></span> 自身不会导致任何内存问题。    如果出现内存不足的错误，使用 <span class="function">{@link ob_get_level()}</span> 确保输出缓存已经关闭。   </p>  </p></blockquote>    <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">如已启用<a href="https://www.php.net/manual/zh/filesystem.configuration.php#ini.allow-url-fopen" class="link">fopen 包装器</a>，在此函数中， URL 可作为文件名。关于如何指定文件名详见 <span class="function">{@link fopen()}</span>。各种wapper 的不同功能请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>，注意其用法及其可提供的预定义变量。</p></div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.readfile-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fpassthru()} - 输出文件指针处的所有剩余数据</span></li>    <li class="member"><span class="function">{@link file()} - 把整个文件读入一个数组中</span></li>    <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>    <li class="member"><span class="function">{@link include} - include</span></li>    <li class="member"><span class="function">{@link require} - require</span></li>    <li class="member"><span class="function">{@link virtual()} - 执行 Apache 子请求</span></li>    <li class="member"><span class="function">{@link file_get_contents()} - 将整个文件读入一个字符串</span></li>    <li class="member"><a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a></li>   </ul>  </span> </div></div>
 * @return false|int the number of bytes read from the file, or FALSE on failure*/
function readfile(string $filename, bool $use_include_path = false, $context): int|false {}

/**
*<div id="function.rewind" class="refentry"> <div class="refnamediv">  <h1 class="refname">rewind</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">rewind</span> &mdash; <span class="dc-title">倒回文件指针的位置</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.rewind-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>rewind</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$stream</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   将 <span class="parameter" style="color:#3A95FF">stream</span> 的文件位置指针设为文件流的开头。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    如果将文件以附加（&quot;a&quot; 或者 &quot;a+&quot;）模式打开，无论文件指针位置如何，写入文件的任何数据总是会被附加在后面。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.rewind-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">       文件指针必须合法，并且指向由 <span class="function">{@link fopen()}</span>       成功打开的文件。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.rewind-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.rewind-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">rewind()</strong></span> overwriting example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'output.txt'</span><span style="color: #007700">, </span><span style="color: #DD0000">'r+'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">, </span><span style="color: #DD0000">'Really long sentence.'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">, </span><span style="color: #DD0000">'Foo'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /><br />echo </span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">, </span><span style="color: #9876AA">filesize</span><span style="color: #007700">(</span><span style="color: #DD0000">'output.txt'</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Foolly long sentence.<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.rewind-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>    <li class="member"><span class="function">{@link fseek()} - 在文件指针中定位</span></li>    <li class="member"><span class="function">{@link ftell()} - 返回文件指针读/写的位置</span></li>    <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function rewind($stream): bool {}

/**
*<div id="function.rmdir" class="refentry"> <div class="refnamediv">  <h1 class="refname">rmdir</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">rmdir</span> &mdash; <span class="dc-title">删除目录</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.rmdir-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>rmdir</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$directory</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$context</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   尝试删除 <span class="parameter" style="color:#3A95FF">directory</span> 所指定的目录。   该目录必须是空的，而且要有相应的权限。   失败时会产生一个 <strong><span>E_WARNING</span></strong> 级别的错误。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.rmdir-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">directory</span></dt>     <dd>      <p class="para">       目录的路径。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">context</span></dt>     <dd>      <p class="para"><a href="https://www.php.net/manual/zh/stream.contexts.php" class="link">上下文流（context stream）</a><span class="type" style="color:#EAB766">resource</span>。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.rmdir-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.rmdir-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">rmdir()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">if (!</span><span style="color: #9876AA">is_dir</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples'</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">mkdir</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples'</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">rmdir</span><span style="color: #007700">(</span><span style="color: #DD0000">'examples'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>     </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.rmdir-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_dir()} - 判断给定文件名是否是一个目录</span></li>    <li class="member"><span class="function">{@link mkdir()} - 新建目录</span></li>    <li class="member"><span class="function">{@link unlink()} - 删除文件</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function rmdir(string $directory, $context): bool {}

/**
*<div id="function.umask" class="refentry"> <div class="refnamediv">  <h1 class="refname">umask</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">umask</span> &mdash; <span class="dc-title">改变当前的 umask</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.umask-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>umask</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$mask</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment"> <span class="function"><strong style="color:#CC7832">umask()</strong></span> 将 PHP 的 umask 设定为   <span class="parameter" style="color:#3A95FF">mask</span> &amp; 0777 并返回原来的   umask。当 PHP 被作为服务器模块使用时，在每个请求结束后 umask   会被恢复。  </p> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.umask-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">mask</span></dt>     <dd>      <p class="para">       The new umask.      </p>     </dd>       </dl>  </span> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.umask-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">mask</span> 为 <strong><span>null</span></strong>，<span class="function"><strong style="color:#CC7832">umask()</strong></span> 仅返回当前的 umask，有参数则返回原来的 umask。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.umask-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">mask</span> 现在可以为 null。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.umask-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">umask()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$old </span><span style="color: #007700">= </span><span style="color: #9876AA">umask</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">chmod</span><span style="color: #007700">(</span><span style="color: #DD0000">"/path/some_dir/some_file.txt"</span><span style="color: #007700">, </span><span style="color: #9876AA">0755</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">umask</span><span style="color: #007700">(</span><span style="color: #9876AA">$old</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Checking<br /></span><span style="color: #007700">if (</span><span style="color: #9876AA">$old </span><span style="color: #007700">!= </span><span style="color: #9876AA">umask</span><span style="color: #007700">()) {<br />    die(</span><span style="color: #DD0000">'An error occurred while changing back the umask'</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.umask-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    在多线程的服务器上尽量避免使用这个函数。创建文件后要改变其权限最好还是使用    <span class="function">{@link chmod()}</span>。使用 <span class="function"><strong style="color:#CC7832">umask()</strong></span>    会导致并发程序和服务器发生不可预知的情况，因为它们是使用相同的 umask 的。   </p>  </p></blockquote> </div></div>
 * @return int umask without arguments simply returns the*/
function umask(?int $mask): int {}

/**
*<div id="function.fclose" class="refentry"> <div class="refnamediv">  <h1 class="refname">fclose</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fclose</span> &mdash; <span class="dc-title">关闭一个已打开的文件指针</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fclose-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fclose</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$stream</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   将 <span class="parameter" style="color:#3A95FF">stream</span> 指向的文件关闭。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fclose-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">       文件指针必须有效，并且是通过 <span class="function">{@link fopen()}</span> 或       <span class="function">{@link fsockopen()}</span> 成功打开的。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fclose-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fclose-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 一个简单 <span class="function"><strong style="color:#CC7832">fclose()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'somefile.txt'</span><span style="color: #007700">, </span><span style="color: #DD0000">'r'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fclose-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>    <li class="member"><span class="function">{@link fsockopen()} - 打开 Internet 或者 Unix 套接字连接</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function fclose($stream): bool {}

/**
*<div id="function.feof" class="refentry"> <div class="refnamediv">  <h1 class="refname">feof</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">feof</span> &mdash; <span class="dc-title">测试文件指针是否到了文件结束的位置</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.feof-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>feof</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$stream</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   测试文件指针是否到了文件结束的位。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.feof-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">文件指针必须是有效的，必须指向由<span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.feof-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果文件指针到了 EOF 或者出错时则返回 <strong><span>true</span></strong>，否则返回一个错误（包括 socket   超时），其它情况则返回 <strong><span>false</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.feof-notes">  <h3 class="title">注释</h3>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    如果服务器没有关闭由 <span class="function">{@link fsockopen()}</span> 所打开的连接，<span class="function"><strong style="color:#CC7832">feof()</strong></span>    会一直等待直到超时。要解决这个问题可参见以下范例：    <div class="example" id="">     <p><strong>示例 #1 处理 <span class="function"><strong style="color:#CC7832">feof()</strong></span> 的超时</strong></p>     <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">safe_feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">, &amp;</span><span style="color: #9876AA">$start </span><span style="color: #007700">= </span><span style="color: #9876AA">NULL</span><span style="color: #007700">) {<br /> </span><span style="color: #9876AA">$start </span><span style="color: #007700">= </span><span style="color: #9876AA">microtime</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br /> return </span><span style="color: #9876AA">feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">// $fp 的赋值是由之前 fsockopen() 打开  <br /><br /></span><span style="color: #9876AA">$start </span><span style="color: #007700">= </span><span style="color: #9876AA">NULL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$timeout </span><span style="color: #007700">= </span><span style="color: #9876AA">ini_get</span><span style="color: #007700">(</span><span style="color: #DD0000">'default_socket_timeout'</span><span style="color: #007700">);<br /><br />while(!</span><span style="color: #9876AA">safe_feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">$start</span><span style="color: #007700">) &amp;&amp; (</span><span style="color: #9876AA">microtime</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">) - </span><span style="color: #9876AA">$start</span><span style="color: #007700">) &lt; </span><span style="color: #9876AA">$timeout</span><span style="color: #007700">)<br />{<br /> </span><span style="color: #FF8000">// Handle <br /></span><span style="color: #007700">}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>     </div>    </div>   </p>  </div>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    如果传递的文件指针无效可能会陷入无限循环中，因为 <span class="function"><strong style="color:#CC7832">feof()</strong></span> 不会返回 <strong><span>true</span></strong>。    <div class="example" id="">     <p><strong>示例 #2 使用无效文件指针的 <span class="function"><strong style="color:#CC7832">feof()</strong></span> 例子 </strong></p>     <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 如果文件不可读取或者不存在，fopen 函数返回 FALSE<br /></span><span style="color: #9876AA">$file </span><span style="color: #007700">= @</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"no_such_file"</span><span style="color: #007700">, </span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 来自 fopen 的 FALSE 会发出一条警告信息并在这里陷入无限循环<br /></span><span style="color: #007700">while (!</span><span style="color: #9876AA">feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">)) {<br />}<br /><br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>     </div>    </div>   </p>  </div> </div></div>
 * @return bool true if the file pointer is at EOF or an error occurs*/
function feof($stream): bool {}

/**
*<div id="function.fgetc" class="refentry"> <div class="refnamediv">  <h1 class="refname">fgetc</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fgetc</span> &mdash; <span class="dc-title">从文件指针中读取字符</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fgetc-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fgetc</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$stream</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   从文件句柄中获取一个字符。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fgetc-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">文件指针必须是有效的，必须指向由<span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fgetc-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    返回一个包含有一个字符的字符串，该字符从 <span class="parameter" style="color:#3A95FF">stream</span> 指向的文件中得到。   碰到 EOF 则返回 <strong><span>false</span></strong>。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数可能返回布尔值<strong><span>false</span></strong>，但也可能返回等同于 <strong><span>false</span></strong> 的非布尔值。请阅读 <a href="https://www.php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用<a href="https://www.php.net/manual/zh/language.operators.comparison.php" class="link">===运算符</a>来测试此函数的返回值。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fgetc-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 一个 <span class="function"><strong style="color:#CC7832">fgetc()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'somefile.txt'</span><span style="color: #007700">, </span><span style="color: #DD0000">'r'</span><span style="color: #007700">);<br />if (!</span><span style="color: #9876AA">$fp</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">'Could not open file somefile.txt'</span><span style="color: #007700">;<br />}<br />while (</span><span style="color: #9876AA">false </span><span style="color: #007700">!== (</span><span style="color: #9876AA">$char </span><span style="color: #007700">= </span><span style="color: #9876AA">fgetc</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">))) {<br />    echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$char</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fgetc-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数可安全用于二进制对象。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fgetc-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>    <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>    <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>    <li class="member"><span class="function">{@link fsockopen()} - 打开 Internet 或者 Unix 套接字连接</span></li>    <li class="member"><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>   </ul>  </span> </div></div>
 * @return string|false a string containing a single character read from the file pointed*/
function fgetc($stream): string|false {}

/**
*<div id="function.fgets" class="refentry"> <div class="refnamediv">  <h1 class="refname">fgets</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fgets</span> &mdash; <span class="dc-title">从文件指针中读取一行</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fgets-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fgets</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$stream</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$length</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   从文件指针中读取一行。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fgets-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">文件指针必须是有效的，必须指向由<span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">       从 <span class="parameter" style="color:#3A95FF">handle</span>       指向的文件中读取一行并返回长度最多为 <span class="parameter" style="color:#3A95FF">length</span> - 1       字节的字符串。碰到换行符（包括在返回值中）、EOF 或者已经读取了 length - 1       字节后停止（看先碰到那一种情况）。如果没有指定       <span class="parameter" style="color:#3A95FF">length</span>，则默认为 1K，或者说 1024 字节。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fgets-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   从指针 <span class="parameter" style="color:#3A95FF">stream</span> 指向的文件中读取了 <span class="parameter" style="color:#3A95FF">length</span> - 1 字节后返回字符串。    如果文件指针中没有更多的数据了则返回 <strong><span>false</span></strong>。  </p>  <p class="para">   错误发生时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fgets-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 逐行读取文件</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$fp </span><span style="color: #007700">= @</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"/tmp/inputfile.txt"</span><span style="color: #007700">, </span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br />if (</span><span style="color: #9876AA">$fp</span><span style="color: #007700">) {<br />    while ((</span><span style="color: #9876AA">$buffer </span><span style="color: #007700">= </span><span style="color: #9876AA">fgets</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">4096</span><span style="color: #007700">)) !== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br />        echo </span><span style="color: #9876AA">$buffer</span><span style="color: #007700">;<br />    }<br />    if (!</span><span style="color: #9876AA">feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">)) {<br />        echo </span><span style="color: #DD0000">"Error: unexpected fgets() fail\n"</span><span style="color: #007700">;<br />    }<br />    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fgets-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">在读取在 Macintosh 电脑中或由其创建的文件时， 如果 PHP不能正确的识别行结束符，启用运行时配置可选项 <a href="https://www.php.net/manual/zh/filesystem.configuration.php#ini.auto-detect-line-endings" class="link">auto_detect_line_endings</a>也许可以解决此问题。</span></p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    习惯了 C 语言中 <span class="function"><strong style="color:#CC7832">fgets()</strong></span> 语法的人应该注意到 <span>EOF</span>   是怎样被返回的。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fgets-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fgetss()} - 从文件指针中读取一行并过滤掉 HTML 标记</span></li>    <li class="member"><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>    <li class="member"><span class="function">{@link fgetc()} - 从文件指针中读取字符</span></li>    <li class="member"><span class="function">{@link stream_get_line()} - 从资源流里读取一行直到给定的定界符</span></li>    <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>    <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>    <li class="member"><span class="function">{@link fsockopen()} - 打开 Internet 或者 Unix 套接字连接</span></li>    <li class="member"><span class="function">{@link stream_set_timeout()} - Set timeout period on a stream</span></li>   </ul>  </span> </div></div>
 * @return string|false a string of up to length - 1 bytes read from*/
function fgets($stream, ?int $length): string|false {}

/**
*<div id="function.fgetss" class="refentry"> <div class="refnamediv">  <h1 class="refname">fgetss</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">fgetss</span> &mdash; <span class="dc-title">从文件指针中读取一行并过滤掉 HTML 标记</span></p> </div> <div id="function.fgetss-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数已自 PHP 7.3.0起<em>弃用</em>，自 PHP 8.0.0 起<em>移除</em>。强烈建议不要依赖本函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fgetss-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fgetss</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$handle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$length</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$allowable_tags</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   和 <span class="function">{@link fgets()}</span> 相同，只除了 <span class="function"><strong style="color:#CC7832">fgetss()</strong></span> 尝试从读取的文本中去掉任何 HTML 和 PHP 标记。   The function retains the parsing state from call to call, and as such is not   equivalent to calling <span class="function">{@link strip_tags()}</span> on the return value of   <span class="function">{@link fgets()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fgetss-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">handle</span></dt>     <dd>      <p class="para">文件指针必须是有效的，必须指向由<span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">       取回该长度的数据。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">allowable_tags</span></dt>     <dd>      <p class="para">       可以用可选的第三个参数指定哪些标记不被去掉。       See <span class="function">{@link strip_tags()}</span> for details regarding       <span class="parameter" style="color:#3A95FF">allowable_tags</span>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fgetss-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   从 <span class="parameter" style="color:#3A95FF">handle</span> 指向的文件中大读取 <span class="parameter" style="color:#3A95FF">length</span> - 1 个字节的字符，并过滤了所有的 HTML 和 PHP 代码。  </p>  <p class="para">   错误发生时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fgetss-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 一行行读取一个 PHP 文件</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$str </span><span style="color: #007700">= &lt;&lt;&lt;EOD<br /></span><span style="color: #DD0000">&lt;html&gt;&lt;body&gt;<br /> &lt;p&gt;Welcome! Today is the &lt;?php echo(date('jS')); ?&gt; of &lt;?= date('F'); ?&gt;.&lt;/p&gt;<br />&lt;/body&gt;&lt;/html&gt;<br />Text outside of the HTML block.<br /></span><span style="color: #007700">EOD;<br /></span><span style="color: #9876AA">file_put_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'sample.php'</span><span style="color: #007700">, </span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$handle </span><span style="color: #007700">= @</span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"sample.php"</span><span style="color: #007700">, </span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br />if (</span><span style="color: #9876AA">$handle</span><span style="color: #007700">) {<br />    while (!</span><span style="color: #9876AA">feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">)) {<br />        </span><span style="color: #9876AA">$buffer </span><span style="color: #007700">= </span><span style="color: #9876AA">fgetss</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">, </span><span style="color: #9876AA">4096</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$buffer</span><span style="color: #007700">;<br />    }<br />    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span> Welcome! Today is the  of .<br><br>Text outside of the HTML block.<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fgetss-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">在读取在 Macintosh 电脑中或由其创建的文件时， 如果 PHP不能正确的识别行结束符，启用运行时配置可选项 <a href="https://www.php.net/manual/zh/filesystem.configuration.php#ini.auto-detect-line-endings" class="link">auto_detect_line_endings</a>也许可以解决此问题。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fgetss-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>    <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>    <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>    <li class="member"><span class="function">{@link fsockopen()} - 打开 Internet 或者 Unix 套接字连接</span></li>    <li class="member"><span class="function">{@link strip_tags()} - 从字符串中去除 HTML 和 PHP 标签</span></li>    <li class="member"><span class="methodname" style="color:#CC7832">{@link SplFileObject::fgetss()} - Gets line from file and strip HTML tags</span></li>    <li class="member"><a href="https://www.php.net/manual/zh/filters.string.php#filters.string.strip_tags" class="link">string.strip_tags</a> 过滤</li>   </ul>  </span> </div></div>
 * @return string|false a string of up to length - 1 bytes read from*/
function fgetss($handle, ?int $length = null, $allowable_tags = null): false|string {}

/**
*<div id="function.fread" class="refentry"> <div class="refnamediv">  <h1 class="refname">fread</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fread</span> &mdash; <span class="dc-title">读取文件（可安全用于二进制文件）</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fread-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fread</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$stream</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$length</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">fread()</strong></span> 从文件指针   <span class="parameter" style="color:#3A95FF">stream</span> 读取最多   <span class="parameter" style="color:#3A95FF">length</span> 个字节。      该函数在遇上以下几种情况时停止读取文件：   <ul class="itemizedlist">    <li class="listitem">     <span class="simpara">      读取了 <span class="parameter" style="color:#3A95FF">length</span> 个字节     </span>    </li>    <li class="listitem">     <span class="simpara">      到达了文件末尾（EOF）     </span>    </li>    <li class="listitem">     <span class="simpara">      a packet becomes available or the {@link       socket timeout} occurs (for network streams)     </span>    </li>    <li class="listitem">     <span class="simpara">      if the stream is read buffered and it does not represent a plain file, at      most one read of up to a number of bytes equal to the chunk size (usually      8192) is made; depending on the previously buffered data, the size of the      returned data may be larger than the chunk size.     </span>    </li>   </ul>  </p> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fread-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">文件系统指针，是典型地由<span class="function">{@link fopen()}</span> 创建的 <span class="type" style="color:#EAB766">resource</span>(资源)。</p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">       最多读取 <span class="parameter" style="color:#3A95FF">length</span> 个字节。      </p>     </dd>       </dl>  </span> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fread-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回所读取的字符串， 或者在失败时返回 <strong><span>false</span></strong>。   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fread-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 一个简单的 <span class="function"><strong style="color:#CC7832">fread()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// get contents of a file into a string<br /></span><span style="color: #9876AA">$filename </span><span style="color: #007700">= </span><span style="color: #DD0000">"/usr/local/something.txt"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">, </span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$contents </span><span style="color: #007700">= </span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">, </span><span style="color: #9876AA">filesize</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 Binary <span class="function"><strong style="color:#CC7832">fread()</strong></span> example</strong></p>    <div class="warning"><strong class="warning">警告</strong>     <p class="para">     在区分二进制文件和文本文件的系统上（如    Windows）打开文件时，<span class="function">{@link fopen()}</span> 函数的 mode 参数要加上 &#039;b&#039;。     </p>    </div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$filename </span><span style="color: #007700">= </span><span style="color: #DD0000">"c:\\files\\somepic.gif"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">, </span><span style="color: #DD0000">"rb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$contents </span><span style="color: #007700">= </span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">, </span><span style="color: #9876AA">filesize</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p>  <p class="para">   <div class="example" id="">    <p><strong>示例 #3 Remote <span class="function"><strong style="color:#CC7832">fread()</strong></span> examples</strong></p>    <div class="warning"><strong class="warning">警告</strong>     <p class="para">      当从任何不是普通本地文件读取时，例如在读取从<a href="https://www.php.net/manual/zh/features.remote-files.php" class="link">远程文件</a>或    <span class="function">{@link popen()}</span> 以及 <span class="function">{@link fsockopen()}</span>    返回的流时，读取会在一个包可用之后停止。这意味着应该如下例所示将数据收集起来合并成大块。     </p>    </div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://www.example.com/"</span><span style="color: #007700">, </span><span style="color: #DD0000">"rb"</span><span style="color: #007700">);<br />if (</span><span style="color: #9876AA">FALSE </span><span style="color: #007700">=== </span><span style="color: #9876AA">$handle</span><span style="color: #007700">) {<br />    exit(</span><span style="color: #DD0000">"Failed to open stream to URL"</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">$contents </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_get_contents</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://www.example.com/"</span><span style="color: #007700">, </span><span style="color: #DD0000">"rb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$contents </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />while (!</span><span style="color: #9876AA">feof</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">$contents </span><span style="color: #007700">.= </span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">, </span><span style="color: #9876AA">8192</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fread-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    如果只是想将一个文件的内容读入到一个字符串中，用    <span class="function">{@link file_get_contents()}</span>，它的性能比上面的代码好得多。   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    Note that <span class="function"><strong style="color:#CC7832">fread()</strong></span> reads from the current position of     the file pointer. Use <span class="function">{@link ftell()}</span> to find the current     position of the pointer and <span class="function">{@link rewind()}</span> to rewind the     pointer position.   </p>  </p></blockquote> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fread-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>    <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>    <li class="member"><span class="function">{@link fsockopen()} - 打开 Internet 或者 Unix 套接字连接</span></li>    <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>    <li class="member"><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>    <li class="member"><span class="function">{@link fgetss()} - 从文件指针中读取一行并过滤掉 HTML 标记</span></li>    <li class="member"><span class="function">{@link fscanf()} - 从文件中格式化输入</span></li>    <li class="member"><span class="function">{@link file()} - 把整个文件读入一个数组中</span></li>    <li class="member"><span class="function">{@link fpassthru()} - 输出文件指针处的所有剩余数据</span></li>    <li class="member"><span class="function">{@link fseek()} - 在文件指针中定位</span></li>    <li class="member"><span class="function">{@link ftell()} - 返回文件指针读/写的位置</span></li>    <li class="member"><span class="function">{@link rewind()} - 倒回文件指针的位置</span></li>    <li class="member"><span class="function">{@link unpack()} - Unpack data from binary string</span></li>   </ul>  </span> </div></div>
 * @return string|false the read string or false on failure.*/
function fread($stream, int $length): string|false {}

/**
*<div id="function.fopen" class="refentry"> <div class="refnamediv">  <h1 class="refname">fopen</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fopen</span> &mdash; <span class="dc-title">打开文件或者 URL</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fopen-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fopen</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$mode</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$use_include_path</span><span class="initializer"> = <strong><span>false</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$context</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">fopen()</strong></span> 将   <span class="parameter" style="color:#3A95FF">filename</span>   指定的名字资源绑定到一个流上。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fopen-parameters">  <h3 class="title">参数</h3>   <span>    <dl>           <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>      <dd>       <p class="para">        如果        <span class="parameter" style="color:#3A95FF">filename</span>        是 &quot;scheme://...&quot; 的格式，则被当成一个        URL，PHP 将搜索协议处理器（也被称为封装协议）来处理此模式。如果该协议尚未注册封装协议，PHP        将发出一条消息来帮助检查脚本中潜在的问题并将        <span class="parameter" style="color:#3A95FF">filename</span>        当成一个普通的文件名继续执行下去。       </p>       <p class="para">        如果 PHP 认为        <span class="parameter" style="color:#3A95FF">filename</span>        指定的是一个本地文件，将尝试在该文件上打开一个流。该文件必须是        PHP 可以访问的，因此需要确认文件访问权限允许该访问。如果激活了        <a href="https://www.php.net/manual/zh/ini.core.php#ini.open-basedir" class="link">open_basedir</a>        则会应用进一步的限制。       </p>       <p class="para">        如果 PHP 认为        <span class="parameter" style="color:#3A95FF">filename</span>        指定的是一个已注册的协议，而该协议被注册为一个网络        URL，PHP 将检查并确认        <a href="https://www.php.net/manual/zh/filesystem.configuration.php#ini.allow-url-fopen" class="link">allow_url_fopen</a>        已被激活。如果关闭了，PHP 将发出一个警告，而 fopen 的调用则失败。       </p>       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         <p class="para">         所支持的协议列表见<a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>。某些协议（也被称为         <span>wrappers</span>）支持         <span>context</span> 和／或 <var class="filename">php.ini</var>         选项。参见相应的页面哪些选项可以被设定（例如 <var class="filename">php.ini</var> 中用于         <span>http</span> wrapper 的 <span>user_agent</span> 值）。        </p>       </p></blockquote>       <p class="para">        On the Windows platform, be careful to escape any backslashes        used in the path to the file, or use forward slashes.        <div class="informalexample">         <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"c:\\folder\\resource.txt"</span><span style="color: #007700">, </span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>        </div>       </div>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">mode</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">mode</span>       参数指定了所要求到该流的访问类型。可以是以下：       <table class="doctable table">        <caption><strong>         <span class="function"><strong style="color:#CC7832">fopen()</strong></span> 中 <span class="parameter" style="color:#3A95FF">mode</span> 的可能值列表        </strong></caption>                 <thead>          <tr>           <th><span class="parameter" style="color:#3A95FF">mode</span></th>           <th>说明</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td><span>&#039;r&#039;</span></td>           <td>            只读方式打开，将文件指针指向文件头。           </td>          </tr>          <tr>           <td><span>&#039;r+&#039;</span></td>           <td>            读写方式打开，将文件指针指向文件头。           </td>          </tr>          <tr>           <td><span>&#039;w&#039;</span></td>           <td>            写入方式打开，将文件指针指向文件头并将文件大小截为零。如果文件不存在则尝试创建之。           </td>          </tr>          <tr>           <td><span>&#039;w+&#039;</span></td>           <td>            读写方式打开，否则行为同 <span>&#039;w&#039;</span>。           </td>          </tr>          <tr>           <td><span>&#039;a&#039;</span></td>           <td>            写入方式打开，将文件指针指向文件末尾。如果文件不存在则尝试创建之。在这种情况下，<span class="function">{@link fseek()}</span>            没有效果，写入总是追加。           </td>          </tr>          <tr>           <td><span>&#039;a+&#039;</span></td>           <td>            读写方式打开，将文件指针指向文件末尾。如果文件不存在则尝试创建之。在这种情况下，<span class="function">{@link fseek()}</span>            只相应读取位置，写入总是追加。           </td>          </tr>          <tr>           <td><span>&#039;x&#039;</span></td>           <td>            创建并以写入方式打开，将文件指针指向文件头。如果文件已存在，则            <span class="function"><strong style="color:#CC7832">fopen()</strong></span> 调用失败并返回 <strong><span>false</span></strong>，并生成一条            <strong><span>E_WARNING</span></strong> 级别的错误信息。如果文件不存在则尝试创建之。这和给            底层的 <span>open(2)</span> 系统调用指定            <span>O_EXCL|O_CREAT</span> 标记是等价的。           </td>          </tr>          <tr>           <td><span>&#039;x+&#039;</span></td>           <td>            创建并以读写方式打开，其他的行为和 <span>&#039;x&#039;</span> 一样。           </td>          </tr>          <tr>           <td><span>&#039;c&#039;</span></td>           <td>            Open the file for writing only. If the file does not exist, it is            created. If it exists, it is neither truncated (as opposed to            <span>&#039;w&#039;</span>), nor the call to this function fails (as is            the case with <span>&#039;x&#039;</span>). The file pointer is            positioned on the beginning of the file. This may be useful if it&#039;s            desired to get an advisory lock (see <span class="function">{@link flock()}</span>)            before attempting to modify the file, as using            <span>&#039;w&#039;</span> could truncate the file before the lock            was obtained (if truncation is desired,            <span class="function">{@link ftruncate()}</span> can be used after the lock is            requested).           </td>          </tr>          <tr>           <td><span>&#039;c+&#039;</span></td>           <td>            Open the file for reading and writing; otherwise it has the same            behavior as <span>&#039;c&#039;</span>.           </td>          </tr>          <tr>           <td><span>&#039;e&#039;</span></td>           <td>            Set close-on-exec flag on the opened file descriptor. Only            available in PHP compiled on POSIX.1-2008 conform systems.           </td>          </tr>         </tbody>               </table>      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        不同的操作系统家族具有不同的行结束习惯。当写入一个文本文件并想插入一个新行时，需要使用符合操作系统的行结束符号。基于        Unix 的系统使用 <span>\n</span>        作为行结束字符，基于 Windows 的系统使用 <span>\r\n</span>        作为行结束字符，基于 Macintosh 的系统（传统 Mac OS）使用 <span>\r</span>        作为行结束字符。       </p>       <p class="para">        如果写入文件时使用了错误的行结束符号，则其它应用程序打开这些文件时可能会表现得很怪异。               </p>       <p class="para">        Windows 下提供了一个文本转换标记（<span>&#039;t&#039;</span>）可以透明地将        <span>\n</span> 转换为 <span>\r\n</span>。与此对应还可以使用        <span>&#039;b&#039;</span> 来强制使用二进制模式，这样就不会转换数据。要使用这些标记，要么用        <span>&#039;b&#039;</span> 或者用 <span>&#039;t&#039;</span> 作为        <span class="parameter" style="color:#3A95FF">mode</span> 参数的最后一个字符。       </p>       <p class="para">        默认的转换模式是 <span>&#039;b&#039;</span>。如果是操作纯文本文件并在脚本中使用了        <span>\n</span> 作为行结束符，但还要期望这些文件可以被其它应用程序例如        旧版本的 Notepad 读取，则在 mode 中使用        <span>&#039;t&#039;</span>。在所有其它情况下使用 <span>&#039;b&#039;</span>。       </p>       <p class="para">        在操作二进制文件时如果指定 <span>&#039;t&#039;</span>        标记，可能会碰到一些奇怪的问题，包括坏掉的图片文件以及关于        <span>\r\n</span> 字符的奇怪问题。       </p>      </p></blockquote>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        为移植性考虑，强烈建议重写那些依赖于        <span>&#039;t&#039;</span> 模式的代码使其使用正确的行结束符并改成        <span>&#039;b&#039;</span> 模式。       </p>      </p></blockquote>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <span class="simpara">        对于 <var class="filename">php://output</var>、<var class="filename">php://input</var>、<var class="filename">php://stdin</var>、<var class="filename">php://stdout</var>、<var class="filename">php://stderr</var>        和 <var class="filename">php://fd</var> 流封装协议，会忽略 <span class="parameter" style="color:#3A95FF">mode</span>。       </span>      </p></blockquote>     </dd>             <dt><span class="parameter" style="color:#3A95FF">use_include_path</span></dt>     <dd>      <p class="para">       如果也需要在       <a href="https://www.php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a>       中搜寻文件的话，可以将可选的第三个参数       <span class="parameter" style="color:#3A95FF">use_include_path</span>       设为 &#039;1&#039; 或 <strong><span>true</span></strong>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">context</span></dt>     <dd>      <p class="para"><a href="https://www.php.net/manual/zh/stream.contexts.php" class="link">上下文流（context stream）</a><span class="type" style="color:#EAB766">resource</span>。</p>     </dd>       </dl>   </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fopen-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回文件指针资源， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.fopen-errors">  <h3 class="title">错误／异常</h3>  <p class="para">失败时抛出 <strong><span>E_WARNING</span></strong> 警告。</p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.fopen-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.0.16, 7.1.2</td>       <td>        新增 <span>&#039;e&#039;</span> 选项。       </td>      </tr>     </tbody>       </table>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fopen-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">fopen()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"/home/rasmus/file.txt"</span><span style="color: #007700">, </span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"/home/rasmus/file.gif"</span><span style="color: #007700">, </span><span style="color: #DD0000">"wb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://www.example.com/"</span><span style="color: #007700">, </span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"ftp://user:password@example.com/somefile.txt"</span><span style="color: #007700">, </span><span style="color: #DD0000">"w"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fopen-notes">  <h3 class="title">注释</h3>  <div class="warning"><strong class="warning">警告</strong><p class="para">使用 SSL 时，Microsoft IIS会违反协议不发送 <span>close_notify</span> 标记就关闭连接。PHP 会在到达数据尾端时报告“SSL: Fatal Protocol Error”。要解决此问题，<a href="https://www.php.net/manual/zh/errorfunc.configuration.php#ini.error-reporting" class="link">error_reporting</a> 应设定为降低级别至不包含警告。PHP4.3.7 及更高版本可以在使用 <span>https://</span> 包装器打开流时检测出有问题的 IIS 服务器软件 并抑制警告。在使用<span class="function">{@link fsockopen()}</span> 创建 <span>ssl://</span> 套接字时，开发者需检测并抑制此警告。</p></div>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    如果在用服务器模块版本的 PHP    时在打开和写入文件上遇到问题，记住要确保所使用的文件和目录是服务器进程所能够访问的。   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    This function may also succeed when <span class="parameter" style="color:#3A95FF">filename</span> is a    directory. If you are unsure whether <span class="parameter" style="color:#3A95FF">filename</span> is a    file or a directory, you may need to use the <span class="function">{@link is_dir()}</span>    function before calling <span class="function"><strong style="color:#CC7832">fopen()</strong></span>.     </p>  </p></blockquote> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fopen-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a></li>    <li class="member"><span class="function">{@link fclose()} - 关闭一个已打开的文件指针</span></li>    <li class="member"><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>    <li class="member"><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>    <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>    <li class="member"><span class="function">{@link fsockopen()} - 打开 Internet 或者 Unix 套接字连接</span></li>    <li class="member"><span class="function">{@link file()} - 把整个文件读入一个数组中</span></li>    <li class="member"><span class="function">{@link file_exists()} - 检查文件或目录是否存在</span></li>    <li class="member"><span class="function">{@link is_readable()} - 判断给定文件名是否可读</span></li>    <li class="member"><span class="function">{@link stream_set_timeout()} - Set timeout period on a stream</span></li>    <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>    <li class="member"><span class="function">{@link stream_context_create()} - 创建资源流上下文</span></li>    <li class="member"><span class="function">{@link umask()} - 改变当前的 umask</span></li>    <li class="member"><span class="classname"><a href="https://www.php.net/manual/zh/class.splfileobject.php" class="classname">SplFileObject</a></span></li>   </ul>  </span> </div></div>
 * @return resource|false a file pointer resource on success, or false on error.*/
function fopen(string $filename, string $mode, bool $use_include_path = false, $context) {}

/**
*<div id="function.fpassthru" class="refentry"> <div class="refnamediv">  <h1 class="refname">fpassthru</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fpassthru</span> &mdash; <span class="dc-title">输出文件指针处的所有剩余数据</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fpassthru-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fpassthru</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$stream</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   将给定的文件指针从当前的位置读取到 EOF 并把结果写到输出缓冲区。  </p>  <p class="para">   如果已经向文件写入数据，就必须调用 <span class="function">{@link rewind()}</span>   来将文件指针指向文件头。  </p>  <p class="para">   如果既不修改文件也不在特定位置检索，只想将文件的内容下载到输出缓冲区，应该使用   <span class="function">{@link readfile()}</span>，这样可以省去   <span class="function">{@link fopen()}</span> 调用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fpassthru-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">文件指针必须是有效的，必须指向由<span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fpassthru-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回从 <span class="parameter" style="color:#3A95FF">stream</span>   读取并传递到输出的字符数量。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fpassthru-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 对二进制文件使用 <span class="function"><strong style="color:#CC7832">fpassthru()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// 以二进制格式打开文件<br /></span><span style="color: #9876AA">$name </span><span style="color: #007700">= </span><span style="color: #DD0000">'./img/ok.png'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">, </span><span style="color: #DD0000">'rb'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 发送合适的报头<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Length: " </span><span style="color: #007700">. </span><span style="color: #9876AA">filesize</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">// 发送图片并终止脚本<br /></span><span style="color: #9876AA">fpassthru</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br />exit;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fpassthru-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    当在 Windows    系统中将 <span class="function"><strong style="color:#CC7832">fpassthru()</strong></span>    用于二进制文件，要确保在用    <span class="function">{@link fopen()}</span>    打开文件时在 mode 中附加了    <span>b</span> 来将文件以二进制方式打开。   </p>   <p class="para">    鼓励在处理二进制文件时使用    <span>b</span>    标志，即使系统并不需要，这样可以使脚本的移植性更好。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fpassthru-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link readfile()} - 输出文件</span></li>    <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>    <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>    <li class="member"><span class="function">{@link fsockopen()} - 打开 Internet 或者 Unix 套接字连接</span></li>   </ul>  </span> </div></div>
 * @return int|false If an error occurs, fpassthru returns*/
function fpassthru($stream) {}

/**
*<div id="function.ftruncate" class="refentry"> <div class="refnamediv">  <h1 class="refname">ftruncate</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ftruncate</span> &mdash; <span class="dc-title">将文件截断到指定的长度</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.ftruncate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>ftruncate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$stream</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$size</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   接受文件指针 <span class="parameter" style="color:#3A95FF">stream</span> 作为参数，并将文件大小截取为   <span class="parameter" style="color:#3A95FF">size</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.ftruncate-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">       文件指针。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        <span class="parameter" style="color:#3A95FF">stream</span> 必须打开写入。       </p>      </p></blockquote>     </dd>             <dt><span class="parameter" style="color:#3A95FF">size</span></dt>     <dd>      <p class="para">       截断的大小。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        If <span class="parameter" style="color:#3A95FF">size</span> is larger than the file then the file        is extended with null bytes.       </p>       <p class="para">        If <span class="parameter" style="color:#3A95FF">size</span> is smaller than the file then the file        is truncated to that size.       </p>      </p></blockquote>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.ftruncate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.ftruncate-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 文件截取示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$filename </span><span style="color: #007700">= </span><span style="color: #DD0000">'lorem_ipsum.txt'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">, </span><span style="color: #DD0000">'r+'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">ftruncate</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">, </span><span style="color: #9876AA">rand</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">filesize</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">)));<br /></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">, </span><span style="color: #9876AA">filesize</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.ftruncate-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    文件指针<em>不会</em>改变。   </p>  </p></blockquote> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.ftruncate-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>    <li class="member"><span class="function">{@link fseek()} - 在文件指针中定位</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function ftruncate($stream, int $size): bool {}

/**
*<div id="function.fstat" class="refentry"> <div class="refnamediv">  <h1 class="refname">fstat</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fstat</span> &mdash; <span class="dc-title">通过已打开的文件指针取得文件信息</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fstat-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fstat</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$stream</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   获取由文件指针 <span class="parameter" style="color:#3A95FF">stream</span>   所打开文件的统计信息。本函数和 <span class="function">{@link stat()}</span>   函数相似，除了它是作用于已打开的文件指针而不是文件名。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fstat-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">文件系统指针，是典型地由<span class="function">{@link fopen()}</span> 创建的 <span class="type" style="color:#EAB766">resource</span>(资源)。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fstat-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个数组具有该文件的统计信息，该数组的格式详细说明于手册中   <span class="function">{@link stat()}</span> 页面里。失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fstat-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">fstat()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// 打开文件<br /></span><span style="color: #9876AA">$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"/etc/passwd"</span><span style="color: #007700">, </span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 取得统计信息<br /></span><span style="color: #9876AA">$fstat </span><span style="color: #007700">= </span><span style="color: #9876AA">fstat</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 关闭文件<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 只显示关联数组部分<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">array_slice</span><span style="color: #007700">(</span><span style="color: #9876AA">$fstat</span><span style="color: #007700">, </span><span style="color: #9876AA">13</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [dev] =&gt; 771<br>    [ino] =&gt; 488704<br>    [mode] =&gt; 33188<br>    [nlink] =&gt; 1<br>    [uid] =&gt; 0<br>    [gid] =&gt; 0<br>    [rdev] =&gt; 0<br>    [size] =&gt; 1114<br>    [atime] =&gt; 1061067181<br>    [mtime] =&gt; 1056136526<br>    [ctime] =&gt; 1056136526<br>    [blksize] =&gt; 4096<br>    [blocks] =&gt; 8<br>)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fstat-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数不能作用于<a href="https://www.php.net/manual/zh/features.remote-files.php" class="link">远程文件</a>，被检查的文件必须是可通过服务器的文件系统访问的。</span></p></blockquote> </div></div>
 * @return array|false an array with the statistics of the file; the format of the array*/
function fstat($stream): array|false {}

/**
*<div id="function.fseek" class="refentry"> <div class="refnamediv">  <h1 class="refname">fseek</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fseek</span> &mdash; <span class="dc-title">在文件指针中定位</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fseek-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fseek</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$stream</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$whence</span><span class="initializer"> = <strong><span>SEEK_SET</span></strong></span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   在与 <span class="parameter" style="color:#3A95FF">stream</span> 关联的文件中设定文件指针位置。新位置从文件头开始以字节数度量，是以   <span class="parameter" style="color:#3A95FF">whence</span> 指定的位置加上 <span class="parameter" style="color:#3A95FF">offset</span>。  </p>  <p class="para">   In general, it is allowed to seek past the end-of-file; if data is then   written, reads in any unwritten region between the end-of-file and the   sought position will yield bytes with value 0. However, certain streams   may not support this behavior, especially when they have an underlying   fixed size storage.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fseek-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">文件系统指针，是典型地由<span class="function">{@link fopen()}</span> 创建的 <span class="type" style="color:#EAB766">resource</span>(资源)。</p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       偏移量。      </p>      <p class="para">       要移动到文件尾之前的位置，需要给 <span class="parameter" style="color:#3A95FF">offset</span> 传递一个负值，并设置       <span class="parameter" style="color:#3A95FF">whence</span> 为 <strong><span>SEEK_END</span></strong>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">whence</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">whence</span> 值是：       <ul class="simplelist">        <li class="member"><strong><span>SEEK_SET</span></strong> - 设定位置等于 <span class="parameter" style="color:#3A95FF">offset</span> 字节。</li>        <li class="member"><strong><span>SEEK_CUR</span></strong> - 设定位置为当前位置加上 <span class="parameter" style="color:#3A95FF">offset</span>。</li>        <li class="member"><strong><span>SEEK_END</span></strong> - 设定位置为文件尾加上 <span class="parameter" style="color:#3A95FF">offset</span>。</li>       </ul>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fseek-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    成功则返回 0；否则返回 -1。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fseek-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">fseek()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'somefile.txt'</span><span style="color: #007700">, </span><span style="color: #DD0000">'r'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// read some data<br /></span><span style="color: #9876AA">$data </span><span style="color: #007700">= </span><span style="color: #9876AA">fgets</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">4096</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// move back to the beginning of the file<br />// same as rewind($fp);<br /></span><span style="color: #9876AA">fseek</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fseek-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    如果使用附加模试（<span>a</span> 或    <span>a+</span>），任何写入文件数据都会被附加上去，而文件的位置将会被忽略，调用    <span class="function"><strong style="color:#CC7832">fseek()</strong></span> 的结果尚未定义。   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    Not all streams support seeking. For those that do not support seeking,    forward seeking from the current position is accomplished by reading    and discarding data; other forms of seeking will fail.   </p>  </p></blockquote> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fseek-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link ftell()} - 返回文件指针读/写的位置</span></li>    <li class="member"><span class="function">{@link rewind()} - 倒回文件指针的位置</span></li>   </ul>  </span> </div> </div>
 * @return int Upon success, returns 0; otherwise, returns -1. Note that seeking*/
function fseek($stream, int $offset, int $whence = SEEK_SET): int {}

/**
*<div id="function.ftell" class="refentry"> <div class="refnamediv">  <h1 class="refname">ftell</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">ftell</span> &mdash; <span class="dc-title">返回文件指针读/写的位置</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.ftell-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>ftell</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$stream</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   返回由 <span class="parameter" style="color:#3A95FF">stream</span> 指定的文件指针的位置，也就是文件流中的偏移量。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.ftell-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">       文件指针必须是有效的，且必须指向一个通过 <span class="function">{@link fopen()}</span>       或 <span class="function">{@link popen()}</span> 成功打开的文件。在附加模式（加参数 &quot;a&quot; 打开文件）中 <span class="function"><strong style="color:#CC7832">ftell()</strong></span>       会返回未定义错误。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.ftell-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   以整数形式返回由 <span class="parameter" style="color:#3A95FF">stream</span> 引用的文件指针的位置，即文件流中的偏移量。  </p>  <p class="para">   如果出错，返回 <strong><span>false</span></strong>。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">因为 PHP 的整数类型是有符号整型而且很多平台使用 32 位整型，对 2GB以上的文件，一些文件系统函数可能返回无法预期的结果。</span></p></blockquote> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.ftell-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ftell()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// opens a file and read some data<br /></span><span style="color: #9876AA">$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"/etc/passwd"</span><span style="color: #007700">, </span><span style="color: #DD0000">"r"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$data </span><span style="color: #007700">= </span><span style="color: #9876AA">fgets</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">12</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// where are we ?<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">ftell</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">); </span><span style="color: #FF8000">// 11<br /><br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.ftell-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>    <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>    <li class="member"><span class="function">{@link fseek()} - 在文件指针中定位</span></li>    <li class="member"><span class="function">{@link rewind()} - 倒回文件指针的位置</span></li>   </ul>  </span> </div></div>
 * @return int|false the position of the file pointer referenced by*/
function ftell($stream): int|false {}

/**
*<div id="function.fflush" class="refentry"> <div class="refnamediv">  <h1 class="refname">fflush</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.1, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fflush</span> &mdash; <span class="dc-title">将缓冲内容输出到文件</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fflush-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fflush</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$stream</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   本函数强制将所有缓冲的输出写入   <span class="parameter" style="color:#3A95FF">stream</span> 文件句柄所指向的资源。   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p>  <p class="para">文件指针必须是有效的，必须指向由<span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fflush-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">文件指针必须是有效的，必须指向由<span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fflush-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fflush-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 File write example using <span class="function"><strong style="color:#CC7832">fflush()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$filename </span><span style="color: #007700">= </span><span style="color: #DD0000">'bar.txt'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$file </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">, </span><span style="color: #DD0000">'r+'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">, </span><span style="color: #DD0000">'Foo'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fflush</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">ftruncate</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">, </span><span style="color: #9876AA">ftell</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fflush-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link clearstatcache()} - 清除文件状态缓存</span></li>    <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function fflush($stream): bool {}

/**
*<div id="function.fsync" class="refentry"> <div class="refnamediv">  <h1 class="refname">fsync</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.0)</p><p class="refpurpose"><span class="refname">fsync</span> &mdash; <span class="dc-title">同步文件变更（包括元数据）</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fsync-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fsync</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$stream</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   此函数同步文件变更，包括元数据。与 <span class="function">{@link fflush()}</span> 类似，但同时还让操作系统将变更写入到存储介质。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fsync-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">文件指针必须是有效的，必须指向由<span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fsync-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fsync-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">fsync()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$file </span><span style="color: #007700">= </span><span style="color: #DD0000">'test.txt'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$stream </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">, </span><span style="color: #DD0000">'w'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">, </span><span style="color: #DD0000">'test data'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">, </span><span style="color: #DD0000">"\r\n"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">, </span><span style="color: #DD0000">'additional data'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">fsync</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fsync-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fdatasync()} - 同步文件数据（不包含元数据）</span></li>    <li class="member"><span class="function">{@link fflush()} - 将缓冲内容输出到文件</span></li>   </ul>  </span> </div></div>
*/
function fsync($stream): bool {}

/**
*<div id="function.fdatasync" class="refentry"> <div class="refnamediv">  <h1 class="refname">fdatasync</h1>  <p class="verinfo">(PHP 8 &gt;= 8.1.0)</p><p class="refpurpose"><span class="refname">fdatasync</span> &mdash; <span class="dc-title">同步文件数据（不包含元数据）</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fdatasync-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fdatasync</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$stream</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   此函数同步 <span class="parameter" style="color:#3A95FF">stream</span> 的内容到存储介质，就像是 <span class="function">{@link fsync()}</span>    所做的那样，但不会同步文件元数据。注意，此函数仅在 POSIX 系统中有实际区别。在 Windows 中，是 <span class="function">{@link fsync()}</span>    的别名。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fdatasync-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">文件指针必须是有效的，必须指向由<span class="function">{@link fopen()}</span> 或 <span class="function">{@link fsockopen()}</span> 成功打开的文件(并还未由 <span class="function">{@link fclose()}</span> 关闭)。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fdatasync-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fdatasync-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">fdatasync()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$file </span><span style="color: #007700">= </span><span style="color: #DD0000">'test.txt'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$stream </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">, </span><span style="color: #DD0000">'w'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">, </span><span style="color: #DD0000">'test data'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">, </span><span style="color: #DD0000">"\r\n"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">, </span><span style="color: #DD0000">'additional data'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">fdatasync</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fdatasync-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fflush()} - 将缓冲内容输出到文件</span></li>    <li class="member"><span class="function">{@link fsync()} - 同步文件变更（包括元数据）</span></li>   </ul>  </span> </div></div>
*/
function fdatasync($stream): bool {}

/**
*<div id="function.fwrite" class="refentry"> <div class="refnamediv">  <h1 class="refname">fwrite</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fwrite</span> &mdash; <span class="dc-title">写入文件（可安全用于二进制文件）</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fwrite-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fwrite</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$stream</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$data</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$length</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="simpara">   <span class="function"><strong style="color:#CC7832">fwrite()</strong></span> 把 <span class="parameter" style="color:#3A95FF">data</span> 的内容写入   文件指针 <span class="parameter" style="color:#3A95FF">stream</span> 处。   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fwrite-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stream</span></dt>     <dd>      <p class="para">文件系统指针，是典型地由<span class="function">{@link fopen()}</span> 创建的 <span class="type" style="color:#EAB766">resource</span>(资源)。</p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       要写入的字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">length</span> 是 <span class="type" style="color:#EAB766">int</span>，当写入了       <span class="parameter" style="color:#3A95FF">length</span> 个字节或者写完了 <span class="parameter" style="color:#3A95FF">string</span>       以后，写入就会停止，看先碰到哪种情况。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fwrite-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   <span class="function"><strong style="color:#CC7832">fwrite()</strong></span> 返回写入的字符数， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.fwrite-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   <span class="function"><strong style="color:#CC7832">fwrite()</strong></span> 失败时会引发 <strong><span>E_WARNING</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.fwrite-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">length</span> 可以为 null。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fwrite-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 简单的 <span class="function"><strong style="color:#CC7832">fwrite()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$filename </span><span style="color: #007700">= </span><span style="color: #DD0000">'test.txt'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$somecontent </span><span style="color: #007700">= </span><span style="color: #DD0000">"Add this to the file\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// 首先确认文件存在且可写。<br /></span><span style="color: #007700">if (</span><span style="color: #9876AA">is_writable</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">)) {<br /><br />    </span><span style="color: #FF8000">// 在示例中，使用追加模式打开 $filename。<br />    // 文件指针应该在文件的末尾，<br />    // 那就是使用 fwrite() 写入 $somecontent 的地方。<br />    </span><span style="color: #007700">if (!</span><span style="color: #9876AA">$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">, </span><span style="color: #DD0000">'a'</span><span style="color: #007700">)) {<br />         echo </span><span style="color: #DD0000">"Cannot open file (</span><span style="color: #9876AA">$filename</span><span style="color: #DD0000">)"</span><span style="color: #007700">;<br />         exit;<br />    }<br /><br />    </span><span style="color: #FF8000">// 将 $somecontent 写入到打开的文件。<br />    </span><span style="color: #007700">if (</span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">$somecontent</span><span style="color: #007700">) === </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">) {<br />        echo </span><span style="color: #DD0000">"Cannot write to file (</span><span style="color: #9876AA">$filename</span><span style="color: #DD0000">)"</span><span style="color: #007700">;<br />        exit;<br />    }<br /><br />    echo </span><span style="color: #DD0000">"Success, wrote (</span><span style="color: #9876AA">$somecontent</span><span style="color: #DD0000">) to file (</span><span style="color: #9876AA">$filename</span><span style="color: #DD0000">)"</span><span style="color: #007700">;<br /><br />    </span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /><br />} else {<br />    echo </span><span style="color: #DD0000">"The file </span><span style="color: #9876AA">$filename</span><span style="color: #DD0000"> is not writable"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fwrite-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    Writing to a network stream may end before the whole string is written.    Return value of <span class="function"><strong style="color:#CC7832">fwrite()</strong></span> may be checked:    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">fwrite_stream</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">$string</span><span style="color: #007700">) {<br />    for (</span><span style="color: #9876AA">$written </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$written </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$string</span><span style="color: #007700">); </span><span style="color: #9876AA">$written </span><span style="color: #007700">+= </span><span style="color: #9876AA">$fwrite</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$fwrite </span><span style="color: #007700">= </span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$string</span><span style="color: #007700">, </span><span style="color: #9876AA">$written</span><span style="color: #007700">));<br />        if (</span><span style="color: #9876AA">$fwrite </span><span style="color: #007700">=== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br />            return </span><span style="color: #9876AA">$written</span><span style="color: #007700">;<br />        }<br />    }<br />    return </span><span style="color: #9876AA">$written</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </p>  </p></blockquote>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    在区分二进制文件和文本文件的系统上（如 Windows）    打开文件时，<span class="function">{@link fopen()}</span> 函数的 mode 参数要加上 &#039;b&#039;。   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    如果 <span class="parameter" style="color:#3A95FF">stream</span> 是 <span class="function">{@link fopen()}</span>    追加模式，<span class="function"><strong style="color:#CC7832">fwrite()</strong></span> 是原子操作（unless the size of    <span class="parameter" style="color:#3A95FF">data</span> exceeds the filesystem&#039;s block size, on some    platforms, and as long as the file is on a local filesystem）。也就是说，在调用    <span class="function"><strong style="color:#CC7832">fwrite()</strong></span> 之前不需要 <span class="function">{@link flock()}</span>    资源；所有的数据都将会不间断写入。   </p>  </p></blockquote>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    如果向文件指针写入两次，然后数据将追加到文件内容的末尾：    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'data.txt'</span><span style="color: #007700">, </span><span style="color: #DD0000">'w'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">, </span><span style="color: #DD0000">'1'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">, </span><span style="color: #DD0000">'23'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// “data.txt”的内容是 123 而不是 23！<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </p>  </p></blockquote> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fwrite-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>    <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>    <li class="member"><span class="function">{@link fsockopen()} - 打开 Internet 或者 Unix 套接字连接</span></li>    <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>    <li class="member"><span class="function">{@link file_get_contents()} - 将整个文件读入一个字符串</span></li>    <li class="member"><span class="function">{@link pack()} - 将数据打包成二进制字符串</span></li>   </ul>  </span> </div> </div>
 * @return int|false the number of bytes written, or <b>FALSE</b> on error.*/
function fwrite($stream, string $data, ?int $length): int|false {}

/**
*<div id="function.fputs" class="refentry"> <div class="refnamediv">  <h1 class="refname">fputs</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">fputs</span> &mdash; <span class="dc-title"><span class="function">{@link fwrite()}</span> 的别名</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fputs-description">  <h3 class="title">说明</h3>  <p class="simpara">   此函数是该函数的别名：<span class="function">{@link fwrite()}</span>。  </p> </div></div>
 * @return int|false the number of bytes written, or <b>FALSE</b> on error.*/
function fputs($stream, string $data, ?int $length): int|false {}

/**
*<div id="function.mkdir" class="refentry"> <div class="refnamediv">  <h1 class="refname">mkdir</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mkdir</span> &mdash; <span class="dc-title">新建目录</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mkdir-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mkdir</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$directory</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$permissions</span><span class="initializer"> = 0777</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$recursive</span><span class="initializer"> = <strong><span>false</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$context</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   尝试新建由 <span class="parameter" style="color:#3A95FF">directory</span> 指定的目录。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mkdir-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">directory</span></dt>     <dd>      <p class="para">       目录的路径。<div class="tip"><strong class="tip">小技巧</strong><p class="simpara">如已启用<a href="https://www.php.net/manual/zh/filesystem.configuration.php#ini.allow-url-fopen" class="link">fopen 包装器</a>，在此函数中， URL 可作为文件名。关于如何指定文件名详见 <span class="function">{@link fopen()}</span>。各种wapper 的不同功能请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>，注意其用法及其可提供的预定义变量。</p></div>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">permissions</span></dt>     <dd>      <p class="para">       默认权限是 0777，意味着最大可能的访问权。有关权限的更多信息请阅读 <span class="function">{@link chmod()}</span> 页面。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        <span class="parameter" style="color:#3A95FF">permissions</span> 在 Windows 下被忽略。       </p>      </p></blockquote>      <p class="para">       注意也许想用八进制数指定       <span class="parameter" style="color:#3A95FF">permissions</span>，也就是说该数应以零打头。<span class="parameter" style="color:#3A95FF">permissions</span>       也会被当前的 umask 修改，可以用 <span class="function">{@link umask()}</span> 来改变。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">recursive</span></dt>     <dd>      <p class="para">       如果为 <strong><span>true</span></strong>，还将会创建指定 <span class="parameter" style="color:#3A95FF">directory</span> 的任何父级目录，并具有相同的权限。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">context</span></dt>     <dd>      <p class="para"><a href="https://www.php.net/manual/zh/stream.contexts.php" class="link">上下文流（context stream）</a><span class="type" style="color:#EAB766">resource</span>。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mkdir-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    如果创建的目录已存在，则视为错误，仍然返回 <strong><span>false</span></strong>。在尝试创建之前，使用    <span class="function">{@link is_dir()}</span> 或者 <span class="function">{@link file_exists()}</span>    检查目录是否已经存在。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.mkdir-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   目录已存在时，产生 <strong><span>E_WARNING</span></strong> 错误。  </p>  <p class="para">   如果因为权限问题无法创建目录，导致 <strong><span>E_WARNING</span></strong> 错误。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mkdir-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mkdir()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />mkdir</span><span style="color: #007700">(</span><span style="color: #DD0000">"/path/to/my/dir"</span><span style="color: #007700">, </span><span style="color: #9876AA">0700</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 通过 <span class="parameter" style="color:#3A95FF">recursive</span> 参数使用 <span class="function"><strong style="color:#CC7832">mkdir()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 期望的目录结构<br /></span><span style="color: #9876AA">$structure </span><span style="color: #007700">= </span><span style="color: #DD0000">'./depth1/depth2/depth3/'</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// 要创建嵌套结构，必须指定 mkdir()<br />// 的 $recursive 参数。<br /><br /></span><span style="color: #007700">if (!</span><span style="color: #9876AA">mkdir</span><span style="color: #007700">(</span><span style="color: #9876AA">$structure</span><span style="color: #007700">, </span><span style="color: #9876AA">0777</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">)) {<br />    die(</span><span style="color: #DD0000">'Failed to create directories...'</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">// ...<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mkdir-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link is_dir()} - 判断给定文件名是否是一个目录</span></li>        <li class="member"><span class="function">{@link rmdir()} - 删除目录</span></li>    <li class="member"><span class="function">{@link umask()} - 改变当前的 umask</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function mkdir(string $directory, int $permissions = 0777, bool $recursive = false, $context): bool {}

/**
*<div id="function.rename" class="refentry"> <div class="refnamediv">  <h1 class="refname">rename</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">rename</span> &mdash; <span class="dc-title">重命名一个文件或目录</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.rename-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>rename</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$from</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$to</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$context</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   尝试把 <span class="parameter" style="color:#3A95FF">from</span> 重命名为   <span class="parameter" style="color:#3A95FF">to</span>，必要时会在不同目录间移动。   如果重命名文件时 <span class="parameter" style="color:#3A95FF">to</span> 已经存在，将会覆盖掉它。   如果重命名文件夹时   <span class="parameter" style="color:#3A95FF">to</span> 已经存在，本函数将导致一个警告。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.rename-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">from</span></dt>     <dd>      <p class="para">       原名      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        用于 <span class="parameter" style="color:#3A95FF">from</span> 中的封装协议<em>必须</em>和用于        <span class="parameter" style="color:#3A95FF">to</span> 中的相匹配。       </p>      </p></blockquote>     </dd>             <dt><span class="parameter" style="color:#3A95FF">to</span></dt>     <dd>      <p class="para">       新的名字。       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         <span class="simpara">         在 Windows 上，如果 <span class="parameter" style="color:#3A95FF">to</span> 已经存在，它必须是可写的。         否则 <span class="function"><strong style="color:#CC7832">rename()</strong></span> 将失败，并导致 <strong><span>E_WARNING</span></strong>。        </span>       </p></blockquote>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">context</span></dt>     <dd>      <p class="para"><a href="https://www.php.net/manual/zh/stream.contexts.php" class="link">上下文流（context stream）</a><span class="type" style="color:#EAB766">resource</span>。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.rename-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.rename-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">rename()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />rename</span><span style="color: #007700">(</span><span style="color: #DD0000">"/tmp/tmp_file.txt"</span><span style="color: #007700">, </span><span style="color: #DD0000">"/home/user/login/docs/my_file.txt"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.rename-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link copy()} - 拷贝文件</span></li>    <li class="member"><span class="function">{@link unlink()} - 删除文件</span></li>    <li class="member"><span class="function">{@link move_uploaded_file()} - 将上传的文件移动到新位置</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function rename(string $from, string $to, $context): bool {}

/**
*<div id="function.copy" class="refentry"> <div class="refnamediv">  <h1 class="refname">copy</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">copy</span> &mdash; <span class="dc-title">拷贝文件</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.copy-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>copy</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$from</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$to</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$context</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   将文件从 <span class="parameter" style="color:#3A95FF">from</span> 拷贝到 <span class="parameter" style="color:#3A95FF">to</span>。  </p>  <p class="para">   如果要移动文件的话，请使用 <span class="function">{@link rename()}</span> 函数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.copy-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">from</span></dt>     <dd>      <p class="para">       源文件路径。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">to</span></dt>     <dd>      <p class="para">       目标路径。如果 <span class="parameter" style="color:#3A95FF">to</span> 是一个 URL，则如果封装协议不支持覆盖已有的文件时拷贝操作会失败。      </p>      <div class="warning"><strong class="warning">警告</strong>       <p class="para">       如果目标文件已存在，将会被覆盖。       </p>      </div>     </dd>             <dt><span class="parameter" style="color:#3A95FF">context</span></dt>     <dd>      <p class="para">       A valid context resource created with        <span class="function">{@link stream_context_create()}</span>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.copy-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.copy-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">copy()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$file </span><span style="color: #007700">= </span><span style="color: #DD0000">'example.txt'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$newfile </span><span style="color: #007700">= </span><span style="color: #DD0000">'example.txt.bak'</span><span style="color: #007700">;<br /><br />if (!</span><span style="color: #9876AA">copy</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">, </span><span style="color: #9876AA">$newfile</span><span style="color: #007700">)) {<br />    echo </span><span style="color: #DD0000">"failed to copy </span><span style="color: #9876AA">$file</span><span style="color: #DD0000">...\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.copy-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link move_uploaded_file()} - 将上传的文件移动到新位置</span></li>    <li class="member"><span class="function">{@link rename()} - 重命名一个文件或目录</span></li>    <li class="member">The section of the manual about <a href="https://www.php.net/manual/zh/features.file-upload.php" class="link">handling file uploads</a></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function copy(string $from, string $to, $context): bool {}

/**
*<div id="function.tempnam" class="refentry"> <div class="refnamediv">  <h1 class="refname">tempnam</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">tempnam</span> &mdash; <span class="dc-title">建立一个具有唯一文件名的文件</span></p> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.tempnam-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>tempnam</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$directory</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$prefix</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   在指定目录中建立一个具有唯一文件名的文件。如果该目录不存在或不可写，<span class="function"><strong style="color:#CC7832">tempnam()</strong></span>   会在系统临时目录中生成一个文件，并返回该文件包含文件名的完整路径。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.tempnam-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">directory</span></dt>     <dd>      <p class="para">       将在其中创建临时文件名的目录。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">prefix</span></dt>     <dd>      <p class="para">       产生临时文件的前缀。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <span class="simpara">        仅使用前缀的前 63 个字符，忽略其它字符。Windows 仅使用前缀的前三个字符。       </span>      </p></blockquote>     </dd>       </dl>  </span> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.tempnam-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回新的带路径的临时文件名，出错返回 <strong><span>false</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.tempnam-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.1.0</td>      <td>       当回退到系统的临时目录时 <span class="function"><strong style="color:#CC7832">tempnam()</strong></span> 会发出一个通知。      </td>     </tr>    </tbody>     </table> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.tempnam-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">tempnam()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$tmpfname </span><span style="color: #007700">= </span><span style="color: #9876AA">tempnam</span><span style="color: #007700">(</span><span style="color: #DD0000">"/tmp"</span><span style="color: #007700">, </span><span style="color: #DD0000">"FOO"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$handle </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$tmpfname</span><span style="color: #007700">, </span><span style="color: #DD0000">"w"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">, </span><span style="color: #DD0000">"writing to tempfile"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$handle</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// do something here<br /><br /></span><span style="color: #9876AA">unlink</span><span style="color: #007700">(</span><span style="color: #9876AA">$tmpfname</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.tempnam-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    如果 PHP 不能在指定的 <span class="parameter" style="color:#3A95FF">directory</span>参数中创建文件，则退回到系统默认值。在    NTFS 文件系统中，同样的情况也发生在 <span class="parameter" style="color:#3A95FF">directory</span> 中文件数超过 65534 个的时候。   </span>  </p></blockquote> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.tempnam-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link tmpfile()} - 建立一个临时文件</span></li>    <li class="member"><span class="function">{@link sys_get_temp_dir()} - 返回用于临时文件的目录</span></li>    <li class="member"><span class="function">{@link unlink()} - 删除文件</span></li>   </ul>  </span> </div></div>
 * @return string|false the new temporary filename, or false on*/
function tempnam(string $directory, string $prefix): string|false {}

/**
*<div id="function.tmpfile" class="refentry"> <div class="refnamediv">  <h1 class="refname">tmpfile</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">tmpfile</span> &mdash; <span class="dc-title">建立一个临时文件</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.tmpfile-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>tmpfile</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   以读写二进制（w+b）模式创建一个具有唯一文件名的临时文件，然后返回该文件的句柄。  </p>  <p class="para">   文件在关闭后（例如，调用 <span class="function">{@link fclose()}</span> 或 <span class="function"><strong style="color:#CC7832">tmpfile()</strong></span>   返回的文件句柄已无引用的情况）或脚本运行结束后，会自动删除。  </p>  <div class="caution"><strong class="caution">警告</strong>   <p class="simpara">    如果脚本运行被意外终止，可能不会删除该临时文件。   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.tmpfile-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.tmpfile-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回新文件的句柄，类似于 <span class="function">{@link fopen()}</span> 返回的文件句柄， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.tmpfile-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">tmpfile()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$temp </span><span style="color: #007700">= </span><span style="color: #9876AA">tmpfile</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$temp</span><span style="color: #007700">, </span><span style="color: #DD0000">"writing to tempfile"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fseek</span><span style="color: #007700">(</span><span style="color: #9876AA">$temp</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$temp</span><span style="color: #007700">, </span><span style="color: #9876AA">1024</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$temp</span><span style="color: #007700">); </span><span style="color: #FF8000">// this removes the file<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>writing to tempfile<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.tmpfile-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link tempnam()} - 建立一个具有唯一文件名的文件</span></li>    <li class="member"><span class="function">{@link sys_get_temp_dir()} - 返回用于临时文件的目录</span></li>   </ul>  </span> </div></div>
 * @return resource|false a file handle, similar to the one returned by*/
function tmpfile() {}

/**
*<div id="function.file" class="refentry"> <div class="refnamediv">  <h1 class="refname">file</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">file</span> &mdash; <span class="dc-title">把整个文件读入一个数组中</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.file-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>file</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = 0</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$context</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   把整个文件读入一个数组中。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    你可以通过 <span class="function">{@link file_get_contents()}</span> 以字符串形式获取文件的内容。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.file-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件的路径。      </p>      <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">如已启用<a href="https://www.php.net/manual/zh/filesystem.configuration.php#ini.allow-url-fopen" class="link">fopen 包装器</a>，在此函数中， URL 可作为文件名。关于如何指定文件名详见 <span class="function">{@link fopen()}</span>。各种wapper 的不同功能请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>，注意其用法及其可提供的预定义变量。</p></div>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       可选参数 <span class="parameter" style="color:#3A95FF">flags</span> 可以是以下一个或多个常量：       <dl>                 <dt>          <strong><span>FILE_USE_INCLUDE_PATH</span></strong>         </dt>         <dd>          <span class="simpara">           在 <a href="https://www.php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a> 中查找文件。          </span>         </dd>                         <dt>          <strong><span>FILE_IGNORE_NEW_LINES</span></strong>         </dt>         <dd>          <span class="simpara">           省略数组中每个元素末尾的换行符          </span>         </dd>                         <dt>          <strong><span>FILE_SKIP_EMPTY_LINES</span></strong>         </dt>         <dd>          <span class="simpara">           跳过空行          </span>         </dd>                         <dt>          <strong><span>FILE_NO_DEFAULT_CONTEXT</span></strong>         </dt>         <dd>          <span class="simpara">           不使用默认的上下文          </span>         </dd>               </dl>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">context</span></dt>     <dd>       <p class="para"><a href="https://www.php.net/manual/zh/stream.contexts.php" class="link">上下文流（context stream）</a><span class="type" style="color:#EAB766">resource</span>。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.file-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回数组形式的文件内容。数组的每个元素对应于文件中的一行（结尾会附加换行符）。   失败时，<span class="function"><strong style="color:#CC7832">file()</strong></span> 返回 <strong><span>false</span></strong>。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    除非使用了 <strong><span>FILE_IGNORE_NEW_LINES</span></strong> ，否则结果数组中的每一行都将包含行尾。   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">在读取在 Macintosh 电脑中或由其创建的文件时， 如果 PHP不能正确的识别行结束符，启用运行时配置可选项 <a href="https://www.php.net/manual/zh/filesystem.configuration.php#ini.auto-detect-line-endings" class="link">auto_detect_line_endings</a>也许可以解决此问题。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.file-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果文件不存在，则发出 <strong><span>E_WARNING</span></strong> 级错误。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.file-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">file()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 将一个文件读入数组。本例中通过 HTTP 从 URL 中取得 HTML 源文件。<br /><br /></span><span style="color: #9876AA">$lines </span><span style="color: #007700">= </span><span style="color: #9876AA">file</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com/'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 在数组中循环，显示 HTML 的源文件并加上行号。<br /><br /></span><span style="color: #007700">foreach (</span><span style="color: #9876AA">$lines </span><span style="color: #007700">as </span><span style="color: #9876AA">$line_num </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$line</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"Line #&lt;b&gt;</span><span style="color: #007700">{</span><span style="color: #9876AA">$line_num</span><span style="color: #007700">}</span><span style="color: #DD0000">&lt;/b&gt; : " </span><span style="color: #007700">. </span><span style="color: #9876AA">htmlspecialchars</span><span style="color: #007700">(</span><span style="color: #9876AA">$line</span><span style="color: #007700">) . </span><span style="color: #DD0000">"&lt;br /&gt;\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #FF8000">// 使用可选的 flags 参数<br /></span><span style="color: #9876AA">$trimmed </span><span style="color: #007700">= </span><span style="color: #9876AA">file</span><span style="color: #007700">(</span><span style="color: #DD0000">'somefile.txt'</span><span style="color: #007700">, </span><span style="color: #9876AA">FILE_IGNORE_NEW_LINES </span><span style="color: #007700">| </span><span style="color: #9876AA">FILE_SKIP_EMPTY_LINES</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.file-notes">  <h3 class="title">注释</h3>  <div class="warning"><strong class="warning">警告</strong><p class="para">使用 SSL 时，Microsoft IIS会违反协议不发送 <span>close_notify</span> 标记就关闭连接。PHP 会在到达数据尾端时报告“SSL: Fatal Protocol Error”。要解决此问题，<a href="https://www.php.net/manual/zh/errorfunc.configuration.php#ini.error-reporting" class="link">error_reporting</a> 应设定为降低级别至不包含警告。PHP4.3.7 及更高版本可以在使用 <span>https://</span> 包装器打开流时检测出有问题的 IIS 服务器软件 并抑制警告。在使用<span class="function">{@link fsockopen()}</span> 创建 <span>ssl://</span> 套接字时，开发者需检测并抑制此警告。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.file-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link file_get_contents()} - 将整个文件读入一个字符串</span></li>    <li class="member"><span class="function">{@link readfile()} - 输出文件</span></li>    <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>    <li class="member"><span class="function">{@link fsockopen()} - 打开 Internet 或者 Unix 套接字连接</span></li>    <li class="member"><span class="function">{@link popen()} - 打开进程文件指针</span></li>    <li class="member"><span class="function">{@link include} - include</span></li>    <li class="member"><span class="function">{@link stream_context_create()} - 创建资源流上下文</span></li>   </ul>  </span> </div></div>
 * @return array|false the file in an array. Each element of the array corresponds to a*/
function file(string $filename, int $flags = 0, $context): array|false {}

/**
*<div id="function.file-get-contents" class="refentry"> <div class="refnamediv">  <h1 class="refname">file_get_contents</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">file_get_contents</span> &mdash; <span class="dc-title">将整个文件读入一个字符串</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.file-get-contents-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>file_get_contents</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$use_include_path</span><span class="initializer"> = <strong><span>false</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$context</span><span class="initializer"> = <strong><span>null</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$length</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   和 <span class="function">{@link file()}</span> 一样，只除了   <span class="function"><strong style="color:#CC7832">file_get_contents()</strong></span> 把文件读入一个字符串。将在参数   <span class="parameter" style="color:#3A95FF">offset</span> 所指定的位置开始读取长度为   <span class="parameter" style="color:#3A95FF">length</span> 的内容。如果失败，<span class="function"><strong style="color:#CC7832">file_get_contents()</strong></span>   将返回 <strong><span>false</span></strong>。  </p>  <p class="para">   <span class="function"><strong style="color:#CC7832">file_get_contents()</strong></span>   函数是用来将文件的内容读入到一个字符串中的首选方法。如果操作系统支持还会使用内存映射技术来增强性能。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    如果要打开有特殊字符的 URL （比如说有空格），就需要使用    <span class="function">{@link urlencode()}</span> 进行 URL 编码。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.file-get-contents-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       要读取的文件的名称。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">use_include_path</span></dt>     <dd>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        常量 <strong><span>FILE_USE_INCLUDE_PATH</span></strong> 用于触发搜索        <a href="https://www.php.net/manual/zh/ini.core.php#ini.include-path" class="link">include path</a>。        因为 <strong><span>FILE_USE_INCLUDE_PATH</span></strong> 是个 <span class="type" style="color:#EAB766">int</span>，如果开启了<a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.strict" class="link">严格类型</a> 将无法启用。        所以要用 <strong><span>true</span></strong> 来代替常量。       </p>      </p></blockquote>     </dd>             <dt><span class="parameter" style="color:#3A95FF">context</span></dt>     <dd>      <p class="para">       <span class="function">{@link stream_context_create()}</span> 创建的有效的上下文（context）资源。       如果你不需要自定义 context，可以用 <strong><span>null</span></strong> 来忽略。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       读取原始数据流的开始位置偏移量。负的 offset 会从数据流的末尾开始统计。      </p>      <p class="para">       远程文件不支持偏移量寻址（<span class="parameter" style="color:#3A95FF">offset</span>）。       对远程文件以较小的 offset 可能可以正常寻址，       但由于是对缓冲流进行操作，所以操作结果不可预测。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">       要读取数据的最大长度。       默认情况下会读到文件末尾。       注意，该参数会应用到处理 stream 的过滤器（filter）中。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.file-get-contents-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   函数返回读取到的数据， 或者在失败时返回 <strong><span>false</span></strong>。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数可能返回布尔值<strong><span>false</span></strong>，但也可能返回等同于 <strong><span>false</span></strong> 的非布尔值。请阅读 <a href="https://www.php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用<a href="https://www.php.net/manual/zh/language.operators.comparison.php" class="link">===运算符</a>来测试此函数的返回值。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.file-get-contents-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   以下情况会导致 <strong><span>E_WARNING</span></strong> 级别错误：   无法找到 <span class="parameter" style="color:#3A95FF">filename</span> 文件；   <span class="parameter" style="color:#3A95FF">length</span> 小于零；   在 steam 中无法寻址偏移量 <span class="parameter" style="color:#3A95FF">offset</span>。  </p>  <p class="para">   Windows 下用 <span class="function"><strong style="color:#CC7832">file_get_contents()</strong></span> 读取目录会导致 <strong><span>E_WARNING</span></strong> 错误。   PHP 7.4 起，其他操作系统也会出现同样错误。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.file-get-contents-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        现在 <span class="parameter" style="color:#3A95FF">length</span> 允许为 null。       </td>      </tr>      <tr>       <td>7.1.0</td>       <td>        支持负数 <span class="parameter" style="color:#3A95FF">offset</span>。       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.file-get-contents-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 获取并输出网站首页 HTML 源码</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$homepage </span><span style="color: #007700">= </span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com/'</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$homepage</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>   <div class="example" id="">    <p><strong>示例 #2 在 include_path 里搜索</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 如果开启了严格类型，例如 declare(strict_types=1);<br /></span><span style="color: #9876AA">$file </span><span style="color: #007700">= </span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'./people.txt'</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">// 否则就这样写<br /></span><span style="color: #9876AA">$file </span><span style="color: #007700">= </span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'./people.txt'</span><span style="color: #007700">, </span><span style="color: #9876AA">FILE_USE_INCLUDE_PATH</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>   <div class="example" id="">    <p><strong>示例 #3 读取文件一小节</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 从第 21 个字符开始，读取 14 字符长度<br /></span><span style="color: #9876AA">$section </span><span style="color: #007700">= </span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'./people.txt'</span><span style="color: #007700">, </span><span style="color: #9876AA">FALSE</span><span style="color: #007700">, </span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #9876AA">20</span><span style="color: #007700">, </span><span style="color: #9876AA">14</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$section</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>string(14) &quot;lle Bjori Ro&quot; <br></span></div>    </div>   </div>   <div class="example" id="">    <p><strong>示例 #4 使用 stream 上下文（context）</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 创建 stream<br /></span><span style="color: #9876AA">$opts </span><span style="color: #007700">= array(<br />  </span><span style="color: #DD0000">'http'</span><span style="color: #007700">=&gt;array(<br />    </span><span style="color: #DD0000">'method'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">"GET"</span><span style="color: #007700">,<br />    </span><span style="color: #DD0000">'header'</span><span style="color: #007700">=&gt;</span><span style="color: #DD0000">"Accept-language: en\r\n" </span><span style="color: #007700">.<br />              </span><span style="color: #DD0000">"Cookie: foo=bar\r\n"<br />  </span><span style="color: #007700">)<br />);<br /><br /></span><span style="color: #9876AA">$context </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_context_create</span><span style="color: #007700">(</span><span style="color: #9876AA">$opts</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 以下面设置的 HTTP 头来打开文件<br /></span><span style="color: #9876AA">$file </span><span style="color: #007700">= </span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com/'</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">, </span><span style="color: #9876AA">$context</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.file-get-contents-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数可安全用于二进制对象。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">如已启用<a href="https://www.php.net/manual/zh/filesystem.configuration.php#ini.allow-url-fopen" class="link">fopen 包装器</a>，在此函数中， URL 可作为文件名。关于如何指定文件名详见 <span class="function">{@link fopen()}</span>。各种wapper 的不同功能请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>，注意其用法及其可提供的预定义变量。</p></div>  <div class="warning"><strong class="warning">警告</strong><p class="para">使用 SSL 时，Microsoft IIS会违反协议不发送 <span>close_notify</span> 标记就关闭连接。PHP 会在到达数据尾端时报告“SSL: Fatal Protocol Error”。要解决此问题，<a href="https://www.php.net/manual/zh/errorfunc.configuration.php#ini.error-reporting" class="link">error_reporting</a> 应设定为降低级别至不包含警告。PHP4.3.7 及更高版本可以在使用 <span>https://</span> 包装器打开流时检测出有问题的 IIS 服务器软件 并抑制警告。在使用<span class="function">{@link fsockopen()}</span> 创建 <span>ssl://</span> 套接字时，开发者需检测并抑制此警告。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.file-get-contents-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link file()} - 把整个文件读入一个数组中</span></li>    <li class="member"><span class="function">{@link fgets()} - 从文件指针中读取一行</span></li>    <li class="member"><span class="function">{@link fread()} - 读取文件（可安全用于二进制文件）</span></li>    <li class="member"><span class="function">{@link readfile()} - 输出文件</span></li>    <li class="member"><span class="function">{@link file_put_contents()} - 将数据写入文件</span></li>    <li class="member"><span class="function">{@link stream_get_contents()} - 读取资源流到一个字符串</span></li>    <li class="member"><span class="function">{@link stream_context_create()} - 创建资源流上下文</span></li>    <li class="member"><a href="https://www.php.net/manual/zh/reserved.variables.httpresponseheader.php" class="link">$http_response_header</a></li>   </ul>  </span> </div></div>
 * @return string|false The function returns the read data or false on failure.*/
function file_get_contents(string $filename, bool $use_include_path = false, $context, int $offset = 0, ?int $length): string|false {}

/**
*<div id="function.file-put-contents" class="refentry"> <div class="refnamediv">  <h1 class="refname">file_put_contents</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">file_put_contents</span> &mdash; <span class="dc-title">将数据写入文件</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.file-put-contents-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>file_put_contents</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$data</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$context</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">    和依次调用 <span class="function">{@link fopen()}</span>，<span class="function">{@link fwrite()}</span>   以及 <span class="function">{@link fclose()}</span> 功能一样。  </p>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">filename</span>   不存在，将会创建文件。反之，存在的文件将会重写，除非设置   <strong><span>FILE_APPEND</span></strong> flag。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.file-put-contents-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       要被写入数据的文件名。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       要写入的数据。类型可以是 <span class="type" style="color:#EAB766">string</span>，<span class="type" style="color:#EAB766">array</span>       或者是 <span class="type" style="color:#EAB766"><span class="type stream" style="color:#EAB766">stream</span></span> 资源（如上面所说的那样）。      </p>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">data</span>       指定为 stream 资源，这里 stream       中所保存的缓存数据将被写入到指定文件中，这种用法就相似于使用       <span class="function">{@link stream_copy_to_stream()}</span> 函数。      </p>      <p class="para">       参数 <span class="parameter" style="color:#3A95FF">data</span> 可以是数组（但不能为多维数组），这就相当于       <span>file_put_contents($filename, join(&#039;&#039;, $array))</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">flags</span> 的值可以是       以下 flag 使用 OR (<span>|</span>) 运算符进行的组合。      </p>       <p class="para">       <table class="doctable table">        <caption><strong>Available flags</strong></caption>                 <thead>          <tr>           <th>Flag</th>           <th>描述</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td>            <strong><span>FILE_USE_INCLUDE_PATH</span></strong>           </td>           <td>            在 include 目录里搜索  <span class="parameter" style="color:#3A95FF">filename</span>。            更多信息可参见 <a href="https://www.php.net/manual/zh/ini.core.php#ini.include-path" class="link">include_path</a>。           </td>          </tr>          <tr>           <td>            <strong><span>FILE_APPEND</span></strong>           </td>           <td>            如果文件 <span class="parameter" style="color:#3A95FF">filename</span>  已经存在，追加数据而不是覆盖。           </td>          </tr>          <tr>           <td>            <strong><span>LOCK_EX</span></strong>           </td>           <td>            在写入时获取文件独占锁。换句话说，在调用 <span class="function">{@link fopen()}</span>            和 <span class="function">{@link fwrite()}</span> 中间发生了 <span class="function">{@link flock()}</span>            调用。这与调用带模式“x”的 <span class="function">{@link fopen()}</span> 不同。           </td>          </tr>         </tbody>               </table>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">context</span></dt>     <dd>      <p class="para">       一个 context 资源。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.file-put-contents-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   该函数将返回写入到文件内数据的字节数，失败时返回<strong><span>false</span></strong>  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数可能返回布尔值<strong><span>false</span></strong>，但也可能返回等同于 <strong><span>false</span></strong> 的非布尔值。请阅读 <a href="https://www.php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用<a href="https://www.php.net/manual/zh/language.operators.comparison.php" class="link">===运算符</a>来测试此函数的返回值。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.file-put-contents-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 简单用法示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$file </span><span style="color: #007700">= </span><span style="color: #DD0000">'people.txt'</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">// 打开文件获取已经存在的内容<br /></span><span style="color: #9876AA">$current </span><span style="color: #007700">= </span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">// 追加新成员到文件<br /></span><span style="color: #9876AA">$current </span><span style="color: #007700">.= </span><span style="color: #DD0000">"John Smith\n"</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">// 将内容写回文件<br /></span><span style="color: #9876AA">file_put_contents</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">, </span><span style="color: #9876AA">$current</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>   <div class="example" id="">    <p><strong>示例 #2 Using flags</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$file </span><span style="color: #007700">= </span><span style="color: #DD0000">'people.txt'</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">// The new person to add to the file<br /></span><span style="color: #9876AA">$person </span><span style="color: #007700">= </span><span style="color: #DD0000">"John Smith\n"</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">// Write the contents to the file, <br />// using the FILE_APPEND flag to append the content to the end of the file<br />// and the LOCK_EX flag to prevent anyone else writing to the file at the same time<br /></span><span style="color: #9876AA">file_put_contents</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">, </span><span style="color: #9876AA">$person</span><span style="color: #007700">, </span><span style="color: #9876AA">FILE_APPEND </span><span style="color: #007700">| </span><span style="color: #9876AA">LOCK_EX</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.file-put-contents-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数可安全用于二进制对象。</span></p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong><p class="simpara">如已启用<a href="https://www.php.net/manual/zh/filesystem.configuration.php#ini.allow-url-fopen" class="link">fopen 包装器</a>，在此函数中， URL 可作为文件名。关于如何指定文件名详见 <span class="function">{@link fopen()}</span>。各种wapper 的不同功能请参见 <a href="https://www.php.net/manual/zh/wrappers.php" class="xref">支持的协议和封装协议</a>，注意其用法及其可提供的预定义变量。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.file-put-contents-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fopen()} - 打开文件或者 URL</span></li>    <li class="member"><span class="function">{@link fwrite()} - 写入文件（可安全用于二进制文件）</span></li>    <li class="member"><span class="function">{@link file_get_contents()} - 将整个文件读入一个字符串</span></li>    <li class="member"><span class="function">{@link stream_context_create()} - 创建资源流上下文</span></li>   </ul>  </span> </div></div>
 * @return int|false The function returns the number of bytes that were written to the file, or*/
function file_put_contents(string $filename, mixed $data, int $flags = 0, $context): int|false {}
