<?php

// Start of standard v.5.3.2-0.dotdeb.1

use JetBrains\PhpStorm\ArrayShape;
use JetBrains\PhpStorm\Deprecated;
use JetBrains\PhpStorm\ExpectedValues;
use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
use JetBrains\PhpStorm\Internal\PhpStormStubsElementAvailable;
use JetBrains\PhpStorm\Internal\TentativeType;
use JetBrains\PhpStorm\Pure;

class __PHP_Incomplete_Class
{
    /**
     * @var string
     */
    public $__PHP_Incomplete_Class_Name;
}

/**
*<div id="class.php-user-filter" class="reference"> <h1 class="title">The php_user_filter class</h1>  <div class="partintro"><p class="verinfo">(PHP 5, PHP 7, PHP 8)</p>  <div class="section" id="php-user-filter.intro">   <h2 class="title">简介</h2>   <p class="para">    Children of this class are passed to    <span class="function">{@link stream_filter_register()}</span>.    Note that the <a href="https://www.php.net/manual/zh/language.oop5.decon.php#object.construct" class="link">__construct</a> method is not called;    instead, <span class="methodname" style="color:#CC7832">{@link php_user_filter::onCreate()}</span> should be used for    initialization.   </p>  </div>  <div class="section" id="php-user-filter.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">php_user_filter</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="type" style="color:#EAB766">string</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.php-user-filter.php#php-user-filter.props.filtername">$<var class="varname">filtername</var></a></var><span class="initializer"> = &quot;&quot;</span>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.php-user-filter.php#php-user-filter.props.params">$<var class="varname">params</var></a></var><span class="initializer"> = &quot;&quot;</span>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.php-user-filter.php#php-user-filter.props.stream">$<var class="varname">stream</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/php-user-filter.filter.php" class="methodname" style="color:#CC7832">filter</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$in</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$out</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">&$consumed</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$closing</span></span><br>): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/php-user-filter.onclose.php" class="methodname" style="color:#CC7832">onClose</a></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/php-user-filter.oncreate.php" class="methodname" style="color:#CC7832">onCreate</a></span>(): <span class="type" style="color:#EAB766">bool</span></div>   }</div>  </div>    <div class="section" id="php-user-filter.props">   <h2 class="title">属性</h2>   <dl>         <dt id="php-user-filter.props.filtername"><var class="varname">filtername</var></dt>     <dd>      <p class="para">       Name of the filter registered by       <span class="function">{@link stream_filter_append()}</span>.      </p>     </dd>             <dt id="php-user-filter.props.params"><var class="varname">params</var></dt>     <dd>      <p class="para"/>     </dd>             <dt id="php-user-filter.props.stream"><var class="varname">stream</var></dt>     <dd>      <p class="para"/>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link php_user_filter::filter} — Called when applying the filter</li><li>{@link php_user_filter::onClose} — Called when closing the filter</li><li>{@link php_user_filter::onCreate} — Called when creating the filter</li></ul></div>
*/
class php_user_filter
{
    #[LanguageLevelTypeAware(['8.1' => 'string'], default: '')]
    public $filtername;

    #[LanguageLevelTypeAware(['8.1' => 'mixed'], default: '')]
    public $params;
    public $stream;

/**
*<div id="php-user-filter.filter" class="refentry"> <div class="refnamediv">  <h1 class="refname">php_user_filter::filter</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">php_user_filter::filter</span> &mdash; <span class="dc-title">Called when applying the filter</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-php-user-filter.filter-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>php_user_filter::filter</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$in</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$out</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">&$consumed</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$closing</span></span><br>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   This method is called whenever data is read from or written to   the attached stream (such as with <span class="function">{@link fread()}</span> or <span class="function">{@link fwrite()}</span>).  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-php-user-filter.filter-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">in</span></dt>    <dd>     <span>      <span class="parameter" style="color:#3A95FF">in</span> is a resource pointing to a <span>bucket brigade</span>      which contains one or more <span>bucket</span> objects containing data to be filtered.     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">out</span></dt>    <dd>     <p class="para">      <span class="parameter" style="color:#3A95FF">out</span> is a resource pointing to a second <span>bucket brigade</span>      into which your modified buckets should be placed.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">consumed</span></dt>    <dd>     <p class="para">      <span class="parameter" style="color:#3A95FF">consumed</span>, which must <em>always</em>      be declared by reference, should be incremented by the length of the data      which your filter reads in and alters.  In most cases this means you will      increment <span class="parameter" style="color:#3A95FF">consumed</span> by <span>$bucket-&gt;datalen</span>      for each <span>$bucket</span>.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">closing</span></dt>    <dd>     <p class="para">      If the stream is in the process of closing      (and therefore this is the last pass through the filterchain),      the <span class="parameter" style="color:#3A95FF">closing</span> parameter will be set to <strong><span>true</span></strong>.     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-php-user-filter.filter-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The <span class="methodname" style="color:#CC7832"><strong>filter()</strong></span> method must return one of   three values upon completion.   <table class="doctable informaltable">         <thead>      <tr>       <th>Return Value</th>       <th>Meaning</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td><strong><span>PSFS_PASS_ON</span></strong></td>       <td>        Filter processed successfully with data available in the        <span class="parameter" style="color:#3A95FF">out</span> <span>bucket brigade</span>.       </td>      </tr>      <tr>       <td><strong><span>PSFS_FEED_ME</span></strong></td>       <td>        Filter processed successfully, however no data was available to        return. More data is required from the stream or prior filter.       </td>      </tr>      <tr>       <td><strong><span>PSFS_ERR_FATAL</span></strong> (default)</td>       <td>        The filter experienced an unrecoverable error and cannot continue.       </td>      </tr>     </tbody>       </table>  </p> </div></div>
     * @return int <p>*/
    public function filter(
        $in,
        $out,
        &$consumed,
        #[LanguageLevelTypeAware(['8.0' => 'bool'], default: '')] $closing
    ): int {}

/**
*<div id="php-user-filter.oncreate" class="refentry"> <div class="refnamediv">  <h1 class="refname">php_user_filter::onCreate</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">php_user_filter::onCreate</span> &mdash; <span class="dc-title">Called when creating the filter</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-php-user-filter.oncreate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>php_user_filter::onCreate</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   This method is called during instantiation of the filter class   object.  If your filter allocates or initializes any other resources   (such as a buffer), this is the place to do it.  </p>  <p class="para">   When your filter is first instantiated, and   <span>yourfilter-&gt;onCreate()</span> is called, a number of properties   will be available as shown in the table below.  </p>  <p class="para">   <table class="doctable informaltable">         <thead>      <tr>       <th>Property</th>       <th>Contents</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td><span>FilterClass-&gt;filtername</span></td>       <td>        A string containing the name the filter was instantiated with.        Filters may be registered under multiple names or under wildcards.        Use this property to determine which name was used.       </td>      </tr>      <tr>       <td><span>FilterClass-&gt;params</span></td>       <td>        The contents of the <span class="parameter" style="color:#3A95FF">params</span> parameter passed        to <span class="function">{@link stream_filter_append()}</span>        or <span class="function">{@link stream_filter_prepend()}</span>.       </td>      </tr>      <tr>       <td><span>FilterClass-&gt;stream</span></td>       <td>        The stream resource being filtered. Maybe available only during        <span class="methodname" style="color:#CC7832"><strong>filter()</strong></span> calls when the         <span>closing</span> parameter is set to <strong><span>false</span></strong>.       </td>      </tr>     </tbody>       </table>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-php-user-filter.oncreate-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-php-user-filter.oncreate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Your implementation of   this method should return <strong><span>false</span></strong> on failure, or <strong><span>true</span></strong> on success.  </p> </div></div>
     * @return bool*/
    public function onCreate(): bool {}

/**
*<div id="php-user-filter.onclose" class="refentry"> <div class="refnamediv">  <h1 class="refname">php_user_filter::onClose</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">php_user_filter::onClose</span> &mdash; <span class="dc-title">Called when closing the filter</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-php-user-filter.onclose-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>php_user_filter::onClose</strong></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   This method is called upon filter shutdown (typically, this is also   during stream shutdown), and is executed <em>after</em>   the <span>flush</span> method is called.  If any resources   were allocated or initialized during <span>onCreate()</span>   this would be the time to destroy or dispose of them.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-php-user-filter.onclose-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-php-user-filter.onclose-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Return value is ignored.  </p> </div></div>
*/
    public function onClose(): void {}
}

/**
*<div id="class.directory" class="reference"> <h1 class="title">Directory 类</h1>  <div class="partintro"><p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p>  <div class="section" id="directory.intro">   <h2 class="title">简介</h2>   <p class="para">    <span class="classname"><strong class="classname">Directory</strong></span> 实例是通过调用    <span class="function">{@link dir()}</span> 函数创建的，而不是 <a href="https://www.php.net/manual/zh/language.oop5.basic.php#language.oop5.basic.new" class="link">new</a> 操作符。   </p>  </div>  <div class="section" id="directory.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">class</span> <strong class="classname"><strong class="classname">Directory</strong></strong>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">string</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.directory.php#directory.props.path">$<var class="varname">path</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="modifier">readonly</span>     <span class="type" style="color:#EAB766">resource</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.directory.php#directory.props.handle">$<var class="varname">handle</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/directory.close.php" class="methodname" style="color:#CC7832">close</a></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/directory.read.php" class="methodname" style="color:#CC7832">read</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/directory.rewind.php" class="methodname" style="color:#CC7832">rewind</a></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>   }</div>  </div>  <div class="section" id="directory.props">   <h2 class="title">属性</h2>   <dl>         <dt id="directory.props.path"><var class="varname">path</var></dt>     <dd>      <p class="para">       被打开目录的地址。      </p>     </dd>             <dt id="directory.props.handle"><var class="varname">handle</var></dt>     <dd>      <p class="para">       目录句柄。可以被其他的目录操作函数使用，例如       <span class="function">{@link readdir()}</span>、<span class="function">{@link rewinddir()}</span>       和 <span class="function">{@link closedir()}</span>。      </p>     </dd>       </dl>  </div>  <div class="section">   <h2 class="title">更新日志</h2>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.1.0</td>       <td>        现在 <var class="varname">path</var> 和 <var class="varname">handle</var> 属性是只读的。       </td>      </tr>     </tbody>       </table>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Directory::close} — 关闭目录句柄</li><li>{@link Directory::read} — 从目录句柄中读取条目</li><li>{@link Directory::rewind} — 倒回目录句柄</li></ul></div>
*/
class Directory
{
    /**
     * @var string The directory that was opened.
     */
    #[PhpStormStubsElementAvailable(to: '8.0')]
    public $path;

    /**
     * @var string The directory that was opened.
     */
    #[PhpStormStubsElementAvailable(from: '8.1')]
    public readonly string $path;

    /**
     * @var resource Can be used with other directory functions such as {@see readdir()}, {@see rewinddir()} and {@see closedir()}.
     */
    #[PhpStormStubsElementAvailable(to: '8.0')]
    public $handle;

    /**
     * @var resource Can be used with other directory functions such as {@see readdir()}, {@see rewinddir()} and {@see closedir()}.
     */
    #[PhpStormStubsElementAvailable(from: '8.1')]
    public readonly mixed $handle;

/**
*<div id="directory.close" class="refentry"> <div class="refnamediv">  <h1 class="refname">Directory::close</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">Directory::close</span> &mdash; <span class="dc-title">关闭目录句柄</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-directory.close-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Directory::close</strong></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-directory.close-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       不接受任何参数。在此之前，目录句柄可以作为参数传递。      </td>     </tr>    </tbody>     </table> </div></div>
*/
    public function close(#[PhpStormStubsElementAvailable(from: '5.3', to: '7.4')] $dir_handle = null): void {}

/**
*<div id="directory.rewind" class="refentry"> <div class="refnamediv">  <h1 class="refname">Directory::rewind</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">Directory::rewind</span> &mdash; <span class="dc-title">倒回目录句柄</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-directory.rewind-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Directory::rewind</strong></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-directory.rewind-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       不接受任何参数。在此之前，目录句柄可以作为参数传递。      </td>     </tr>    </tbody>     </table> </div></div>
*/
    public function rewind(#[PhpStormStubsElementAvailable(from: '5.3', to: '7.4')] $dir_handle = null): void {}

/**
*<div id="directory.read" class="refentry"> <div class="refnamediv">  <h1 class="refname">Directory::read</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">Directory::read</span> &mdash; <span class="dc-title">从目录句柄中读取条目</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-directory.read-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Directory::read</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-directory.read-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       不接受任何参数。在此之前，目录句柄可以作为参数传递。      </td>     </tr>    </tbody>     </table> </div></div>
     * @return string|false*/
    public function read(#[PhpStormStubsElementAvailable(from: '5.3', to: '7.4')] $dir_handle = null): string|false {}
}

/**
*<div id="function.constant" class="refentry"> <div class="refnamediv">  <h1 class="refname">constant</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">constant</span> &mdash; <span class="dc-title">返回一个常量的值</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.constant-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>constant</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="simpara">   返回 <span class="parameter" style="color:#3A95FF">name</span> 对应的常量的值。  </p>  <p class="simpara">   当你不知道常量名，却需要获取常量的值时，<span class="function"><strong style="color:#CC7832">constant()</strong></span> 就很有用了。也就是说，常量名储存在一个变量里，或者由函数返回时。  </p>  <p class="simpara">   该函数也适用<a href="https://www.php.net/manual/zh/language.oop5.constants.php" class="link">类常量</a>和 <a href="https://www.php.net/manual/zh/language.types.enumerations.php" class="link">enum cases</a>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.constant-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">          常量名。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.constant-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  返回常量的值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.constant-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果常量未定义，会抛出 <span class="classname"><a href="https://www.php.net/manual/zh/class.error.php" class="classname">Error</a></span> 异常。   在 PHP 8.0.0 之前，会产生 <strong><span>E_WARNING</span></strong> 级别的错误。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.constant-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       如果常量未定义，<span class="function"><strong style="color:#CC7832">constant()</strong></span> 现在会抛出       <span class="classname"><a href="https://www.php.net/manual/zh/class.error.php" class="classname">Error</a></span> 异常。以前会产生一个       <strong><span>E_WARNING</span></strong> 级别的错误并返回 <strong><span>null</span></strong>。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.constant-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">constant()</strong></span> 与常量一起使用</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />define</span><span style="color: #007700">(</span><span style="color: #DD0000">"MAXSIZE"</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">);<br /><br />echo </span><span style="color: #9876AA">MAXSIZE</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">constant</span><span style="color: #007700">(</span><span style="color: #DD0000">"MAXSIZE"</span><span style="color: #007700">); </span><span style="color: #FF8000">// 和上行一样<br /><br /><br /></span><span style="color: #007700">interface </span><span style="color: #9876AA">bar </span><span style="color: #007700">{<br />    const </span><span style="color: #9876AA">test </span><span style="color: #007700">= </span><span style="color: #DD0000">'foobar!'</span><span style="color: #007700">;<br />}<br /><br />class </span><span style="color: #9876AA">foo </span><span style="color: #007700">{<br />    const </span><span style="color: #9876AA">test </span><span style="color: #007700">= </span><span style="color: #DD0000">'foobar!'</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">$const </span><span style="color: #007700">= </span><span style="color: #DD0000">'test'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">constant</span><span style="color: #007700">(</span><span style="color: #DD0000">'bar::'</span><span style="color: #007700">. </span><span style="color: #9876AA">$const</span><span style="color: #007700">)); </span><span style="color: #FF8000">// string(7) "foobar!"<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">constant</span><span style="color: #007700">(</span><span style="color: #DD0000">'foo::'</span><span style="color: #007700">. </span><span style="color: #9876AA">$const</span><span style="color: #007700">)); </span><span style="color: #FF8000">// string(7) "foobar!"<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>   <div class="example" id="">    <p><strong>示例 #2 <span class="function"><strong style="color:#CC7832">constant()</strong></span> 和 Enum Cases 一起使用（自 PHP 8.1.0 起）</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">enum </span><span style="color: #9876AA">Suit<br /></span><span style="color: #007700">{<br />    case </span><span style="color: #9876AA">Hearts</span><span style="color: #007700">;<br />    case </span><span style="color: #9876AA">Diamonds</span><span style="color: #007700">;<br />    case </span><span style="color: #9876AA">Clubs</span><span style="color: #007700">;<br />    case </span><span style="color: #9876AA">Spades</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">$case </span><span style="color: #007700">= </span><span style="color: #DD0000">'Hearts'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">constant</span><span style="color: #007700">(</span><span style="color: #DD0000">'Suit::'</span><span style="color: #007700">. </span><span style="color: #9876AA">$case</span><span style="color: #007700">)); </span><span style="color: #FF8000">// enum(Suit::Hearts)<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.constant-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link define()} - 定义一个常量</span></li>    <li class="member"><span class="function">{@link defined()} - 检查某个名称的常量是否存在</span></li>    <li class="member"><span class="function">{@link get_defined_constants()} - 返回所有常量的关联数组，键是常量名，值是常量值</span></li>    <li class="member">关于 <a href="https://www.php.net/manual/zh/language.constants.php" class="link">常量</a> 的章节</li>   </ul>  </span> </div></div>
 * @return mixed the value of the constant.*/
function constant(string $name): mixed {}

/**
*<div id="function.bin2hex" class="refentry"> <div class="refnamediv">  <h1 class="refname">bin2hex</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">bin2hex</span> &mdash; <span class="dc-title">将二进制数据转换为十六进制表示</span></p> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.bin2hex-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>bin2hex</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   返回 ASCII 字符串，包含 <span class="parameter" style="color:#3A95FF">string</span>   的十六进制表示。转换是高位优先，按字节完成的。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.bin2hex-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       字符串。      </p>     </dd>       </dl>  </span> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.bin2hex-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回指定字符串的十六进制表示。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.bin2hex-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">bin2hex()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$hex </span><span style="color: #007700">= </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #DD0000">'Hello world!'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$hex</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">hex2bin</span><span style="color: #007700">(</span><span style="color: #9876AA">$hex</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>string(24) &quot;48656c6c6f20776f726c6421&quot;<br>string(12) &quot;Hello world!&quot;<br></span></div>    </div>   </div>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.bin2hex-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link hex2bin()} - 转换十六进制字符串为二进制字符串</span></li>    <li class="member"><span class="function">{@link pack()} - 将数据打包成二进制字符串</span></li>   </ul>  </span> </div> </div>
 * @return string the hexadecimal representation of the given string.*/
function bin2hex(string $string): string {}

/**
*<div id="function.sleep" class="refentry"> <div class="refnamediv">  <h1 class="refname">sleep</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">sleep</span> &mdash; <span class="dc-title">延缓执行</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.sleep-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sleep</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$seconds</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="simpara">   程序延迟执行指定的 <span class="parameter" style="color:#3A95FF">seconds</span> 的秒数。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    为了让程序执行延迟几分之一秒，应使用 <span class="function">{@link usleep()}</span>，因为 <span class="function"><strong style="color:#CC7832">sleep()</strong></span>    需要 <span class="type" style="color:#EAB766">int</span>。例如 <span>sleep(0.25)</span> 会使程序暂停 <span>0</span> 秒。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.sleep-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">seconds</span></dt>     <dd>      <p class="para">       暂停的秒数（必须大于或等于 <span>0</span>）。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.sleep-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 0。  </p>  <p class="para">   如果函数的调用被一个信号中止，<span class="function"><strong style="color:#CC7832">sleep()</strong></span> 会返回一个非零的值。在   Windows 上，该值总是 <span>192</span>（即 Windows API 常量   <strong><span>WAIT_IO_COMPLETION</span></strong> 的值）。其他平台上，该返回值是剩余未 sleep 的秒数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.sleep-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果指定的 <span class="parameter" style="color:#3A95FF">seconds</span> 是负数，该函数会抛出 <span class="classname"><a href="https://www.php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.sleep-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       此函数在负数 <span class="parameter" style="color:#3A95FF">seconds</span> 时抛出 <span class="classname"><a href="https://www.php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span>，之前会引发       <strong><span>E_WARNING</span></strong> 且函数返回 <strong><span>false</span></strong>。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.sleep-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">sleep()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// 当前时间<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">'h:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// 睡眠 10 秒<br /></span><span style="color: #9876AA">sleep</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 醒来！<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">'h:i:s'</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>     该例子会在休眠10秒后输出。    </p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>05:31:23<br>05:31:33<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.sleep-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link usleep()} - 以指定的微秒数延迟执行</span></li>    <li class="member"><span class="function">{@link time_nanosleep()} - 延缓执行若干秒和纳秒</span></li>    <li class="member"><span class="function">{@link time_sleep_until()} - 使脚本睡眠到指定的时间为止</span></li>    <li class="member"><span class="function">{@link set_time_limit()} - 设置脚本最大执行时间</span></li>   </ul>  </span> </div></div>
 * @return int|false zero on success, or false on errors. If the call was interrupted*/
function sleep(int $seconds) {}

/**
*<div id="function.usleep" class="refentry"> <div class="refnamediv">  <h1 class="refname">usleep</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">usleep</span> &mdash; <span class="dc-title">以指定的微秒数延迟执行</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.usleep-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>usleep</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$microseconds</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   以指定的微秒数延缓程序的执行。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.usleep-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">microseconds</span></dt>     <dd>      <p class="para">       暂停的时间以微秒计。1微秒（micro second）是百万分之一秒。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <span class="simpara">        操作系统不支持大于 <span>1000000</span> 的值（即休眠不能超过 1 秒）。使用        <span class="function">{@link sleep()}</span> 代替。       </span>      </p></blockquote>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <span class="simpara">        任何系统活动或处理调用所花费的时间或系统计时器的粒度都可能会稍微延长睡眠时间（即可能会长于        <span class="parameter" style="color:#3A95FF">microseconds</span>）。       </span>      </p></blockquote>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.usleep-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.usleep-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">usleep()</strong></span>例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// Current time<br /></span><span style="color: #007700">echo (new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'now'</span><span style="color: #007700">))-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'H:i:s.v'</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// wait for 2 milliseconds<br /></span><span style="color: #9876AA">usleep</span><span style="color: #007700">(</span><span style="color: #9876AA">2000</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// back!<br /></span><span style="color: #007700">echo (new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'now'</span><span style="color: #007700">))-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'H:i:s.v'</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// wait for 30 milliseconds<br /></span><span style="color: #9876AA">usleep</span><span style="color: #007700">(</span><span style="color: #9876AA">30000</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// back again!<br /></span><span style="color: #007700">echo (new </span><span style="color: #9876AA">DateTime</span><span style="color: #007700">(</span><span style="color: #DD0000">'now'</span><span style="color: #007700">))-&gt;</span><span style="color: #9876AA">format</span><span style="color: #007700">(</span><span style="color: #DD0000">'H:i:s.v'</span><span style="color: #007700">), </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>11:13:28.005<br>11:13:28.007<br>11:13:28.037<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.usleep-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link sleep()} - 延缓执行</span></li>    <li class="member"><span class="function">{@link time_nanosleep()} - 延缓执行若干秒和纳秒</span></li>    <li class="member"><span class="function">{@link time_sleep_until()} - 使脚本睡眠到指定的时间为止</span></li>    <li class="member"><span class="function">{@link set_time_limit()} - 设置脚本最大执行时间</span></li>   </ul>  </span> </div></div>
 * @return void*/
function usleep(int $microseconds): void {}

/**
*<div id="function.time-nanosleep" class="refentry"> <div class="refnamediv">  <h1 class="refname">time_nanosleep</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">time_nanosleep</span> &mdash; <span class="dc-title">延缓执行若干秒和纳秒</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.time-nanosleep-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>time_nanosleep</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$seconds</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$nanoseconds</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766">bool</span></span></div>  <p class="para rdfs-comment">   程序延缓执行指定数量的 <span class="parameter" style="color:#3A95FF">seconds</span> 和 <span class="parameter" style="color:#3A95FF">nanoseconds</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.time-nanosleep-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">seconds</span></dt>     <dd>      <p class="para">       必须是一个非负整数。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">nanoseconds</span></dt>     <dd>      <p class="para">       必须是一个小于1亿的非负整数。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <span class="simpara">        在 Windows 上，系统的睡眠时间可能会超过指定的纳秒数，具体取决于硬件。       </span>      </p></blockquote>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.time-nanosleep-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p>  <p class="para">   如果延迟被中断，一个关联数组会返回，内容为：   <ul class="itemizedlist">    <li class="listitem">     <span class="simpara">      <span>seconds</span>——延迟剩余未执行的秒数     </span>    </li>    <li class="listitem">     <span class="simpara">      <span>nanoseconds</span>——延迟剩余未执行的纳秒数     </span>    </li>   </ul>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.time-nanosleep-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">time_nanosleep()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 小心！如果返回数组，将无法按照预期工作<br /></span><span style="color: #007700">if (</span><span style="color: #9876AA">time_nanosleep</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">500000000</span><span style="color: #007700">)) {<br />    echo </span><span style="color: #DD0000">"Slept for half a second.\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #FF8000">// 这个更好：<br /></span><span style="color: #007700">if (</span><span style="color: #9876AA">time_nanosleep</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">500000000</span><span style="color: #007700">) === </span><span style="color: #9876AA">true</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"Slept for half a second.\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #FF8000">// 这个最好：<br /></span><span style="color: #9876AA">$nano </span><span style="color: #007700">= </span><span style="color: #9876AA">time_nanosleep</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">100000</span><span style="color: #007700">);<br /><br />if (</span><span style="color: #9876AA">$nano </span><span style="color: #007700">=== </span><span style="color: #9876AA">true</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"Slept for 2 seconds, 100 microseconds.\n"</span><span style="color: #007700">;<br />} elseif (</span><span style="color: #9876AA">$nano </span><span style="color: #007700">=== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"Sleeping failed.\n"</span><span style="color: #007700">;<br />} elseif (</span><span style="color: #9876AA">is_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$nano</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">$seconds </span><span style="color: #007700">= </span><span style="color: #9876AA">$nano</span><span style="color: #007700">[</span><span style="color: #DD0000">'seconds'</span><span style="color: #007700">];<br />    </span><span style="color: #9876AA">$nanoseconds </span><span style="color: #007700">= </span><span style="color: #9876AA">$nano</span><span style="color: #007700">[</span><span style="color: #DD0000">'nanoseconds'</span><span style="color: #007700">];<br />    echo </span><span style="color: #DD0000">"Interrupted by a signal.\n"</span><span style="color: #007700">;<br />    echo </span><span style="color: #DD0000">"Time remaining: </span><span style="color: #9876AA">$seconds</span><span style="color: #DD0000"> seconds, </span><span style="color: #9876AA">$nanoseconds</span><span style="color: #DD0000"> nanoseconds."</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.time-nanosleep-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link sleep()} - 延缓执行</span></li>    <li class="member"><span class="function">{@link usleep()} - 以指定的微秒数延迟执行</span></li>    <li class="member"><span class="function">{@link time_sleep_until()} - 使脚本睡眠到指定的时间为止</span></li>    <li class="member"><span class="function">{@link set_time_limit()} - 设置脚本最大执行时间</span></li>   </ul>  </span> </div></div>
 * @return bool|array true on success or false on failure.*/
function time_nanosleep(int $seconds, int $nanoseconds): array|bool {}

/**
*<div id="function.time-sleep-until" class="refentry"> <div class="refnamediv">  <h1 class="refname">time_sleep_until</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">time_sleep_until</span> &mdash; <span class="dc-title">   使脚本睡眠到指定的时间为止  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.time-sleep-until-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>time_sleep_until</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$timestamp</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   使脚本睡眠到指定的 <span class="parameter" style="color:#3A95FF">timestamp</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.time-sleep-until-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">timestamp</span></dt>     <dd>      <p class="para">       将脚本唤醒的时间戳。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.time-sleep-until-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.time-sleep-until-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果设定的 <span class="parameter" style="color:#3A95FF">timestamp</span>   为过去的时间，脚本将会产生 <strong><span>E_WARNING</span></strong> 级别的错误。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.time-sleep-until-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">time_sleep_until()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// 返回 false 并生成警告<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">time_sleep_until</span><span style="color: #007700">(</span><span style="color: #9876AA">time</span><span style="color: #007700">()-</span><span style="color: #9876AA">1</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">// 只能在速度很快的电脑上运行，最多休眠 0.2 秒<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">time_sleep_until</span><span style="color: #007700">(</span><span style="color: #9876AA">microtime</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">)+</span><span style="color: #9876AA">0.2</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.time-sleep-until-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    所有的信号会被延迟至脚本唤醒以后。   </span>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.time-sleep-until-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link sleep()} - 延缓执行</span></li>    <li class="member"><span class="function">{@link usleep()} - 以指定的微秒数延迟执行</span></li>    <li class="member"><span class="function">{@link time_nanosleep()} - 延缓执行若干秒和纳秒</span></li>    <li class="member"><span class="function">{@link set_time_limit()} - 设置脚本最大执行时间</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function time_sleep_until(float $timestamp): bool {}

/**
 * Parse a time/date generated with <function>strftime</function>
 * @link https://php.net/manual/en/function.strptime.php
 * @param string $timestamp <p>
 * The string to parse (e.g. returned from strftime)
 * </p>
 * @param string $format <p>
 * The format used in date (e.g. the same as
 * used in strftime).
 * </p>
 * <p>
 * For more information about the format options, read the
 * strftime page.
 * </p>
 * @return array|false an array or false on failure.
 * <p>
 * <table>
 * The following parameters are returned in the array
 * <tr valign="top">
 * <td>parameters</td>
 * <td>Description</td>
 * </tr>
 * <tr valign="top">
 * <td>"tm_sec"</td>
 * <td>Seconds after the minute (0-61)</td>
 * </tr>
 * <tr valign="top">
 * <td>"tm_min"</td>
 * <td>Minutes after the hour (0-59)</td>
 * </tr>
 * <tr valign="top">
 * <td>"tm_hour"</td>
 * <td>Hour since midnight (0-23)</td>
 * </tr>
 * <tr valign="top">
 * <td>"tm_mday"</td>
 * <td>Day of the month (1-31)</td>
 * </tr>
 * <tr valign="top">
 * <td>"tm_mon"</td>
 * <td>Months since January (0-11)</td>
 * </tr>
 * <tr valign="top">
 * <td>"tm_year"</td>
 * <td>Years since 1900</td>
 * </tr>
 * <tr valign="top">
 * <td>"tm_wday"</td>
 * <td>Days since Sunday (0-6)</td>
 * </tr>
 * <tr valign="top">
 * <td>"tm_yday"</td>
 * <td>Days since January 1 (0-365)</td>
 * </tr>
 * <tr valign="top">
 * <td>"unparsed"</td>
 * <td>the date part which was not
 * recognized using the specified format</td>
 * </tr>
 * </table>
 * </p>
 * @deprecated 8.1
 */
#[Pure(true)]
#[Deprecated(since: '8.1')]
#[ArrayShape([
    'tm_sec' => 'int',
    'tm_min' => 'int',
    'tm_hour' => 'int',
    'tm_mday' => 'int',
    'tm_mon' => 'int',
    'tm_year' => 'int',
    'tm_wday' => 'int',
    'tm_yday' => 'int',
    'unparsed' => 'string'
])]
/**
*<div id="function.strptime" class="refentry"> <div class="refnamediv">  <h1 class="refname">strptime</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">strptime</span> &mdash; <span class="dc-title">解析由 <span class="function">{@link strftime()}</span> 生成的日期／时间</span></p>   </div> <div id="function.strptime-refsynopsisdiv">  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数自 PHP 8.1.0 起<em>弃用</em>。强烈建议不要应用此函数。</p></div> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.strptime-description">  <h3 class="title">说明</h3>    <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>strptime</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$timestamp</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$format</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">strptime()</strong></span> 返回一个将   <span class="parameter" style="color:#3A95FF">timestamp</span> 解析后的数组，如果出错返回 <strong><span>false</span></strong>。  </p>  <p class="para">   月份和星期几的名字以及其它与语种有关的字符串对应于   <span class="function">{@link setlocale()}</span>设定的当前区域（<strong><span>LC_TIME</span></strong>）。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.strptime-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">timestamp</span>（<span class="type" style="color:#EAB766">string</span>）</dt>     <dd>      <p class="para">       被解析的字符串（例如从 <span class="function">{@link strftime()}</span> 返回的）      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">format</span>（<span class="type" style="color:#EAB766">string</span>）</dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">timestamp</span> 所使用的格式（例如同       <span class="function">{@link strftime()}</span> 中所使用的相同）。      </p>      <p class="para">       更多有关格式选项的信息见 <span class="function">{@link strftime()}</span> 页面。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.strptime-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个数组 或者在失败时返回 <strong><span>false</span></strong>  </p>  <p class="para">   <table class="doctable table">    <caption><strong>数组中包含以下单元</strong></caption>         <thead>      <tr>       <th>键名</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>tm_sec</td>       <td>当前分钟内的秒数（0-61）</td>      </tr>      <tr>       <td>tm_min</td>       <td>当前小时内的分钟数（0-59）</td>      </tr>      <tr>       <td>tm_hour</td>       <td>午夜起的小时数（0-23）</td>      </tr>      <tr>       <td>tm_mday</td>       <td>月份中的第几天（1-31）</td>      </tr>      <tr>       <td>tm_mon</td>       <td>自一月起过了几个月（0-11）</td>      </tr>      <tr>       <td>tm_year</td>       <td>自 1900 年起过了几年</td>      </tr>      <tr>       <td>tm_wday</td>       <td>自星期天起过了几天（0-6）</td>      </tr>      <tr>       <td>tm_yday</td>       <td>本年自一月一日起过了多少天（0-365）</td>      </tr>      <tr>       <td>unparsed</td>       <td><span class="parameter" style="color:#3A95FF">timestamp</span> 中未能通过指定的       <span class="parameter" style="color:#3A95FF">format</span> 识别的部分</td>      </tr>     </tbody>       </table>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.strptime-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.1.0</td>       <td>        此函数已弃用。改用 <span class="function">{@link date_parse_from_format()}</span>（用于单独区域设置解析）或者 <span class="methodname" style="color:#CC7832">{@link IntlDateFormatter::parse()}</span>（用于依赖区域设置解析）       </td>      </tr>     </tbody>       </table>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.strptime-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">strptime()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$format </span><span style="color: #007700">= </span><span style="color: #DD0000">'%d/%m/%Y %H:%M:%S'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$strf </span><span style="color: #007700">= </span><span style="color: #9876AA">strftime</span><span style="color: #007700">(</span><span style="color: #9876AA">$format</span><span style="color: #007700">);<br /><br />echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$strf</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">strptime</span><span style="color: #007700">(</span><span style="color: #9876AA">$strf</span><span style="color: #007700">, </span><span style="color: #9876AA">$format</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>03/10/2004 15:54:19<br><br>Array<br>(<br>    [tm_sec] =&gt; 19<br>    [tm_min] =&gt; 54<br>    [tm_hour] =&gt; 15<br>    [tm_mday] =&gt; 3<br>    [tm_mon] =&gt; 9<br>    [tm_year] =&gt; 104<br>    [tm_wday] =&gt; 0<br>    [tm_yday] =&gt; 276<br>    [unparsed] =&gt;<br>)<br></span></div>    </div>   </div>  </span> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.strptime-notes">     <h3 class="title">注释</h3>     <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数未在 Windows 平台下实现。</span></p></blockquote>     <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:       <p class="para">       Internally, this function calls the <span>strptime()</span>       function provided by the system&#039;s C library. This function can exhibit       noticeably different behaviour across different operating systems. The       use of <span class="function">{@link date_parse_from_format()}</span>, which does not       suffer from these issues, is recommended.      </p>     </p></blockquote>     <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:       <p class="para">       <span>&quot;tm_sec&quot;</span> includes any leap seconds (currently upto 2       a year). For more information on leap seconds, see the <a href="http://en.wikipedia.org/wiki/Leap_second" class="link external">&raquo;&nbsp;Wikipedia article       on leap seconds</a>.      </p>     </p></blockquote>    </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.strptime-seealso">    <h3 class="title">参见</h3>    <span>     <ul class="simplelist">      <li class="member"><span class="methodname" style="color:#CC7832">{@link IntlDateFormatter::parse()} - Parse string to a timestamp value</span></li>      <li class="member"><span class="methodname" style="color:#CC7832">{@link DateTime::createFromFormat()} - 根据指定格式解析时间字符串</span></li>      <li class="member"><span class="function">{@link checkdate()} - 验证一个格里高里日期</span></li>      <li class="member"><span class="function">{@link strftime()} - 根据区域设置格式化本地时间/日期</span></li>      <li class="member"><span class="function">{@link date_parse_from_format()} - Get info about given date formatted according to the specified format</span></li>     </ul>    </span>   </div></div>
*/
function strptime(string $timestamp, string $format): array|false {}

/**
*<div id="function.flush" class="refentry"> <div class="refnamediv">  <h1 class="refname">flush</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">flush</span> &mdash; <span class="dc-title">刷新系统输出缓冲区</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.flush-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>flush</strong></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   刷新 PHP 的系统写入缓冲区，且不管 PHP 使用什么后端（CGI、Web 服务器等）。尝试推送当前输出到浏览器，但有一些警告。  </p>  <p class="para">   <span class="function"><strong style="color:#CC7832">flush()</strong></span> 无法覆盖 Web 服务器的缓冲方案，并且不会对任何浏览器中的客户端缓冲起作用。也不会对   PHP 的用户级别输出缓冲机制起作用。这意味着 <span class="function">{@link ob_flush()}</span> 应该在 <span class="function"><strong style="color:#CC7832">flush()</strong></span>   之前调用，以刷新缓冲区（如果正在使用）。  </p>  <p class="para">   个别服务器，特别是 Win32，在结果传输到浏览器之前，仍然会缓冲脚本的输出，直到程序结束为止。  </p>  <p class="para">   Apache 的服务器模块（比如 mod_gzip），可能自己进行输出缓冲，这将导致   <span class="function"><strong style="color:#CC7832">flush()</strong></span> 不会将数据立即发送到客户端浏览器。  </p>  <p class="para">   甚至浏览器也会在显示之前进行输入缓冲。例如 Netscape   浏览器会在接受到行尾或开始标记之前缓冲文本，且在接收到 &lt;/table&gt; 标记之前，不会渲染出整个表格。  </p>  <p class="para">   Microsoft Internet Explorer 的某些版本只有当接收到的 256   个字节的输出以后才开始显示页面，所以必须在刷新之前发送额外的空格来让这些浏览器显示页面。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.flush-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.flush-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.flush-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link ob_flush()} - 冲刷出（送出）输出缓冲区中的内容</span></li>    <li class="member"><span class="function">{@link ob_clean()} - 清空（擦掉）输出缓冲区</span></li>    <li class="member"><span class="function">{@link ob_end_flush()} - 冲刷出（送出）输出缓冲区内容并关闭缓冲区</span></li>    <li class="member"><span class="function">{@link ob_end_clean()} - 清空（擦除）缓冲区并关闭输出缓冲</span></li>   </ul>  </span> </div> </div>
 * @return void*/
function flush(): void {}

/**
*<div id="function.wordwrap" class="refentry"> <div class="refnamediv">  <h1 class="refname">wordwrap</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.2, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">wordwrap</span> &mdash; <span class="dc-title">打断字符串为指定数量的字串</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.wordwrap-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>wordwrap</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span><span class="initializer"> = 75</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$break</span><span class="initializer"> = &quot;\n&quot;</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$cut_long_words</span><span class="initializer"> = <strong><span>false</span></strong></span></span><br>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   使用字符串断点将字符串打断为指定数量的字串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.wordwrap-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       输入字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">       列宽度。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">break</span></dt>     <dd>      <p class="para">       使用可选的 <span class="parameter" style="color:#3A95FF">break</span> 参数打断字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">cut_long_words</span></dt>     <dd>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">cut_long_words</span> 设置为 <strong><span>true</span></strong>，字符串总是在指定的 <span class="parameter" style="color:#3A95FF">width</span>       或者之前位置被打断。因此，如果有的单词宽度超过了给定的宽度，它将被分隔开来。（参见第二个示例）。当它是       <strong><span>false</span></strong>，函数不会分割单词，哪怕 <span class="parameter" style="color:#3A95FF">width</span> 小于单词宽度。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.wordwrap-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回打断后的字符串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.wordwrap-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">wordwrap()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$text </span><span style="color: #007700">= </span><span style="color: #DD0000">"The quick brown fox jumped over the lazy dog."</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$newtext </span><span style="color: #007700">= </span><span style="color: #9876AA">wordwrap</span><span style="color: #007700">(</span><span style="color: #9876AA">$text</span><span style="color: #007700">, </span><span style="color: #9876AA">20</span><span style="color: #007700">, </span><span style="color: #DD0000">"&lt;br /&gt;\n"</span><span style="color: #007700">);<br /><br />echo </span><span style="color: #9876AA">$newtext</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>The quick brown fox&lt;br /&gt;<br>jumped over the lazy&lt;br /&gt;<br>dog.<br></span></div>    </div>   </div>   <div class="example" id="">    <p><strong>示例 #2 <span class="function"><strong style="color:#CC7832">wordwrap()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$text </span><span style="color: #007700">= </span><span style="color: #DD0000">"A very long woooooooooooord."</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$newtext </span><span style="color: #007700">= </span><span style="color: #9876AA">wordwrap</span><span style="color: #007700">(</span><span style="color: #9876AA">$text</span><span style="color: #007700">, </span><span style="color: #9876AA">8</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br />echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$newtext</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>A very<br>long<br>wooooooo<br>ooooord.<br></span></div>    </div>   </div>      <div class="example" id="">    <p><strong>示例 #3 <span class="function"><strong style="color:#CC7832">wordwrap()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$text </span><span style="color: #007700">= </span><span style="color: #DD0000">"A very long woooooooooooooooooord. and something"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$newtext </span><span style="color: #007700">= </span><span style="color: #9876AA">wordwrap</span><span style="color: #007700">(</span><span style="color: #9876AA">$text</span><span style="color: #007700">, </span><span style="color: #9876AA">8</span><span style="color: #007700">, </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">);<br /><br />echo </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$newtext</span><span style="color: #DD0000">\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>A very<br>long<br>woooooooooooooooooord.<br>and<br>something<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.wordwrap-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link nl2br()} - 在字符串所有新行之前插入 HTML 换行标记</span></li>    <li class="member"><span class="function">{@link chunk_split()} - 将字符串分割成小块</span></li>   </ul>  </span> </div></div>
 * @return string the given string wrapped at the specified length.*/
function wordwrap(string $string, int $width = 75, string $break = "\n", bool $cut_long_words = false): string {}

/**
*<div id="function.htmlspecialchars" class="refentry"> <div class="refnamediv">  <h1 class="refname">htmlspecialchars</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">htmlspecialchars</span> &mdash; <span class="dc-title">将特殊字符转换为 HTML 实体</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.htmlspecialchars-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>htmlspecialchars</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$double_encode</span><span class="initializer"> = <strong><span>true</span></strong></span></span><br>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   某类字符在 HTML 中有特殊用处，如需保持原意，需要用 HTML 实体来表达。   本函数会返回字符转义后的表达。   如需转换子字符串中所有关联的名称实体，使用 <span class="function">{@link htmlentities()}</span> 代替本函数。  </p>  <p class="para">   如果传入字符的字符编码和最终的文档是一致的，则用函数处理的输入适合绝大多数 HTML 文档环境。   然而，如果输入的字符编码和最终包含字符的文档是不一样的，   想要保留字符（以数字或名称实体的形式），本函数以及 <span class="function">{@link htmlentities()}</span>    （仅编码名称实体对应的子字符串）可能不够用。   这种情况可以使用 <span class="function">{@link mb_encode_numericentity()}</span> 代替。  </p>  <p class="para">   <table class="doctable table">    <caption><strong>执行转换</strong></caption>         <thead>      <tr>       <th>字符</th>       <th>替换后</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td><span>&amp;</span> (&amp; 符号)</td>       <td><span>&amp;amp;</span></td>      </tr>      <tr>       <td><span>&quot;</span> (双引号)</td>       <td><span>&amp;quot;</span>，除非设置了 <strong><span>ENT_NOQUOTES</span></strong></td>      </tr>      <tr>       <td><span>&#039;</span> (单引号)</td>       <td>         设置了 <strong><span>ENT_QUOTES</span></strong> 后，        <span>&amp;#039;</span>        (如果是 <strong><span>ENT_HTML401</span></strong>) ，或者 <span>&amp;apos;</span> (如果是        <strong><span>ENT_XML1</span></strong>、 <strong><span>ENT_XHTML</span></strong> 或        <strong><span>ENT_HTML5</span></strong>)。       </td>      </tr>      <tr>       <td><span>&lt;</span> (小于)</td>       <td><span>&amp;lt;</span></td>      </tr>      <tr>       <td><span>&gt;</span> (大于)</td>       <td><span>&amp;gt;</span></td>      </tr>     </tbody>       </table>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.htmlspecialchars-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       待转换的 <span class="type" style="color:#EAB766">string</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       位掩码，由以下某个或多个标记组成，设置转义处理细节、无效单元序列、文档类型。       默认是       <span>ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401</span>。       <table class="doctable table">        <caption><strong>有效的 <span class="parameter" style="color:#3A95FF">flags</span> 常量</strong></caption>                 <thead>          <tr>           <th>常量名称</th>           <th>描述</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td><strong><span>ENT_COMPAT</span></strong></td>           <td>会转换双引号，不转换单引号。</td>          </tr>          <tr>           <td><strong><span>ENT_QUOTES</span></strong></td>           <td>既转换双引号也转换单引号。</td>          </tr>          <tr>           <td><strong><span>ENT_NOQUOTES</span></strong></td>           <td>单/双引号都不转换</td>          </tr>          <tr>           <td><strong><span>ENT_IGNORE</span></strong></td>           <td>            静默丢弃无效的代码单元序列，而不是返回空字符串。            不建议使用此标记，            因为它<a href="http://unicode.org/reports/tr36/#Deletion_of_Noncharacters" class="link external">&raquo;&nbsp;可能有安全影响</a>。           </td>          </tr>          <tr>           <td><strong><span>ENT_SUBSTITUTE</span></strong></td>           <td>            替换无效的代码单元序列为 Unicode 代替符（Replacement Character），            U+FFFD (UTF-8) 或者 &amp;#xFFFD; (其他)，而不是返回空字符串。           </td>          </tr>          <tr>           <td><strong><span>ENT_DISALLOWED</span></strong></td>           <td>            为文档的无效代码点替换为  Unicode 代替符（Replacement Character）：            U+FFFD (UTF-8)，或 &amp;#xFFFD;（其他），而不是把它们留在原处。            比如以下情况下就很有用：要保证 XML 文档嵌入额外内容时格式合法。           </td>          </tr>          <tr>           <td><strong><span>ENT_HTML401</span></strong></td>           <td>            以 HTML 4.01 处理代码。           </td>          </tr>          <tr>           <td><strong><span>ENT_XML1</span></strong></td>           <td>            以 XML 1 处理代码。           </td>          </tr>          <tr>           <td><strong><span>ENT_XHTML</span></strong></td>           <td>            以 XHTML 处理代码。           </td>          </tr>          <tr>           <td><strong><span>ENT_HTML5</span></strong></td>           <td>            以 HTML 5 处理代码。           </td>          </tr>         </tbody>               </table>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>       <p class="para">  An optional argument defining the encoding used when converting characters. </p> <p class="para">  If omitted, <span class="parameter" style="color:#3A95FF">encoding</span> defaults to the value of the  <a href="https://www.php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a> configuration  option. </p> <p class="para">  Although this argument is technically optional, you are highly encouraged to  specify the correct value for your code  if the <a href="https://www.php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a>  configuration option may be set incorrectly for the given input. </p>      <p class="para">       本函数使用效果上，如果 <span class="parameter" style="color:#3A95FF">string</span> 对以下字符编码是有效的，       <span>ISO-8859-1</span>、 <span>ISO-8859-15</span>、       <span>UTF-8</span>、 <span>cp866</span>、       <span>cp1251</span>、 <span>cp1252</span>、       <span>KOI8-R</span> 将具有相同的效果。       也就是说，在这些编码里，       受 <span class="function"><strong style="color:#CC7832">htmlspecialchars()</strong></span> 影响的字符会占据相同的位置。      </p>      <p class="para"> 支持以下字符集： <table class="doctable table">  <caption><strong>支持的字符集列表</strong></caption>     <thead>    <tr>     <th>字符集</th>     <th>别名</th>     <th>描述</th>    </tr>   </thead>   <tbody class="tbody">    <tr>     <td>ISO-8859-1</td>     <td>ISO8859-1</td>     <td>      西欧，Latin-1     </td>    </tr>    <tr>     <td>ISO-8859-5</td>     <td>ISO8859-5</td>     <td>      Little used cyrillic charset (Latin/Cyrillic).     </td>    </tr>    <tr>     <td>ISO-8859-15</td>     <td>ISO8859-15</td>     <td>      西欧，Latin-9。增加欧元符号，法语和芬兰语字母在 Latin-1(ISO-8859-1) 中缺失。     </td>    </tr>    <tr>     <td>UTF-8</td>     <td class="empty">&nbsp;</td>     <td>      ASCII 兼容的多字节 8 位 Unicode。     </td>    </tr>    <tr>     <td>cp866</td>     <td>ibm866, 866</td>     <td>      DOS 特有的西里尔编码。本字符集在 4.3.2 版本中得到支持。     </td>    </tr>    <tr>     <td>cp1251</td>     <td>Windows-1251, win-1251, 1251</td>     <td>      Windows 特有的西里尔编码。本字符集在 4.3.2 版本中得到支持。     </td>    </tr>    <tr>     <td>cp1252</td>     <td>Windows-1252, 1252</td>     <td>      Windows 特有的西欧编码。     </td>    </tr>    <tr>     <td>KOI8-R</td>     <td>koi8-ru, koi8r</td>     <td>      俄语。本字符集在 4.3.2 版本中得到支持。     </td>    </tr>    <tr>     <td>BIG5</td>     <td>950</td>     <td>      繁体中文，主要用于中国台湾省。     </td>    </tr>    <tr>     <td>GB2312</td>     <td>936</td>     <td>      简体中文，中国国家标准字符集。     </td>    </tr>    <tr>     <td>BIG5-HKSCS</td>     <td class="empty">&nbsp;</td>     <td>      繁体中文，附带香港扩展的 Big5 字符集。     </td>    </tr>    <tr>     <td>Shift_JIS</td>     <td>SJIS, 932</td>     <td>      日语     </td>    </tr>    <tr>     <td>EUC-JP</td>     <td>EUCJP</td>     <td>      日语     </td>    </tr>    <tr>     <td>MacRoman</td>     <td class="empty">&nbsp;</td>     <td>      Mac OS 使用的字符串。     </td>    </tr>    <tr>     <td><span>&#039;&#039;</span></td>     <td class="empty">&nbsp;</td>     <td>      An empty string activates detection from script encoding (Zend multibyte),      <a href="https://www.php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a> and current      locale (see <span class="function">{@link nl_langinfo()}</span> and      <span class="function">{@link setlocale()}</span>), in this order. Not recommended.     </td>    </tr>   </tbody>   </table> <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:   <span class="simpara">   其他字符集没有认可。将会使用默认编码并抛出异常。  </span> </p></blockquote></p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">double_encode</span></dt>     <dd>      <p class="para">       关闭 <span class="parameter" style="color:#3A95FF">double_encode</span> 时，PHP 不会转换现有的 HTML 实体，       默认是全部转换。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.htmlspecialchars-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   转换后的 <span class="type" style="color:#EAB766">string</span>。  </p>  <p class="para">   如果指定的编码 <span class="parameter" style="color:#3A95FF">encoding</span> 里，   <span class="parameter" style="color:#3A95FF">string</span> 包含了无效的代码单元序列，   没有设置 <strong><span>ENT_IGNORE</span></strong> 或者   <strong><span>ENT_SUBSTITUTE</span></strong> 标记的情况下，会返回空字符串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.htmlspecialchars-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.1.0</td>      <td>       <span class="parameter" style="color:#3A95FF">flags</span> 从 <strong><span>ENT_COMPAT</span></strong> 变更为 <strong><span>ENT_QUOTES</span></strong> | <strong><span>ENT_SUBSTITUTE</span></strong> | <strong><span>ENT_HTML401</span></strong>。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.htmlspecialchars-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">htmlspecialchars()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$new </span><span style="color: #007700">= </span><span style="color: #9876AA">htmlspecialchars</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;a href='test'&gt;Test&lt;/a&gt;"</span><span style="color: #007700">, </span><span style="color: #9876AA">ENT_QUOTES</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$new</span><span style="color: #007700">; </span><span style="color: #FF8000">// &amp;lt;a href=&amp;#039;test&amp;#039;&amp;gt;Test&amp;lt;/a&amp;gt;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.htmlspecialchars-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    注意，本函数不会转换以上列表以外的实体。    完整转换请参见 <span class="function">{@link htmlentities()}</span>。   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    如果 <span class="parameter" style="color:#3A95FF">flags</span> 的设置模糊易混淆，将遵循以下规则：   </p>   <p class="para">    <ul class="itemizedlist">     <li class="listitem">      <span class="simpara">       当 <strong><span>ENT_COMPAT</span></strong>、<strong><span>ENT_QUOTES</span></strong>、<strong><span>ENT_NOQUOTES</span></strong> 都没设置，       默认就是 <strong><span>ENT_NOQUOTES</span></strong>。      </span>     </li>     <li class="listitem">      <span class="simpara">       如果设置不止一个 <strong><span>ENT_COMPAT</span></strong>、 <strong><span>ENT_QUOTES</span></strong>、       <strong><span>ENT_NOQUOTES</span></strong> ，优先级最高的是 <strong><span>ENT_QUOTES</span></strong>，       其次是 <strong><span>ENT_COMPAT</span></strong>。      </span>     </li>     <li class="listitem">      <span class="simpara">       当 <strong><span>ENT_HTML401</span></strong>、 <strong><span>ENT_HTML5</span></strong>、       <strong><span>ENT_XHTML</span></strong>、 <strong><span>ENT_XML1</span></strong> 都没设置，默认是       <strong><span>ENT_HTML401</span></strong>。      </span>     </li>     <li class="listitem">      <span class="simpara">       如果设置不止一个 <strong><span>ENT_HTML401</span></strong>、 <strong><span>ENT_HTML5</span></strong>、       <strong><span>ENT_XHTML</span></strong>、 <strong><span>ENT_XML1</span></strong>，       优先级最高的是       <strong><span>ENT_HTML5</span></strong> 其次是 <strong><span>ENT_XHTML</span></strong>、<strong><span>ENT_XML1</span></strong> 和 <strong><span>ENT_HTML401</span></strong>。      </span>     </li>     <li class="listitem">      <span class="simpara">       如果设置不止一个 <strong><span>ENT_DISALLOWED</span></strong>、 <strong><span>ENT_IGNORE</span></strong>、       <strong><span>ENT_SUBSTITUTE</span></strong>，优先级最高的是 <strong><span>ENT_IGNORE</span></strong>，       其次是 <strong><span>ENT_SUBSTITUTE</span></strong>。      </span>     </li>    </ul>   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.htmlspecialchars-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link get_html_translation_table()} - 返回使用 htmlspecialchars 和 htmlentities 后的转换表</span></li>    <li class="member"><span class="function">{@link htmlspecialchars_decode()} - 将特殊的 HTML 实体转换回普通字符</span></li>    <li class="member"><span class="function">{@link strip_tags()} - 从字符串中去除 HTML 和 PHP 标签</span></li>    <li class="member"><span class="function">{@link htmlentities()} - 将字符转换为 HTML 转义字符</span></li>    <li class="member"><span class="function">{@link nl2br()} - 在字符串所有新行之前插入 HTML 换行标记</span></li>   </ul>  </span> </div></div>
 * @return string The converted string.*/
function htmlspecialchars(string $string, int $flags = ENT_QUOTES|ENT_SUBSTITUTE, ?string $encoding = null, bool $double_encode = true): string {}

/**
*<div id="function.htmlentities" class="refentry"> <div class="refnamediv">  <h1 class="refname">htmlentities</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">htmlentities</span> &mdash; <span class="dc-title">将字符转换为 HTML 转义字符</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.htmlentities-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>htmlentities</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$double_encode</span><span class="initializer"> = <strong><span>true</span></strong></span></span><br>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   本函数各方面都和 <span class="function">{@link htmlspecialchars()}</span> 一样，除了 <span class="function"><strong style="color:#CC7832">htmlentities()</strong></span> 会转换所有具有 HTML    实体的字符。<span class="function">{@link get_html_translation_table()}</span> 可根据提供的 <span class="parameter" style="color:#3A95FF">flags</span> 常量返回使用的翻译表。  </p>  <p class="para">   如果要解码（反向操作），可以使用 <span class="function">{@link html_entity_decode()}</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.htmlentities-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       输入字符。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       以下一组位掩码标记，用于设置如何处理引号、无效代码序列、使用文档的类型。默认是       <span>ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401</span>。       <table class="doctable table">        <caption><strong>有效 <span class="parameter" style="color:#3A95FF">flags</span> 标记常量</strong></caption>                 <thead>          <tr>           <th>常量名</th>           <th>描述</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td><strong><span>ENT_COMPAT</span></strong></td>           <td>会转换双引号，不转换单引号。</td>          </tr>          <tr>           <td><strong><span>ENT_QUOTES</span></strong></td>           <td>既转换双引号也转换单引号。</td>          </tr>          <tr>           <td><strong><span>ENT_NOQUOTES</span></strong></td>           <td>单/双引号都不转换</td>          </tr>          <tr>           <td><strong><span>ENT_IGNORE</span></strong></td>           <td>            静默丢弃无效的代码单元序列，而不是返回空字符串。            不建议使用此标记，            因为它<a href="http://unicode.org/reports/tr36/#Deletion_of_Noncharacters" class="link external">&raquo;&nbsp;可能有安全影响</a>。           </td>          </tr>          <tr>           <td><strong><span>ENT_SUBSTITUTE</span></strong></td>           <td>            替换无效的代码单元序列为 Unicode 代替符（Replacement Character），            U+FFFD (UTF-8) 或者 &amp;#xFFFD; (其他)，而不是返回空字符串。           </td>          </tr>          <tr>           <td><strong><span>ENT_DISALLOWED</span></strong></td>           <td>            为文档的无效代码点替换为  Unicode 代替符（Replacement Character）：            U+FFFD (UTF-8)，或 &amp;#xFFFD;（其他），而不是把它们留在原处。            比如以下情况下就很有用：要保证 XML 文档嵌入额外内容时格式合法。           </td>          </tr>          <tr>           <td><strong><span>ENT_HTML401</span></strong></td>           <td>            以 HTML 4.01 处理代码。           </td>          </tr>          <tr>           <td><strong><span>ENT_XML1</span></strong></td>           <td>            以 XML 1 处理代码。           </td>          </tr>          <tr>           <td><strong><span>ENT_XHTML</span></strong></td>           <td>            以 XHTML 处理代码。           </td>          </tr>          <tr>           <td><strong><span>ENT_HTML5</span></strong></td>           <td>            以 HTML 5 处理代码。           </td>          </tr>         </tbody>               </table>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>       <p class="para">  An optional argument defining the encoding used when converting characters. </p> <p class="para">  If omitted, <span class="parameter" style="color:#3A95FF">encoding</span> defaults to the value of the  <a href="https://www.php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a> configuration  option. </p> <p class="para">  Although this argument is technically optional, you are highly encouraged to  specify the correct value for your code  if the <a href="https://www.php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a>  configuration option may be set incorrectly for the given input. </p>      <p class="para"> 支持以下字符集： <table class="doctable table">  <caption><strong>支持的字符集列表</strong></caption>     <thead>    <tr>     <th>字符集</th>     <th>别名</th>     <th>描述</th>    </tr>   </thead>   <tbody class="tbody">    <tr>     <td>ISO-8859-1</td>     <td>ISO8859-1</td>     <td>      西欧，Latin-1     </td>    </tr>    <tr>     <td>ISO-8859-5</td>     <td>ISO8859-5</td>     <td>      Little used cyrillic charset (Latin/Cyrillic).     </td>    </tr>    <tr>     <td>ISO-8859-15</td>     <td>ISO8859-15</td>     <td>      西欧，Latin-9。增加欧元符号，法语和芬兰语字母在 Latin-1(ISO-8859-1) 中缺失。     </td>    </tr>    <tr>     <td>UTF-8</td>     <td class="empty">&nbsp;</td>     <td>      ASCII 兼容的多字节 8 位 Unicode。     </td>    </tr>    <tr>     <td>cp866</td>     <td>ibm866, 866</td>     <td>      DOS 特有的西里尔编码。本字符集在 4.3.2 版本中得到支持。     </td>    </tr>    <tr>     <td>cp1251</td>     <td>Windows-1251, win-1251, 1251</td>     <td>      Windows 特有的西里尔编码。本字符集在 4.3.2 版本中得到支持。     </td>    </tr>    <tr>     <td>cp1252</td>     <td>Windows-1252, 1252</td>     <td>      Windows 特有的西欧编码。     </td>    </tr>    <tr>     <td>KOI8-R</td>     <td>koi8-ru, koi8r</td>     <td>      俄语。本字符集在 4.3.2 版本中得到支持。     </td>    </tr>    <tr>     <td>BIG5</td>     <td>950</td>     <td>      繁体中文，主要用于中国台湾省。     </td>    </tr>    <tr>     <td>GB2312</td>     <td>936</td>     <td>      简体中文，中国国家标准字符集。     </td>    </tr>    <tr>     <td>BIG5-HKSCS</td>     <td class="empty">&nbsp;</td>     <td>      繁体中文，附带香港扩展的 Big5 字符集。     </td>    </tr>    <tr>     <td>Shift_JIS</td>     <td>SJIS, 932</td>     <td>      日语     </td>    </tr>    <tr>     <td>EUC-JP</td>     <td>EUCJP</td>     <td>      日语     </td>    </tr>    <tr>     <td>MacRoman</td>     <td class="empty">&nbsp;</td>     <td>      Mac OS 使用的字符串。     </td>    </tr>    <tr>     <td><span>&#039;&#039;</span></td>     <td class="empty">&nbsp;</td>     <td>      An empty string activates detection from script encoding (Zend multibyte),      <a href="https://www.php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a> and current      locale (see <span class="function">{@link nl_langinfo()}</span> and      <span class="function">{@link setlocale()}</span>), in this order. Not recommended.     </td>    </tr>   </tbody>   </table> <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:   <span class="simpara">   其他字符集没有认可。将会使用默认编码并抛出异常。  </span> </p></blockquote></p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">double_encode</span></dt>     <dd>      <p class="para">       关闭 <span class="parameter" style="color:#3A95FF">double_encode</span> 时，PHP 不会转换现有的 HTML 实体，       默认是全部转换。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.htmlentities-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回编码后的字符。  </p>  <p class="para">   如果指定的编码 <span class="parameter" style="color:#3A95FF">encoding</span> 里，   <span class="parameter" style="color:#3A95FF">string</span> 包含了无效的代码单元序列，   没有设置 <strong><span>ENT_IGNORE</span></strong> 或者   <strong><span>ENT_SUBSTITUTE</span></strong> 标记的情况下，会返回空字符串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.htmlentities-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.1.0</td>      <td>       <span class="parameter" style="color:#3A95FF">flags</span> 从 <strong><span>ENT_COMPAT</span></strong> 变更为 <strong><span>ENT_QUOTES</span></strong> | <strong><span>ENT_SUBSTITUTE</span></strong> | <strong><span>ENT_HTML401</span></strong>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">encoding</span> 现在可以为 null。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.htmlentities-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">htmlentities()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$str </span><span style="color: #007700">= </span><span style="color: #DD0000">"A 'quote' is &lt;b&gt;bold&lt;/b&gt;"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// 输出: A 'quote' is &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt;<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">htmlentities</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 输出: A &amp;#039;quote&amp;#039; is &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt;<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">htmlentities</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #9876AA">ENT_QUOTES</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>    <p class="para">   <div class="example" id="">    <p><strong>示例 #2 <strong><span>ENT_IGNORE</span></strong> 用法示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$str </span><span style="color: #007700">= </span><span style="color: #DD0000">"\x8F!!!"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// 输出空 string<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">htmlentities</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #9876AA">ENT_QUOTES</span><span style="color: #007700">, </span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 输出 "!!!"<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">htmlentities</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #9876AA">ENT_QUOTES </span><span style="color: #007700">| </span><span style="color: #9876AA">ENT_IGNORE</span><span style="color: #007700">, </span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.htmlentities-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link html_entity_decode()} - Convert HTML entities to their corresponding characters</span></li>    <li class="member"><span class="function">{@link get_html_translation_table()} - 返回使用 htmlspecialchars 和 htmlentities 后的转换表</span></li>    <li class="member"><span class="function">{@link htmlspecialchars()} - 将特殊字符转换为 HTML 实体</span></li>    <li class="member"><span class="function">{@link nl2br()} - 在字符串所有新行之前插入 HTML 换行标记</span></li>    <li class="member"><span class="function">{@link urlencode()} - 编码 URL 字符串</span></li>   </ul>  </span> </div></div>
 * @return string the encoded string.*/
function htmlentities(string $string, int $flags = ENT_QUOTES|ENT_SUBSTITUTE, ?string $encoding, bool $double_encode = true): string {}

/**
*<div id="function.html-entity-decode" class="refentry"> <div class="refnamediv">  <h1 class="refname">html_entity_decode</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">html_entity_decode</span> &mdash; <span class="dc-title">Convert HTML entities to their corresponding characters</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.html-entity-decode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>html_entity_decode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">html_entity_decode()</strong></span> is the opposite of   <span class="function">{@link htmlentities()}</span> in that it converts HTML entities   in the <span class="parameter" style="color:#3A95FF">string</span> to their corresponding characters.  </p>  <p class="para">   More precisely, this function decodes all the entities (including all numeric   entities) that a) are necessarily valid for the chosen document type — i.e.,   for XML, this function does not decode named entities that might be defined   in some DTD — and b) whose character or characters are in the coded character   set associated with the chosen encoding and are permitted in the chosen   document type. All other entities are left as is.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.html-entity-decode-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       The input string.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       A bitmask of one or more of the following flags, which specify how to handle quotes and       which document type to use. The default is <span>ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401</span>.       <table class="doctable table">        <caption><strong>Available <span class="parameter" style="color:#3A95FF">flags</span> constants</strong></caption>                 <thead>          <tr>           <th>Constant Name</th>           <th>Description</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td><strong><span>ENT_COMPAT</span></strong></td>           <td>Will convert double-quotes and leave single-quotes alone.</td>          </tr>          <tr>           <td><strong><span>ENT_QUOTES</span></strong></td>           <td>Will convert both double and single quotes.</td>          </tr>          <tr>           <td><strong><span>ENT_NOQUOTES</span></strong></td>           <td>Will leave both double and single quotes unconverted.</td>          </tr>          <tr>           <td><strong><span>ENT_SUBSTITUTE</span></strong></td>           <td>            Replace invalid code unit sequences with a Unicode Replacement Character            U+FFFD (UTF-8) or &amp;#xFFFD; (otherwise) instead of returning an empty string.           </td>          </tr>          <tr>           <td><strong><span>ENT_HTML401</span></strong></td>           <td>            Handle code as HTML 4.01.           </td>          </tr>          <tr>           <td><strong><span>ENT_XML1</span></strong></td>           <td>            Handle code as XML 1.           </td>          </tr>          <tr>           <td><strong><span>ENT_XHTML</span></strong></td>           <td>            Handle code as XHTML.           </td>          </tr>          <tr>           <td><strong><span>ENT_HTML5</span></strong></td>           <td>            Handle code as HTML 5.           </td>          </tr>         </tbody>               </table>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>       <p class="para">  An optional argument defining the encoding used when converting characters. </p> <p class="para">  If omitted, <span class="parameter" style="color:#3A95FF">encoding</span> defaults to the value of the  <a href="https://www.php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a> configuration  option. </p> <p class="para">  Although this argument is technically optional, you are highly encouraged to  specify the correct value for your code  if the <a href="https://www.php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a>  configuration option may be set incorrectly for the given input. </p>      <p class="para"> 支持以下字符集： <table class="doctable table">  <caption><strong>支持的字符集列表</strong></caption>     <thead>    <tr>     <th>字符集</th>     <th>别名</th>     <th>描述</th>    </tr>   </thead>   <tbody class="tbody">    <tr>     <td>ISO-8859-1</td>     <td>ISO8859-1</td>     <td>      西欧，Latin-1     </td>    </tr>    <tr>     <td>ISO-8859-5</td>     <td>ISO8859-5</td>     <td>      Little used cyrillic charset (Latin/Cyrillic).     </td>    </tr>    <tr>     <td>ISO-8859-15</td>     <td>ISO8859-15</td>     <td>      西欧，Latin-9。增加欧元符号，法语和芬兰语字母在 Latin-1(ISO-8859-1) 中缺失。     </td>    </tr>    <tr>     <td>UTF-8</td>     <td class="empty">&nbsp;</td>     <td>      ASCII 兼容的多字节 8 位 Unicode。     </td>    </tr>    <tr>     <td>cp866</td>     <td>ibm866, 866</td>     <td>      DOS 特有的西里尔编码。本字符集在 4.3.2 版本中得到支持。     </td>    </tr>    <tr>     <td>cp1251</td>     <td>Windows-1251, win-1251, 1251</td>     <td>      Windows 特有的西里尔编码。本字符集在 4.3.2 版本中得到支持。     </td>    </tr>    <tr>     <td>cp1252</td>     <td>Windows-1252, 1252</td>     <td>      Windows 特有的西欧编码。     </td>    </tr>    <tr>     <td>KOI8-R</td>     <td>koi8-ru, koi8r</td>     <td>      俄语。本字符集在 4.3.2 版本中得到支持。     </td>    </tr>    <tr>     <td>BIG5</td>     <td>950</td>     <td>      繁体中文，主要用于中国台湾省。     </td>    </tr>    <tr>     <td>GB2312</td>     <td>936</td>     <td>      简体中文，中国国家标准字符集。     </td>    </tr>    <tr>     <td>BIG5-HKSCS</td>     <td class="empty">&nbsp;</td>     <td>      繁体中文，附带香港扩展的 Big5 字符集。     </td>    </tr>    <tr>     <td>Shift_JIS</td>     <td>SJIS, 932</td>     <td>      日语     </td>    </tr>    <tr>     <td>EUC-JP</td>     <td>EUCJP</td>     <td>      日语     </td>    </tr>    <tr>     <td>MacRoman</td>     <td class="empty">&nbsp;</td>     <td>      Mac OS 使用的字符串。     </td>    </tr>    <tr>     <td><span>&#039;&#039;</span></td>     <td class="empty">&nbsp;</td>     <td>      An empty string activates detection from script encoding (Zend multibyte),      <a href="https://www.php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a> and current      locale (see <span class="function">{@link nl_langinfo()}</span> and      <span class="function">{@link setlocale()}</span>), in this order. Not recommended.     </td>    </tr>   </tbody>   </table> <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:   <span class="simpara">   其他字符集没有认可。将会使用默认编码并抛出异常。  </span> </p></blockquote></p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.html-entity-decode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the decoded string.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.html-entity-decode-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.1.0</td>      <td>       <span class="parameter" style="color:#3A95FF">flags</span> changed from <strong><span>ENT_COMPAT</span></strong> to <strong><span>ENT_QUOTES</span></strong> | <strong><span>ENT_SUBSTITUTE</span></strong> | <strong><span>ENT_HTML401</span></strong>.      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">encoding</span> is nullable now.      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.html-entity-decode-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Decoding HTML entities</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$orig </span><span style="color: #007700">= </span><span style="color: #DD0000">"I'll \"walk\" the &lt;b&gt;dog&lt;/b&gt; now"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$a </span><span style="color: #007700">= </span><span style="color: #9876AA">htmlentities</span><span style="color: #007700">(</span><span style="color: #9876AA">$orig</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$b </span><span style="color: #007700">= </span><span style="color: #9876AA">html_entity_decode</span><span style="color: #007700">(</span><span style="color: #9876AA">$a</span><span style="color: #007700">);<br /><br />echo </span><span style="color: #9876AA">$a</span><span style="color: #007700">; </span><span style="color: #FF8000">// I'll &amp;quot;walk&amp;quot; the &amp;lt;b&amp;gt;dog&amp;lt;/b&amp;gt; now<br /><br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$b</span><span style="color: #007700">; </span><span style="color: #FF8000">// I'll "walk" the &lt;b&gt;dog&lt;/b&gt; now<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>     </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.html-entity-decode-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    You might wonder why trim(html_entity_decode(&#039;&amp;nbsp;&#039;)); doesn&#039;t    reduce the string to an empty string, that&#039;s because the &#039;&amp;nbsp;&#039;    entity is not ASCII code 32 (which is stripped by    <span class="function">{@link trim()}</span>) but ASCII code 160 (0xa0) in the default ISO    8859-1 encoding.   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.html-entity-decode-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link htmlentities()} - 将字符转换为 HTML 转义字符</span></li>    <li class="member"><span class="function">{@link htmlspecialchars()} - 将特殊字符转换为 HTML 实体</span></li>    <li class="member"><span class="function">{@link get_html_translation_table()} - 返回使用 htmlspecialchars 和 htmlentities 后的转换表</span></li>    <li class="member"><span class="function">{@link urldecode()} - 解码已编码的 URL 字符串</span></li>   </ul>  </span> </div></div>
 * @return string the decoded string.*/
function html_entity_decode(string $string, int $flags = ENT_QUOTES|ENT_SUBSTITUTE, ?string $encoding): string {}

/**
*<div id="function.htmlspecialchars-decode" class="refentry"> <div class="refnamediv">  <h1 class="refname">htmlspecialchars_decode</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">htmlspecialchars_decode</span> &mdash; <span class="dc-title">   将特殊的 HTML 实体转换回普通字符  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.htmlspecialchars-decode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>htmlspecialchars_decode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   此函数的作用和 <span class="function">{@link htmlspecialchars()}</span> 刚好相反。它将特殊的HTML实体转换回普通字符。  </p>  <p class="para">   被转换的实体有： <span>&amp;amp;</span>，   <span>&amp;quot;</span> （没有设置<strong><span>ENT_NOQUOTES</span></strong> 时）,   <span>&amp;#039;</span> （设置了 <strong><span>ENT_QUOTES</span></strong> 时），   <span>&amp;lt;</span> 以及<span>&amp;gt;</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.htmlspecialchars-decode-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       要解码的字符串      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       用下列标记中的一个或多个作为一个位掩码，来指定如何处理引号和使用哪种文档类型。默认为 <span>ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401</span>。       <table class="doctable table">        <caption><strong>有效的 <span class="parameter" style="color:#3A95FF">flags</span> 常量</strong></caption>                 <thead>          <tr>           <th>常量名</th>           <th>说明</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td><strong><span>ENT_COMPAT</span></strong></td>           <td>转换双引号，不转换单引号。</td>          </tr>          <tr>           <td><strong><span>ENT_QUOTES</span></strong></td>           <td>单引号和双引号都转换。</td>          </tr>          <tr>           <td><strong><span>ENT_NOQUOTES</span></strong></td>           <td>单引号和双引号都不转换。</td>          </tr>          <tr>           <td><strong><span>ENT_SUBSTITUTE</span></strong></td>           <td>            使用 Unicode 替换符 U+FFFD (UTF-8) 或 &amp;#xFFFD 替换无效的码区序列（code unit sequence）。而不是返回空字符串。           </td>          </tr>          <tr>           <td><strong><span>ENT_HTML401</span></strong></td>           <td>            作为HTML 4.01编码处理。           </td>          </tr>          <tr>           <td><strong><span>ENT_XML1</span></strong></td>           <td>            作为XML 1编码处理。           </td>          </tr>          <tr>           <td><strong><span>ENT_XHTML</span></strong></td>           <td>            作为XHTML编码处理。           </td>          </tr>          <tr>           <td><strong><span>ENT_HTML5</span></strong></td>           <td>            作为HTML 5编码处理。           </td>          </tr>         </tbody>               </table>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.htmlspecialchars-decode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回解码后的字符串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.htmlspecialchars-decode-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.1.0</td>      <td>       <span class="parameter" style="color:#3A95FF">flags</span> 从 <strong><span>ENT_COMPAT</span></strong> 变更为<strong><span>ENT_QUOTES</span></strong>       | <strong><span>ENT_SUBSTITUTE</span></strong> | <strong><span>ENT_HTML401</span></strong>。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.htmlspecialchars-decode-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">htmlspecialchars_decode()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$str </span><span style="color: #007700">= </span><span style="color: #DD0000">"&lt;p&gt;this -&amp;gt; &amp;quot;&lt;/p&gt;\n"</span><span style="color: #007700">;<br /><br />echo </span><span style="color: #9876AA">htmlspecialchars_decode</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 注意，这里的引号不会被转换<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">htmlspecialchars_decode</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #9876AA">ENT_NOQUOTES</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>&lt;p&gt;this -&gt; &quot;&lt;/p&gt;<br>&lt;p&gt;this -&gt; &amp;quot;&lt;/p&gt;<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.htmlspecialchars-decode-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link htmlspecialchars()} - 将特殊字符转换为 HTML 实体</span></li>    <li class="member"><span class="function">{@link html_entity_decode()} - Convert HTML entities to their corresponding characters</span></li>    <li class="member"><span class="function">{@link get_html_translation_table()} - 返回使用 htmlspecialchars 和 htmlentities 后的转换表</span></li>   </ul>  </span> </div></div>
 * @return string the decoded string.*/
function htmlspecialchars_decode(string $string, int $flags = ENT_QUOTES|ENT_SUBSTITUTE): string {}

/**
*<div id="function.get-html-translation-table" class="refentry"> <div class="refnamediv">  <h1 class="refname">get_html_translation_table</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">get_html_translation_table</span> &mdash; <span class="dc-title">返回使用 <span class="function">{@link htmlspecialchars()}</span> 和 <span class="function">{@link htmlentities()}</span> 后的转换表</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.get-html-translation-table-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>get_html_translation_table</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$table</span><span class="initializer"> = <strong><span>HTML_SPECIALCHARS</span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = &quot;UTF-8&quot;</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">get_html_translation_table()</strong></span> 将返回 <span class="function">{@link htmlspecialchars()}</span> 和   <span class="function">{@link htmlentities()}</span> 处理后的转换表。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    特殊字符可以使用多种转换方式。 例如：    <span>&quot;</span> 可以被转换成 <span>&amp;quot;</span>,    <span>&amp;#34;</span> 或者 <span>&amp;#x22</span>.    <span class="function"><strong style="color:#CC7832">get_html_translation_table()</strong></span> 返回其中最常用的。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.get-html-translation-table-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">table</span></dt>     <dd>      <p class="para">       有两个新的常量 (<strong><span>HTML_ENTITIES</span></strong>,       <strong><span>HTML_SPECIALCHARS</span></strong>) 允许你指定你想要的表。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       A bitmask of one or more of the following flags, which specify which quotes the       table will contain as well as which document type the table is for. The default is       <span>ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401</span>.       <table class="doctable table">        <caption><strong>可用的 <span class="parameter" style="color:#3A95FF">flags</span> 常量</strong></caption>                 <thead>          <tr>           <th>常量名</th>           <th>说明</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td><strong><span>ENT_COMPAT</span></strong></td>           <td>表格将包含双引号但不包含单引号实体。</td>          </tr>          <tr>           <td><strong><span>ENT_QUOTES</span></strong></td>           <td>表格将包含双引号和单引号实体。</td>          </tr>          <tr>           <td><strong><span>ENT_NOQUOTES</span></strong></td>           <td>表格不包含双引号实体，也不包含单引号实体。</td>          </tr>          <tr>           <td><strong><span>ENT_SUBSTITUTE</span></strong></td>           <td>            Replace invalid code unit sequences with a Unicode Replacement Character            U+FFFD (UTF-8) or &amp;#xFFFD; (otherwise) instead of returning an empty string.           </td>          </tr>          <tr>           <td><strong><span>ENT_HTML401</span></strong></td>           <td>HTML 4.01 表格。</td>          </tr>          <tr>           <td><strong><span>ENT_XML1</span></strong></td>           <td>XML 1 表格。</td>          </tr>          <tr>           <td><strong><span>ENT_XHTML</span></strong></td>           <td>XHTML 表格。</td>          </tr>          <tr>           <td><strong><span>ENT_HTML5</span></strong></td>           <td>HTML 5 表格。</td>          </tr>         </tbody>               </table>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para">       要使用的编码。如果省略，则此参数的默认值是 UTF-8。      </p>      <p class="para"> 支持以下字符集： <table class="doctable table">  <caption><strong>支持的字符集列表</strong></caption>     <thead>    <tr>     <th>字符集</th>     <th>别名</th>     <th>描述</th>    </tr>   </thead>   <tbody class="tbody">    <tr>     <td>ISO-8859-1</td>     <td>ISO8859-1</td>     <td>      西欧，Latin-1     </td>    </tr>    <tr>     <td>ISO-8859-5</td>     <td>ISO8859-5</td>     <td>      Little used cyrillic charset (Latin/Cyrillic).     </td>    </tr>    <tr>     <td>ISO-8859-15</td>     <td>ISO8859-15</td>     <td>      西欧，Latin-9。增加欧元符号，法语和芬兰语字母在 Latin-1(ISO-8859-1) 中缺失。     </td>    </tr>    <tr>     <td>UTF-8</td>     <td class="empty">&nbsp;</td>     <td>      ASCII 兼容的多字节 8 位 Unicode。     </td>    </tr>    <tr>     <td>cp866</td>     <td>ibm866, 866</td>     <td>      DOS 特有的西里尔编码。本字符集在 4.3.2 版本中得到支持。     </td>    </tr>    <tr>     <td>cp1251</td>     <td>Windows-1251, win-1251, 1251</td>     <td>      Windows 特有的西里尔编码。本字符集在 4.3.2 版本中得到支持。     </td>    </tr>    <tr>     <td>cp1252</td>     <td>Windows-1252, 1252</td>     <td>      Windows 特有的西欧编码。     </td>    </tr>    <tr>     <td>KOI8-R</td>     <td>koi8-ru, koi8r</td>     <td>      俄语。本字符集在 4.3.2 版本中得到支持。     </td>    </tr>    <tr>     <td>BIG5</td>     <td>950</td>     <td>      繁体中文，主要用于中国台湾省。     </td>    </tr>    <tr>     <td>GB2312</td>     <td>936</td>     <td>      简体中文，中国国家标准字符集。     </td>    </tr>    <tr>     <td>BIG5-HKSCS</td>     <td class="empty">&nbsp;</td>     <td>      繁体中文，附带香港扩展的 Big5 字符集。     </td>    </tr>    <tr>     <td>Shift_JIS</td>     <td>SJIS, 932</td>     <td>      日语     </td>    </tr>    <tr>     <td>EUC-JP</td>     <td>EUCJP</td>     <td>      日语     </td>    </tr>    <tr>     <td>MacRoman</td>     <td class="empty">&nbsp;</td>     <td>      Mac OS 使用的字符串。     </td>    </tr>    <tr>     <td><span>&#039;&#039;</span></td>     <td class="empty">&nbsp;</td>     <td>      An empty string activates detection from script encoding (Zend multibyte),      <a href="https://www.php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset</a> and current      locale (see <span class="function">{@link nl_langinfo()}</span> and      <span class="function">{@link setlocale()}</span>), in this order. Not recommended.     </td>    </tr>   </tbody>   </table> <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:   <span class="simpara">   其他字符集没有认可。将会使用默认编码并抛出异常。  </span> </p></blockquote></p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.get-html-translation-table-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   将转换表作为数组返回，原始字符为键，实体为值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.get-html-translation-table-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.1.0</td>      <td>       <span class="parameter" style="color:#3A95FF">flags</span> 从 <strong><span>ENT_COMPAT</span></strong> 更改为 <strong><span>ENT_QUOTES</span></strong> | <strong><span>ENT_SUBSTITUTE</span></strong> | <strong><span>ENT_HTML401</span></strong>。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.get-html-translation-table-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 转换表示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">get_html_translation_table</span><span style="color: #007700">(</span><span style="color: #9876AA">HTML_ENTITIES</span><span style="color: #007700">, </span><span style="color: #9876AA">ENT_QUOTES </span><span style="color: #007700">| </span><span style="color: #9876AA">ENT_HTML5</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(1510) {<br>  [&quot;<br>&quot;]=&gt;<br>  string(9) &quot;&amp;NewLine;&quot;<br>  [&quot;!&quot;]=&gt;<br>  string(6) &quot;&amp;excl;&quot;<br>  [&quot;&quot;&quot;]=&gt;<br>  string(6) &quot;&amp;quot;&quot;<br>  [&quot;#&quot;]=&gt;<br>  string(5) &quot;&amp;num;&quot;<br>  [&quot;$&quot;]=&gt;<br>  string(8) &quot;&amp;dollar;&quot;<br>  [&quot;%&quot;]=&gt;<br>  string(8) &quot;&amp;percnt;&quot;<br>  [&quot;&amp;&quot;]=&gt;<br>  string(5) &quot;&amp;amp;&quot;<br>  [&quot;&#039;&quot;]=&gt;<br>  string(6) &quot;&amp;apos;&quot;<br>  // ...<br>}<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.get-html-translation-table-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link htmlspecialchars()} - 将特殊字符转换为 HTML 实体</span></li>    <li class="member"><span class="function">{@link htmlentities()} - 将字符转换为 HTML 转义字符</span></li>    <li class="member"><span class="function">{@link html_entity_decode()} - Convert HTML entities to their corresponding characters</span></li>   </ul>  </span> </div></div>
 * @return array the translation table as an array.*/
function get_html_translation_table(
    int $table = 0,
    int $flags = ENT_QUOTES|ENT_SUBSTITUTE,
    #[PhpStormStubsElementAvailable(from: '7.0')] string $encoding = "UTF-8"
): array {}

/**
*<div id="function.sha1" class="refentry"> <div class="refnamediv">  <h1 class="refname">sha1</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">sha1</span> &mdash; <span class="dc-title">计算字符串的 sha1 散列值</span></p> </div>  <div id="function.sha1-refsynopsisdiv">  <div class="warning"><strong class="warning">警告</strong> <p class="para">  由于此函数依赖的算法已不足够复杂,不推荐使用此函数对明文密码加密。详细内容参见  <a href="https://www.php.net/manual/zh/faq.passwords.php#faq.passwords.fasthash" class="link">这里</a>。 </p></div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.sha1-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sha1</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$binary</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="simpara">   使用 <a href="http://www.faqs.org/rfcs/rfc3174" class="link external">&raquo;&nbsp;美国安全散列算法 1</a> 计算字符串的 sha1 散列值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.sha1-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       输入字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">binary</span></dt>     <dd>      <p class="para">       如果可选的 <span class="parameter" style="color:#3A95FF">binary</span> 参数被设置为 <strong><span>true</span></strong>，       那么 sha1 摘要将以 20 字符长度的原始二进制格式返回，       否则返回值为 40 字符长度的十六进制数。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.sha1-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   以字符串形式返回 sha1 散列值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.sha1-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">sha1()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$str </span><span style="color: #007700">= </span><span style="color: #DD0000">'apple'</span><span style="color: #007700">;<br /><br />if (</span><span style="color: #9876AA">sha1</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">) === </span><span style="color: #DD0000">'d0be2dc421be4fcd0172e5afceea3970e2f3d940'</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"Would you like a green or red apple?"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.sha1-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link sha1_file()} - 计算文件的 sha1 散列值</span></li>    <li class="member"><span class="function">{@link crc32()} - 计算一个字符串的 crc32 多项式</span></li>    <li class="member"><span class="function">{@link md5()} - 计算字符串的 MD5 散列值</span></li>    <li class="member"><span class="function">{@link hash()} - 生成散列值（消息摘要）</span></li>    <li class="member"><span class="function">{@link crypt()} - 单向字符串散列</span></li>    <li class="member"><span class="function">{@link password_hash()} - 创建密码的散列（hash）</span></li>   </ul>  </span> </div></div>
 * @return string the sha1 hash as a string.*/
function sha1(string $string, bool $binary = false): string {}

/**
*<div id="function.sha1-file" class="refentry"> <div class="refnamediv">  <h1 class="refname">sha1_file</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">sha1_file</span> &mdash; <span class="dc-title">计算文件的 sha1 散列值</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.sha1-file-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>sha1_file</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$binary</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="simpara">   使用 <a href="http://www.faqs.org/rfcs/rfc3174" class="link external">&raquo;&nbsp;美国安全散列算法 1</a> 计算   <span class="parameter" style="color:#3A95FF">filename</span> 指定的文件的 sha1 散列值，并返回该散列值。   该散列值为 40 字符长度的十六进制数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.sha1-file-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       要散列的文件的文件名。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">binary</span></dt>     <dd>      <p class="para">       为 <strong><span>true</span></strong> 时，返回 20 字符长度的原始二进制格式摘要。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.sha1-file-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功返回字符串，否则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.sha1-file-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">sha1_file()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">foreach(</span><span style="color: #9876AA">glob</span><span style="color: #007700">(</span><span style="color: #DD0000">'/home/Kalle/myproject//.php'</span><span style="color: #007700">) as </span><span style="color: #9876AA">$ent</span><span style="color: #007700">)<br />{<br />    if(</span><span style="color: #9876AA">is_dir</span><span style="color: #007700">(</span><span style="color: #9876AA">$ent</span><span style="color: #007700">))<br />    {<br />        continue;<br />    }<br /><br />    echo </span><span style="color: #9876AA">$ent </span><span style="color: #007700">. </span><span style="color: #DD0000">' (SHA1: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">sha1_file</span><span style="color: #007700">(</span><span style="color: #9876AA">$ent</span><span style="color: #007700">) . </span><span style="color: #DD0000">')'</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.sha1-file-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link sha1()} - 计算字符串的 sha1 散列值</span></li>    <li class="member"><span class="function">{@link md5_file()} - 计算指定文件的 MD5 散列值</span></li>    <li class="member"><span class="function">{@link crc32()} - 计算一个字符串的 crc32 多项式</span></li>   </ul>  </span> </div></div>
 * @return string|false a string on success, false otherwise.*/
function sha1_file(string $filename, bool $binary = false): string|false {}

/**
*<div id="function.md5" class="refentry"> <div class="refnamediv">  <h1 class="refname">md5</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">md5</span> &mdash; <span class="dc-title">计算字符串的 MD5 散列值</span></p> </div>  <div id="function.md5-refsynopsisdiv">  <div class="warning"><strong class="warning">警告</strong> <p class="para">  由于此函数依赖的算法已不足够复杂,不推荐使用此函数对明文密码加密。详细内容参见  <a href="https://www.php.net/manual/zh/faq.passwords.php#faq.passwords.fasthash" class="link">这里</a>。 </p></div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.md5-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>md5</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$binary</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   使用 <a href="http://www.faqs.org/rfcs/rfc1321" class="link external">&raquo;&nbsp;RSA 数据安全公司的 MD5 消息摘要算法</a> 计算   <span class="parameter" style="color:#3A95FF">string</span> 的 MD5 散列值，并返回该散列值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.md5-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       要计算的字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">binary</span></dt>     <dd>      <p class="para">       如果可选的 <span class="parameter" style="color:#3A95FF">binary</span> 被设置为 <strong><span>true</span></strong>，那么 md5 摘要将以 16 字符长度的原始二进制格式返回。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.md5-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   以 32 字符的十六进制数形式返回散列值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.md5-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">md5()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$str </span><span style="color: #007700">= </span><span style="color: #DD0000">'apple'</span><span style="color: #007700">;<br /><br />if (</span><span style="color: #9876AA">md5</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">) === </span><span style="color: #DD0000">'1f3870be274f6c49b3e31a0c6728957f'</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"Would you like a green or red apple?"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.md5-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link md5_file()} - 计算指定文件的 MD5 散列值</span></li>    <li class="member"><span class="function">{@link sha1_file()} - 计算文件的 sha1 散列值</span></li>    <li class="member"><span class="function">{@link crc32()} - 计算一个字符串的 crc32 多项式</span></li>    <li class="member"><span class="function">{@link sha1()} - 计算字符串的 sha1 散列值</span></li>    <li class="member"><span class="function">{@link hash()} - 生成散列值（消息摘要）</span></li>    <li class="member"><span class="function">{@link crypt()} - 单向字符串散列</span></li>    <li class="member"><span class="function">{@link password_hash()} - 创建密码的散列（hash）</span></li>   </ul>  </span> </div></div>
 * @return string the hash as a 32-character hexadecimal number.*/
function md5(string $string, bool $binary = false): string {}

/**
*<div id="function.md5-file" class="refentry"> <div class="refnamediv">  <h1 class="refname">md5_file</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">md5_file</span> &mdash; <span class="dc-title">计算指定文件的 MD5 散列值</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.md5-file-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>md5_file</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$binary</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   使用 <a href="http://www.faqs.org/rfcs/rfc1321" class="link external">&raquo;&nbsp;RSA 数据安全公司的 MD5 消息摘要算法</a> 计算   <span class="parameter" style="color:#3A95FF">filename</span> 参数指定的文件的 MD5 散列值，并返回该散列值。   该散列值是 32 字符的十六进制数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.md5-file-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       文件名      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">binary</span></dt>     <dd>      <p class="para">       为 <strong><span>true</span></strong> 时，返回 16 字符长度的原始二进制格式的摘要。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.md5-file-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功返回字符串，否则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.md5-file-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">md5_file()</strong></span> 使用示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$file </span><span style="color: #007700">= </span><span style="color: #DD0000">'php-5.3.0alpha2-Win32-VC9-x64.zip'</span><span style="color: #007700">;<br /><br />echo </span><span style="color: #DD0000">'MD5 file hash of ' </span><span style="color: #007700">. </span><span style="color: #9876AA">$file </span><span style="color: #007700">. </span><span style="color: #DD0000">': ' </span><span style="color: #007700">. </span><span style="color: #9876AA">md5_file</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.md5-file-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link md5()} - 计算字符串的 MD5 散列值</span></li>    <li class="member"><span class="function">{@link sha1_file()} - 计算文件的 sha1 散列值</span></li>    <li class="member"><span class="function">{@link crc32()} - 计算一个字符串的 crc32 多项式</span></li>   </ul>  </span> </div></div>
 * @return string|false a string on success, false otherwise.*/
function md5_file(string $filename, bool $binary = false): string|false {}

/**
*<div id="function.crc32" class="refentry"> <div class="refnamediv">  <h1 class="refname">crc32</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.1, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">crc32</span> &mdash; <span class="dc-title">计算一个字符串的 crc32 多项式</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.crc32-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>crc32</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   生成 <span class="parameter" style="color:#3A95FF">string</span> 的 32 位循环冗余校验和多项式。这通常用于检查正在传输的数据是否完整。  </p>  <div class="warning"><strong class="warning">警告</strong>   <p class="simpara">    由于 PHP 的整数类型是有符号的，所以在 32 位系统上许多 crc32 校验和将产生负整数。不过在    64 位上所有 <span class="function"><strong style="color:#CC7832">crc32()</strong></span> 的结果将都是正整数。   </p>   <p class="simpara">    因此需要使用 <span class="function">{@link sprintf()}</span> 或 <span class="function">{@link printf()}</span>    的“%u”格式标志符获取十进制格式的无符号 crc32 校验和的字符串表示形式。   </p>   <p class="simpara">    对于十六进制的校验和可以使用 <span class="function">{@link sprintf()}</span> 或 <span class="function">{@link printf()}</span>    的“%x”格式标志符或 <span class="function">{@link dechex()}</span> 转换程序，这两个函数负责将    <span class="function"><strong style="color:#CC7832">crc32()</strong></span> 结果转为无符号整数。   </p>   <p class="simpara">    64 位的设备也会返回负数，更高的结果值会破坏十六进制转换，因为负数会得到额外的    0xFFFFFFFF######## 偏移量。由于十六进制似乎是最常见的用例，所以决定不破坏该原则，即使从 32    位移动到 64 位时破坏了大约 50% 的十进制直接比较。   </p>   <p class="simpara">    回想一下，让函数返回整数可能不是最好的主意，而立即返回十六进制的字符串（例如    <span class="function">{@link md5()}</span>）可能是更好的开始。   </p>   <p class="simpara">    可移植方案可以考虑通用的 <span class="function">{@link hash()}</span>。<span>hash(&quot;crc32b&quot;, $str)</span>    返回跟 <span>str_pad(dechex(crc32($str)), 8, &#039;0&#039;, STR_PAD_LEFT)</span> 相同的字符串。   </p>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.crc32-parameters">  <h3 class="title">参数</h3>   <span>    <dl>           <dt><span class="parameter" style="color:#3A95FF">string</span></dt>      <dd>       <p class="para">        要校验的数据。       </p>      </dd>         </dl>   </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.crc32-returnvalues">  <h3 class="title">返回值</h3>   <p class="para">    以整数形式返回 <span class="parameter" style="color:#3A95FF">string</span> 的 crc32 校验和。   </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.crc32-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 显示 crc32 校验和</strong></p>    <div class="example-contents"><p>     示例中演示了如何使用 <span class="function">{@link printf()}</span>     函数打印转换后的校验和：    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$checksum </span><span style="color: #007700">= </span><span style="color: #9876AA">crc32</span><span style="color: #007700">(</span><span style="color: #DD0000">"The quick brown fox jumped over the lazy dog."</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%u\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$checksum</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.crc32-seealso">  <h3 class="title">参见</h3>   <span>    <ul class="simplelist">     <li class="member"><span class="function">{@link hash()} - 生成散列值（消息摘要）</span></li>     <li class="member"><span class="function">{@link md5()} - 计算字符串的 MD5 散列值</span></li>     <li class="member"><span class="function">{@link sha1()} - 计算字符串的 sha1 散列值</span></li>    </ul>   </span> </div></div>
 * @return int the crc32 checksum of str as an integer..1*/
function crc32(string $string): int {}

/**
*<div id="function.iptcparse" class="refentry"> <div class="refnamediv">  <h1 class="refname">iptcparse</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">iptcparse</span> &mdash; <span class="dc-title">将二进制 IPTC 块解析为单个标签</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.iptcparse-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>iptcparse</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$iptc_block</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   将 <a href="http://www.iptc.org/" class="link external">&raquo;&nbsp;IPTC</a> 块解析为单个标签。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.iptcparse-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">iptc_block</span></dt>     <dd>      <p class="para">       二进制的 IPTC 块。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.iptcparse-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个数组，用 tagmarker 作为索引，以 value 为值。如果出错或未发现 IPTC 数据则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.iptcparse-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 iptcparse() 与 <span class="function">{@link getimagesize()}</span> 一起使用</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$size </span><span style="color: #007700">= </span><span style="color: #9876AA">getimagesize</span><span style="color: #007700">(</span><span style="color: #DD0000">'./test.jpg'</span><span style="color: #007700">, </span><span style="color: #9876AA">$info</span><span style="color: #007700">);<br />if(isset(</span><span style="color: #9876AA">$info</span><span style="color: #007700">[</span><span style="color: #DD0000">'APP13'</span><span style="color: #007700">]))<br />{<br />    </span><span style="color: #9876AA">$iptc </span><span style="color: #007700">= </span><span style="color: #9876AA">iptcparse</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">[</span><span style="color: #DD0000">'APP13'</span><span style="color: #007700">]);<br />    </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$iptc</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.iptcparse-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">此函数不需要 GD 图象库。</p></p></blockquote> </div></div>
 * @return array|false an array using the tagmarker as an index and the value as the*/
function iptcparse(string $iptc_block): array|false {}

/**
*<div id="function.iptcembed" class="refentry"> <div class="refnamediv">  <h1 class="refname">iptcembed</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">iptcembed</span> &mdash; <span class="dc-title">嵌入二进制 IPTC 数据到 JPEG 图像中</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.iptcembed-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>iptcembed</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$iptc_data</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$spool</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">bool</span></span></div>  <p class="para rdfs-comment">   嵌入二进制 IPTC 数据到 JPEG 图像中。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.iptcembed-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">iptc_data</span></dt>     <dd>      <p class="para">       写入的数据。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       JPEG 图片的路径。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">spool</span></dt>     <dd>      <p class="para">       Spool flag。如果 spool flag 小于 2，然后 JPEG 将使用字符串返回。否则       JPEG 将打印到 STDOUT。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.iptcembed-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">spool</span> 小于 2，将返回 JPEG， 或者在失败时返回 <strong><span>false</span></strong>。否则成功时返回   <strong><span>true</span></strong>  或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.iptcembed-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 嵌入 IPTC 数据到 JPEG</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// iptc_make_tag() function by Thies C. Arntzen<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">iptc_make_tag</span><span style="color: #007700">(</span><span style="color: #9876AA">$rec</span><span style="color: #007700">, </span><span style="color: #9876AA">$data</span><span style="color: #007700">, </span><span style="color: #9876AA">$value</span><span style="color: #007700">)<br />{<br />    </span><span style="color: #9876AA">$length </span><span style="color: #007700">= </span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$value</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$retval </span><span style="color: #007700">= </span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">0x1C</span><span style="color: #007700">) . </span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">$rec</span><span style="color: #007700">) . </span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">);<br /><br />    if(</span><span style="color: #9876AA">$length </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">0x8000</span><span style="color: #007700">)<br />    {<br />        </span><span style="color: #9876AA">$retval </span><span style="color: #007700">.= </span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">$length </span><span style="color: #007700">&gt;&gt; </span><span style="color: #9876AA">8</span><span style="color: #007700">) .  </span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">$length </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0xFF</span><span style="color: #007700">);<br />    }<br />    else<br />    {<br />        </span><span style="color: #9876AA">$retval </span><span style="color: #007700">.= </span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">0x80</span><span style="color: #007700">) . <br />                   </span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">0x04</span><span style="color: #007700">) . <br />                   </span><span style="color: #9876AA">chr</span><span style="color: #007700">((</span><span style="color: #9876AA">$length </span><span style="color: #007700">&gt;&gt; </span><span style="color: #9876AA">24</span><span style="color: #007700">) &amp; </span><span style="color: #9876AA">0xFF</span><span style="color: #007700">) . <br />                   </span><span style="color: #9876AA">chr</span><span style="color: #007700">((</span><span style="color: #9876AA">$length </span><span style="color: #007700">&gt;&gt; </span><span style="color: #9876AA">16</span><span style="color: #007700">) &amp; </span><span style="color: #9876AA">0xFF</span><span style="color: #007700">) . <br />                   </span><span style="color: #9876AA">chr</span><span style="color: #007700">((</span><span style="color: #9876AA">$length </span><span style="color: #007700">&gt;&gt; </span><span style="color: #9876AA">8</span><span style="color: #007700">) &amp; </span><span style="color: #9876AA">0xFF</span><span style="color: #007700">) . <br />                   </span><span style="color: #9876AA">chr</span><span style="color: #007700">(</span><span style="color: #9876AA">$length </span><span style="color: #007700">&amp; </span><span style="color: #9876AA">0xFF</span><span style="color: #007700">);<br />    }<br /><br />    return </span><span style="color: #9876AA">$retval </span><span style="color: #007700">. </span><span style="color: #9876AA">$value</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #FF8000">// Path to jpeg file<br /></span><span style="color: #9876AA">$path </span><span style="color: #007700">= </span><span style="color: #DD0000">'./phplogo.jpg'</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// Set the IPTC tags<br /></span><span style="color: #9876AA">$iptc </span><span style="color: #007700">= array(<br />    </span><span style="color: #DD0000">'2#120' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'Test image'</span><span style="color: #007700">,<br />    </span><span style="color: #DD0000">'2#116' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'Copyright 2008-2009, The PHP Group'<br /></span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Convert the IPTC tags into binary code<br /></span><span style="color: #9876AA">$data </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br /><br />foreach(</span><span style="color: #9876AA">$iptc </span><span style="color: #007700">as </span><span style="color: #9876AA">$tag </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$string</span><span style="color: #007700">)<br />{<br />    </span><span style="color: #9876AA">$tag </span><span style="color: #007700">= </span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$tag</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$data </span><span style="color: #007700">.= </span><span style="color: #9876AA">iptc_make_tag</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">$tag</span><span style="color: #007700">, </span><span style="color: #9876AA">$string</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">// Embed the IPTC data<br /></span><span style="color: #9876AA">$content </span><span style="color: #007700">= </span><span style="color: #9876AA">iptcembed</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">, </span><span style="color: #9876AA">$path</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Write the new image data out to the file.<br /></span><span style="color: #9876AA">$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$path</span><span style="color: #007700">, </span><span style="color: #DD0000">"wb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">, </span><span style="color: #9876AA">$content</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.iptcembed-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">此函数不需要 GD 图象库。</p></p></blockquote> </div></div>
 * @return string|bool If spool is less than 2, the JPEG will be returned, or false on*/
function iptcembed(string $iptc_data, string $filename, int $spool = 0): string|bool {}

/**
*<div id="function.getimagesize" class="refentry"> <div class="refnamediv">  <h1 class="refname">getimagesize</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">getimagesize</span> &mdash; <span class="dc-title">取得图像大小</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.getimagesize-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>getimagesize</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">&$image_info</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">getimagesize()</strong></span> 函数将确定任何支持的指定图像文件的大小，并返回尺寸以及文件类型和   <span>height/width</span> 文本字符串，以在标准 <abbr title="Hyper Text Markup Language">HTML</abbr> <span>IMG</span>   标签和对应的 <abbr title="Hypertext Transfer Protocol">HTTP</abbr> 内容类型中使用。  </p>  <p class="para">   <span class="function"><strong style="color:#CC7832">getimagesize()</strong></span> 还可以在 <span class="parameter" style="color:#3A95FF">image_info</span> 参数中返回更多信息。  </p>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    此函数要求 <span class="parameter" style="color:#3A95FF">filename</span> 是有效的图像文件。如果提供的是非图像，可能会错误的识别为图像且函数会成功返回，但数组可能包含无意义的值。   </p>   <p class="para">    不要使用 <span class="function"><strong style="color:#CC7832">getimagesize()</strong></span> 识别指定的文件是否是有效的图像。请使用专业解决方案，比如    <a href="https://www.php.net/manual/zh/book.fileinfo.php" class="link">Fileinfo</a> 扩展。   </p>  </div>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    注意 JPC 和 JP2 是具有不同位深度的组件。此外，JP2 文件可能包含有<span>多个 JPEG 2000    代码流</span>，此情况下，<span class="function"><strong style="color:#CC7832">getimagesize()</strong></span>    返回此文件顶层中碰到的第一个代码流的值。   </span>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    从具有最高比特率的 icon 中检索有关 icon 的信息。   </span>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <span class="simpara">    GIF 图像由一个或多个帧组成，其中每个帧可能只占据图像的一部分。<span class="function"><strong style="color:#CC7832">getimagesize()</strong></span> 报告的图像大小是整体大小（从逻辑屏幕描述符中读取）。   </span>  </p></blockquote> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.getimagesize-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       此参数指定希望检索其信息的文件。可以指向本地文件或（配置允许）使用某个<a href="https://www.php.net/manual/zh/wrappers.php" class="link">支持的流</a>的远程文件。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">image_info</span></dt>     <dd>      <p class="para">       可选参数允许从图像文件中提取一些扩展信息。目前会将不同的 <abbr>JPG</abbr> APP       标记作为关联数组返回。一些程序使用这些 APP 标记在图像中嵌入文本信息。       A very common one is to embed        <a href="http://www.iptc.org/" class="link external">&raquo;&nbsp;IPTC</a> information in the APP13 marker.       You can use the <span class="function">{@link iptcparse()}</span> function to parse the       binary APP13 marker into something readable.      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        <span class="parameter" style="color:#3A95FF">image_info</span> 仅支持 <abbr>JFIF</abbr> 文件。       </p>      </p></blockquote>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.getimagesize-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回信息最多包含 7 个元素。并非所有图像类型都包含 <span>channels</span> 和 <span>bits</span> 元素。  </p>  <p class="para">   索引 0 和 1 分别包含图像的宽度和高度。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    一些格式可能没有图像或者包含多个图像。在这种情况下，<span class="function"><strong style="color:#CC7832">getimagesize()</strong></span>    可能无法正确确定图像大小。<span class="function"><strong style="color:#CC7832">getimagesize()</strong></span> 此时会返回的宽高为 0。   </p>  </p></blockquote>  <p class="para">   索引 2 是表示图像类型的某个 <a href="https://www.php.net/manual/zh/image.constants.php" class="link">IMAGETYPE_XXX 常量</a>。  </p>  <p class="para">   Index 3 is a text string with the correct    <span>height=&quot;yyy&quot; width=&quot;xxx&quot;</span> string that can be used   directly in an <abbr>IMG</abbr> tag.  </p>  <p class="para">   <span>mime</span> 是图像对应的 MIME 类型。此信息可用于传递具有正确 HTTP    <span>Content-type</span> 报头的图像：   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">getimagesize()</strong></span> 和 MIME 类型</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$size </span><span style="color: #007700">= </span><span style="color: #9876AA">getimagesize</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">, </span><span style="color: #DD0000">"rb"</span><span style="color: #007700">);<br />if (</span><span style="color: #9876AA">$size </span><span style="color: #007700">&amp;&amp; </span><span style="color: #9876AA">$fp</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-type: </span><span style="color: #007700">{</span><span style="color: #9876AA">$size</span><span style="color: #007700">[</span><span style="color: #DD0000">'mime'</span><span style="color: #007700">]}</span><span style="color: #DD0000">"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">fpassthru</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br />    exit;<br />} else {<br />    </span><span style="color: #FF8000">// error<br /></span><span style="color: #007700">}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p>  <p class="para">   <span>channels</span> 对 RGB 图片为 3，对 CMYK 图像为 4。  </p>  <p class="para">   <span>bits</span> 是每种颜色的位数。  </p>  <p class="para">   对应一些图像类型，<span>channels</span> 和 <span>bits</span> 值的存在可能会让人困惑。   As an example, <abbr title="Graphic Interchange Format">GIF</abbr> always uses 3 channels   per pixel, but the number of bits per pixel cannot be calculated for an   animated <abbr title="Graphic Interchange Format">GIF</abbr> with a global color table.  </p>  <p class="para">   失败时返回 <strong><span>false</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.getimagesize-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果无法访问 <span class="parameter" style="color:#3A95FF">filename</span> 图像，<span class="function"><strong style="color:#CC7832">getimagesize()</strong></span> 将生成 <strong><span>E_WARNING</span></strong>   级别的错误。读取错误时，<span class="function"><strong style="color:#CC7832">getimagesize()</strong></span> 将生成 <strong><span>E_NOTICE</span></strong> 级别的错误。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.getimagesize-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.2.0</td>       <td>        现在将正确返回 AVIF 图像的实际尺寸、bits 和 channels；以前，尺寸报告为 <span>0x0</span>，并且不会报告 bits 和 channels。       </td>      </tr>      <tr>       <td>7.1.0</td>       <td>        新增 WebP 支持。       </td>      </tr>     </tbody>       </table>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.getimagesize-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #2 <span class="function"><strong style="color:#CC7832">getimagesize()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">list(</span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">, </span><span style="color: #9876AA">$type</span><span style="color: #007700">, </span><span style="color: #9876AA">$attr</span><span style="color: #007700">) = </span><span style="color: #9876AA">getimagesize</span><span style="color: #007700">(</span><span style="color: #DD0000">"img/flag.jpg"</span><span style="color: #007700">);<br />echo </span><span style="color: #DD0000">"&lt;img src=\"img/flag.jpg\" </span><span style="color: #9876AA">$attr</span><span style="color: #DD0000"> alt=\"getimagesize() example\" /&gt;"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>   <div class="example" id="">    <p><strong>示例 #3 getimagesize (URL)</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$size </span><span style="color: #007700">= </span><span style="color: #9876AA">getimagesize</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://www.example.com/gifs/logo.gif"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// if the file name has space in it, encode it properly<br /></span><span style="color: #9876AA">$size </span><span style="color: #007700">= </span><span style="color: #9876AA">getimagesize</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://www.example.com/gifs/lo%20go.gif"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>   <div class="example" id="">    <p><strong>示例 #4 getimagesize() 返回 IPTC</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$size </span><span style="color: #007700">= </span><span style="color: #9876AA">getimagesize</span><span style="color: #007700">(</span><span style="color: #DD0000">"testimg.jpg"</span><span style="color: #007700">, </span><span style="color: #9876AA">$info</span><span style="color: #007700">);<br />if (isset(</span><span style="color: #9876AA">$info</span><span style="color: #007700">[</span><span style="color: #DD0000">"APP13"</span><span style="color: #007700">])) {<br />    </span><span style="color: #9876AA">$iptc </span><span style="color: #007700">= </span><span style="color: #9876AA">iptcparse</span><span style="color: #007700">(</span><span style="color: #9876AA">$info</span><span style="color: #007700">[</span><span style="color: #DD0000">"APP13"</span><span style="color: #007700">]);<br />    </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$iptc</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.getimagesize-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">此函数不需要 GD 图象库。</p></p></blockquote> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.getimagesize-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="function">{@link image_type_to_mime_type()} - 取得 getimagesize、exif_read_data、exif_thumbnail、exif_imagetype 所返回的图像类型的 MIME 类型</span></li>   <li class="member"><span class="function">{@link exif_imagetype()} - 判断一个图像的类型</span></li>   <li class="member"><span class="function">{@link exif_read_data()} - 从一个图片文件中读取 EXIF 头信息</span></li>   <li class="member"><span class="function">{@link exif_thumbnail()} - 检索图像的嵌入式缩略图</span></li>   <li class="member"><span class="function">{@link imagesx()} - 取得图像宽度</span></li>   <li class="member"><span class="function">{@link imagesy()} - 取得图像高度</span></li>  </ul> </div></div>
 * @return array|false an array with 7 elements.*/
function getimagesize(string $filename, &$image_info): array|false {}

/**
*<div id="function.image-type-to-mime-type" class="refentry"> <div class="refnamediv">  <h1 class="refname">image_type_to_mime_type</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">image_type_to_mime_type</span> &mdash; <span class="dc-title">取得 getimagesize、exif_read_data、exif_thumbnail、exif_imagetype 所返回的图像类型的 MIME 类型</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.image-type-to-mime-type-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>image_type_to_mime_type</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$image_type</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">image_type_to_mime_type()</strong></span> 函数将确定 IMAGETYPE 常量的 MIME 类型。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.image-type-to-mime-type-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">image_type</span></dt>     <dd>      <p class="para">       <span>IMAGETYPE_XXX</span> 常量之一。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.image-type-to-mime-type-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回值如下：   <table class="doctable table">    <caption><strong>返回值常量</strong></caption>         <thead>      <tr>       <th><span class="parameter" style="color:#3A95FF">image_type</span></th>       <th>返回值</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td><strong><span>IMAGETYPE_GIF</span></strong></td>       <td><span>image/gif</span></td>      </tr>      <tr>       <td><strong><span>IMAGETYPE_JPEG</span></strong></td>       <td><span>image/jpeg</span></td>      </tr>      <tr>       <td><strong><span>IMAGETYPE_PNG</span></strong></td>       <td><span>image/png</span></td>      </tr>      <tr>       <td><strong><span>IMAGETYPE_SWF</span></strong></td>       <td><span>application/x-shockwave-flash</span></td>      </tr>      <tr>       <td><strong><span>IMAGETYPE_PSD</span></strong></td>       <td><span>image/psd</span></td>      </tr>      <tr>       <td><strong><span>IMAGETYPE_BMP</span></strong></td>       <td><span>image/bmp</span></td>      </tr>      <tr>       <td><strong><span>IMAGETYPE_TIFF_II</span></strong>（小端字节顺序）</td>       <td><span>image/tiff</span></td>      </tr>      <tr>       <td>        <strong><span>IMAGETYPE_TIFF_MM</span></strong>（大端字节顺序）       </td>       <td><span>image/tiff</span></td>      </tr>      <tr>       <td><strong><span>IMAGETYPE_JPC</span></strong></td>       <td><span>application/octet-stream</span></td>      </tr>      <tr>       <td><strong><span>IMAGETYPE_JP2</span></strong></td>       <td><span>image/jp2</span></td>      </tr>      <tr>       <td><strong><span>IMAGETYPE_JPX</span></strong></td>       <td><span>application/octet-stream</span></td>      </tr>      <tr>       <td><strong><span>IMAGETYPE_JB2</span></strong></td>       <td><span>application/octet-stream</span></td>      </tr>      <tr>       <td><strong><span>IMAGETYPE_SWC</span></strong></td>       <td><span>application/x-shockwave-flash</span></td>      </tr>      <tr>       <td><strong><span>IMAGETYPE_IFF</span></strong></td>       <td><span>image/iff</span></td>      </tr>      <tr>       <td><strong><span>IMAGETYPE_WBMP</span></strong></td>       <td><span>image/vnd.wap.wbmp</span></td>      </tr>      <tr>       <td><strong><span>IMAGETYPE_XBM</span></strong></td>       <td><span>image/xbm</span></td>      </tr>      <tr>       <td><strong><span>IMAGETYPE_ICO</span></strong></td>       <td><span>image/vnd.microsoft.icon</span></td>      </tr>      <tr>       <td><strong><span>IMAGETYPE_WEBP</span></strong></td>       <td><span>image/webp</span></td>      </tr>      <tr>       <td><strong><span>IMAGETYPE_AVIF</span></strong></td>       <td><span>image/avif</span></td>      </tr>     </tbody>       </table>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.image-type-to-mime-type-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">image_type_to_mime_type()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-type: " </span><span style="color: #007700">. </span><span style="color: #9876AA">image_type_to_mime_type</span><span style="color: #007700">(</span><span style="color: #9876AA">IMAGETYPE_PNG</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.image-type-to-mime-type-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">此函数不需要 GD 图象库。</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.image-type-to-mime-type-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="function">{@link getimagesize()} - 取得图像大小</span></li>   <li class="member"><span class="function">{@link exif_imagetype()} - 判断一个图像的类型</span></li>   <li class="member"><span class="function">{@link exif_read_data()} - 从一个图片文件中读取 EXIF 头信息</span></li>   <li class="member"><span class="function">{@link exif_thumbnail()} - 检索图像的嵌入式缩略图</span></li>  </ul> </div></div>
 * @return string The returned values are as follows*/
function image_type_to_mime_type(int $image_type): string {}

/**
*<div id="function.image-type-to-extension" class="refentry"> <div class="refnamediv">  <h1 class="refname">image_type_to_extension</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">image_type_to_extension</span> &mdash; <span class="dc-title">取得图像类型的文件后缀</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.image-type-to-extension-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>image_type_to_extension</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$image_type</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$include_dot</span><span class="initializer"> = <strong><span>true</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   根据给定的常量 <span>IMAGETYPE_XXX</span> 返回后缀名。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.image-type-to-extension-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">image_type</span></dt>     <dd>      <p class="para">       <span>IMAGETYPE_XXX</span> 系列常量之一。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">include_dot</span></dt>     <dd>      <p class="para">       是否在后缀名前加一个点。默认是 <strong><span>true</span></strong>。      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.image-type-to-extension-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   根据指定的图像类型返回对应的后缀名， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.image-type-to-extension-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">image_type_to_extension()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 创建图像实例<br /></span><span style="color: #9876AA">$im </span><span style="color: #007700">= </span><span style="color: #9876AA">imagecreatetruecolor</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 保存图像<br /></span><span style="color: #9876AA">imagepng</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">, </span><span style="color: #DD0000">'./test' </span><span style="color: #007700">. </span><span style="color: #9876AA">image_type_to_extension</span><span style="color: #007700">(</span><span style="color: #9876AA">IMAGETYPE_PNG</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">imagedestroy</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.image-type-to-extension-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">此函数不需要 GD 图象库。</p></p></blockquote> </div></div>
 * @return string|false A string with the extension corresponding to the given image type, or false on failure.*/
function image_type_to_extension(int $image_type, bool $include_dot = true): string|false {}

/**
*<div id="function.phpinfo" class="refentry"> <div class="refnamediv">  <h1 class="refname">phpinfo</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">phpinfo</span> &mdash; <span class="dc-title">输出关于 PHP 配置的信息</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.phpinfo-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>phpinfo</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = <strong><span>INFO_ALL</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type true" style="color:#EAB766">true</span></span></div>  <p class="para rdfs-comment">   输出 PHP 当前状态的大量信息，包含了 PHP 编译选项、启用的扩展、PHP 版本、服务器信息和环境变量（如果编译为一个模块的话）、PHP   环境变量、操作系统版本信息、path 变量、配置选项的本地值和主值、HTTP 头和PHP授权信息（License）。  </p>  <p class="para">   因为每个系统安装得有所不同，<span class="function"><strong style="color:#CC7832">phpinfo()</strong></span> 常用于在系统上检查<a href="https://www.php.net/manual/zh/configuration.php" class="link">配置设置</a>和<a href="https://www.php.net/manual/zh/language.variables.predefined.php" class="link">预定义变量</a>。  </p>  <p class="para">   <span class="function"><strong style="color:#CC7832">phpinfo()</strong></span> 同时是个很有价值的、包含所有 EGPCS(Environment、GET、POST、Cookie、Server) 数据的调试工具。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.phpinfo-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       可以用以下的一个或多个 <em>constants</em> 用位运算传递给可选的 <span class="parameter" style="color:#3A95FF">flags</span> 参数来定制输出的信息。       该参数可以把常量相加或者用<a href="https://www.php.net/manual/zh/language.operators.bitwise.php" class="link">按位或</a>操作符按位运算。      </p>      <p class="para">       <table class="doctable table">        <caption><strong><span class="function"><strong style="color:#CC7832">phpinfo()</strong></span> 选项</strong></caption>                 <thead>          <tr>           <th>Name (constant)</th>           <th>Value</th>           <th>Description</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td>INFO_GENERAL</td>           <td>1</td>           <td>            配置的命令行、<var class="filename">php.ini</var> 的文件位置、建立的时间、Web 服务器、系统及更多其他信息。           </td>          </tr>          <tr>           <td>INFO_CREDITS</td>           <td>2</td>           <td>            PHP 贡献者名单。参加 <span class="function">{@link phpcredits()}</span>。           </td>          </tr>          <tr>           <td>INFO_CONFIGURATION</td>           <td>4</td>           <td>            当前PHP指令的本地值和主值。参见 <span class="function">{@link ini_get()}</span>。           </td>          </tr>          <tr>           <td>INFO_MODULES</td>           <td>8</td>           <td>            已加载的模块和模块相应的设置。参见            <span class="function">{@link get_loaded_extensions()}</span>。           </td>          </tr>          <tr>           <td>INFO_ENVIRONMENT</td>           <td>16</td>           <td>            环境变量信息也可以用 <var class="varname"><a href="https://www.php.net/manual/zh/reserved.variables.environment.php" class="classname">$_ENV</a></var> 获取。           </td>          </tr>          <tr>           <td>INFO_VARIABLES</td>           <td>32</td>           <td>            显示所有来自 EGPCS (Environment, GET,            POST, Cookie, Server) 的 <a href="https://www.php.net/manual/zh/language.variables.predefined.php" class="link">            预定义变量</a>。           </td>          </tr>          <tr>           <td>INFO_LICENSE</td>           <td>64</td>           <td>            PHP许可证信息。参见 <a href="https://www.php.net/manual/zh/https://www.php.net/license/" class="link external">&raquo;&nbsp;license FAQ</a>。           </td>          </tr>          <tr>           <td>INFO_ALL</td>           <td>-1</td>           <td>            显示以上所有信息。           </td>          </tr>         </tbody>               </table>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.phpinfo-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.phpinfo-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="example-1760">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">phpinfo()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// 显示所有信息，默认显示 INFO_ALL<br /></span><span style="color: #9876AA">phpinfo</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">// Show just the module information. 仅仅显示PHP模块信息，<br />// phpinfo(8) 返回同样的结果。<br /></span><span style="color: #9876AA">phpinfo</span><span style="color: #007700">(</span><span style="color: #9876AA">INFO_MODULES</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.phpinfo-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    在 PHP 5.5 之前版本，当 <a href="https://www.php.net/manual/zh/ini.core.php#ini.expose-php" class="link">expose_php</a> 设置为 <span>off</span> 可以禁用一部分信息。    这包括了 PHP 和 Zend 的 logo，以及贡献者名单。   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    在命令行（CLI）模式下 <span class="function"><strong style="color:#CC7832">phpinfo()</strong></span> 仅会输出纯文本，而不是HTML。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.phpinfo-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link phpversion()} - 获取当前的PHP版本</span></li>    <li class="member"><span class="function">{@link phpcredits()} - 打印 PHP 贡献者名单</span></li>    <li class="member"><span class="function">{@link ini_get()} - 获取一个配置选项的值</span></li>    <li class="member"><span class="function">{@link ini_set()} - 为一个配置选项设置值</span></li>    <li class="member"><span class="function">{@link get_loaded_extensions()} - 返回所有编译并加载模块名的 array</span></li>    <li class="member"><a href="https://www.php.net/manual/zh/language.variables.predefined.php" class="link">预定义变量</a></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function phpinfo(#[ExpectedValues(flags: [INFO_GENERAL, INFO_CREDITS, INFO_CONFIGURATION, INFO_MODULES, INFO_ENVIRONMENT, INFO_VARIABLES, INFO_LICENSE, INFO_ALL])] int $flags = INFO_ALL): bool {}

/**
*<div id="function.phpversion" class="refentry"> <div class="refnamediv">  <h1 class="refname">phpversion</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">phpversion</span> &mdash; <span class="dc-title">获取当前的PHP版本</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.phpversion-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>phpversion</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$extension</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   返回了包含当前运行 PHP 解释器或扩展版本信息的 string。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.phpversion-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">extension</span></dt>     <dd>      <p class="para">       可选的扩展名。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.phpversion-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   以 <span class="type" style="color:#EAB766">string</span> 形式返回当前 PHP 版本。如果为 <span class="parameter" style="color:#3A95FF">extension</span>   提供了 <span class="type" style="color:#EAB766">string</span> 类型的参数，<span class="function"><strong style="color:#CC7832">phpversion()</strong></span>    会返回该扩展的版本。如果没有对应的版本信息，或者该扩展未启用，则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.phpversion-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">extension</span> 现在可为 null。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.phpversion-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="example-1763">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">phpversion()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// prints e.g. 'Current PHP version: 4.1.1'<br /></span><span style="color: #007700">echo </span><span style="color: #DD0000">'Current PHP version: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">phpversion</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">// prints e.g. '2.0' or nothing if the extension isn't enabled<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">phpversion</span><span style="color: #007700">(</span><span style="color: #DD0000">'tidy'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="example-1766">    <p><strong>示例 #2 <strong><span>PHP_VERSION_ID</span></strong> 示例和用法</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// PHP_VERSION_ID 自 PHP 5.2.7 起有效，<br />// 如果我们的版本低于该版本，则用以下代码来模拟 <br /></span><span style="color: #007700">if (!</span><span style="color: #9876AA">defined</span><span style="color: #007700">(</span><span style="color: #DD0000">'PHP_VERSION_ID'</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">$version </span><span style="color: #007700">= </span><span style="color: #9876AA">explode</span><span style="color: #007700">(</span><span style="color: #DD0000">'.'</span><span style="color: #007700">, </span><span style="color: #9876AA">PHP_VERSION</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'PHP_VERSION_ID'</span><span style="color: #007700">, (</span><span style="color: #9876AA">$version</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">] * </span><span style="color: #9876AA">10000 </span><span style="color: #007700">+ </span><span style="color: #9876AA">$version</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">] * </span><span style="color: #9876AA">100 </span><span style="color: #007700">+ </span><span style="color: #9876AA">$version</span><span style="color: #007700">[</span><span style="color: #9876AA">2</span><span style="color: #007700">]));<br />}<br /><br /></span><span style="color: #FF8000">// PHP_VERSION_ID 定义为一个数字，PHP 版本越新，数字越大。<br />// 它的定义是以下的表达式：<br />//<br />// $version_id = $major_version * 10000 + $minor_version * 100 + $release_version;<br />//<br />// 现在我们可以通过 PHP_VERSION_ID 来检查 PHP 版本，<br />// 而不用每次都必须用 version_compare() 来检查 PHP 是否支持某个功能。<br />//<br />// 比如，我们在此可以定义一系列 PHP_VERSION_* constants 常量，<br />// 而在 5.2.7 之前的版本并没有被定义。<br /><br /></span><span style="color: #007700">if (</span><span style="color: #9876AA">PHP_VERSION_ID </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">50207</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'PHP_MAJOR_VERSION'</span><span style="color: #007700">,   </span><span style="color: #9876AA">$version</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br />    </span><span style="color: #9876AA">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'PHP_MINOR_VERSION'</span><span style="color: #007700">,   </span><span style="color: #9876AA">$version</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]);<br />    </span><span style="color: #9876AA">define</span><span style="color: #007700">(</span><span style="color: #DD0000">'PHP_RELEASE_VERSION'</span><span style="color: #007700">, </span><span style="color: #9876AA">$version</span><span style="color: #007700">[</span><span style="color: #9876AA">2</span><span style="color: #007700">]);<br /><br />    </span><span style="color: #FF8000">// 等等， ...<br /></span><span style="color: #007700">}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.phpversion-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    这些信息也存在于预定义常量 <strong><span>PHP_VERSION</span></strong>里。    更多版本的信息可以使用常量 <strong><span>PHP_VERSION_*</span></strong>。   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    许多扩展可能会定义它们自己的版本号。然而，大多数捆绑版本将会使用 PHP 版本作为他们的版本号。   </p>  </p></blockquote>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    一些扩展可能会定义他们自己的版本号。    然而，大多数内置的扩展会使用 PHP 版本作为它们的版本号。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.phpversion-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><a href="https://www.php.net/manual/zh/reserved.constants.php#reserved.constants.core" class="link">常量 PHP_VERSION</a></li>    <li class="member"><span class="function">{@link version_compare()} - 对比两个「PHP 规范化」的版本数字字符串</span></li>    <li class="member"><span class="function">{@link phpinfo()} - 输出关于 PHP 配置的信息</span></li>    <li class="member"><span class="function">{@link phpcredits()} - 打印 PHP 贡献者名单</span></li>    <li class="member"><span class="function">{@link zend_version()} - 获取当前 Zend 引擎的版本</span></li>   </ul>  </span> </div></div>
 * @return string|false If the optional extension parameter is*/
function phpversion(?string $extension): string|false {}

/**
*<div id="function.phpcredits" class="refentry"> <div class="refnamediv">  <h1 class="refname">phpcredits</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">phpcredits</span> &mdash; <span class="dc-title">打印 PHP 贡献者名单</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.phpcredits-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>phpcredits</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$flags</span><span class="initializer"> = <strong><span>CREDITS_ALL</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type true" style="color:#EAB766">true</span></span></div>  <p class="para rdfs-comment">   这个函数打印出了 PHP 开发者、模块等贡献者名单。   它生成了合适、可嵌入信息到页面中的 HTML 代码。  </p>    </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.phpcredits-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">flags</span></dt>     <dd>      <p class="para">       生成自定义的贡献者页面，你也许想要使用 <span class="parameter" style="color:#3A95FF">flags</span> 参数。      </p>      <p class="para">       <table class="doctable table">        <caption><strong>预定义的 <span class="function"><strong style="color:#CC7832">phpcredits()</strong></span> flags</strong></caption>                 <thead>          <tr>           <th>名称</th>           <th>描述</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td>CREDITS_ALL</td>           <td>            所有贡献者，等同于使用： <strong><span>CREDITS_DOCS</span></strong> +            <strong><span>CREDITS_GENERAL</span></strong> + <strong><span>CREDITS_GROUP</span></strong> +            <strong><span>CREDITS_MODULES</span></strong> + <strong><span>CREDITS_FULLPAGE</span></strong>。            它以适当的标签产生了完整独立的 HTML 页面。           </td>          </tr>          <tr>           <td>CREDITS_DOCS</td>           <td>文档组贡献名单</td>          </tr>          <tr>           <td>CREDITS_FULLPAGE</td>           <td>            常用于和其他标志进行组合。            表示需要打印包含其他标志表示信息的独立 HTML 页面。           </td>          </tr>          <tr>           <td>CREDITS_GENERAL</td>           <td>            普遍名单：语言设计与理念、PHP作者以及 SAPI 模块。           </td>          </tr>          <tr>           <td>CREDITS_GROUP</td>           <td>核心开发者名单</td>          </tr>          <tr>           <td>CREDITS_MODULES</td>           <td>            PHP 扩展模块以及它们的作者的清单           </td>          </tr>          <tr>           <td>CREDITS_SAPI</td>           <td>            PHP 的服务器 API 模块以及他们的作者的清单           </td>          </tr>         </tbody>               </table>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.phpcredits-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.phpcredits-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="example-1751">    <p><strong>示例 #1 打印普遍名单</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />phpcredits</span><span style="color: #007700">(</span><span style="color: #9876AA">CREDITS_GENERAL</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="example-1754">    <p><strong>示例 #2 打印核心开发者和文档组</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />phpcredits</span><span style="color: #007700">(</span><span style="color: #9876AA">CREDITS_GROUP </span><span style="color: #007700">| </span><span style="color: #9876AA">CREDITS_DOCS </span><span style="color: #007700">| </span><span style="color: #9876AA">CREDITS_FULLPAGE</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p>  <p class="para">   <div class="example" id="example-1757">    <p><strong>示例 #3 打印所有贡献者</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000">&lt;html&gt;<br /> &lt;head&gt;<br />  &lt;title&gt;My credits page&lt;/title&gt;<br /> &lt;/head&gt;<br /> &lt;body&gt;<br /><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 一些你自己的代码<br /></span><span style="color: #9876AA">phpcredits</span><span style="color: #007700">(</span><span style="color: #9876AA">CREDITS_ALL </span><span style="color: #007700">- </span><span style="color: #9876AA">CREDITS_FULLPAGE</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">// 一些其他的代码<br /></span><span style="color: #9876AA">?&gt;<br /></span> &lt;/body&gt;<br />&lt;/html&gt;</span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.phpcredits-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    在 CLI 模式下 <span class="function"><strong style="color:#CC7832">phpcredits()</strong></span> 输出明文而不是 HTML。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.phpcredits-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link phpversion()} - 获取当前的PHP版本</span></li>    <li class="member"><span class="function">{@link phpinfo()} - 输出关于 PHP 配置的信息</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function phpcredits(int $flags = CREDITS_ALL): bool {}

/**
 * Gets the logo guid
 * @removed 5.5
 * @link https://php.net/manual/en/function.php-logo-guid.php
 * @return string PHPE9568F34-D428-11d2-A769-00AA001ACF42.
 */
#[Pure]
function php_logo_guid(): string {}

/**
 * @removed 5.5
 */
function php_real_logo_guid() {}

/**
 * @removed 5.5
 */
function php_egg_logo_guid() {}

/**
 * Gets the Zend guid
 * @removed 5.5
 * @link https://php.net/manual/en/function.zend-logo-guid.php
 * @return string PHPE9568F35-D428-11d2-A769-00AA001ACF42.
 */
function zend_logo_guid(): string {}

/**
*<div id="function.php-sapi-name" class="refentry"> <div class="refnamediv">  <h1 class="refname">php_sapi_name</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.1, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">php_sapi_name</span> &mdash; <span class="dc-title">返回 web 服务器和 PHP 之间的接口类型</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.php-sapi-name-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>php_sapi_name</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="simpara">   返回描述 PHP 所使用的接口类型（the Server API, SAPI）的小写字符串。   例如，CLI 的 PHP 下这个字符串会是 &quot;cli&quot;，Apache 下可能会有几个不同的值，取决于具体使用的 SAPI。   以下列出了可能的值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.php-sapi-name-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.php-sapi-name-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回接口类型的小写字符串， 或者在失败时返回 <strong><span>false</span></strong>。  </p>  <p class="para">   尽管不够全面，可能返回的值包括了   <span>apache</span>、<span>apache2handler</span>、<span>cgi</span>（直到   PHP 5.3）、<span>cgi-fcgi</span>、<span>cli</span>、<span>cli-server</span>、<span>embed</span>、<span>fpm-fcgi</span>、<span>litespeed</span>、<span>phpdbg</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.php-sapi-name-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="example-1742">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">php_sapi_name()</strong></span> 示例</strong></p>    <div class="example-contents"><p>     以下示例检测了子字符串 <span>cgi</span>，因为它也有可能会是 <span>cgi-fcgi</span>。    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$sapi_type </span><span style="color: #007700">= </span><span style="color: #9876AA">php_sapi_name</span><span style="color: #007700">();<br />if (</span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$sapi_type</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">) == </span><span style="color: #DD0000">'cgi'</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"You are using CGI PHP\n"</span><span style="color: #007700">;<br />} else {<br />    echo </span><span style="color: #DD0000">"You are not using CGI PHP\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.php-sapi-name-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <strong>另一种方法</strong><br />   <p class="para">    PHP 常量 <strong><span>PHP_SAPI</span></strong> 具有和 <span class="function"><strong style="color:#CC7832">php_sapi_name()</strong></span> 相同的值。   </p>  </p></blockquote>  <div class="tip"><strong class="tip">小技巧</strong>   <h1 class="title">一个潜在的疑难问题</h1>   <p class="para">    定义的 <abbr title="Server Application Programming Interface">SAPI</abbr> 可能不够明显，比如它可能定义为 <span>apache2handler</span>，而不是 <span>apache</span>。   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.php-sapi-name-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><a href="https://www.php.net/manual/zh/reserved.constants.php#reserved.constants.core" class="link">PHP_SAPI</a></li>   </ul>  </span> </div></div>
 * @return string|false the interface type, as a lowercase string, or false on failure.*/
function php_sapi_name(): string|false {}

/**
*<div id="function.php-uname" class="refentry"> <div class="refnamediv">  <h1 class="refname">php_uname</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.2, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">php_uname</span> &mdash; <span class="dc-title">返回运行 PHP 的系统的有关信息</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.php-uname-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>php_uname</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$mode</span><span class="initializer"> = &quot;a&quot;</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">php_uname()</strong></span> 返回了运行 PHP 的操作系统的描述。   这和 <span class="function">{@link phpinfo()}</span> 最顶端上输出的是同一个字符串。   如果仅仅要获取操作系统的名称。可以考虑使用常量 <strong><span>PHP_OS</span></strong>，不过要注意该常量会包含 PHP 构建（<em>built</em>）时的操作系统名。  </p>  <p class="para">   在一些旧的 UNIX 平台，它有可能无法检测到当前系统的信息，然后会还原显示成构建 PHP 时的系统信息。   这仅仅在你的 uname() 函数库不存在或无法运行时发生。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.php-uname-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">mode</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">mode</span> 是单个字符，用于定义要返回什么信息：       <ul class="itemizedlist">        <li class="listitem">         <span class="simpara">          <span>&#039;a&#039;</span>：此为默认。包含序列 <span>&quot;s n r v m&quot;</span> 里的所有模式。         </span>        </li>        <li class="listitem">         <span class="simpara">          <span>&#039;s&#039;</span>：操作系统名称。例如：           <span>FreeBSD</span>。         </span>        </li>        <li class="listitem">         <span class="simpara">          <span>&#039;n&#039;</span>：主机名。例如：          <span>localhost.example.com</span>。         </span>        </li>        <li class="listitem">         <span class="simpara">          <span>&#039;r&#039;</span>：版本名称，例如：          <span>5.1.2-RELEASE</span>。         </span>        </li>        <li class="listitem">         <span class="simpara">          <span>&#039;v&#039;</span>：版本信息。操作系统之间有很大的不同。         </span>        </li>        <li class="listitem">         <span class="simpara">          <span>&#039;m&#039;</span>：机器类型。例如：<span>i386</span>。         </span>        </li>       </ul>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.php-uname-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回描述字符串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.php-uname-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="example-1745">    <p><strong>示例 #1 一些 <span class="function"><strong style="color:#CC7832">php_uname()</strong></span> 的示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">php_uname</span><span style="color: #007700">();<br />echo </span><span style="color: #9876AA">PHP_OS</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// 比如有些会输出：<br />Linux localhost 2.4.21-0.13mdk #1 Fri Mar 14 15:08:06 EST 2003 i686<br />Linux<br /><br />FreeBSD localhost 3.2-RELEASE #15: Mon Dec 17 08:46:02 GMT 2001<br />FreeBSD<br /><br />Windows NT XN1 5.1 build 2600<br />WINNT<br /><br /><br /></span><span style="color: #007700">if (</span><span style="color: #9876AA">strtoupper</span><span style="color: #007700">(</span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">PHP_OS</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">)) === </span><span style="color: #DD0000">'WIN'</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">'This is a server using Windows!'</span><span style="color: #007700">;<br />} else {<br />    echo </span><span style="color: #DD0000">'This is a server not using Windows!'</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   同样可以方便地使用一些相关的 <a href="https://www.php.net/manual/zh/language.constants.predefined.php" class="link">PHP 预定义常量</a>，例如：   <div class="example" id="example-1748">    <p><strong>示例 #2 一些系统相关常量的示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// *nix<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">DIRECTORY_SEPARATOR</span><span style="color: #007700">; </span><span style="color: #FF8000">// /<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">PHP_SHLIB_SUFFIX</span><span style="color: #007700">;    </span><span style="color: #FF8000">// so<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">PATH_SEPARATOR</span><span style="color: #007700">;      </span><span style="color: #FF8000">// :<br /><br />// Win*<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">DIRECTORY_SEPARATOR</span><span style="color: #007700">; </span><span style="color: #FF8000">// \<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">PHP_SHLIB_SUFFIX</span><span style="color: #007700">;    </span><span style="color: #FF8000">// dll<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">PATH_SEPARATOR</span><span style="color: #007700">;      </span><span style="color: #FF8000">// ;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.php-uname-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link phpversion()} - 获取当前的PHP版本</span></li>    <li class="member"><span class="function">{@link php_sapi_name()} - 返回 web 服务器和 PHP 之间的接口类型</span></li>    <li class="member"><span class="function">{@link phpinfo()} - 输出关于 PHP 配置的信息</span></li>   </ul>  </span> </div></div>
 * @return string the description, as a string.*/
function php_uname(#[PhpStormStubsElementAvailable(from: '7.0')] string $mode = 'a'): string {}

/**
*<div id="function.php-ini-scanned-files" class="refentry"> <div class="refnamediv">  <h1 class="refname">php_ini_scanned_files</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">php_ini_scanned_files</span> &mdash; <span class="dc-title">返回从额外 ini 目录里解析的 .ini 文件列表</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.php-ini-scanned-files-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>php_ini_scanned_files</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">php_ini_scanned_files()</strong></span> 在 <var class="filename">php.ini</var>    之后解析的配置文件的逗号分割列表。搜索的目录由编译时选项设置，也可以在运行时由环境变量设置：更多信息可以从<a href="https://www.php.net/manual/zh/configuration.file.php#configuration.file.scan" class="link">安装指南</a>中找到。  </p>  <p class="para">   返回的配置文件包含完整路径。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.php-ini-scanned-files-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.php-ini-scanned-files-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回逗号分隔的 .ini 文件字符串。每个逗号后紧跟新的一行。如果未设置配置指令   <strong class="option configure">--with-config-file-scan-dir</strong>   并且没有设置环境变量 <var class="varname">PHP_INI_SCAN_DIR</var> 将会返回   <strong><span>false</span></strong>。如果它设置了，并且目录是空的，将会返回一个空字符串。如果有未识别的文件，此文件也会进入返回的字符串，但是会导致一个   PHP 错误。此 PHP 错误即会在编译时出现也会在使用   <span class="function"><strong style="color:#CC7832">php_ini_scanned_files()</strong></span> 函数时出现。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.php-ini-scanned-files-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="example-1739">    <p><strong>示例 #1 列出返回的 ini 文件的简单示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">if (</span><span style="color: #9876AA">$filelist </span><span style="color: #007700">= </span><span style="color: #9876AA">php_ini_scanned_files</span><span style="color: #007700">()) {<br />    if (</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$filelist</span><span style="color: #007700">) &gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$files </span><span style="color: #007700">= </span><span style="color: #9876AA">explode</span><span style="color: #007700">(</span><span style="color: #DD0000">','</span><span style="color: #007700">, </span><span style="color: #9876AA">$filelist</span><span style="color: #007700">);<br /><br />        foreach (</span><span style="color: #9876AA">$files </span><span style="color: #007700">as </span><span style="color: #9876AA">$file</span><span style="color: #007700">) {<br />            echo </span><span style="color: #DD0000">"&lt;li&gt;" </span><span style="color: #007700">. </span><span style="color: #9876AA">trim</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">) . </span><span style="color: #DD0000">"&lt;/li&gt;\n"</span><span style="color: #007700">;<br />        }<br />    }<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.php-ini-scanned-files-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link ini_set()} - 为一个配置选项设置值</span></li>    <li class="member"><span class="function">{@link phpinfo()} - 输出关于 PHP 配置的信息</span></li>    <li class="member"><span class="function">{@link php_ini_loaded_file()} - 取得已加载的 php.ini 文件的路径</span></li>   </ul>  </span> </div></div>
 * @return string|false a comma-separated string of .ini files on success. Each comma is*/
function php_ini_scanned_files(): string|false {}

/**
*<div id="function.php-ini-loaded-file" class="refentry"> <div class="refnamediv">  <h1 class="refname">php_ini_loaded_file</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.4, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">php_ini_loaded_file</span> &mdash; <span class="dc-title">取得已加载的 php.ini 文件的路径</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.php-ini-loaded-file-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>php_ini_loaded_file</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   检查是否有加载的 <var class="filename">php.ini</var> 文件，并取回它的路径。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.php-ini-loaded-file-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.php-ini-loaded-file-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   已加载的 <var class="filename">php.ini</var> 路径，或在没有时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.php-ini-loaded-file-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="example-1736">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">php_ini_loaded_file()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$inipath </span><span style="color: #007700">= </span><span style="color: #9876AA">php_ini_loaded_file</span><span style="color: #007700">();<br /><br />if (</span><span style="color: #9876AA">$inipath</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">'Loaded php.ini: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">$inipath</span><span style="color: #007700">;<br />} else {<br />    echo </span><span style="color: #DD0000">'A php.ini file is not loaded'</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Loaded php.ini: /usr/local/php/php.ini<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.php-ini-loaded-file-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link php_ini_scanned_files()} - 返回从额外 ini 目录里解析的 .ini 文件列表</span></li>    <li class="member"><span class="function">{@link phpinfo()} - 输出关于 PHP 配置的信息</span></li>    <li class="member"><a href="https://www.php.net/manual/zh/configuration.file.php" class="link">配置文件</a></li>   </ul>  </span> </div></div>
 * @return string|false The loaded "php.ini" path, or false if one is not loaded.*/
function php_ini_loaded_file(): string|false {}

/**
*<div id="function.strnatcmp" class="refentry"> <div class="refnamediv">  <h1 class="refname">strnatcmp</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">strnatcmp</span> &mdash; <span class="dc-title">使用自然排序算法比较字符串</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.strnatcmp-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>strnatcmp</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string2</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   该函数实现了以人类习惯对数字型字符串进行排序的比较算法，这就是“自然顺序”。注意该比较区分大小写。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.strnatcmp-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string1</span></dt>     <dd>      <p class="para">       第一个字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">string2</span></dt>     <dd>      <p class="para">       第二个字符串。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.strnatcmp-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   与其他字符串比较函数类似，如果 <span class="parameter" style="color:#3A95FF">string1</span> 小于   <span class="parameter" style="color:#3A95FF">string2</span> 返回 <span>-1</span>；   如果 <span class="parameter" style="color:#3A95FF">string1</span>   大于 <span class="parameter" style="color:#3A95FF">string2</span>   返回 <span>1</span>；如果两者相等，返回 <span>0</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.strnatcmp-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.2.0</td> <td>  现在此函数返回 <span>-1</span> 或者 <span>1</span>，之前返回负数或正数。 </td></tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.strnatcmp-examples">  <h3 class="title">示例</h3>  <span>   下面的例子展示了该算法与计算机常规字符串比较算法（<span class="function">{@link strcmp()}</span> 所使用的）的区别：   <div class="informalexample">    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$arr1 </span><span style="color: #007700">= </span><span style="color: #9876AA">$arr2 </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"img12.png"</span><span style="color: #007700">, </span><span style="color: #DD0000">"img10.png"</span><span style="color: #007700">, </span><span style="color: #DD0000">"img2.png"</span><span style="color: #007700">, </span><span style="color: #DD0000">"img1.png"</span><span style="color: #007700">);<br />echo </span><span style="color: #DD0000">"Standard string comparison\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">usort</span><span style="color: #007700">(</span><span style="color: #9876AA">$arr1</span><span style="color: #007700">, </span><span style="color: #DD0000">"strcmp"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$arr1</span><span style="color: #007700">);<br />echo </span><span style="color: #DD0000">"\nNatural order string comparison\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">usort</span><span style="color: #007700">(</span><span style="color: #9876AA">$arr2</span><span style="color: #007700">, </span><span style="color: #DD0000">"strnatcmp"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$arr2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <p class="para">以上示例会输出：</p>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Standard string comparison<br>Array<br>(<br>    [0] =&gt; img1.png<br>    [1] =&gt; img10.png<br>    [2] =&gt; img12.png<br>    [3] =&gt; img2.png<br>)<br><br>Natural order string comparison<br>Array<br>(<br>    [0] =&gt; img1.png<br>    [1] =&gt; img2.png<br>    [2] =&gt; img10.png<br>    [3] =&gt; img12.png<br>)<br></span></div>    </div>   </div>   更多信息，参见：Martin Pool 的<a href="https://www.php.net/manual/zh/https://github.com/sourcefrog/natsort" class="link external">&raquo;&nbsp;自然顺序的字符串比较</a>   page.  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.strnatcmp-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link preg_match()} - 执行匹配正则表达式</span></li>    <li class="member"><span class="function">{@link strcasecmp()} - 二进制安全比较字符串（不区分大小写）</span></li>    <li class="member"><span class="function">{@link substr()} - 返回字符串的子串</span></li>    <li class="member"><span class="function">{@link stristr()} - strstr 函数的忽略大小写版本</span></li>    <li class="member"><span class="function">{@link strcmp()} - 二进制安全字符串比较</span></li>    <li class="member"><span class="function">{@link strncmp()} - 二进制安全比较字符串开头的若干个字符</span></li>    <li class="member"><span class="function">{@link strncasecmp()} - 二进制安全比较字符串开头的若干个字符（不区分大小写）</span></li>    <li class="member"><span class="function">{@link strnatcasecmp()} - 使用&ldquo;自然顺序&rdquo;算法比较字符串（不区分大小写）</span></li>    <li class="member"><span class="function">{@link strstr()} - 查找字符串的首次出现</span></li>    <li class="member"><span class="function">{@link natsort()} - 用&ldquo;自然排序&rdquo;算法对数组排序</span></li>    <li class="member"><span class="function">{@link natcasesort()} - 用&ldquo;自然排序&rdquo;算法对数组进行不区分大小写字母的排序</span></li>   </ul>  </span> </div></div>
 * @return int Similar to other string comparison functions, this one returns &lt; 0 if*/
function strnatcmp(string $string1, string $string2): int {}

/**
*<div id="function.strnatcasecmp" class="refentry"> <div class="refnamediv">  <h1 class="refname">strnatcasecmp</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">strnatcasecmp</span> &mdash; <span class="dc-title">使用“自然顺序”算法比较字符串（不区分大小写）</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.strnatcasecmp-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>strnatcasecmp</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string2</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   该函数实现了以人类习惯对数字型字符串进行排序的比较算法。除了不区分大小写，该函数的行为与 <span class="function">{@link strnatcmp()}</span>   类似。更多信息，参见：Martin Pool 的<a href="https://www.php.net/manual/zh/https://github.com/sourcefrog/natsort" class="link external">&raquo;&nbsp;自然顺序的字符串比较</a>页面。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.strnatcasecmp-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string1</span></dt>     <dd>      <p class="para">       第一个字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">string2</span></dt>     <dd>      <p class="para">       第二个字符串。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.strnatcasecmp-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   与其他字符串比较函数类似，如果 <span class="parameter" style="color:#3A95FF">string1</span> 小于   <span class="parameter" style="color:#3A95FF">string2</span> 返回 <span>-1</span>；   如果 <span class="parameter" style="color:#3A95FF">string1</span> 大于 <span class="parameter" style="color:#3A95FF">string2</span>   返回 <span>1</span>；如果两者相等，返回 <span>0</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.strnatcasecmp-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.2.0</td> <td>  现在此函数返回 <span>-1</span> 或者 <span>1</span>，之前返回负数或正数。 </td></tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.strnatcasecmp-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">strnatcasecmp()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">strnatcasecmp</span><span style="color: #007700">(</span><span style="color: #DD0000">'Apple'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Banana'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">strnatcasecmp</span><span style="color: #007700">(</span><span style="color: #DD0000">'Banana'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Apple'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">strnatcasecmp</span><span style="color: #007700">(</span><span style="color: #DD0000">'apple'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Apple'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>int(-1)<br>int(1)<br>int(0)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.strnatcasecmp-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link preg_match()} - 执行匹配正则表达式</span></li>    <li class="member"><span class="function">{@link strcmp()} - 二进制安全字符串比较</span></li>    <li class="member"><span class="function">{@link strcasecmp()} - 二进制安全比较字符串（不区分大小写）</span></li>    <li class="member"><span class="function">{@link substr()} - 返回字符串的子串</span></li>    <li class="member"><span class="function">{@link stristr()} - strstr 函数的忽略大小写版本</span></li>    <li class="member"><span class="function">{@link strncasecmp()} - 二进制安全比较字符串开头的若干个字符（不区分大小写）</span></li>    <li class="member"><span class="function">{@link strncmp()} - 二进制安全比较字符串开头的若干个字符</span></li>    <li class="member"><span class="function">{@link strstr()} - 查找字符串的首次出现</span></li>    <li class="member"><span class="function">{@link setlocale()} - 设置区域信息</span></li>   </ul>  </span> </div></div>
 * @return int Similar to other string comparison functions, this one returns &lt; 0 if*/
function strnatcasecmp(string $string1, string $string2): int {}

/**
*<div id="function.substr-count" class="refentry"> <div class="refnamediv">  <h1 class="refname">substr_count</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">substr_count</span> &mdash; <span class="dc-title">计算字串出现的次数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.substr-count-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>substr_count</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$haystack</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$needle</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$length</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">substr_count()</strong></span> 返回子字符串   <span class="parameter" style="color:#3A95FF">needle</span> 在字符串   <span class="parameter" style="color:#3A95FF">haystack</span> 中出现的次数。注意   <span class="parameter" style="color:#3A95FF">needle</span> 区分大小写。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    该函数不会计算重叠字符串！参见下面的例子。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.substr-count-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">haystack</span></dt>     <dd>      <p class="para">       在此字符串中进行搜索。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">needle</span></dt>     <dd>      <p class="para">       要搜索的字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       开始计数的偏移位置。如果是负数，就从字符的末尾开始统计。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">       指定偏移位置之后的最大搜索长度。如果偏移量加上这个长度的和大于 <span class="parameter" style="color:#3A95FF">haystack</span> 的总长度，则打印警告信息。       负数的长度 length 是从 <span class="parameter" style="color:#3A95FF">haystack</span> 的末尾开始统计的。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.substr-count-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  该函数返回 <span class="type" style="color:#EAB766">int</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.substr-count-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">length</span> 可以为空（nullable）。      </td>     </tr>      <tr>       <td>7.1.0</td>       <td>        开始支持负数的 <span class="parameter" style="color:#3A95FF">offset</span> 和 <span class="parameter" style="color:#3A95FF">length</span>。       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.substr-count-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">substr_count()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$text </span><span style="color: #007700">= </span><span style="color: #DD0000">'This is a test'</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$text</span><span style="color: #007700">); </span><span style="color: #FF8000">// 14<br /><br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">substr_count</span><span style="color: #007700">(</span><span style="color: #9876AA">$text</span><span style="color: #007700">, </span><span style="color: #DD0000">'is'</span><span style="color: #007700">); </span><span style="color: #FF8000">// 2<br /><br />// 字符串被简化为 's is a test'，因此输出 1<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">substr_count</span><span style="color: #007700">(</span><span style="color: #9876AA">$text</span><span style="color: #007700">, </span><span style="color: #DD0000">'is'</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 字符串被简化为 's i'，所以输出 0<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">substr_count</span><span style="color: #007700">(</span><span style="color: #9876AA">$text</span><span style="color: #007700">, </span><span style="color: #DD0000">'is'</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 因为 5+10 &gt; 14，所以生成警告<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">substr_count</span><span style="color: #007700">(</span><span style="color: #9876AA">$text</span><span style="color: #007700">, </span><span style="color: #DD0000">'is'</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #9876AA">10</span><span style="color: #007700">);<br /><br /><br /></span><span style="color: #FF8000">// 输出 1，因为该函数不计算重叠字符串<br /></span><span style="color: #9876AA">$text2 </span><span style="color: #007700">= </span><span style="color: #DD0000">'gcdgcdgcd'</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">substr_count</span><span style="color: #007700">(</span><span style="color: #9876AA">$text2</span><span style="color: #007700">, </span><span style="color: #DD0000">'gcdgcd'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.substr-count-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link count_chars()} - 返回字符串所用字符的信息</span></li>    <li class="member"><span class="function">{@link strpos()} - 查找字符串首次出现的位置</span></li>    <li class="member"><span class="function">{@link substr()} - 返回字符串的子串</span></li>    <li class="member"><span class="function">{@link strstr()} - 查找字符串的首次出现</span></li>   </ul>  </span> </div></div>
 * @return int<0,max> This functions returns an integer.*/
function substr_count(string $haystack, string $needle, int $offset = 0, ?int $length): int {}

/**
*<div id="function.strspn" class="refentry"> <div class="refnamediv">  <h1 class="refname">strspn</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">strspn</span> &mdash; <span class="dc-title">   计算字符串中全部字符都存在于指定字符集合中的第一段子串的长度  </span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.strspn-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>strspn</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$characters</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$length</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   返回 <span class="parameter" style="color:#3A95FF">string</span> 中全部字符<em>仅</em>存在于 <span class="parameter" style="color:#3A95FF">characters</span> 中的第一组连续字符(子字符串)的长度。  </p>  <p class="para">   如果省略了 <span class="parameter" style="color:#3A95FF">offset</span> 和 <span class="parameter" style="color:#3A95FF">length</span> 参数，则检查整个 <span class="parameter" style="color:#3A95FF">string</span>   字符串；如果指定了这两个参数，则效果等同于调用 <span>strspn(substr($string, $offset, $length),   $characters)</span>（更多信息，参见 {@link substr} ）。  </p>  <p class="para">   代码行：   <div class="informalexample">    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$var </span><span style="color: #007700">= </span><span style="color: #9876AA">strspn</span><span style="color: #007700">(</span><span style="color: #DD0000">"42 is the answer to the 128th question."</span><span style="color: #007700">, </span><span style="color: #DD0000">"1234567890"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>   <var class="varname">$var</var> 将被指派为 2，因为 &#039;42&#039; 是 <span class="parameter" style="color:#3A95FF">string</span> 中第一段全部字符都存在于 &#039;1234567890&#039; 的连续字符。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.strspn-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       待检查的字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">characters</span></dt>     <dd>      <p class="para">       检查字符列表。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">string</span> 的开始检查位置。      </p>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">offset</span> 被设置并且是非负的，<span class="function"><strong style="color:#CC7832">strspn()</strong></span> 将从 <span class="parameter" style="color:#3A95FF">string</span> 的第 <span class="parameter" style="color:#3A95FF">offset</span> 个位置开始检查。例如，在字符串 &#039;<span>abcdef</span>&#039; 中，第 <span>0</span> 个位置的字符是 &#039;<span>a</span>&#039;，第二个位置的字符是 &#039;<span>c</span>&#039;，等等。      </p>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">offset</span> 被设置并且为负数，<span class="function"><strong style="color:#CC7832">strspn()</strong></span> 将从 <span class="parameter" style="color:#3A95FF">string</span> 的尾部倒数第 <span class="parameter" style="color:#3A95FF">offset</span> 个位置开始检查 <span class="parameter" style="color:#3A95FF">string</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">string</span> 中检查的长度。      </p>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">length</span> 被设置并且为非负数，那么将从起始位置开始，检查 <span class="parameter" style="color:#3A95FF">string</span> 的 <span class="parameter" style="color:#3A95FF">length</span> 个长度的字符。      </p>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">length</span> 被设置并且为负数，那么将从起始位置开始，直到从 <span class="parameter" style="color:#3A95FF">string</span> 尾部开始第 <span class="parameter" style="color:#3A95FF">length</span> 个位置，对 <span class="parameter" style="color:#3A95FF">string</span> 进行检查。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.strspn-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回完全由 <span class="parameter" style="color:#3A95FF">characters</span> 中的字符组成的 <span class="parameter" style="color:#3A95FF">string</span>   初始段的长度。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    当设置了 <span class="parameter" style="color:#3A95FF">offset</span> 参数时，返回的长度从此为止开始计算，而不是从    <span class="parameter" style="color:#3A95FF">string</span> 的开头开始计算。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.strspn-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">length</span> 现在允许为 null。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.strspn-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">strspn()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">strspn</span><span style="color: #007700">(</span><span style="color: #DD0000">"foo"</span><span style="color: #007700">, </span><span style="color: #DD0000">"o"</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">); </span><span style="color: #FF8000">// 打印: 2<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>int(0)<br>int(2)<br>int(1)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.strspn-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数可安全用于二进制对象。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.strspn-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link strcspn()} - 获取不匹配遮罩的起始子字符串的长度</span></li>   </ul>  </span> </div></div>
 * @return int the length of the initial segment of str1*/
function strspn(string $string, string $characters, int $offset = 0, ?int $length): int {}

/**
*<div id="function.strcspn" class="refentry"> <div class="refnamediv">  <h1 class="refname">strcspn</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">strcspn</span> &mdash; <span class="dc-title">获取不匹配遮罩的起始子字符串的长度</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.strcspn-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>strcspn</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$characters</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$length</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   返回 <span class="parameter" style="color:#3A95FF">string</span> 中，所有字符都<em>不</em>存在于 <span class="parameter" style="color:#3A95FF">characters</span> 范围的起始子字符串的长度。  </p>  <p class="para">   如果省略 <span class="parameter" style="color:#3A95FF">offset</span> 和 <span class="parameter" style="color:#3A95FF">length</span>，则将检查所有的   <span class="parameter" style="color:#3A95FF">string</span>。如果包含前面两个参数，那么跟调用 <span>strcspn(substr($string, $offset, $length),   $characters)</span> 效果相同（参阅 {@link substr} 获取更新信息）。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.strcspn-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       要检查的字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">characters</span></dt>     <dd>      <p class="para">       包含每个不允许的字符的字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">string</span> 开始搜索的位置。      </p>      <p class="para">       如果给出的 <span class="parameter" style="color:#3A95FF">offset</span> 是非负数，然后 <span class="function"><strong style="color:#CC7832">strcspn()</strong></span> 将会从 <span class="parameter" style="color:#3A95FF">string</span> 的       <span class="parameter" style="color:#3A95FF">offset</span> 位置开始检查字符串。例如。在字符串“<span>abcdef</span>”中，位置为 <span>0</span>       的字符是“<span>a</span>”，位置为 <span>2</span> 的字符是“<span>c</span>”，等等。      </p>      <p class="para">       如果给出的 <span class="parameter" style="color:#3A95FF">offset</span> 是负数，则 <span class="function"><strong style="color:#CC7832">strcspn()</strong></span> 将会从距离 <span class="parameter" style="color:#3A95FF">string</span> 末尾的第       <span class="parameter" style="color:#3A95FF">offset</span> 个位置开始检查字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">       要检查的部分 <span class="parameter" style="color:#3A95FF">string</span> 的长度。      </p>      <p class="para">       如果给出的 <span class="parameter" style="color:#3A95FF">length</span> 是非负数，然后将检查 <span class="parameter" style="color:#3A95FF">string</span> 中起始位置后的 <span class="parameter" style="color:#3A95FF">length</span> 字符。      </p>      <p class="para">       If <span class="parameter" style="color:#3A95FF">length</span> is given and is negative,       then <span class="parameter" style="color:#3A95FF">string</span> will be examined from the       starting position up to <span class="parameter" style="color:#3A95FF">length</span>       characters from the end of <span class="parameter" style="color:#3A95FF">string</span>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.strcspn-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the length of the initial segment of <span class="parameter" style="color:#3A95FF">string</span>   which consists entirely of characters <em>not</em> in <span class="parameter" style="color:#3A95FF">characters</span>.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    When a <span class="parameter" style="color:#3A95FF">offset</span> parameter is set, the returned length    is counted starting from this position, not from the beginning of    <span class="parameter" style="color:#3A95FF">string</span>.   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.strcspn-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">length</span> 现在允许为 null。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.strcspn-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">strcspn()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$a </span><span style="color: #007700">= </span><span style="color: #9876AA">strcspn</span><span style="color: #007700">(</span><span style="color: #DD0000">'abcd'</span><span style="color: #007700">,  </span><span style="color: #DD0000">'apple'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$b </span><span style="color: #007700">= </span><span style="color: #9876AA">strcspn</span><span style="color: #007700">(</span><span style="color: #DD0000">'abcd'</span><span style="color: #007700">,  </span><span style="color: #DD0000">'banana'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$c </span><span style="color: #007700">= </span><span style="color: #9876AA">strcspn</span><span style="color: #007700">(</span><span style="color: #DD0000">'hello'</span><span style="color: #007700">, </span><span style="color: #DD0000">'l'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$d </span><span style="color: #007700">= </span><span style="color: #9876AA">strcspn</span><span style="color: #007700">(</span><span style="color: #DD0000">'hello'</span><span style="color: #007700">, </span><span style="color: #DD0000">'world'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$e </span><span style="color: #007700">= </span><span style="color: #9876AA">strcspn</span><span style="color: #007700">(</span><span style="color: #DD0000">'abcdhelloabcd'</span><span style="color: #007700">, </span><span style="color: #DD0000">'abcd'</span><span style="color: #007700">, -</span><span style="color: #9876AA">9</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$f </span><span style="color: #007700">= </span><span style="color: #9876AA">strcspn</span><span style="color: #007700">(</span><span style="color: #DD0000">'abcdhelloabcd'</span><span style="color: #007700">, </span><span style="color: #DD0000">'abcd'</span><span style="color: #007700">, -</span><span style="color: #9876AA">9</span><span style="color: #007700">, -</span><span style="color: #9876AA">5</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$a</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$b</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$c</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$d</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$e</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$f</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>int(0)<br>int(0)<br>int(2)<br>int(2)<br>int(5)<br>int(4)<br></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.strcspn-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara">此函数可安全用于二进制对象。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.strcspn-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link strspn()} - 计算字符串中全部字符都存在于指定字符集合中的第一段子串的长度</span></li>   </ul>  </span> </div></div>
 * @return int the length of the segment as an integer.*/
function strcspn(string $string, string $characters, int $offset = 0, ?int $length): int {}

/**
*<div id="function.strtok" class="refentry"> <div class="refnamediv">  <h1 class="refname">strtok</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">strtok</span> &mdash; <span class="dc-title">标记分割字符串</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.strtok-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>strtok</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$token</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="simpara">可选 token （不支持命名参数）：</p>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>strtok</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$token</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">strtok()</strong></span> 将字符串 <span class="parameter" style="color:#3A95FF">string</span> 分割为若干子字符串，每个子字符串以   <span class="parameter" style="color:#3A95FF">token</span> 中的字符分割。这也就意味着，如果有个字符串是 &quot;This is an example string&quot;，   你可以使用空格字符作为 <span class="parameter" style="color:#3A95FF">token</span>，将这句话分割成独立的单词。  </p>  <p class="para">   注意，仅第一次调用 strtok 函数时才使用 <span class="parameter" style="color:#3A95FF">string</span> 参数。   随后每次调用 strtok 都将只使用 <span class="parameter" style="color:#3A95FF">token</span> 参数，因为它会记住它在当前字符串中的位置。   如果要重新开始分割一个新的字符串，你需要再次使用 <span class="parameter" style="color:#3A95FF">string</span> 参数来调用 strtok 函数来对其进行初始化。   注意，可以在 <span class="parameter" style="color:#3A95FF">token</span> 参数中使用多个字符。字符串将被 <span class="parameter" style="color:#3A95FF">token</span> 参数中任何一个字符分割。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    这个函数的行为可能与熟悉 <span class="function">{@link explode()}</span> 的人期望略有不同。    首先，在解析的字符串中，两个或多个连续的 <span class="parameter" style="color:#3A95FF">token</span> 的    字符被认为是单一的分隔符。    此外，位于字符串开始或结束处的 <span class="parameter" style="color:#3A95FF">token</span> 将被忽略。    例如，如果使用一个字符串 <span>&quot;;aaa;;bbb;&quot;</span> ，连续调用 <span class="function"><strong style="color:#CC7832">strtok()</strong></span>    并将 <span>&quot;;&quot;</span> 作为一个 <span class="parameter" style="color:#3A95FF">token</span>    将返回字符串 &quot;aaa&quot; 和 &quot;bbb&quot;，然后返回 <strong><span>false</span></strong> 。    因此，字符串将仅被拆分为两个元素，而 <span>explode(&quot;;&quot;, $string)</span> 将返回一个包含 5 个元素的数组。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.strtok-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       被分成若干子字符串的原始<span class="type" style="color:#EAB766"><span class="type 字符串" style="color:#EAB766">字符串</span></span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">token</span></dt>     <dd>      <p class="para">       分割 <span class="parameter" style="color:#3A95FF">string</span> 时使用的分界字符。      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.strtok-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   标记后的<span class="type" style="color:#EAB766"><span class="type 字符串" style="color:#EAB766">字符串</span></span>，如果没有更多标记可用，则返回 <strong><span>false</span></strong> 。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.strtok-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">strtok()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$string </span><span style="color: #007700">= </span><span style="color: #DD0000">"This is\tan example\nstring"</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">// 使用制表符和换行符作为分界符 <br /></span><span style="color: #9876AA">$tok </span><span style="color: #007700">= </span><span style="color: #9876AA">strtok</span><span style="color: #007700">(</span><span style="color: #9876AA">$string</span><span style="color: #007700">, </span><span style="color: #DD0000">" \n\t"</span><span style="color: #007700">);<br /><br />while (</span><span style="color: #9876AA">$tok </span><span style="color: #007700">!== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"Word=</span><span style="color: #9876AA">$tok</span><span style="color: #DD0000">&lt;br /&gt;"</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$tok </span><span style="color: #007700">= </span><span style="color: #9876AA">strtok</span><span style="color: #007700">(</span><span style="color: #DD0000">" \n\t"</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 当 <span class="function"><strong style="color:#CC7832">strtok()</strong></span> 找不到标记时的反应</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$first_token  </span><span style="color: #007700">= </span><span style="color: #9876AA">strtok</span><span style="color: #007700">(</span><span style="color: #DD0000">'/something'</span><span style="color: #007700">, </span><span style="color: #DD0000">'/'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$second_token </span><span style="color: #007700">= </span><span style="color: #9876AA">strtok</span><span style="color: #007700">(</span><span style="color: #DD0000">'/'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$first_token</span><span style="color: #007700">, </span><span style="color: #9876AA">$second_token</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>    string(9) &quot;something&quot;<br>    bool(false)<br></span></div>    </div>   </div>  </p>  <p class="para">   <div class="example" id="">    <p><strong>示例 #3 <span class="function"><strong style="color:#CC7832">strtok()</strong></span> 和 <span class="function">{@link explode()}</span> 的不同点</strong></p>    <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$string </span><span style="color: #007700">= </span><span style="color: #DD0000">";aaa;;bbb;"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$parts </span><span style="color: #007700">= [];<br /></span><span style="color: #9876AA">$tok </span><span style="color: #007700">= </span><span style="color: #9876AA">strtok</span><span style="color: #007700">(</span><span style="color: #9876AA">$string</span><span style="color: #007700">, </span><span style="color: #DD0000">";"</span><span style="color: #007700">);<br />while (</span><span style="color: #9876AA">$tok </span><span style="color: #007700">!== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$parts</span><span style="color: #007700">[] = </span><span style="color: #9876AA">$tok</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$tok </span><span style="color: #007700">= </span><span style="color: #9876AA">strtok</span><span style="color: #007700">(</span><span style="color: #DD0000">";"</span><span style="color: #007700">);<br />}<br />echo </span><span style="color: #9876AA">json_encode</span><span style="color: #007700">(</span><span style="color: #9876AA">$parts</span><span style="color: #007700">),</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$parts </span><span style="color: #007700">= </span><span style="color: #9876AA">explode</span><span style="color: #007700">(</span><span style="color: #DD0000">";"</span><span style="color: #007700">, </span><span style="color: #9876AA">$string</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">json_encode</span><span style="color: #007700">(</span><span style="color: #9876AA">$parts</span><span style="color: #007700">),</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;">     <div class="cdata"><span>[&quot;aaa&quot;,&quot;bbb&quot;]<br>[&quot;&quot;,&quot;aaa&quot;,&quot;&quot;,&quot;bbb&quot;,&quot;&quot;]<br></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.strtok-notes">  <h3 class="title">注释</h3>    <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数可能返回布尔值<strong><span>false</span></strong>，但也可能返回等同于 <strong><span>false</span></strong> 的非布尔值。请阅读 <a href="https://www.php.net/manual/zh/language.types.boolean.php" class="link">布尔类型</a>章节以获取更多信息。应使用<a href="https://www.php.net/manual/zh/language.operators.comparison.php" class="link">===运算符</a>来测试此函数的返回值。</p></div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.strtok-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link explode()} - 使用一个字符串分割另一个字符串</span></li>   </ul>  </span> </div></div>
 * @return string|false A string token.*/
function strtok(
    string $string,
    #[PhpStormStubsElementAvailable(from: '5.3', to: '7.0')] $token,
    #[PhpStormStubsElementAvailable(from: '7.1')] ?string $token = null
): string|false {}
