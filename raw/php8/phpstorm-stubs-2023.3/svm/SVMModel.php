<?php

/**
*<div id="class.svmmodel" class="reference"> <h1 class="title">The SVMModel class</h1>  <div class="partintro"><p class="verinfo">(PECL svm &gt;= 0.1.0)</p>  <div class="section" id="svmmodel.intro">   <h2 class="title">简介</h2>   <p class="para">    The SVMModel is the end result of the training process.    It can be used to classify previously unseen data.   </p>  </div>  <div class="section" id="svmmodel.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">SVMModel</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/svmmodel.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span><span class="initializer"> = ?</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/svmmodel.checkprobabilitymodel.php" class="methodname" style="color:#CC7832">checkProbabilityModel</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/svmmodel.getlabels.php" class="methodname" style="color:#CC7832">getLabels</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/svmmodel.getnrclass.php" class="methodname" style="color:#CC7832">getNrClass</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/svmmodel.getsvmtype.php" class="methodname" style="color:#CC7832">getSvmType</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/svmmodel.getsvrprobability.php" class="methodname" style="color:#CC7832">getSvrProbability</a></span>(): <span class="type" style="color:#EAB766">float</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/svmmodel.load.php" class="methodname" style="color:#CC7832">load</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/svmmodel.predict-probability.php" class="methodname" style="color:#CC7832">predict_probability</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$data</span></span>): <span class="type" style="color:#EAB766">float</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/svmmodel.predict.php" class="methodname" style="color:#CC7832">predict</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$data</span></span>): <span class="type" style="color:#EAB766">float</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/svmmodel.save.php" class="methodname" style="color:#CC7832">save</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div>   }</div>  </div> </div>      <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link SVMModel::checkProbabilityModel} — Returns true if the model has probability information</li><li>{@link SVMModel::__construct} — Construct a new SVMModel</li><li>{@link SVMModel::getLabels} — Get the labels the model was trained on</li><li>{@link SVMModel::getNrClass} — Returns the number of classes the model was trained with</li><li>{@link SVMModel::getSvmType} — Get the SVM type the model was trained with</li><li>{@link SVMModel::getSvrProbability} — Get the sigma value for regression types</li><li>{@link SVMModel::load} — Load a saved SVM Model</li><li>{@link SVMModel::predict_probability} — Return class probabilities for previous unseen data</li><li>{@link SVMModel::predict} — Predict a value for previously unseen data</li><li>{@link SVMModel::save} — Save a model to a file</li></ul></div>
*/
class SVMModel
{
/**
*<div id="svmmodel.checkprobabilitymodel" class="refentry"> <div class="refnamediv">  <h1 class="refname">SVMModel::checkProbabilityModel</h1>  <p class="verinfo">(PECL svm &gt;= 0.1.5)</p><p class="refpurpose"><span class="refname">SVMModel::checkProbabilityModel</span> &mdash; <span class="dc-title">Returns true if the model has probability information</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-svmmodel.checkprobabilitymodel-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SVMModel::checkProbabilityModel</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Returns true if the model contains probability information.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-svmmodel.checkprobabilitymodel-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-svmmodel.checkprobabilitymodel-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Return a boolean value  </p> </div></div>
     * @return bool Return a boolean value*/
    public function checkProbabilityModel(): bool {}

    /**
     * Construct a new SVMModel
     *
     * Build a new SVMModel. Models will usually be created from the SVM::train function, but then saved models may be restored directly.
     * @param string $filename The filename for the saved model file this model should load.
     * @throws Throws SVMException on error
     * @link https://www.php.net/manual/en/svmmodel.construct.php
     */
    public function __construct(string $filename = '') {}

/**
*<div id="svmmodel.getlabels" class="refentry"> <div class="refnamediv">  <h1 class="refname">SVMModel::getLabels</h1>  <p class="verinfo">(PECL svm &gt;= 0.1.5)</p><p class="refpurpose"><span class="refname">SVMModel::getLabels</span> &mdash; <span class="dc-title">Get the labels the model was trained on</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-svmmodel.getlabels-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SVMModel::getLabels</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Return an array of labels that the model was trained on. For regression and one class   models an empty array is returned.   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-svmmodel.getlabels-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-svmmodel.getlabels-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Return an array of labels  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-svmmodel.getlabels-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link SVMModel::getNrClass()} - Returns the number of classes the model was trained with</span></li>   </ul>  </span> </div></div>
     * @return array Return an array of labels*/
    public function getLabels(): array {}

/**
*<div id="svmmodel.getnrclass" class="refentry"> <div class="refnamediv">  <h1 class="refname">SVMModel::getNrClass</h1>  <p class="verinfo">(PECL svm &gt;= 0.1.5)</p><p class="refpurpose"><span class="refname">SVMModel::getNrClass</span> &mdash; <span class="dc-title">Returns the number of classes the model was trained with</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-svmmodel.getnrclass-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SVMModel::getNrClass</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the number of classes the model was trained with, will return 2 for one class and regression models.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-svmmodel.getnrclass-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-svmmodel.getnrclass-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Return an integer number of classes  </p> </div></div>
     * @return int Return an integer number of classes*/
    public function getNrClass(): int {}

/**
*<div id="svmmodel.getsvmtype" class="refentry"> <div class="refnamediv">  <h1 class="refname">SVMModel::getSvmType</h1>  <p class="verinfo">(PECL svm &gt;= 0.1.5)</p><p class="refpurpose"><span class="refname">SVMModel::getSvmType</span> &mdash; <span class="dc-title">Get the SVM type the model was trained with</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-svmmodel.getsvmtype-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SVMModel::getSvmType</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">    Returns an integer value representing the type of the SVM model used, e.g SVM::C_SVC.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-svmmodel.getsvmtype-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-svmmodel.getsvmtype-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Return an integer SVM type  </p> </div></div>
     * @return int Return an integer SVM type*/
    public function getSvmType(): int {}

/**
*<div id="svmmodel.getsvrprobability" class="refentry"> <div class="refnamediv">  <h1 class="refname">SVMModel::getSvrProbability</h1>  <p class="verinfo">(PECL svm &gt;= 0.1.5)</p><p class="refpurpose"><span class="refname">SVMModel::getSvrProbability</span> &mdash; <span class="dc-title">Get the sigma value for regression types</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-svmmodel.getsvrprobability-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SVMModel::getSvrProbability</strong></span>(): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   For regression models, returns a sigma value. If there is no probability   information or the model is not SVR, 0 is returned.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-svmmodel.getsvrprobability-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-svmmodel.getsvrprobability-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a sigma value  </p> </div></div>
     * @return float Returns a sigma value*/
    public function getSvrProbability(): float {}

/**
*<div id="svmmodel.load" class="refentry"> <div class="refnamediv">  <h1 class="refname">SVMModel::load</h1>  <p class="verinfo">(PECL svm &gt;= 0.1.00.1.0)</p><p class="refpurpose"><span class="refname">SVMModel::load</span> &mdash; <span class="dc-title">Load a saved SVM Model</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-svmmodel.load-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SVMModel::load</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Load a model file ready for classification or regression.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-svmmodel.load-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       The filename of the model.       </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-svmmodel.load-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Throws SVMException on error.   Returns true on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-svmmodel.load-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link SVMModel::save()} - Save a model to a file</span></li>   </ul>  </span> </div></div>
     * @return bool Returns true on success.*/
    public function load(string $filename): bool {}

/**
*<div id="svmmodel.predict-probability" class="refentry"> <div class="refnamediv">  <h1 class="refname">SVMModel::predict_probability</h1>  <p class="verinfo">(PECL svm &gt;= 0.1.4)</p><p class="refpurpose"><span class="refname">SVMModel::predict_probability</span> &mdash; <span class="dc-title">Return class probabilities for previous unseen data</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-svmmodel.predict-probability-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SVMModel::predict_probability</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$data</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   This function accepts an array of data and attempts to predict the class, as with the predict function.   Additionally, however, this function returns an array of probabilities, one per class in the model, which   represent the estimated chance of the data supplied being a member of that class. Requires that the model   to be used has been trained with the probability parameter set to true.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-svmmodel.predict-probability-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       The array to be classified. This should be a series of key =&gt; value        pairs in increasing key order, but not necessarily continuous.       </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">probabilities</span></dt>     <dd>      <p class="para">       The supplied value will be filled with the probabilities. This will be either null, in the case        of a model without probability information, or an array where the index is the class name and the value       the predicted probability.       </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-svmmodel.predict-probability-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Float the predicted value. This will be a class label in the case of    classification, a real value in the case of regression.   Throws SVMException on error  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-svmmodel.predict-probability-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832"><strong>SVM::predict()</strong></span></li>   </ul>  </span> </div></div>
     * @return float the predicted value. This will be a class label in the case of classification, a real value in the case of regression. Throws SVMException on error*/
    public function predict_probability(array $data): float {}

/**
*<div id="svmmodel.predict" class="refentry"> <div class="refnamediv">  <h1 class="refname">SVMModel::predict</h1>  <p class="verinfo">(PECL svm &gt;= 0.1.0)</p><p class="refpurpose"><span class="refname">SVMModel::predict</span> &mdash; <span class="dc-title">Predict a value for previously unseen data</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-svmmodel.predict-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SVMModel::predict</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$data</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   This function accepts an array of data and attempts to predict the class    or regression value based on the model extracted from previously trained data.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-svmmodel.predict-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       The array to be classified. This should be a series of key =&gt; value        pairs in increasing key order, but not necessarily continuous.       </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-svmmodel.predict-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Float the predicted value. This will be a class label in the case of    classification, a real value in the case of regression.   Throws SVMException on error  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-svmmodel.predict-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link SVM::train()} - Create a SVMModel based on training data</span></li>   </ul>  </span> </div></div>
     * @return float the predicted value. This will be a class label in the case of classification, a real value in the case of regression. Throws SVMException on error*/
    public function predict(array $data): float {}

/**
*<div id="svmmodel.save" class="refentry"> <div class="refnamediv">  <h1 class="refname">SVMModel::save</h1>  <p class="verinfo">(PECL svm &gt;= 0.1.0)</p><p class="refpurpose"><span class="refname">SVMModel::save</span> &mdash; <span class="dc-title">Save a model to a file</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-svmmodel.save-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>SVMModel::save</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Save the model data to a file, for later use.   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-svmmodel.save-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       The file to save the model to.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-svmmodel.save-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Throws SVMException on error.    Returns true on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-svmmodel.save-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link SVMModel::load()} - Load a saved SVM Model</span></li>   </ul>  </span> </div></div>
     * @return bool Throws SVMException on error. Returns true on success.*/
    public function save(string $filename): bool {}
}
