<?php

use JetBrains\PhpStorm\ArrayShape;

/**
*<div id="function.opcache-compile-file" class="refentry"> <div class="refnamediv">  <h1 class="refname">opcache_compile_file</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.5, PHP 7, PHP 8, PECL ZendOpcache &gt; 7.0.2)</p><p class="refpurpose"><span class="refname">opcache_compile_file</span> &mdash; <span class="dc-title">无需运行，即可编译并缓存 PHP 脚本</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.opcache-compile-file-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>opcache_compile_file</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   该函数可以用于在不用运行某个 PHP 脚本的情况下，编译该 PHP 脚本并将其添加到字节码缓存中去。   该函数可用于在 Web 服务器重启之后初始化缓存，以供后续请求调用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.opcache-compile-file-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>    <dd>     <span>      被编译的 PHP 脚本的路径。     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.opcache-compile-file-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">filename</span> 被成功编译，则返回 <strong><span>true</span></strong>  或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.opcache-compile-file-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">filename</span> 不能被载入或者不能被编译，则会生成 <strong><span>E_WARNING</span></strong> 级别的错误。   可以使用 <a href="https://www.php.net/manual/zh/language.operators.errorcontrol.php" class="link">@</a> 来抑制该警告。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.opcache-compile-file-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link opcache_invalidate()} - 废除脚本缓存</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function opcache_compile_file(string $filename): bool {}

/**
*<div id="function.opcache-invalidate" class="refentry"> <div class="refnamediv">  <h1 class="refname">opcache_invalidate</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL ZendOpcache &gt;= 7.0.0)</p><p class="refpurpose"><span class="refname">opcache_invalidate</span> &mdash; <span class="dc-title">废除脚本缓存</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.opcache-invalidate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>opcache_invalidate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$force</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   该函数的作用是使得指定脚本的字节码缓存失效。如果 <span class="parameter" style="color:#3A95FF">force</span> 没有设置或者传入的是   <strong><span>false</span></strong>，那么只有当脚本的修改时间比对应字节码的时间更新，脚本的缓存才会失效。此函数仅使内存缓存无效，而不是文件缓存。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.opcache-invalidate-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>    <dd>     <span>      缓存需要被作废对应的脚本路径     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">force</span></dt>    <dd>     <p class="para">      如果该参数设置为<strong><span>true</span></strong>，那么不管是否必要，该脚本的缓存都将被废除。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.opcache-invalidate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果 <span class="parameter" style="color:#3A95FF">filename</span> 的字节码缓存失效设置成功或者该脚本本来就没有缓存，则返回   <strong><span>true</span></strong>；如果字节码缓存被禁用，则返回<strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.opcache-invalidate-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link opcache_compile_file()} - 无需运行，即可编译并缓存 PHP 脚本</span></li>    <li class="member"><span class="function">{@link opcache_reset()} - 重置字节码缓存的内容</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function opcache_invalidate(string $filename, bool $force = false): bool {}

/**
*<div id="function.opcache-reset" class="refentry"> <div class="refnamediv">  <h1 class="refname">opcache_reset</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL ZendOpcache &gt;= 7.0.0)</p><p class="refpurpose"><span class="refname">opcache_reset</span> &mdash; <span class="dc-title">重置字节码缓存的内容</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.opcache-reset-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>opcache_reset</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   该函数将重置整个字节码缓存。在调用 <span class="function"><strong style="color:#CC7832">opcache_reset()</strong></span>   之后，所有的脚本将会重新载入并且在下次命中的时候重新解析。此函数仅重置内存中的缓存，不会重置文件缓存。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.opcache-reset-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.opcache-reset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果重置字节码缓存成功，则返回 <strong><span>true</span></strong>；如果字节码缓存被禁用或等待重启或正在重启（参阅 <span class="function">{@link opcache_get_status()}</span>），则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.opcache-reset-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link opcache_invalidate()} - 废除脚本缓存</span></li>    <li class="member"><span class="function">{@link opcache_get_status()} - 获取缓存的状态信息</span></li>   </ul>  </span> </div></div>
 * @return bool Returns <b>TRUE</b> if the opcode cache was reset, or <b>FALSE</b> if the opcode cache is disabled.*/
function opcache_reset(): bool {}

/**
 * (PHP 5 &gt;= 5.5.5, PECL ZendOpcache &gt;= 7.0.2 )<br/>
 * Get status information about the cache
 * @link https://php.net/manual/en/function.opcache-get-status.php
 * @param bool $include_scripts <p>Include script specific state information</p>
 * @return array|false <p>Returns an array of information, optionally containing script specific state information</p>
 * @since 5.5
 */
#[ArrayShape([
    'opcache_enabled' => 'bool',
    'file_cache' => 'string',
    'file_cache_only' => 'bool',
    'cache_full' => 'bool',
    'restart_pending' => 'bool',
    'restart_in_progress' => 'bool',
    'memory_usage' => 'array',
    'interned_strings_usage' => 'array',
    'opcache_statistics' => 'array',
    'preload_statistics' => 'array',
    'scripts' => 'array',
    'jit' => 'array',
])]
/**
*<div id="function.opcache-get-status" class="refentry"> <div class="refnamediv">  <h1 class="refname">opcache_get_status</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL ZendOpcache &gt; 7.0.2)</p><p class="refpurpose"><span class="refname">opcache_get_status</span> &mdash; <span class="dc-title">获取缓存的状态信息</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.opcache-get-status-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>opcache_get_status</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$include_scripts</span><span class="initializer"> = <strong><span>true</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   该函数将返回内存中缓存实例的状态信息。不会返回有关文件缓存的任何信息。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.opcache-get-status-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">include_scripts</span></dt>    <dd>     <span>      包含脚本的具体声明信息。     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.opcache-get-status-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回可能包含脚本特定状态信息的数组， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.opcache-get-status-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   在启用了 <span>opcache.restrict_api</span> 的情况下，如果当前路径在禁止规则里，将会出现 E_WARNING ；不会返回任何状态信息。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.opcache-get-status-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link opcache_get_configuration()} - 获取缓存的配置信息</span></li>   </ul>  </span> </div></div>
*/
function opcache_get_status(bool $include_scripts = true): array|false {}

/**
*<div id="function.opcache-get-configuration" class="refentry"> <div class="refnamediv">  <h1 class="refname">opcache_get_configuration</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.0, PHP 7, PHP 8, PECL ZendOpcache &gt; 7.0.2)</p><p class="refpurpose"><span class="refname">opcache_get_configuration</span> &mdash; <span class="dc-title">获取缓存的配置信息</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.opcache-get-configuration-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>opcache_get_configuration</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   该函数将返回缓存实例的配置信息。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.opcache-get-configuration-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.opcache-get-configuration-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个数组，该数组里包含了缓存的初始化信息，黑名单和版本号。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.opcache-get-configuration-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   在启用了 <span>opcache.restrict_api</span> 的情况下，如果当前路径在禁止规则里，将会出现 E_WARNING ；不会返回任何状态信息。  </p> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.opcache-get-configuration-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link opcache_get_status()} - 获取缓存的状态信息</span></li>   </ul>  </span> </div></div>
 * @return array|false <p>Returns an array of information, including ini, blacklist and version</p>*/
function opcache_get_configuration(): array|false {}

/**
*<div id="function.opcache-is-script-cached" class="refentry"> <div class="refnamediv">  <h1 class="refname">opcache_is_script_cached</h1>  <p class="verinfo">(PHP 5 &gt;= 5.5.11, PHP 7, PHP 8, PECL ZendOpcache &gt;= 7.0.4)</p><p class="refpurpose"><span class="refname">opcache_is_script_cached</span> &mdash; <span class="dc-title">Tells whether a script is cached in OPCache</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.opcache-is-script-cached-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>opcache_is_script_cached</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   This function checks if a PHP script has been cached in OPCache. This can be   used to more easily detect the &quot;warming&quot; of the cache for a particular script.   This function only checks in-memory cache, not file cache.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.opcache-is-script-cached-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>    <dd>     <span>      The path to the PHP script to be checked.     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.opcache-is-script-cached-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> if <span class="parameter" style="color:#3A95FF">filename</span> is cached in OPCache,   <strong><span>false</span></strong> otherwise.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.opcache-is-script-cached-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link opcache_compile_file()} - 无需运行，即可编译并缓存 PHP 脚本</span></li>   </ul>  </span> </div></div>
 * @return bool Returns TRUE if file is cached in OPCache, FALSE otherwise.*/
function opcache_is_script_cached(string $filename): bool {}
