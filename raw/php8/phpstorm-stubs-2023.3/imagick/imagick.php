<?php

// Start of imagick v.3.4.3

use JetBrains\PhpStorm\ArrayShape;
use JetBrains\PhpStorm\Deprecated;
use JetBrains\PhpStorm\Pure;

class ImagickException extends Exception {}

class ImagickDrawException extends Exception {}

class ImagickPixelIteratorException extends Exception {}

class ImagickPixelException extends Exception {}

class ImagickKernelException extends Exception {}

/**
*<div id="class.imagick" class="reference"> <h1 class="title">The <span class="classname"><a href="https://www.php.net/manual/zh/class.imagick.php" class="classname">Imagick</a></span> class</h1>  <div class="partintro"><p class="verinfo">(PECL imagick 2, PECL imagick 3)</p>  <div class="section" id="imagick.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass"><span class="modifier">class</span> <strong class="classname">Imagick</strong></span>     <span class="oointerface"><span class="modifier">implements</span>        <a href="https://www.php.net/manual/zh/class.iterator.php" class="interfacename">Iterator</a></span> {</div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$files</span><span class="initializer"> = ?</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.adaptiveblurimage.php" class="methodname" style="color:#CC7832">adaptiveBlurImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.adaptiveresizeimage.php" class="methodname" style="color:#CC7832">adaptiveResizeImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$bestfit</span><span class="initializer"> = <strong><span>false</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$legacy</span><span class="initializer"> = <strong><span>false</span></strong></span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.adaptivesharpenimage.php" class="methodname" style="color:#CC7832">adaptiveSharpenImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.adaptivethresholdimage.php" class="methodname" style="color:#CC7832">adaptiveThresholdImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.addimage.php" class="methodname" style="color:#CC7832">addImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$source</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.addnoiseimage.php" class="methodname" style="color:#CC7832">addNoiseImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$noise_type</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.affinetransformimage.php" class="methodname" style="color:#CC7832">affineTransformImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="type ImagickDraw" style="color:#EAB766">ImagickDraw</a></span> <span class="parameter" style="color:#3A95FF">$matrix</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.animateimages.php" class="methodname" style="color:#CC7832">animateImages</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$x_server</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.annotateimage.php" class="methodname" style="color:#CC7832">annotateImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="type ImagickDraw" style="color:#EAB766">ImagickDraw</a></span> <span class="parameter" style="color:#3A95FF">$draw_settings</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$angle</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$text</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.appendimages.php" class="methodname" style="color:#CC7832">appendImages</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$stack</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.autolevelimage.php" class="methodname" style="color:#CC7832">autoLevelImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.averageimages.php" class="methodname" style="color:#CC7832">averageImages</a></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.blackthresholdimage.php" class="methodname" style="color:#CC7832">blackThresholdImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$threshold</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.blueshiftimage.php" class="methodname" style="color:#CC7832">blueShiftImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$factor</span><span class="initializer"> = 1.5</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.blurimage.php" class="methodname" style="color:#CC7832">blurImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.borderimage.php" class="methodname" style="color:#CC7832">borderImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$bordercolor</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.brightnesscontrastimage.php" class="methodname" style="color:#CC7832">brightnessContrastImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$brightness</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$contrast</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.charcoalimage.php" class="methodname" style="color:#CC7832">charcoalImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.chopimage.php" class="methodname" style="color:#CC7832">chopImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.clampimage.php" class="methodname" style="color:#CC7832">clampImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.clear.php" class="methodname" style="color:#CC7832">clear</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.clipimage.php" class="methodname" style="color:#CC7832">clipImage</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.clipimagepath.php" class="methodname" style="color:#CC7832">clipImagePath</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pathname</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$inside</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.clippathimage.php" class="methodname" style="color:#CC7832">clipPathImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pathname</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$inside</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.clone.php" class="methodname" style="color:#CC7832">clone</a></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.clutimage.php" class="methodname" style="color:#CC7832">clutImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$lookup_table</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.coalesceimages.php" class="methodname" style="color:#CC7832">coalesceImages</a></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.colorfloodfillimage.php" class="methodname" style="color:#CC7832">colorFloodfillImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$fill</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$bordercolor</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.colorizeimage.php" class="methodname" style="color:#CC7832">colorizeImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$colorize</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$opacity</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$legacy</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.colormatriximage.php" class="methodname" style="color:#CC7832">colorMatrixImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$color_matrix</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.combineimages.php" class="methodname" style="color:#CC7832">combineImages</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channelType</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.commentimage.php" class="methodname" style="color:#CC7832">commentImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$comment</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.compareimagechannels.php" class="methodname" style="color:#CC7832">compareImageChannels</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$image</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channelType</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$metricType</span></span>): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.compareimagelayers.php" class="methodname" style="color:#CC7832">compareImageLayers</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$method</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.compareimages.php" class="methodname" style="color:#CC7832">compareImages</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$compare</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$metric</span></span>): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.compositeimage.php" class="methodname" style="color:#CC7832">compositeImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$composite_object</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$composite</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.contrastimage.php" class="methodname" style="color:#CC7832">contrastImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$sharpen</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.contraststretchimage.php" class="methodname" style="color:#CC7832">contrastStretchImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$black_point</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$white_point</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.convolveimage.php" class="methodname" style="color:#CC7832">convolveImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$kernel</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.count.php" class="methodname" style="color:#CC7832">count</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$mode</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.cropimage.php" class="methodname" style="color:#CC7832">cropImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.cropthumbnailimage.php" class="methodname" style="color:#CC7832">cropThumbnailImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$legacy</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.current.php" class="methodname" style="color:#CC7832">current</a></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.cyclecolormapimage.php" class="methodname" style="color:#CC7832">cycleColormapImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$displace</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.decipherimage.php" class="methodname" style="color:#CC7832">decipherImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$passphrase</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.deconstructimages.php" class="methodname" style="color:#CC7832">deconstructImages</a></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.deleteimageartifact.php" class="methodname" style="color:#CC7832">deleteImageArtifact</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$artifact</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.deleteimageproperty.php" class="methodname" style="color:#CC7832">deleteImageProperty</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.deskewimage.php" class="methodname" style="color:#CC7832">deskewImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$threshold</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.despeckleimage.php" class="methodname" style="color:#CC7832">despeckleImage</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.destroy.php" class="methodname" style="color:#CC7832">destroy</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.displayimage.php" class="methodname" style="color:#CC7832">displayImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$servername</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.displayimages.php" class="methodname" style="color:#CC7832">displayImages</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$servername</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.distortimage.php" class="methodname" style="color:#CC7832">distortImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$method</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$arguments</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$bestfit</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.drawimage.php" class="methodname" style="color:#CC7832">drawImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="type ImagickDraw" style="color:#EAB766">ImagickDraw</a></span> <span class="parameter" style="color:#3A95FF">$draw</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.edgeimage.php" class="methodname" style="color:#CC7832">edgeImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.embossimage.php" class="methodname" style="color:#CC7832">embossImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.encipherimage.php" class="methodname" style="color:#CC7832">encipherImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$passphrase</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.enhanceimage.php" class="methodname" style="color:#CC7832">enhanceImage</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.equalizeimage.php" class="methodname" style="color:#CC7832">equalizeImage</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.evaluateimage.php" class="methodname" style="color:#CC7832">evaluateImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$op</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$constant</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.exportimagepixels.php" class="methodname" style="color:#CC7832">exportImagePixels</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$map</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$STORAGE</span></span><br>): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.extentimage.php" class="methodname" style="color:#CC7832">extentImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.filter.php" class="methodname" style="color:#CC7832">filter</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickkernel.php" class="type ImagickKernel" style="color:#EAB766">ImagickKernel</a></span> <span class="parameter" style="color:#3A95FF">$ImagickKernel</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_UNDEFINED</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.flattenimages.php" class="methodname" style="color:#CC7832">flattenImages</a></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.flipimage.php" class="methodname" style="color:#CC7832">flipImage</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.floodfillpaintimage.php" class="methodname" style="color:#CC7832">floodFillPaintImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$fill</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$target</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$invert</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.flopimage.php" class="methodname" style="color:#CC7832">flopImage</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.forwardfouriertransformimage.php" class="methodname" style="color:#CC7832">forwardFourierTransformimage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$magnitude</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.frameimage.php" class="methodname" style="color:#CC7832">frameImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$matte_color</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$inner_bevel</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$outer_bevel</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.functionimage.php" class="methodname" style="color:#CC7832">functionImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$function</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$arguments</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.fximage.php" class="methodname" style="color:#CC7832">fxImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$expression</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.gammaimage.php" class="methodname" style="color:#CC7832">gammaImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$gamma</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.gaussianblurimage.php" class="methodname" style="color:#CC7832">gaussianBlurImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getcolorspace.php" class="methodname" style="color:#CC7832">getColorspace</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getcompression.php" class="methodname" style="color:#CC7832">getCompression</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getcompressionquality.php" class="methodname" style="color:#CC7832">getCompressionQuality</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getcopyright.php" class="methodname" style="color:#CC7832">getCopyright</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getfilename.php" class="methodname" style="color:#CC7832">getFilename</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getfont.php" class="methodname" style="color:#CC7832">getFont</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getformat.php" class="methodname" style="color:#CC7832">getFormat</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getgravity.php" class="methodname" style="color:#CC7832">getGravity</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.gethomeurl.php" class="methodname" style="color:#CC7832">getHomeURL</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimage.php" class="methodname" style="color:#CC7832">getImage</a></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagealphachannel.php" class="methodname" style="color:#CC7832">getImageAlphaChannel</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageartifact.php" class="methodname" style="color:#CC7832">getImageArtifact</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$artifact</span></span>): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageattribute.php" class="methodname" style="color:#CC7832">getImageAttribute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$key</span></span>): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagebackgroundcolor.php" class="methodname" style="color:#CC7832">getImageBackgroundColor</a></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageblob.php" class="methodname" style="color:#CC7832">getImageBlob</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageblueprimary.php" class="methodname" style="color:#CC7832">getImageBluePrimary</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagebordercolor.php" class="methodname" style="color:#CC7832">getImageBorderColor</a></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagechanneldepth.php" class="methodname" style="color:#CC7832">getImageChannelDepth</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span></span>): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagechanneldistortion.php" class="methodname" style="color:#CC7832">getImageChannelDistortion</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$reference</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$metric</span></span>): <span class="type" style="color:#EAB766">float</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagechanneldistortions.php" class="methodname" style="color:#CC7832">getImageChannelDistortions</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$reference</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$metric</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">float</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagechannelextrema.php" class="methodname" style="color:#CC7832">getImageChannelExtrema</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span></span>): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagechannelkurtosis.php" class="methodname" style="color:#CC7832">getImageChannelKurtosis</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagechannelmean.php" class="methodname" style="color:#CC7832">getImageChannelMean</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span></span>): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagechannelrange.php" class="methodname" style="color:#CC7832">getImageChannelRange</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span></span>): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagechannelstatistics.php" class="methodname" style="color:#CC7832">getImageChannelStatistics</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageclipmask.php" class="methodname" style="color:#CC7832">getImageClipMask</a></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagecolormapcolor.php" class="methodname" style="color:#CC7832">getImageColormapColor</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$index</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagecolors.php" class="methodname" style="color:#CC7832">getImageColors</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagecolorspace.php" class="methodname" style="color:#CC7832">getImageColorspace</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagecompose.php" class="methodname" style="color:#CC7832">getImageCompose</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagecompression.php" class="methodname" style="color:#CC7832">getImageCompression</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagecompressionquality.php" class="methodname" style="color:#CC7832">getImageCompressionQuality</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagedelay.php" class="methodname" style="color:#CC7832">getImageDelay</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagedepth.php" class="methodname" style="color:#CC7832">getImageDepth</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagedispose.php" class="methodname" style="color:#CC7832">getImageDispose</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagedistortion.php" class="methodname" style="color:#CC7832">getImageDistortion</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type MagickWand" style="color:#EAB766">MagickWand</span></span> <span class="parameter" style="color:#3A95FF">$reference</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$metric</span></span>): <span class="type" style="color:#EAB766">float</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageextrema.php" class="methodname" style="color:#CC7832">getImageExtrema</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagefilename.php" class="methodname" style="color:#CC7832">getImageFilename</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageformat.php" class="methodname" style="color:#CC7832">getImageFormat</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagegamma.php" class="methodname" style="color:#CC7832">getImageGamma</a></span>(): <span class="type" style="color:#EAB766">float</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagegeometry.php" class="methodname" style="color:#CC7832">getImageGeometry</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagegravity.php" class="methodname" style="color:#CC7832">getImageGravity</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagegreenprimary.php" class="methodname" style="color:#CC7832">getImageGreenPrimary</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageheight.php" class="methodname" style="color:#CC7832">getImageHeight</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagehistogram.php" class="methodname" style="color:#CC7832">getImageHistogram</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageindex.php" class="methodname" style="color:#CC7832">getImageIndex</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageinterlacescheme.php" class="methodname" style="color:#CC7832">getImageInterlaceScheme</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageinterpolatemethod.php" class="methodname" style="color:#CC7832">getImageInterpolateMethod</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageiterations.php" class="methodname" style="color:#CC7832">getImageIterations</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagelength.php" class="methodname" style="color:#CC7832">getImageLength</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagematte.php" class="methodname" style="color:#CC7832">getImageMatte</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagemattecolor.php" class="methodname" style="color:#CC7832">getImageMatteColor</a></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagemimetype.php" class="methodname" style="color:#CC7832">getImageMimeType</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageorientation.php" class="methodname" style="color:#CC7832">getImageOrientation</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagepage.php" class="methodname" style="color:#CC7832">getImagePage</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagepixelcolor.php" class="methodname" style="color:#CC7832">getImagePixelColor</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageprofile.php" class="methodname" style="color:#CC7832">getImageProfile</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageprofiles.php" class="methodname" style="color:#CC7832">getImageProfiles</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pattern</span><span class="initializer"> = &quot;*&quot;</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$include_values</span><span class="initializer"> = <strong><span>true</span></strong></span></span>): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageproperties.php" class="methodname" style="color:#CC7832">getImageProperties</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pattern</span><span class="initializer"> = &quot;*&quot;</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$include_values</span><span class="initializer"> = <strong><span>true</span></strong></span></span>): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageproperty.php" class="methodname" style="color:#CC7832">getImageProperty</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageredprimary.php" class="methodname" style="color:#CC7832">getImageRedPrimary</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageregion.php" class="methodname" style="color:#CC7832">getImageRegion</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagerenderingintent.php" class="methodname" style="color:#CC7832">getImageRenderingIntent</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageresolution.php" class="methodname" style="color:#CC7832">getImageResolution</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagesblob.php" class="methodname" style="color:#CC7832">getImagesBlob</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagescene.php" class="methodname" style="color:#CC7832">getImageScene</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagesignature.php" class="methodname" style="color:#CC7832">getImageSignature</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagesize.php" class="methodname" style="color:#CC7832">getImageSize</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagetickspersecond.php" class="methodname" style="color:#CC7832">getImageTicksPerSecond</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagetotalinkdensity.php" class="methodname" style="color:#CC7832">getImageTotalInkDensity</a></span>(): <span class="type" style="color:#EAB766">float</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagetype.php" class="methodname" style="color:#CC7832">getImageType</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimageunits.php" class="methodname" style="color:#CC7832">getImageUnits</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagevirtualpixelmethod.php" class="methodname" style="color:#CC7832">getImageVirtualPixelMethod</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagewhitepoint.php" class="methodname" style="color:#CC7832">getImageWhitePoint</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getimagewidth.php" class="methodname" style="color:#CC7832">getImageWidth</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getinterlacescheme.php" class="methodname" style="color:#CC7832">getInterlaceScheme</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getiteratorindex.php" class="methodname" style="color:#CC7832">getIteratorIndex</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getnumberimages.php" class="methodname" style="color:#CC7832">getNumberImages</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getoption.php" class="methodname" style="color:#CC7832">getOption</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$key</span></span>): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getpackagename.php" class="methodname" style="color:#CC7832">getPackageName</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getpage.php" class="methodname" style="color:#CC7832">getPage</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getpixeliterator.php" class="methodname" style="color:#CC7832">getPixelIterator</a></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixeliterator.php" class="type ImagickPixelIterator" style="color:#EAB766">ImagickPixelIterator</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getpixelregioniterator.php" class="methodname" style="color:#CC7832">getPixelRegionIterator</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixeliterator.php" class="type ImagickPixelIterator" style="color:#EAB766">ImagickPixelIterator</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getpointsize.php" class="methodname" style="color:#CC7832">getPointSize</a></span>(): <span class="type" style="color:#EAB766">float</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getquantum.php" class="methodname" style="color:#CC7832">getQuantum</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getquantumdepth.php" class="methodname" style="color:#CC7832">getQuantumDepth</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getquantumrange.php" class="methodname" style="color:#CC7832">getQuantumRange</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getregistry.php" class="methodname" style="color:#CC7832">getRegistry</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$key</span></span>): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getreleasedate.php" class="methodname" style="color:#CC7832">getReleaseDate</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getresource.php" class="methodname" style="color:#CC7832">getResource</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$type</span></span>): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getresourcelimit.php" class="methodname" style="color:#CC7832">getResourceLimit</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$type</span></span>): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getsamplingfactors.php" class="methodname" style="color:#CC7832">getSamplingFactors</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getsize.php" class="methodname" style="color:#CC7832">getSize</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getsizeoffset.php" class="methodname" style="color:#CC7832">getSizeOffset</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.getversion.php" class="methodname" style="color:#CC7832">getVersion</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.haldclutimage.php" class="methodname" style="color:#CC7832">haldClutImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$clut</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.hasnextimage.php" class="methodname" style="color:#CC7832">hasNextImage</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.haspreviousimage.php" class="methodname" style="color:#CC7832">hasPreviousImage</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.identifyformat.php" class="methodname" style="color:#CC7832">identifyFormat</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$embedText</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.identifyimage.php" class="methodname" style="color:#CC7832">identifyImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$appendRawOutput</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.implodeimage.php" class="methodname" style="color:#CC7832">implodeImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.importimagepixels.php" class="methodname" style="color:#CC7832">importImagePixels</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$map</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$storage</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$pixels</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.inversefouriertransformimage.php" class="methodname" style="color:#CC7832">inverseFourierTransformImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$complement</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$magnitude</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.labelimage.php" class="methodname" style="color:#CC7832">labelImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$label</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.levelimage.php" class="methodname" style="color:#CC7832">levelImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$blackPoint</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$gamma</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$whitePoint</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.linearstretchimage.php" class="methodname" style="color:#CC7832">linearStretchImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$blackPoint</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$whitePoint</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.liquidrescaleimage.php" class="methodname" style="color:#CC7832">liquidRescaleImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$delta_x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$rigidity</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.listregistry.php" class="methodname" style="color:#CC7832">listRegistry</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.magnifyimage.php" class="methodname" style="color:#CC7832">magnifyImage</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.mapimage.php" class="methodname" style="color:#CC7832">mapImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$map</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$dither</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.mattefloodfillimage.php" class="methodname" style="color:#CC7832">matteFloodfillImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$alpha</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$bordercolor</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.medianfilterimage.php" class="methodname" style="color:#CC7832">medianFilterImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.mergeimagelayers.php" class="methodname" style="color:#CC7832">mergeImageLayers</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$layer_method</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.minifyimage.php" class="methodname" style="color:#CC7832">minifyImage</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.modulateimage.php" class="methodname" style="color:#CC7832">modulateImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$brightness</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$saturation</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$hue</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.montageimage.php" class="methodname" style="color:#CC7832">montageImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="type ImagickDraw" style="color:#EAB766">ImagickDraw</a></span> <span class="parameter" style="color:#3A95FF">$draw</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$tile_geometry</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$thumbnail_geometry</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$mode</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$frame</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.morphimages.php" class="methodname" style="color:#CC7832">morphImages</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$number_frames</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.morphology.php" class="methodname" style="color:#CC7832">morphology</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$morphologyMethod</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$iterations</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickkernel.php" class="type ImagickKernel" style="color:#EAB766">ImagickKernel</a></span> <span class="parameter" style="color:#3A95FF">$ImagickKernel</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.mosaicimages.php" class="methodname" style="color:#CC7832">mosaicImages</a></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.motionblurimage.php" class="methodname" style="color:#CC7832">motionBlurImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$angle</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.negateimage.php" class="methodname" style="color:#CC7832">negateImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$gray</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.newimage.php" class="methodname" style="color:#CC7832">newImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$cols</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$background</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$format</span><span class="initializer"> = ?</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.newpseudoimage.php" class="methodname" style="color:#CC7832">newPseudoImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pseudoString</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.nextimage.php" class="methodname" style="color:#CC7832">nextImage</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.normalizeimage.php" class="methodname" style="color:#CC7832">normalizeImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.oilpaintimage.php" class="methodname" style="color:#CC7832">oilPaintImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.opaquepaintimage.php" class="methodname" style="color:#CC7832">opaquePaintImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$target</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$fill</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$invert</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.optimizeimagelayers.php" class="methodname" style="color:#CC7832">optimizeImageLayers</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.orderedposterizeimage.php" class="methodname" style="color:#CC7832">orderedPosterizeImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$threshold_map</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.paintfloodfillimage.php" class="methodname" style="color:#CC7832">paintFloodfillImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$fill</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$bordercolor</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.paintopaqueimage.php" class="methodname" style="color:#CC7832">paintOpaqueImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$target</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$fill</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.painttransparentimage.php" class="methodname" style="color:#CC7832">paintTransparentImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$target</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$alpha</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.pingimage.php" class="methodname" style="color:#CC7832">pingImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.pingimageblob.php" class="methodname" style="color:#CC7832">pingImageBlob</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$image</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.pingimagefile.php" class="methodname" style="color:#CC7832">pingImageFile</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$filehandle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$fileName</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.polaroidimage.php" class="methodname" style="color:#CC7832">polaroidImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="type ImagickDraw" style="color:#EAB766">ImagickDraw</a></span> <span class="parameter" style="color:#3A95FF">$properties</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$angle</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.posterizeimage.php" class="methodname" style="color:#CC7832">posterizeImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$levels</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$dither</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.previewimages.php" class="methodname" style="color:#CC7832">previewImages</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$preview</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.previousimage.php" class="methodname" style="color:#CC7832">previousImage</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.profileimage.php" class="methodname" style="color:#CC7832">profileImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type ?string" style="color:#EAB766">?string</span></span> <span class="parameter" style="color:#3A95FF">$profile</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.quantizeimage.php" class="methodname" style="color:#CC7832">quantizeImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$numberColors</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$colorspace</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$treedepth</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$dither</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$measureError</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.quantizeimages.php" class="methodname" style="color:#CC7832">quantizeImages</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$numberColors</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$colorspace</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$treedepth</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$dither</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$measureError</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.queryfontmetrics.php" class="methodname" style="color:#CC7832">queryFontMetrics</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="type ImagickDraw" style="color:#EAB766">ImagickDraw</a></span> <span class="parameter" style="color:#3A95FF">$properties</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$text</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$multiline</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.queryfonts.php" class="methodname" style="color:#CC7832">queryFonts</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pattern</span><span class="initializer"> = &quot;*&quot;</span></span>): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.queryformats.php" class="methodname" style="color:#CC7832">queryFormats</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pattern</span><span class="initializer"> = &quot;*&quot;</span></span>): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.radialblurimage.php" class="methodname" style="color:#CC7832">radialBlurImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$angle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.raiseimage.php" class="methodname" style="color:#CC7832">raiseImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$raise</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.randomthresholdimage.php" class="methodname" style="color:#CC7832">randomThresholdImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$low</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$high</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.readimage.php" class="methodname" style="color:#CC7832">readImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.readimageblob.php" class="methodname" style="color:#CC7832">readImageBlob</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$image</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.readimagefile.php" class="methodname" style="color:#CC7832">readImageFile</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$filehandle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$fileName</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.readimages.php" class="methodname" style="color:#CC7832">readImages</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$filenames</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.recolorimage.php" class="methodname" style="color:#CC7832">recolorImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$matrix</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.reducenoiseimage.php" class="methodname" style="color:#CC7832">reduceNoiseImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.remapimage.php" class="methodname" style="color:#CC7832">remapImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$replacement</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$DITHER</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.removeimage.php" class="methodname" style="color:#CC7832">removeImage</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.removeimageprofile.php" class="methodname" style="color:#CC7832">removeImageProfile</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.render.php" class="methodname" style="color:#CC7832">render</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.resampleimage.php" class="methodname" style="color:#CC7832">resampleImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x_resolution</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y_resolution</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$filter</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$blur</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.resetimagepage.php" class="methodname" style="color:#CC7832">resetImagePage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$page</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.resizeimage.php" class="methodname" style="color:#CC7832">resizeImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$filter</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$blur</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$bestfit</span><span class="initializer"> = <strong><span>false</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$legacy</span><span class="initializer"> = <strong><span>false</span></strong></span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.rollimage.php" class="methodname" style="color:#CC7832">rollImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.rotateimage.php" class="methodname" style="color:#CC7832">rotateImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$background</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$degrees</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.rotationalblurimage.php" class="methodname" style="color:#CC7832">rotationalBlurImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$angle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.roundcorners.php" class="methodname" style="color:#CC7832">roundCorners</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x_rounding</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y_rounding</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$stroke_width</span><span class="initializer"> = 10</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$displace</span><span class="initializer"> = 5</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$size_correction</span><span class="initializer"> = -6</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.sampleimage.php" class="methodname" style="color:#CC7832">sampleImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.scaleimage.php" class="methodname" style="color:#CC7832">scaleImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$bestfit</span><span class="initializer"> = <strong><span>false</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$legacy</span><span class="initializer"> = <strong><span>false</span></strong></span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.segmentimage.php" class="methodname" style="color:#CC7832">segmentImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$COLORSPACE</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$cluster_threshold</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$smooth_threshold</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$verbose</span><span class="initializer"> = <strong><span>false</span></strong></span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.selectiveblurimage.php" class="methodname" style="color:#CC7832">selectiveBlurImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$threshold</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.separateimagechannel.php" class="methodname" style="color:#CC7832">separateImageChannel</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.sepiatoneimage.php" class="methodname" style="color:#CC7832">sepiaToneImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$threshold</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setbackgroundcolor.php" class="methodname" style="color:#CC7832">setBackgroundColor</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$background</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setcolorspace.php" class="methodname" style="color:#CC7832">setColorspace</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$COLORSPACE</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setcompression.php" class="methodname" style="color:#CC7832">setCompression</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$compression</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setcompressionquality.php" class="methodname" style="color:#CC7832">setCompressionQuality</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$quality</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setfilename.php" class="methodname" style="color:#CC7832">setFilename</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setfirstiterator.php" class="methodname" style="color:#CC7832">setFirstIterator</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setfont.php" class="methodname" style="color:#CC7832">setFont</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$font</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setformat.php" class="methodname" style="color:#CC7832">setFormat</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$format</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setgravity.php" class="methodname" style="color:#CC7832">setGravity</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$gravity</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimage.php" class="methodname" style="color:#CC7832">setImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$replace</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagealphachannel.php" class="methodname" style="color:#CC7832">setImageAlphaChannel</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$mode</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimageartifact.php" class="methodname" style="color:#CC7832">setImageArtifact</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$artifact</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimageattribute.php" class="methodname" style="color:#CC7832">setImageAttribute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$key</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagebackgroundcolor.php" class="methodname" style="color:#CC7832">setImageBackgroundColor</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$background</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagebias.php" class="methodname" style="color:#CC7832">setImageBias</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$bias</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagebiasquantum.php" class="methodname" style="color:#CC7832">setImageBiasQuantum</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$bias</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimageblueprimary.php" class="methodname" style="color:#CC7832">setImageBluePrimary</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagebordercolor.php" class="methodname" style="color:#CC7832">setImageBorderColor</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$border</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagechanneldepth.php" class="methodname" style="color:#CC7832">setImageChannelDepth</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$depth</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimageclipmask.php" class="methodname" style="color:#CC7832">setImageClipMask</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$clip_mask</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagecolormapcolor.php" class="methodname" style="color:#CC7832">setImageColormapColor</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$index</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span> <span class="parameter" style="color:#3A95FF">$color</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagecolorspace.php" class="methodname" style="color:#CC7832">setImageColorspace</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$colorspace</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagecompose.php" class="methodname" style="color:#CC7832">setImageCompose</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$compose</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagecompression.php" class="methodname" style="color:#CC7832">setImageCompression</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$compression</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagecompressionquality.php" class="methodname" style="color:#CC7832">setImageCompressionQuality</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$quality</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagedelay.php" class="methodname" style="color:#CC7832">setImageDelay</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$delay</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagedepth.php" class="methodname" style="color:#CC7832">setImageDepth</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$depth</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagedispose.php" class="methodname" style="color:#CC7832">setImageDispose</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$dispose</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimageextent.php" class="methodname" style="color:#CC7832">setImageExtent</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagefilename.php" class="methodname" style="color:#CC7832">setImageFilename</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimageformat.php" class="methodname" style="color:#CC7832">setImageFormat</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$format</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagegamma.php" class="methodname" style="color:#CC7832">setImageGamma</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$gamma</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagegravity.php" class="methodname" style="color:#CC7832">setImageGravity</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$gravity</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagegreenprimary.php" class="methodname" style="color:#CC7832">setImageGreenPrimary</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimageindex.php" class="methodname" style="color:#CC7832">setImageIndex</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$index</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimageinterlacescheme.php" class="methodname" style="color:#CC7832">setImageInterlaceScheme</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$interlace_scheme</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimageinterpolatemethod.php" class="methodname" style="color:#CC7832">setImageInterpolateMethod</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$method</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimageiterations.php" class="methodname" style="color:#CC7832">setImageIterations</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$iterations</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagematte.php" class="methodname" style="color:#CC7832">setImageMatte</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$matte</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagemattecolor.php" class="methodname" style="color:#CC7832">setImageMatteColor</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$matte</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimageopacity.php" class="methodname" style="color:#CC7832">setImageOpacity</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$opacity</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimageorientation.php" class="methodname" style="color:#CC7832">setImageOrientation</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$orientation</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagepage.php" class="methodname" style="color:#CC7832">setImagePage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimageprofile.php" class="methodname" style="color:#CC7832">setImageProfile</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$profile</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimageproperty.php" class="methodname" style="color:#CC7832">setImageProperty</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimageredprimary.php" class="methodname" style="color:#CC7832">setImageRedPrimary</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagerenderingintent.php" class="methodname" style="color:#CC7832">setImageRenderingIntent</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rendering_intent</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimageresolution.php" class="methodname" style="color:#CC7832">setImageResolution</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x_resolution</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y_resolution</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagescene.php" class="methodname" style="color:#CC7832">setImageScene</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$scene</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagetickspersecond.php" class="methodname" style="color:#CC7832">setImageTicksPerSecond</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$ticks_per_second</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagetype.php" class="methodname" style="color:#CC7832">setImageType</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$image_type</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimageunits.php" class="methodname" style="color:#CC7832">setImageUnits</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$units</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagevirtualpixelmethod.php" class="methodname" style="color:#CC7832">setImageVirtualPixelMethod</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$method</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setimagewhitepoint.php" class="methodname" style="color:#CC7832">setImageWhitePoint</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setinterlacescheme.php" class="methodname" style="color:#CC7832">setInterlaceScheme</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$interlace_scheme</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setiteratorindex.php" class="methodname" style="color:#CC7832">setIteratorIndex</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$index</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setlastiterator.php" class="methodname" style="color:#CC7832">setLastIterator</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setoption.php" class="methodname" style="color:#CC7832">setOption</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$key</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setpage.php" class="methodname" style="color:#CC7832">setPage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setpointsize.php" class="methodname" style="color:#CC7832">setPointSize</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$point_size</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setprogressmonitor.php" class="methodname" style="color:#CC7832">setProgressMonitor</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$callback</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setregistry.php" class="methodname" style="color:#CC7832">setRegistry</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$key</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setresolution.php" class="methodname" style="color:#CC7832">setResolution</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x_resolution</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y_resolution</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setresourcelimit.php" class="methodname" style="color:#CC7832">setResourceLimit</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$type</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$limit</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setsamplingfactors.php" class="methodname" style="color:#CC7832">setSamplingFactors</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$factors</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setsize.php" class="methodname" style="color:#CC7832">setSize</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.setsizeoffset.php" class="methodname" style="color:#CC7832">setSizeOffset</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.settype.php" class="methodname" style="color:#CC7832">setType</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$image_type</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.shadeimage.php" class="methodname" style="color:#CC7832">shadeImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$gray</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$azimuth</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$elevation</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.shadowimage.php" class="methodname" style="color:#CC7832">shadowImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$opacity</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.sharpenimage.php" class="methodname" style="color:#CC7832">sharpenImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.shaveimage.php" class="methodname" style="color:#CC7832">shaveImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.shearimage.php" class="methodname" style="color:#CC7832">shearImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$background</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x_shear</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y_shear</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.sigmoidalcontrastimage.php" class="methodname" style="color:#CC7832">sigmoidalContrastImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$sharpen</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$alpha</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$beta</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.sketchimage.php" class="methodname" style="color:#CC7832">sketchImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$angle</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.smushimages.php" class="methodname" style="color:#CC7832">smushImages</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$stack</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.solarizeimage.php" class="methodname" style="color:#CC7832">solarizeImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$threshold</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.sparsecolorimage.php" class="methodname" style="color:#CC7832">sparseColorImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$SPARSE_METHOD</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$arguments</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.spliceimage.php" class="methodname" style="color:#CC7832">spliceImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.spreadimage.php" class="methodname" style="color:#CC7832">spreadImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.statisticimage.php" class="methodname" style="color:#CC7832">statisticImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$type</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.steganoimage.php" class="methodname" style="color:#CC7832">steganoImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$watermark_wand</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.stereoimage.php" class="methodname" style="color:#CC7832">stereoImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$offset_wand</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.stripimage.php" class="methodname" style="color:#CC7832">stripImage</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.subimagematch.php" class="methodname" style="color:#CC7832">subImageMatch</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$Imagick</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">&$offset</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">&$similarity</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.swirlimage.php" class="methodname" style="color:#CC7832">swirlImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$degrees</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.textureimage.php" class="methodname" style="color:#CC7832">textureImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$texture_wand</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.thresholdimage.php" class="methodname" style="color:#CC7832">thresholdImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$threshold</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.thumbnailimage.php" class="methodname" style="color:#CC7832">thumbnailImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$bestfit</span><span class="initializer"> = <strong><span>false</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$fill</span><span class="initializer"> = <strong><span>false</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$legacy</span><span class="initializer"> = <strong><span>false</span></strong></span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.tintimage.php" class="methodname" style="color:#CC7832">tintImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$tint</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$opacity</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$legacy</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.tostring.php" class="methodname" style="color:#CC7832">__toString</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.transformimage.php" class="methodname" style="color:#CC7832">transformImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$crop</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$geometry</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.transformimagecolorspace.php" class="methodname" style="color:#CC7832">transformImageColorspace</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$colorspace</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.transparentpaintimage.php" class="methodname" style="color:#CC7832">transparentPaintImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$target</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$alpha</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$invert</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.transposeimage.php" class="methodname" style="color:#CC7832">transposeImage</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.transverseimage.php" class="methodname" style="color:#CC7832">transverseImage</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.trimimage.php" class="methodname" style="color:#CC7832">trimImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.uniqueimagecolors.php" class="methodname" style="color:#CC7832">uniqueImageColors</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.unsharpmaskimage.php" class="methodname" style="color:#CC7832">unsharpMaskImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$amount</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$threshold</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.valid.php" class="methodname" style="color:#CC7832">valid</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.vignetteimage.php" class="methodname" style="color:#CC7832">vignetteImage</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$blackPoint</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$whitePoint</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.waveimage.php" class="methodname" style="color:#CC7832">waveImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$amplitude</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$length</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.whitethresholdimage.php" class="methodname" style="color:#CC7832">whiteThresholdImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$threshold</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.writeimage.php" class="methodname" style="color:#CC7832">writeImage</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span><span class="initializer"> = NULL</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.writeimagefile.php" class="methodname" style="color:#CC7832">writeImageFile</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$filehandle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$format</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.writeimages.php" class="methodname" style="color:#CC7832">writeImages</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$adjoin</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagick.writeimagesfile.php" class="methodname" style="color:#CC7832">writeImagesFile</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$filehandle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$format</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">bool</span></div>   }</div>  </div> <div class="section" id="imagick.imagick.methodtypes">  <h2 class="title">Image methods and global methods</h2>  <p class="para">   The Imagick class has the ability to hold and operate on multiple   images simultaneously. This is achieved through an internal stack. There   is always an internal pointer that points at the current image. Some   functions operate on all images in the Imagick class, but most operate   only on the current image in the internal stack. As a convention, method   names can contain the word Image to denote they affect only the current   image in the stack.  </p> </div> <div class="section" id="imagick.imagick.methods">  <h2 class="title">Class Methods</h2>  <p class="para">   Because there are so many methods, here is a handy list of methods,   somewhat reduced to their general purpose:  </p>  <table class="doctable table">   <caption><strong>Class methods by purpose</strong></caption>       <thead>     <tr>      <th>Image effects</th>      <th>Get methods</th>      <th>Set methods</th>      <th>Read/write images</th>      <th>Other</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::adaptiveBlurImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getCompression()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setBackgroundColor()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::__construct()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::clear()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::adaptiveResizeImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getFilename()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setCompressionQuality()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::addImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::clone()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::adaptiveSharpenImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getFormat()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setCompression()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::appendImages()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::current()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::adaptiveThresholdImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageBackgroundColor()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setFilename()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getFilename()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::destroy()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::addNoiseImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageBlob()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImagesBlob()}</span></td>         <td><span class="methodname" style="color:#CC7832">{@link Imagick::setFormat()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getFormat()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::affinetransformimage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageBluePrimary()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageBackgroundColor()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageFilename()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getHomeURL()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::annotateImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageBorderColor()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setFirstIterator()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageFormat()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::commentImage()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::averageImages()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageChannelDepth()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageBias()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getNumberImages()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::blackThresholdImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageChannelDistortion()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageBluePrimary()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageFilename()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getReleaseDate()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::blurImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageChannelExtrema()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageBorderColor()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageFormat()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getVersion()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::borderImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageChannelMean()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageChannelDepth()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::readImageFile()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::hasNextImage()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::charcoalImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageChannelStatistics()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageColormapColor()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::readImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::hasPreviousImage()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::chopImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageColormapColor()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageColorSpace()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::writeImages()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::labelImage()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::clipImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageColorspace()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageCompose()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::writeImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::newImage()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::clipPathImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageColors()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageCompression()}</span></td>      <td class="empty">&nbsp;</td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::newPseudoImage()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::coalesceImages()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageCompose()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageDelay()}</span></td>      <td class="empty">&nbsp;</td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::nextImage()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::colorFloodFillImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageDelay()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageDepth()}</span></td>      <td class="empty">&nbsp;</td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::pingImageBlob()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::colorizeImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageDepth()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageDispose()}</span></td>      <td class="empty">&nbsp;</td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::pingImageFile()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::combineImages()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageDispose()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageDispose()}</span></td>      <td class="empty">&nbsp;</td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::pingImage()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::compareImageChannels()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageDistortion()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageExtent()}</span></td>      <td class="empty">&nbsp;</td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::previousImage()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::compareImageLayers()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageExtrema()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageFilename()}</span></td>      <td class="empty">&nbsp;</td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::profileImage()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::compositeImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageFilename()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageFormat()}</span></td>      <td class="empty">&nbsp;</td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::queryFormats()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::contrastImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageFormat()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageGamma()}</span></td>      <td class="empty">&nbsp;</td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::removeImageProfile()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::contrastStretchImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageGamma()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageGreenPrimary()}</span></td>      <td class="empty">&nbsp;</td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::removeImage()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::convolveImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageGeometry()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageIndex()}</span></td>      <td class="empty">&nbsp;</td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setFirstIterator()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::cropImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageGreenPrimary()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageInterpolateMethod()}</span></td>      <td class="empty">&nbsp;</td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageIndex()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::cycleColormapImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageHeight()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageIterations()}</span></td>      <td class="empty">&nbsp;</td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::valid()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::deconstructImages()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageHistogram()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageMatteColor()}</span></td>      <td class="empty">&nbsp;</td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getCopyright()}</span></td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::drawImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageIndex()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageMatte()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::edgeImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageInterlaceScheme()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImagePage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::embossImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageInterpolateMethod()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageProfile()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::enhanceImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageIterations()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageProperty()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::equalizeImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageMatteColor()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageRedPrimary()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::evaluateImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageMatte()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageRenderingIntent()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::flattenImages()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImagePage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageResolution()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::flipImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImagePixelColor()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageScene()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::flopImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageProfile()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageTicksPerSecond()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td class="empty">&nbsp;</td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageProperty()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageType()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::fxImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageRedPrimary()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageUnits()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::gammaImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageRegion()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageVirtualPixelMethod()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::gaussianBlurImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageRenderingIntent()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setImageWhitepoint()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::implodeImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageResolution()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setInterlaceScheme()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::levelImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageScene()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setOption()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::linearStretchImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageSignature()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setPage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::magnifyImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageTicksPerSecond()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setResolution()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::matteFloodFillImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageTotalInkDensity()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setResourceLimit()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::medianFilterImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageType()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setSamplingFactors()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::minifyImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageUnits()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setSizeOffset()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::modulateImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageVirtualPixelMethod()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setSize()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::montageImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageWhitepoint()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::setType()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::morphImages()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageWidth()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::mosaicImages()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::motionBlurImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getInterlaceScheme()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::negateImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getNumberImages()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::normalizeImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getOption()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::oilPaintImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getPackageName()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::optimizeImageLayers()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getPage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::paintOpaqueImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getPixelIterator()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::paintTransparentImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getPixelRegionIterator()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::posterizeImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getQuantumDepth()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::radialBlurImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getQuantumRange()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::raiseImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getResourceLimit()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::randomThresholdImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getResource()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::reduceNoiseImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getSamplingFactors()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::render()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getSizeOffset()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::resampleImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getSize()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::resizeImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::identifyImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::rollImage()}</span></td>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::getImageSize()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::rotateImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::sampleImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::scaleImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::separateImageChannel()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::sepiaToneImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::shadeImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::shadowImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::sharpenImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::shaveImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::shearImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::sigmoidalContrastImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::sketchImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::solarizeImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::spliceImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::spreadImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::steganoImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::stereoImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::stripImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::swirlImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::textureImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::thresholdImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::thumbnailImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::tintImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::transverseImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::trimImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::uniqueImageColors()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::unsharpMaskImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::vignetteImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::waveImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>     <tr>      <td><span class="methodname" style="color:#CC7832">{@link Imagick::whiteThresholdImage()}</span></td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>      <td class="empty">&nbsp;</td>     </tr>    </tbody>     </table> </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link Imagick::adaptiveBlurImage} — Adds adaptive blur filter to image</li><li>{@link Imagick::adaptiveResizeImage} — Adaptively resize image with data dependent triangulation</li><li>{@link Imagick::adaptiveSharpenImage} — Adaptively sharpen the image</li><li>{@link Imagick::adaptiveThresholdImage} — Selects a threshold for each pixel based on a range of intensity</li><li>{@link Imagick::addImage} — Adds new image to Imagick object image list</li><li>{@link Imagick::addNoiseImage} — Adds random noise to the image</li><li>{@link Imagick::affineTransformImage} — Transforms an image</li><li>{@link Imagick::animateImages} — Animates an image or images</li><li>{@link Imagick::annotateImage} — Annotates an image with text</li><li>{@link Imagick::appendImages} — Append a set of images</li><li>{@link Imagick::autoLevelImage} — Adjusts the levels of a particular image channel</li><li>{@link Imagick::averageImages} — Average a set of images</li><li>{@link Imagick::blackThresholdImage} — Forces all pixels below the threshold into black</li><li>{@link Imagick::blueShiftImage} — Mutes the colors of the image</li><li>{@link Imagick::blurImage} — Adds blur filter to image</li><li>{@link Imagick::borderImage} — Surrounds the image with a border</li><li>{@link Imagick::brightnessContrastImage} — Change the brightness and/or contrast of an image</li><li>{@link Imagick::charcoalImage} — Simulates a charcoal drawing</li><li>{@link Imagick::chopImage} — Removes a region of an image and trims</li><li>{@link Imagick::clampImage} — Restricts the color range from 0 to the quantum depth.</li><li>{@link Imagick::clear} — Clears all resources associated to Imagick object</li><li>{@link Imagick::clipImage} — Clips along the first path from the 8BIM profile</li><li>{@link Imagick::clipImagePath} — Clips along the named paths from the 8BIM profile, if present</li><li>{@link Imagick::clipPathImage} — Clips along the named paths from the 8BIM profile</li><li>{@link Imagick::clone} — Makes an exact copy of the Imagick object</li><li>{@link Imagick::clutImage} — Replaces colors in the image</li><li>{@link Imagick::coalesceImages} — Composites a set of images</li><li>{@link Imagick::colorFloodfillImage} — Changes the color value of any pixel that matches target</li><li>{@link Imagick::colorizeImage} — Blends the fill color with the image</li><li>{@link Imagick::colorMatrixImage} — Apply color transformation to an image</li><li>{@link Imagick::combineImages} — Combines one or more images into a single image</li><li>{@link Imagick::commentImage} — Adds a comment to your image</li><li>{@link Imagick::compareImageChannels} — Returns the difference in one or more images</li><li>{@link Imagick::compareImageLayers} — Returns the maximum bounding region between images</li><li>{@link Imagick::compareImages} — Compares an image to a reconstructed image</li><li>{@link Imagick::compositeImage} — 把一张图合并到一张图</li><li>{@link Imagick::__construct} — The Imagick constructor</li><li>{@link Imagick::contrastImage} — Change the contrast of the image</li><li>{@link Imagick::contrastStretchImage} — Enhances the contrast of a color image</li><li>{@link Imagick::convolveImage} — Applies a custom convolution kernel to the image</li><li>{@link Imagick::count} — Get the number of images</li><li>{@link Imagick::cropImage} — 截图图片的一块区域</li><li>{@link Imagick::cropThumbnailImage} — 创建缩略图</li><li>{@link Imagick::current} — Returns a reference to the current Imagick object</li><li>{@link Imagick::cycleColormapImage} — Displaces an image's colormap</li><li>{@link Imagick::decipherImage} — Deciphers an image</li><li>{@link Imagick::deconstructImages} — Returns certain pixel differences between images</li><li>{@link Imagick::deleteImageArtifact} — Delete image artifact</li><li>{@link Imagick::deleteImageProperty} — Deletes an image property</li><li>{@link Imagick::deskewImage} — Removes skew from the image</li><li>{@link Imagick::despeckleImage} — Reduces the speckle noise in an image</li><li>{@link Imagick::destroy} — Destroys the Imagick object</li><li>{@link Imagick::displayImage} — Displays an image</li><li>{@link Imagick::displayImages} — Displays an image or image sequence</li><li>{@link Imagick::distortImage} — Distorts an image using various distortion methods</li><li>{@link Imagick::drawImage} — 把 ImagickDraw 对象渲染到当前图片上</li><li>{@link Imagick::edgeImage} — Enhance edges within the image</li><li>{@link Imagick::embossImage} — Returns a grayscale image with a three-dimensional effect</li><li>{@link Imagick::encipherImage} — Enciphers an image</li><li>{@link Imagick::enhanceImage} — Improves the quality of a noisy image</li><li>{@link Imagick::equalizeImage} — Equalizes the image histogram</li><li>{@link Imagick::evaluateImage} — Applies an expression to an image</li><li>{@link Imagick::exportImagePixels} — Exports raw image pixels</li><li>{@link Imagick::extentImage} — Set image size</li><li>{@link Imagick::filter} — Applies a custom convolution kernel to the image</li><li>{@link Imagick::flattenImages} — Merges a sequence of images</li><li>{@link Imagick::flipImage} — Creates a vertical mirror image</li><li>{@link Imagick::floodFillPaintImage} — Changes the color value of any pixel that matches target</li><li>{@link Imagick::flopImage} — Creates a horizontal mirror image</li><li>{@link Imagick::forwardFourierTransformImage} — Implements the discrete Fourier transform (DFT)</li><li>{@link Imagick::frameImage} — Adds a simulated three-dimensional border</li><li>{@link Imagick::functionImage} — Applies a function on the image</li><li>{@link Imagick::fxImage} — Evaluate expression for each pixel in the image</li><li>{@link Imagick::gammaImage} — Gamma-corrects an image</li><li>{@link Imagick::gaussianBlurImage} — Blurs an image</li><li>{@link Imagick::getColorspace} — Gets the colorspace</li><li>{@link Imagick::getCompression} — Gets the object compression type</li><li>{@link Imagick::getCompressionQuality} — Gets the object compression quality</li><li>{@link Imagick::getCopyright} — Returns the ImageMagick API copyright as a string</li><li>{@link Imagick::getFilename} — The filename associated with an image sequence</li><li>{@link Imagick::getFont} — Gets font</li><li>{@link Imagick::getFormat} — Returns the format of the Imagick object</li><li>{@link Imagick::getGravity} — Gets the gravity</li><li>{@link Imagick::getHomeURL} — Returns the ImageMagick home URL</li><li>{@link Imagick::getImage} — Returns a new Imagick object</li><li>{@link Imagick::getImageAlphaChannel} — 检查图像是否有 alpha 通道</li><li>{@link Imagick::getImageArtifact} — Get image artifact</li><li>{@link Imagick::getImageAttribute} — Returns a named attribute</li><li>{@link Imagick::getImageBackgroundColor} — Returns the image background color</li><li>{@link Imagick::getImageBlob} — Returns the image sequence as a blob</li><li>{@link Imagick::getImageBluePrimary} — Returns the chromaticy blue primary point</li><li>{@link Imagick::getImageBorderColor} — Returns the image border color</li><li>{@link Imagick::getImageChannelDepth} — Gets the depth for a particular image channel</li><li>{@link Imagick::getImageChannelDistortion} — Compares image channels of an image to a reconstructed image</li><li>{@link Imagick::getImageChannelDistortions} — Gets channel distortions</li><li>{@link Imagick::getImageChannelExtrema} — Gets the extrema for one or more image channels</li><li>{@link Imagick::getImageChannelKurtosis} — The getImageChannelKurtosis purpose</li><li>{@link Imagick::getImageChannelMean} — Gets the mean and standard deviation</li><li>{@link Imagick::getImageChannelRange} — Gets channel range</li><li>{@link Imagick::getImageChannelStatistics} — Returns statistics for each channel in the image</li><li>{@link Imagick::getImageClipMask} — Gets image clip mask</li><li>{@link Imagick::getImageColormapColor} — Returns the color of the specified colormap index</li><li>{@link Imagick::getImageColors} — Gets the number of unique colors in the image</li><li>{@link Imagick::getImageColorspace} — Gets the image colorspace</li><li>{@link Imagick::getImageCompose} — Returns the composite operator associated with the image</li><li>{@link Imagick::getImageCompression} — Gets the current image's compression type</li><li>{@link Imagick::getImageCompressionQuality} — Gets the current image's compression quality</li><li>{@link Imagick::getImageDelay} — Gets the image delay</li><li>{@link Imagick::getImageDepth} — Gets the image depth</li><li>{@link Imagick::getImageDispose} — Gets the image disposal method</li><li>{@link Imagick::getImageDistortion} — Compares an image to a reconstructed image</li><li>{@link Imagick::getImageExtrema} — Gets the extrema for the image</li><li>{@link Imagick::getImageFilename} — Returns the filename of a particular image in a sequence</li><li>{@link Imagick::getImageFormat} — Returns the format of a particular image in a sequence</li><li>{@link Imagick::getImageGamma} — Gets the image gamma</li><li>{@link Imagick::getImageGeometry} — Gets the width and height as an associative array</li><li>{@link Imagick::getImageGravity} — Gets the image gravity</li><li>{@link Imagick::getImageGreenPrimary} — Returns the chromaticy green primary point</li><li>{@link Imagick::getImageHeight} — Returns the image height</li><li>{@link Imagick::getImageHistogram} — Gets the image histogram</li><li>{@link Imagick::getImageIndex} — Gets the index of the current active image</li><li>{@link Imagick::getImageInterlaceScheme} — Gets the image interlace scheme</li><li>{@link Imagick::getImageInterpolateMethod} — Returns the interpolation method</li><li>{@link Imagick::getImageIterations} — Gets the image iterations</li><li>{@link Imagick::getImageLength} — Returns the image length in bytes</li><li>{@link Imagick::getImageMatte} — Return if the image has a matte channel</li><li>{@link Imagick::getImageMatteColor} — Returns the image matte color</li><li>{@link Imagick::getImageMimeType} — Returns the image mime-type</li><li>{@link Imagick::getImageOrientation} — Gets the image orientation</li><li>{@link Imagick::getImagePage} — Returns the page geometry</li><li>{@link Imagick::getImagePixelColor} — Returns the color of the specified pixel</li><li>{@link Imagick::getImageProfile} — Returns the named image profile</li><li>{@link Imagick::getImageProfiles} — Returns the image profiles</li><li>{@link Imagick::getImageProperties} — Returns the image properties</li><li>{@link Imagick::getImageProperty} — Returns the named image property</li><li>{@link Imagick::getImageRedPrimary} — Returns the chromaticity red primary point</li><li>{@link Imagick::getImageRegion} — Extracts a region of the image</li><li>{@link Imagick::getImageRenderingIntent} — Gets the image rendering intent</li><li>{@link Imagick::getImageResolution} — 获取图像的x,y轴分辨率</li><li>{@link Imagick::getImagesBlob} — Returns all image sequences as a blob</li><li>{@link Imagick::getImageScene} — Gets the image scene</li><li>{@link Imagick::getImageSignature} — Generates an SHA-256 message digest</li><li>{@link Imagick::getImageSize} — Returns the image length in bytes</li><li>{@link Imagick::getImageTicksPerSecond} — Gets the image ticks-per-second</li><li>{@link Imagick::getImageTotalInkDensity} — Gets the image total ink density</li><li>{@link Imagick::getImageType} — Gets the potential image type</li><li>{@link Imagick::getImageUnits} — 获取图像的分辨率单位</li><li>{@link Imagick::getImageVirtualPixelMethod} — Returns the virtual pixel method</li><li>{@link Imagick::getImageWhitePoint} — Returns the chromaticity white point</li><li>{@link Imagick::getImageWidth} — Returns the image width</li><li>{@link Imagick::getInterlaceScheme} — Gets the object interlace scheme</li><li>{@link Imagick::getIteratorIndex} — Gets the index of the current active image</li><li>{@link Imagick::getNumberImages} — Returns the number of images in the object</li><li>{@link Imagick::getOption} — Returns a value associated with the specified key</li><li>{@link Imagick::getPackageName} — Returns the ImageMagick package name</li><li>{@link Imagick::getPage} — Returns the page geometry</li><li>{@link Imagick::getPixelIterator} — Returns a MagickPixelIterator</li><li>{@link Imagick::getPixelRegionIterator} — Get an ImagickPixelIterator for an image section</li><li>{@link Imagick::getPointSize} — Gets point size</li><li>{@link Imagick::getQuantum} — Returns the ImageMagick quantum range</li><li>{@link Imagick::getQuantumDepth} — Gets the quantum depth</li><li>{@link Imagick::getQuantumRange} — Returns the Imagick quantum range</li><li>{@link Imagick::getRegistry} — Get a StringRegistry entry</li><li>{@link Imagick::getReleaseDate} — Returns the ImageMagick release date</li><li>{@link Imagick::getResource} — Returns the specified resource's memory usage</li><li>{@link Imagick::getResourceLimit} — Returns the specified resource limit</li><li>{@link Imagick::getSamplingFactors} — Gets the horizontal and vertical sampling factor</li><li>{@link Imagick::getSize} — Returns the size associated with the Imagick object</li><li>{@link Imagick::getSizeOffset} — Returns the size offset</li><li>{@link Imagick::getVersion} — Returns the ImageMagick API version</li><li>{@link Imagick::haldClutImage} — Replaces colors in the image</li><li>{@link Imagick::hasNextImage} — Checks if the object has more images</li><li>{@link Imagick::hasPreviousImage} — Checks if the object has a previous image</li><li>{@link Imagick::identifyFormat} — Formats a string with image details</li><li>{@link Imagick::identifyImage} — Identifies an image and fetches attributes</li><li>{@link Imagick::implodeImage} — Creates a new image as a copy</li><li>{@link Imagick::importImagePixels} — Imports image pixels</li><li>{@link Imagick::inverseFourierTransformImage} — Implements the inverse discrete Fourier transform (DFT)</li><li>{@link Imagick::labelImage} — Adds a label to an image</li><li>{@link Imagick::levelImage} — Adjusts the levels of an image</li><li>{@link Imagick::linearStretchImage} — Stretches with saturation the image intensity</li><li>{@link Imagick::liquidRescaleImage} — Animates an image or images</li><li>{@link Imagick::listRegistry} — List all the registry settings</li><li>{@link Imagick::magnifyImage} — Scales an image proportionally 2x</li><li>{@link Imagick::mapImage} — Replaces the colors of an image with the closest color from a reference image</li><li>{@link Imagick::matteFloodfillImage} — Changes the transparency value of a color</li><li>{@link Imagick::medianFilterImage} — Applies a digital filter</li><li>{@link Imagick::mergeImageLayers} — Merges image layers</li><li>{@link Imagick::minifyImage} — Scales an image proportionally to half its size</li><li>{@link Imagick::modulateImage} — Control the brightness, saturation, and hue</li><li>{@link Imagick::montageImage} — Creates a composite image</li><li>{@link Imagick::morphImages} — Method morphs a set of images</li><li>{@link Imagick::morphology} — Applies a user supplied kernel to the image according to the given morphology method.</li><li>{@link Imagick::mosaicImages} — Forms a mosaic from images</li><li>{@link Imagick::motionBlurImage} — Simulates motion blur</li><li>{@link Imagick::negateImage} — Negates the colors in the reference image</li><li>{@link Imagick::newImage} — 创建一张图片</li><li>{@link Imagick::newPseudoImage} — Creates a new image</li><li>{@link Imagick::nextImage} — Moves to the next image</li><li>{@link Imagick::normalizeImage} — Enhances the contrast of a color image</li><li>{@link Imagick::oilPaintImage} — Simulates an oil painting</li><li>{@link Imagick::opaquePaintImage} — Changes the color value of any pixel that matches target</li><li>{@link Imagick::optimizeImageLayers} — Removes repeated portions of images to optimize</li><li>{@link Imagick::orderedPosterizeImage} — Performs an ordered dither</li><li>{@link Imagick::paintFloodfillImage} — Changes the color value of any pixel that matches target</li><li>{@link Imagick::paintOpaqueImage} — Change any pixel that matches color</li><li>{@link Imagick::paintTransparentImage} — Changes any pixel that matches color with the color defined by fill</li><li>{@link Imagick::pingImage} — Fetch basic attributes about the image</li><li>{@link Imagick::pingImageBlob} — Quickly fetch attributes</li><li>{@link Imagick::pingImageFile} — Get basic image attributes in a lightweight manner</li><li>{@link Imagick::polaroidImage} — Simulates a Polaroid picture</li><li>{@link Imagick::posterizeImage} — Reduces the image to a limited number of color level</li><li>{@link Imagick::previewImages} — Quickly pin-point appropriate parameters for image processing</li><li>{@link Imagick::previousImage} — Move to the previous image in the object</li><li>{@link Imagick::profileImage} — Adds or removes a profile from an image</li><li>{@link Imagick::quantizeImage} — Analyzes the colors within a reference image</li><li>{@link Imagick::quantizeImages} — Analyzes the colors within a sequence of images</li><li>{@link Imagick::queryFontMetrics} — Returns an array representing the font metrics</li><li>{@link Imagick::queryFonts} — Returns the configured fonts</li><li>{@link Imagick::queryFormats} — Returns formats supported by Imagick</li><li>{@link Imagick::radialBlurImage} — Radial blurs an image</li><li>{@link Imagick::raiseImage} — Creates a simulated 3d button-like effect</li><li>{@link Imagick::randomThresholdImage} — Creates a high-contrast, two-color image</li><li>{@link Imagick::readImage} — Reads image from filename</li><li>{@link Imagick::readImageBlob} — 从二进制字符串里读取图片</li><li>{@link Imagick::readImageFile} — Reads image from open filehandle</li><li>{@link Imagick::readimages} — Reads image from an array of filenames</li><li>{@link Imagick::recolorImage} — Recolors image</li><li>{@link Imagick::reduceNoiseImage} — Smooths the contours of an image</li><li>{@link Imagick::remapImage} — Remaps image colors</li><li>{@link Imagick::removeImage} — Removes an image from the image list</li><li>{@link Imagick::removeImageProfile} — Removes the named image profile and returns it</li><li>{@link Imagick::render} — Renders all preceding drawing commands</li><li>{@link Imagick::resampleImage} — Resample image to desired resolution</li><li>{@link Imagick::resetImagePage} — Reset image page</li><li>{@link Imagick::resizeImage} — Scales an image</li><li>{@link Imagick::rollImage} — Offsets an image</li><li>{@link Imagick::rotateImage} — Rotates an image</li><li>{@link Imagick::rotationalBlurImage} — Rotational blurs an image</li><li>{@link Imagick::roundCorners} — Rounds image corners</li><li>{@link Imagick::sampleImage} — Scales an image with pixel sampling</li><li>{@link Imagick::scaleImage} — Scales the size of an image</li><li>{@link Imagick::segmentImage} — Segments an image</li><li>{@link Imagick::selectiveBlurImage} — Selectively blur an image within a contrast threshold</li><li>{@link Imagick::separateImageChannel} — Separates a channel from the image</li><li>{@link Imagick::sepiaToneImage} — Sepia tones an image</li><li>{@link Imagick::setBackgroundColor} — Sets the object's default background color</li><li>{@link Imagick::setColorspace} — Set colorspace</li><li>{@link Imagick::setCompression} — Sets the object's default compression type</li><li>{@link Imagick::setCompressionQuality} — Sets the object's default compression quality</li><li>{@link Imagick::setFilename} — Sets the filename before you read or write the image</li><li>{@link Imagick::setFirstIterator} — Sets the Imagick iterator to the first image</li><li>{@link Imagick::setFont} — Sets font</li><li>{@link Imagick::setFormat} — Sets the format of the Imagick object</li><li>{@link Imagick::setGravity} — Sets the gravity</li><li>{@link Imagick::setImage} — Replaces image in the object</li><li>{@link Imagick::setImageAlphaChannel} — Sets image alpha channel</li><li>{@link Imagick::setImageArtifact} — Set image artifact</li><li>{@link Imagick::setImageAttribute} — Sets an image attribute</li><li>{@link Imagick::setImageBackgroundColor} — Sets the image background color</li><li>{@link Imagick::setImageBias} — Sets the image bias for any method that convolves an image</li><li>{@link Imagick::setImageBiasQuantum} — Sets the image bias</li><li>{@link Imagick::setImageBluePrimary} — Sets the image chromaticity blue primary point</li><li>{@link Imagick::setImageBorderColor} — Sets the image border color</li><li>{@link Imagick::setImageChannelDepth} — Sets the depth of a particular image channel</li><li>{@link Imagick::setImageClipMask} — Sets image clip mask</li><li>{@link Imagick::setImageColormapColor} — Sets the color of the specified colormap index</li><li>{@link Imagick::setImageColorspace} — Sets the image colorspace</li><li>{@link Imagick::setImageCompose} — Sets the image composite operator</li><li>{@link Imagick::setImageCompression} — 设置图片压缩的类型</li><li>{@link Imagick::setImageCompressionQuality} — 设置图片压缩的质量</li><li>{@link Imagick::setImageDelay} — Sets the image delay</li><li>{@link Imagick::setImageDepth} — Sets the image depth</li><li>{@link Imagick::setImageDispose} — Sets the image disposal method</li><li>{@link Imagick::setImageExtent} — Sets the image size</li><li>{@link Imagick::setImageFilename} — Sets the filename of a particular image</li><li>{@link Imagick::setImageFormat} — 为图片设置指定的格式</li><li>{@link Imagick::setImageGamma} — Sets the image gamma</li><li>{@link Imagick::setImageGravity} — Sets the image gravity</li><li>{@link Imagick::setImageGreenPrimary} — Sets the image chromaticity green primary point</li><li>{@link Imagick::setImageIndex} — Set the iterator position</li><li>{@link Imagick::setImageInterlaceScheme} — Sets the image compression</li><li>{@link Imagick::setImageInterpolateMethod} — Sets the image interpolate pixel method</li><li>{@link Imagick::setImageIterations} — Sets the image iterations</li><li>{@link Imagick::setImageMatte} — Sets the image matte channel</li><li>{@link Imagick::setImageMatteColor} — Sets the image matte color</li><li>{@link Imagick::setImageOpacity} — Sets the image opacity level</li><li>{@link Imagick::setImageOrientation} — Sets the image orientation</li><li>{@link Imagick::setImagePage} — Sets the page geometry of the image</li><li>{@link Imagick::setImageProfile} — Adds a named profile to the Imagick object</li><li>{@link Imagick::setImageProperty} — Sets an image property</li><li>{@link Imagick::setImageRedPrimary} — Sets the image chromaticity red primary point</li><li>{@link Imagick::setImageRenderingIntent} — Sets the image rendering intent</li><li>{@link Imagick::setImageResolution} — Sets the image resolution</li><li>{@link Imagick::setImageScene} — Sets the image scene</li><li>{@link Imagick::setImageTicksPerSecond} — Sets the image ticks-per-second</li><li>{@link Imagick::setImageType} — Sets the image type</li><li>{@link Imagick::setImageUnits} — Sets the image units of resolution</li><li>{@link Imagick::setImageVirtualPixelMethod} — Sets the image virtual pixel method</li><li>{@link Imagick::setImageWhitePoint} — Sets the image chromaticity white point</li><li>{@link Imagick::setInterlaceScheme} — Sets the image compression</li><li>{@link Imagick::setIteratorIndex} — Set the iterator position</li><li>{@link Imagick::setLastIterator} — Sets the Imagick iterator to the last image</li><li>{@link Imagick::setOption} — Set an option</li><li>{@link Imagick::setPage} — Sets the page geometry of the Imagick object</li><li>{@link Imagick::setPointSize} — Sets point size</li><li>{@link Imagick::setProgressMonitor} — Set a callback to be called during processing</li><li>{@link Imagick::setRegistry} — Sets the ImageMagick registry entry named key to value</li><li>{@link Imagick::setResolution} — Sets the image resolution</li><li>{@link Imagick::setResourceLimit} — Sets the limit for a particular resource</li><li>{@link Imagick::setSamplingFactors} — Sets the image sampling factors</li><li>{@link Imagick::setSize} — Sets the size of the Imagick object</li><li>{@link Imagick::setSizeOffset} — Sets the size and offset of the Imagick object</li><li>{@link Imagick::setType} — Sets the image type attribute</li><li>{@link Imagick::shadeImage} — Creates a 3D effect</li><li>{@link Imagick::shadowImage} — Simulates an image shadow</li><li>{@link Imagick::sharpenImage} — Sharpens an image</li><li>{@link Imagick::shaveImage} — Shaves pixels from the image edges</li><li>{@link Imagick::shearImage} — Creating a parallelogram</li><li>{@link Imagick::sigmoidalContrastImage} — Adjusts the contrast of an image</li><li>{@link Imagick::sketchImage} — Simulates a pencil sketch</li><li>{@link Imagick::smushImages} — Takes all images from the current image pointer to the end of the image list and smushs them</li><li>{@link Imagick::solarizeImage} — Applies a solarizing effect to the image</li><li>{@link Imagick::sparseColorImage} — Interpolates colors</li><li>{@link Imagick::spliceImage} — Splices a solid color into the image</li><li>{@link Imagick::spreadImage} — Randomly displaces each pixel in a block</li><li>{@link Imagick::statisticImage} — Modifies image using a statistics function</li><li>{@link Imagick::steganoImage} — Hides a digital watermark within the image</li><li>{@link Imagick::stereoImage} — Composites two images</li><li>{@link Imagick::stripImage} — 去掉图片的所有配置和设置</li><li>{@link Imagick::subImageMatch} — Searches for a subimage in the current image and returns a similarity image</li><li>{@link Imagick::swirlImage} — Swirls the pixels about the center of the image</li><li>{@link Imagick::textureImage} — Repeatedly tiles the texture image</li><li>{@link Imagick::thresholdImage} — Changes the value of individual pixels based on a threshold</li><li>{@link Imagick::thumbnailImage} — Changes the size of an image</li><li>{@link Imagick::tintImage} — Applies a color vector to each pixel in the image</li><li>{@link Imagick::__toString} — Returns the image as a string</li><li>{@link Imagick::transformImage} — Convenience method for setting crop size and the image geometry</li><li>{@link Imagick::transformImageColorspace} — Transforms an image to a new colorspace</li><li>{@link Imagick::transparentPaintImage} — Paints pixels transparent</li><li>{@link Imagick::transposeImage} — Creates a vertical mirror image</li><li>{@link Imagick::transverseImage} — Creates a horizontal mirror image</li><li>{@link Imagick::trimImage} — Remove edges from the image</li><li>{@link Imagick::uniqueImageColors} — Discards all but one of any pixel color</li><li>{@link Imagick::unsharpMaskImage} — Sharpens an image</li><li>{@link Imagick::valid} — Checks if the current item is valid</li><li>{@link Imagick::vignetteImage} — Adds vignette filter to the image</li><li>{@link Imagick::waveImage} — Applies wave filter to the image</li><li>{@link Imagick::whiteThresholdImage} — Force all pixels above the threshold into white</li><li>{@link Imagick::writeImage} — 把图片写入指定的文件</li><li>{@link Imagick::writeImageFile} — Writes an image to a filehandle</li><li>{@link Imagick::writeImages} — Writes an image or image sequence</li><li>{@link Imagick::writeImagesFile} — Writes frames to a filehandle</li></ul></div>
*/
class Imagick implements Iterator, Countable
{
    public const COLOR_BLACK = 11;
    public const COLOR_BLUE = 12;
    public const COLOR_CYAN = 13;
    public const COLOR_GREEN = 14;
    public const COLOR_RED = 15;
    public const COLOR_YELLOW = 16;
    public const COLOR_MAGENTA = 17;
    public const COLOR_OPACITY = 18;
    public const COLOR_ALPHA = 19;
    public const COLOR_FUZZ = 20;
    public const IMAGICK_EXTNUM = 30403;
    public const IMAGICK_EXTVER = "3.4.3";
    public const QUANTUM_RANGE = 65535;
    public const USE_ZEND_MM = 0;
    public const COMPOSITE_DEFAULT = 40;
    public const COMPOSITE_UNDEFINED = 0;
    public const COMPOSITE_NO = 1;
    public const COMPOSITE_ADD = 2;
    public const COMPOSITE_ATOP = 3;
    public const COMPOSITE_BLEND = 4;
    public const COMPOSITE_BUMPMAP = 5;
    public const COMPOSITE_CLEAR = 7;
    public const COMPOSITE_COLORBURN = 8;
    public const COMPOSITE_COLORDODGE = 9;
    public const COMPOSITE_COLORIZE = 10;
    public const COMPOSITE_COPYBLACK = 11;
    public const COMPOSITE_COPYBLUE = 12;
    public const COMPOSITE_COPY = 13;
    public const COMPOSITE_COPYCYAN = 14;
    public const COMPOSITE_COPYGREEN = 15;
    public const COMPOSITE_COPYMAGENTA = 16;
    public const COMPOSITE_COPYOPACITY = 17;
    public const COMPOSITE_COPYRED = 18;
    public const COMPOSITE_COPYYELLOW = 19;
    public const COMPOSITE_DARKEN = 20;
    public const COMPOSITE_DSTATOP = 21;
    public const COMPOSITE_DST = 22;
    public const COMPOSITE_DSTIN = 23;
    public const COMPOSITE_DSTOUT = 24;
    public const COMPOSITE_DSTOVER = 25;
    public const COMPOSITE_DIFFERENCE = 26;
    public const COMPOSITE_DISPLACE = 27;
    public const COMPOSITE_DISSOLVE = 28;
    public const COMPOSITE_EXCLUSION = 29;
    public const COMPOSITE_HARDLIGHT = 30;
    public const COMPOSITE_HUE = 31;
    public const COMPOSITE_IN = 32;
    public const COMPOSITE_LIGHTEN = 33;
    public const COMPOSITE_LUMINIZE = 35;
    public const COMPOSITE_MINUS = 36;
    public const COMPOSITE_MODULATE = 37;
    public const COMPOSITE_MULTIPLY = 38;
    public const COMPOSITE_OUT = 39;
    public const COMPOSITE_OVER = 40;
    public const COMPOSITE_OVERLAY = 41;
    public const COMPOSITE_PLUS = 42;
    public const COMPOSITE_REPLACE = 43;
    public const COMPOSITE_SATURATE = 44;
    public const COMPOSITE_SCREEN = 45;
    public const COMPOSITE_SOFTLIGHT = 46;
    public const COMPOSITE_SRCATOP = 47;
    public const COMPOSITE_SRC = 48;
    public const COMPOSITE_SRCIN = 49;
    public const COMPOSITE_SRCOUT = 50;
    public const COMPOSITE_SRCOVER = 51;
    public const COMPOSITE_SUBTRACT = 52;
    public const COMPOSITE_THRESHOLD = 53;
    public const COMPOSITE_XOR = 54;
    public const COMPOSITE_CHANGEMASK = 6;
    public const COMPOSITE_LINEARLIGHT = 34;
    public const COMPOSITE_DIVIDE = 55;
    public const COMPOSITE_DISTORT = 56;
    public const COMPOSITE_BLUR = 57;
    public const COMPOSITE_PEGTOPLIGHT = 58;
    public const COMPOSITE_VIVIDLIGHT = 59;
    public const COMPOSITE_PINLIGHT = 60;
    public const COMPOSITE_LINEARDODGE = 61;
    public const COMPOSITE_LINEARBURN = 62;
    public const COMPOSITE_MATHEMATICS = 63;
    public const COMPOSITE_MODULUSADD = 2;
    public const COMPOSITE_MODULUSSUBTRACT = 52;
    public const COMPOSITE_MINUSDST = 36;
    public const COMPOSITE_DIVIDEDST = 55;
    public const COMPOSITE_DIVIDESRC = 64;
    public const COMPOSITE_MINUSSRC = 65;
    public const COMPOSITE_DARKENINTENSITY = 66;
    public const COMPOSITE_LIGHTENINTENSITY = 67;
    public const MONTAGEMODE_FRAME = 1;
    public const MONTAGEMODE_UNFRAME = 2;
    public const MONTAGEMODE_CONCATENATE = 3;
    public const STYLE_NORMAL = 1;
    public const STYLE_ITALIC = 2;
    public const STYLE_OBLIQUE = 3;
    public const STYLE_ANY = 4;
    public const FILTER_UNDEFINED = 0;
    public const FILTER_POINT = 1;
    public const FILTER_BOX = 2;
    public const FILTER_TRIANGLE = 3;
    public const FILTER_HERMITE = 4;
    public const FILTER_HANNING = 5;
    public const FILTER_HAMMING = 6;
    public const FILTER_BLACKMAN = 7;
    public const FILTER_GAUSSIAN = 8;
    public const FILTER_QUADRATIC = 9;
    public const FILTER_CUBIC = 10;
    public const FILTER_CATROM = 11;
    public const FILTER_MITCHELL = 12;
    public const FILTER_LANCZOS = 22;
    public const FILTER_BESSEL = 13;
    public const FILTER_SINC = 14;
    public const FILTER_KAISER = 16;
    public const FILTER_WELSH = 17;
    public const FILTER_PARZEN = 18;
    public const FILTER_LAGRANGE = 21;
    public const FILTER_SENTINEL = 31;
    public const FILTER_BOHMAN = 19;
    public const FILTER_BARTLETT = 20;
    public const FILTER_JINC = 13;
    public const FILTER_SINCFAST = 15;
    public const FILTER_ROBIDOUX = 26;
    public const FILTER_LANCZOSSHARP = 23;
    public const FILTER_LANCZOS2 = 24;
    public const FILTER_LANCZOS2SHARP = 25;
    public const FILTER_ROBIDOUXSHARP = 27;
    public const FILTER_COSINE = 28;
    public const FILTER_SPLINE = 29;
    public const FILTER_LANCZOSRADIUS = 30;
    public const IMGTYPE_UNDEFINED = 0;
    public const IMGTYPE_BILEVEL = 1;
    public const IMGTYPE_GRAYSCALE = 2;
    public const IMGTYPE_GRAYSCALEMATTE = 3;
    public const IMGTYPE_PALETTE = 4;
    public const IMGTYPE_PALETTEMATTE = 5;
    public const IMGTYPE_TRUECOLOR = 6;
    public const IMGTYPE_TRUECOLORMATTE = 7;
    public const IMGTYPE_COLORSEPARATION = 8;
    public const IMGTYPE_COLORSEPARATIONMATTE = 9;
    public const IMGTYPE_OPTIMIZE = 10;
    public const IMGTYPE_PALETTEBILEVELMATTE = 11;
    public const RESOLUTION_UNDEFINED = 0;
    public const RESOLUTION_PIXELSPERINCH = 1;
    public const RESOLUTION_PIXELSPERCENTIMETER = 2;
    public const COMPRESSION_UNDEFINED = 0;
    public const COMPRESSION_NO = 1;
    public const COMPRESSION_BZIP = 2;
    public const COMPRESSION_FAX = 6;
    public const COMPRESSION_GROUP4 = 7;
    public const COMPRESSION_JPEG = 8;
    public const COMPRESSION_JPEG2000 = 9;
    public const COMPRESSION_LOSSLESSJPEG = 10;
    public const COMPRESSION_LZW = 11;
    public const COMPRESSION_RLE = 12;
    public const COMPRESSION_ZIP = 13;
    public const COMPRESSION_DXT1 = 3;
    public const COMPRESSION_DXT3 = 4;
    public const COMPRESSION_DXT5 = 5;
    public const COMPRESSION_ZIPS = 14;
    public const COMPRESSION_PIZ = 15;
    public const COMPRESSION_PXR24 = 16;
    public const COMPRESSION_B44 = 17;
    public const COMPRESSION_B44A = 18;
    public const COMPRESSION_LZMA = 19;
    public const COMPRESSION_JBIG1 = 20;
    public const COMPRESSION_JBIG2 = 21;
    public const PAINT_POINT = 1;
    public const PAINT_REPLACE = 2;
    public const PAINT_FLOODFILL = 3;
    public const PAINT_FILLTOBORDER = 4;
    public const PAINT_RESET = 5;
    public const GRAVITY_NORTHWEST = 1;
    public const GRAVITY_NORTH = 2;
    public const GRAVITY_NORTHEAST = 3;
    public const GRAVITY_WEST = 4;
    public const GRAVITY_CENTER = 5;
    public const GRAVITY_EAST = 6;
    public const GRAVITY_SOUTHWEST = 7;
    public const GRAVITY_SOUTH = 8;
    public const GRAVITY_SOUTHEAST = 9;
    public const GRAVITY_FORGET = 0;
    public const GRAVITY_STATIC = 10;
    public const STRETCH_NORMAL = 1;
    public const STRETCH_ULTRACONDENSED = 2;
    public const STRETCH_EXTRACONDENSED = 3;
    public const STRETCH_CONDENSED = 4;
    public const STRETCH_SEMICONDENSED = 5;
    public const STRETCH_SEMIEXPANDED = 6;
    public const STRETCH_EXPANDED = 7;
    public const STRETCH_EXTRAEXPANDED = 8;
    public const STRETCH_ULTRAEXPANDED = 9;
    public const STRETCH_ANY = 10;
    public const ALIGN_UNDEFINED = 0;
    public const ALIGN_LEFT = 1;
    public const ALIGN_CENTER = 2;
    public const ALIGN_RIGHT = 3;
    public const DECORATION_NO = 1;
    public const DECORATION_UNDERLINE = 2;
    public const DECORATION_OVERLINE = 3;
    public const DECORATION_LINETROUGH = 4;
    public const DECORATION_LINETHROUGH = 4;
    public const NOISE_UNIFORM = 1;
    public const NOISE_GAUSSIAN = 2;
    public const NOISE_MULTIPLICATIVEGAUSSIAN = 3;
    public const NOISE_IMPULSE = 4;
    public const NOISE_LAPLACIAN = 5;
    public const NOISE_POISSON = 6;
    public const NOISE_RANDOM = 7;
    public const CHANNEL_UNDEFINED = 0;
    public const CHANNEL_RED = 1;
    public const CHANNEL_GRAY = 1;
    public const CHANNEL_CYAN = 1;
    public const CHANNEL_GREEN = 2;
    public const CHANNEL_MAGENTA = 2;
    public const CHANNEL_BLUE = 4;
    public const CHANNEL_YELLOW = 4;
    public const CHANNEL_ALPHA = 8;
    public const CHANNEL_OPACITY = 8;
    public const CHANNEL_MATTE = 8;
    public const CHANNEL_BLACK = 32;
    public const CHANNEL_INDEX = 32;
    public const CHANNEL_ALL = 134217727;
    public const CHANNEL_DEFAULT = 134217719;
    public const CHANNEL_RGBA = 15;
    public const CHANNEL_TRUEALPHA = 64;
    public const CHANNEL_RGBS = 128;
    public const CHANNEL_GRAY_CHANNELS = 128;
    public const CHANNEL_SYNC = 256;
    public const CHANNEL_COMPOSITES = 47;
    public const METRIC_UNDEFINED = 0;
    public const METRIC_ABSOLUTEERRORMETRIC = 1;
    public const METRIC_MEANABSOLUTEERROR = 2;
    public const METRIC_MEANERRORPERPIXELMETRIC = 3;
    public const METRIC_MEANSQUAREERROR = 4;
    public const METRIC_PEAKABSOLUTEERROR = 5;
    public const METRIC_PEAKSIGNALTONOISERATIO = 6;
    public const METRIC_ROOTMEANSQUAREDERROR = 7;
    public const METRIC_NORMALIZEDCROSSCORRELATIONERRORMETRIC = 8;
    public const METRIC_FUZZERROR = 9;
    public const PIXEL_CHAR = 1;
    public const PIXEL_DOUBLE = 2;
    public const PIXEL_FLOAT = 3;
    public const PIXEL_INTEGER = 4;
    public const PIXEL_LONG = 5;
    public const PIXEL_QUANTUM = 6;
    public const PIXEL_SHORT = 7;
    public const EVALUATE_UNDEFINED = 0;
    public const EVALUATE_ADD = 1;
    public const EVALUATE_AND = 2;
    public const EVALUATE_DIVIDE = 3;
    public const EVALUATE_LEFTSHIFT = 4;
    public const EVALUATE_MAX = 5;
    public const EVALUATE_MIN = 6;
    public const EVALUATE_MULTIPLY = 7;
    public const EVALUATE_OR = 8;
    public const EVALUATE_RIGHTSHIFT = 9;
    public const EVALUATE_SET = 10;
    public const EVALUATE_SUBTRACT = 11;
    public const EVALUATE_XOR = 12;
    public const EVALUATE_POW = 13;
    public const EVALUATE_LOG = 14;
    public const EVALUATE_THRESHOLD = 15;
    public const EVALUATE_THRESHOLDBLACK = 16;
    public const EVALUATE_THRESHOLDWHITE = 17;
    public const EVALUATE_GAUSSIANNOISE = 18;
    public const EVALUATE_IMPULSENOISE = 19;
    public const EVALUATE_LAPLACIANNOISE = 20;
    public const EVALUATE_MULTIPLICATIVENOISE = 21;
    public const EVALUATE_POISSONNOISE = 22;
    public const EVALUATE_UNIFORMNOISE = 23;
    public const EVALUATE_COSINE = 24;
    public const EVALUATE_SINE = 25;
    public const EVALUATE_ADDMODULUS = 26;
    public const EVALUATE_MEAN = 27;
    public const EVALUATE_ABS = 28;
    public const EVALUATE_EXPONENTIAL = 29;
    public const EVALUATE_MEDIAN = 30;
    public const EVALUATE_SUM = 31;
    public const COLORSPACE_UNDEFINED = 0;
    public const COLORSPACE_RGB = 1;
    public const COLORSPACE_GRAY = 2;
    public const COLORSPACE_TRANSPARENT = 3;
    public const COLORSPACE_OHTA = 4;
    public const COLORSPACE_LAB = 5;
    public const COLORSPACE_XYZ = 6;
    public const COLORSPACE_YCBCR = 7;
    public const COLORSPACE_YCC = 8;
    public const COLORSPACE_YIQ = 9;
    public const COLORSPACE_YPBPR = 10;
    public const COLORSPACE_YUV = 11;
    public const COLORSPACE_CMYK = 12;
    public const COLORSPACE_SRGB = 13;
    public const COLORSPACE_HSB = 14;
    public const COLORSPACE_HSL = 15;
    public const COLORSPACE_HWB = 16;
    public const COLORSPACE_REC601LUMA = 17;
    public const COLORSPACE_REC709LUMA = 19;
    public const COLORSPACE_LOG = 21;
    public const COLORSPACE_CMY = 22;
    public const COLORSPACE_LUV = 23;
    public const COLORSPACE_HCL = 24;
    public const COLORSPACE_LCH = 25;
    public const COLORSPACE_LMS = 26;
    public const COLORSPACE_LCHAB = 27;
    public const COLORSPACE_LCHUV = 28;
    public const COLORSPACE_SCRGB = 29;
    public const COLORSPACE_HSI = 30;
    public const COLORSPACE_HSV = 31;
    public const COLORSPACE_HCLP = 32;
    public const COLORSPACE_YDBDR = 33;
    public const COLORSPACE_REC601YCBCR = 18;
    public const COLORSPACE_REC709YCBCR = 20;
    public const VIRTUALPIXELMETHOD_UNDEFINED = 0;
    public const VIRTUALPIXELMETHOD_BACKGROUND = 1;
    public const VIRTUALPIXELMETHOD_CONSTANT = 2;
    public const VIRTUALPIXELMETHOD_EDGE = 4;
    public const VIRTUALPIXELMETHOD_MIRROR = 5;
    public const VIRTUALPIXELMETHOD_TILE = 7;
    public const VIRTUALPIXELMETHOD_TRANSPARENT = 8;
    public const VIRTUALPIXELMETHOD_MASK = 9;
    public const VIRTUALPIXELMETHOD_BLACK = 10;
    public const VIRTUALPIXELMETHOD_GRAY = 11;
    public const VIRTUALPIXELMETHOD_WHITE = 12;
    public const VIRTUALPIXELMETHOD_HORIZONTALTILE = 13;
    public const VIRTUALPIXELMETHOD_VERTICALTILE = 14;
    public const VIRTUALPIXELMETHOD_HORIZONTALTILEEDGE = 15;
    public const VIRTUALPIXELMETHOD_VERTICALTILEEDGE = 16;
    public const VIRTUALPIXELMETHOD_CHECKERTILE = 17;
    public const PREVIEW_UNDEFINED = 0;
    public const PREVIEW_ROTATE = 1;
    public const PREVIEW_SHEAR = 2;
    public const PREVIEW_ROLL = 3;
    public const PREVIEW_HUE = 4;
    public const PREVIEW_SATURATION = 5;
    public const PREVIEW_BRIGHTNESS = 6;
    public const PREVIEW_GAMMA = 7;
    public const PREVIEW_SPIFF = 8;
    public const PREVIEW_DULL = 9;
    public const PREVIEW_GRAYSCALE = 10;
    public const PREVIEW_QUANTIZE = 11;
    public const PREVIEW_DESPECKLE = 12;
    public const PREVIEW_REDUCENOISE = 13;
    public const PREVIEW_ADDNOISE = 14;
    public const PREVIEW_SHARPEN = 15;
    public const PREVIEW_BLUR = 16;
    public const PREVIEW_THRESHOLD = 17;
    public const PREVIEW_EDGEDETECT = 18;
    public const PREVIEW_SPREAD = 19;
    public const PREVIEW_SOLARIZE = 20;
    public const PREVIEW_SHADE = 21;
    public const PREVIEW_RAISE = 22;
    public const PREVIEW_SEGMENT = 23;
    public const PREVIEW_SWIRL = 24;
    public const PREVIEW_IMPLODE = 25;
    public const PREVIEW_WAVE = 26;
    public const PREVIEW_OILPAINT = 27;
    public const PREVIEW_CHARCOALDRAWING = 28;
    public const PREVIEW_JPEG = 29;
    public const RENDERINGINTENT_UNDEFINED = 0;
    public const RENDERINGINTENT_SATURATION = 1;
    public const RENDERINGINTENT_PERCEPTUAL = 2;
    public const RENDERINGINTENT_ABSOLUTE = 3;
    public const RENDERINGINTENT_RELATIVE = 4;
    public const INTERLACE_UNDEFINED = 0;
    public const INTERLACE_NO = 1;
    public const INTERLACE_LINE = 2;
    public const INTERLACE_PLANE = 3;
    public const INTERLACE_PARTITION = 4;
    public const INTERLACE_GIF = 5;
    public const INTERLACE_JPEG = 6;
    public const INTERLACE_PNG = 7;
    public const FILLRULE_UNDEFINED = 0;
    public const FILLRULE_EVENODD = 1;
    public const FILLRULE_NONZERO = 2;
    public const PATHUNITS_UNDEFINED = 0;
    public const PATHUNITS_USERSPACE = 1;
    public const PATHUNITS_USERSPACEONUSE = 2;
    public const PATHUNITS_OBJECTBOUNDINGBOX = 3;
    public const LINECAP_UNDEFINED = 0;
    public const LINECAP_BUTT = 1;
    public const LINECAP_ROUND = 2;
    public const LINECAP_SQUARE = 3;
    public const LINEJOIN_UNDEFINED = 0;
    public const LINEJOIN_MITER = 1;
    public const LINEJOIN_ROUND = 2;
    public const LINEJOIN_BEVEL = 3;
    public const RESOURCETYPE_UNDEFINED = 0;
    public const RESOURCETYPE_AREA = 1;
    public const RESOURCETYPE_DISK = 2;
    public const RESOURCETYPE_FILE = 3;
    public const RESOURCETYPE_MAP = 4;
    public const RESOURCETYPE_MEMORY = 5;
    public const RESOURCETYPE_TIME = 7;
    public const RESOURCETYPE_THROTTLE = 8;
    public const RESOURCETYPE_THREAD = 6;
    public const DISPOSE_UNRECOGNIZED = 0;
    public const DISPOSE_UNDEFINED = 0;
    public const DISPOSE_NONE = 1;
    public const DISPOSE_BACKGROUND = 2;
    public const DISPOSE_PREVIOUS = 3;
    public const INTERPOLATE_UNDEFINED = 0;
    public const INTERPOLATE_AVERAGE = 1;
    public const INTERPOLATE_BICUBIC = 2;
    public const INTERPOLATE_BILINEAR = 3;
    public const INTERPOLATE_FILTER = 4;
    public const INTERPOLATE_INTEGER = 5;
    public const INTERPOLATE_MESH = 6;
    public const INTERPOLATE_NEARESTNEIGHBOR = 7;
    public const INTERPOLATE_SPLINE = 8;
    public const LAYERMETHOD_UNDEFINED = 0;
    public const LAYERMETHOD_COALESCE = 1;
    public const LAYERMETHOD_COMPAREANY = 2;
    public const LAYERMETHOD_COMPARECLEAR = 3;
    public const LAYERMETHOD_COMPAREOVERLAY = 4;
    public const LAYERMETHOD_DISPOSE = 5;
    public const LAYERMETHOD_OPTIMIZE = 6;
    public const LAYERMETHOD_OPTIMIZEPLUS = 8;
    public const LAYERMETHOD_OPTIMIZETRANS = 9;
    public const LAYERMETHOD_COMPOSITE = 12;
    public const LAYERMETHOD_OPTIMIZEIMAGE = 7;
    public const LAYERMETHOD_REMOVEDUPS = 10;
    public const LAYERMETHOD_REMOVEZERO = 11;
    public const LAYERMETHOD_TRIMBOUNDS = 16;
    public const ORIENTATION_UNDEFINED = 0;
    public const ORIENTATION_TOPLEFT = 1;
    public const ORIENTATION_TOPRIGHT = 2;
    public const ORIENTATION_BOTTOMRIGHT = 3;
    public const ORIENTATION_BOTTOMLEFT = 4;
    public const ORIENTATION_LEFTTOP = 5;
    public const ORIENTATION_RIGHTTOP = 6;
    public const ORIENTATION_RIGHTBOTTOM = 7;
    public const ORIENTATION_LEFTBOTTOM = 8;
    public const DISTORTION_UNDEFINED = 0;
    public const DISTORTION_AFFINE = 1;
    public const DISTORTION_AFFINEPROJECTION = 2;
    public const DISTORTION_ARC = 9;
    public const DISTORTION_BILINEAR = 6;
    public const DISTORTION_PERSPECTIVE = 4;
    public const DISTORTION_PERSPECTIVEPROJECTION = 5;
    public const DISTORTION_SCALEROTATETRANSLATE = 3;
    public const DISTORTION_POLYNOMIAL = 8;
    public const DISTORTION_POLAR = 10;
    public const DISTORTION_DEPOLAR = 11;
    public const DISTORTION_BARREL = 14;
    public const DISTORTION_SHEPARDS = 16;
    public const DISTORTION_SENTINEL = 18;
    public const DISTORTION_BARRELINVERSE = 15;
    public const DISTORTION_BILINEARFORWARD = 6;
    public const DISTORTION_BILINEARREVERSE = 7;
    public const DISTORTION_RESIZE = 17;
    public const DISTORTION_CYLINDER2PLANE = 12;
    public const DISTORTION_PLANE2CYLINDER = 13;
    public const LAYERMETHOD_MERGE = 13;
    public const LAYERMETHOD_FLATTEN = 14;
    public const LAYERMETHOD_MOSAIC = 15;
    public const ALPHACHANNEL_ACTIVATE = 1;
    public const ALPHACHANNEL_RESET = 7;
    public const ALPHACHANNEL_SET = 8;
    public const ALPHACHANNEL_UNDEFINED = 0;
    public const ALPHACHANNEL_COPY = 3;
    public const ALPHACHANNEL_DEACTIVATE = 4;
    public const ALPHACHANNEL_EXTRACT = 5;
    public const ALPHACHANNEL_OPAQUE = 6;
    public const ALPHACHANNEL_SHAPE = 9;
    public const ALPHACHANNEL_TRANSPARENT = 10;
    public const SPARSECOLORMETHOD_UNDEFINED = 0;
    public const SPARSECOLORMETHOD_BARYCENTRIC = 1;
    public const SPARSECOLORMETHOD_BILINEAR = 7;
    public const SPARSECOLORMETHOD_POLYNOMIAL = 8;
    public const SPARSECOLORMETHOD_SPEPARDS = 16;
    public const SPARSECOLORMETHOD_VORONOI = 18;
    public const SPARSECOLORMETHOD_INVERSE = 19;
    public const DITHERMETHOD_UNDEFINED = 0;
    public const DITHERMETHOD_NO = 1;
    public const DITHERMETHOD_RIEMERSMA = 2;
    public const DITHERMETHOD_FLOYDSTEINBERG = 3;
    public const FUNCTION_UNDEFINED = 0;
    public const FUNCTION_POLYNOMIAL = 1;
    public const FUNCTION_SINUSOID = 2;
    public const ALPHACHANNEL_BACKGROUND = 2;
    public const FUNCTION_ARCSIN = 3;
    public const FUNCTION_ARCTAN = 4;
    public const ALPHACHANNEL_FLATTEN = 11;
    public const ALPHACHANNEL_REMOVE = 12;
    public const STATISTIC_GRADIENT = 1;
    public const STATISTIC_MAXIMUM = 2;
    public const STATISTIC_MEAN = 3;
    public const STATISTIC_MEDIAN = 4;
    public const STATISTIC_MINIMUM = 5;
    public const STATISTIC_MODE = 6;
    public const STATISTIC_NONPEAK = 7;
    public const STATISTIC_STANDARD_DEVIATION = 8;
    public const MORPHOLOGY_CONVOLVE = 1;
    public const MORPHOLOGY_CORRELATE = 2;
    public const MORPHOLOGY_ERODE = 3;
    public const MORPHOLOGY_DILATE = 4;
    public const MORPHOLOGY_ERODE_INTENSITY = 5;
    public const MORPHOLOGY_DILATE_INTENSITY = 6;
    public const MORPHOLOGY_DISTANCE = 7;
    public const MORPHOLOGY_OPEN = 8;
    public const MORPHOLOGY_CLOSE = 9;
    public const MORPHOLOGY_OPEN_INTENSITY = 10;
    public const MORPHOLOGY_CLOSE_INTENSITY = 11;
    public const MORPHOLOGY_SMOOTH = 12;
    public const MORPHOLOGY_EDGE_IN = 13;
    public const MORPHOLOGY_EDGE_OUT = 14;
    public const MORPHOLOGY_EDGE = 15;
    public const MORPHOLOGY_TOP_HAT = 16;
    public const MORPHOLOGY_BOTTOM_HAT = 17;
    public const MORPHOLOGY_HIT_AND_MISS = 18;
    public const MORPHOLOGY_THINNING = 19;
    public const MORPHOLOGY_THICKEN = 20;
    public const MORPHOLOGY_VORONOI = 21;
    public const MORPHOLOGY_ITERATIVE = 22;
    public const KERNEL_UNITY = 1;
    public const KERNEL_GAUSSIAN = 2;
    public const KERNEL_DIFFERENCE_OF_GAUSSIANS = 3;
    public const KERNEL_LAPLACIAN_OF_GAUSSIANS = 4;
    public const KERNEL_BLUR = 5;
    public const KERNEL_COMET = 6;
    public const KERNEL_LAPLACIAN = 7;
    public const KERNEL_SOBEL = 8;
    public const KERNEL_FREI_CHEN = 9;
    public const KERNEL_ROBERTS = 10;
    public const KERNEL_PREWITT = 11;
    public const KERNEL_COMPASS = 12;
    public const KERNEL_KIRSCH = 13;
    public const KERNEL_DIAMOND = 14;
    public const KERNEL_SQUARE = 15;
    public const KERNEL_RECTANGLE = 16;
    public const KERNEL_OCTAGON = 17;
    public const KERNEL_DISK = 18;
    public const KERNEL_PLUS = 19;
    public const KERNEL_CROSS = 20;
    public const KERNEL_RING = 21;
    public const KERNEL_PEAKS = 22;
    public const KERNEL_EDGES = 23;
    public const KERNEL_CORNERS = 24;
    public const KERNEL_DIAGONALS = 25;
    public const KERNEL_LINE_ENDS = 26;
    public const KERNEL_LINE_JUNCTIONS = 27;
    public const KERNEL_RIDGES = 28;
    public const KERNEL_CONVEX_HULL = 29;
    public const KERNEL_THIN_SE = 30;
    public const KERNEL_SKELETON = 31;
    public const KERNEL_CHEBYSHEV = 32;
    public const KERNEL_MANHATTAN = 33;
    public const KERNEL_OCTAGONAL = 34;
    public const KERNEL_EUCLIDEAN = 35;
    public const KERNEL_USER_DEFINED = 36;
    public const KERNEL_BINOMIAL = 37;
    public const DIRECTION_LEFT_TO_RIGHT = 2;
    public const DIRECTION_RIGHT_TO_LEFT = 1;
    public const NORMALIZE_KERNEL_NONE = 0;
    public const NORMALIZE_KERNEL_VALUE = 8192;
    public const NORMALIZE_KERNEL_CORRELATE = 65536;
    public const NORMALIZE_KERNEL_PERCENT = 4096;

/**
*<div id="imagick.optimizeimagelayers" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::optimizeImageLayers</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::optimizeImageLayers</span> &mdash; <span class="dc-title">Removes repeated portions of images to optimize</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.optimizeimagelayers-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::optimizeImageLayers</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Compares each image the GIF disposed forms of the previous image   in the sequence.  From this it attempts to select the smallest   cropped image to replace each frame, while preserving the results   of the animation.    此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.optimizeimagelayers-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.optimizeimagelayers-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.optimizeimagelayers-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.optimizeimagelayers-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::optimizeImageLayers()</strong></span></strong></p>    <div class="example-contents"><p>      Reading, optimizing and writing a GIF image    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// create new imagick object <br /></span><span style="color: #9876AA">$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">"test.gif"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// optimize the image layers <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">optimizeImageLayers</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">// write the image back <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writeImages</span><span style="color: #007700">(</span><span style="color: #DD0000">"test_optimized.gif"</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.optimizeimagelayers-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::compareImageLayers()} - Returns the maximum bounding region between images</span></li>    <li class="member"><span class="function">{@link Imagick::writeImages()} - Writes an image or image sequence</span></li>    <li class="member"><span class="function">{@link Imagick::writeImage()} - 把图片写入指定的文件</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function optimizeImageLayers() {}

/**
*<div id="imagick.compareimagelayers" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::compareImageLayers</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::compareImageLayers</span> &mdash; <span class="dc-title">Returns the maximum bounding region between images</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.compareimagelayers-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::compareImageLayers</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$method</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Compares each image with the next in a sequence and returns the   maximum bounding region of any pixel differences it discovers.   此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.compareimagelayers-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">method</span></dt>     <dd>      <p class="para">       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.layermethod" class="link">layer method constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.compareimagelayers-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.compareimagelayers-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.compareimagelayers-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::compareImageLayers()</strong></span></strong></p>    <div class="example-contents"><p>      Comparing image layers    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// create new imagick object <br /></span><span style="color: #9876AA">$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">"test.gif"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// optimize the image layers <br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">compareImageLayers</span><span style="color: #007700">(</span><span style="color: #9876AA">imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">LAYERMETHOD_COALESCE</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// work on the $result <br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.compareimagelayers-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::optimizeImageLayers()} - Removes repeated portions of images to optimize</span></li>    <li class="member"><span class="function">{@link Imagick::writeImages()} - Writes an image or image sequence</span></li>    <li class="member"><span class="function">{@link Imagick::writeImage()} - 把图片写入指定的文件</span></li>   </ul>  </span> </div></div>
     * @return Imagick <b>TRUE</b> on success.*/
    public function compareImageLayers($method) {}

/**
*<div id="imagick.pingimageblob" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::pingImageBlob</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::pingImageBlob</span> &mdash; <span class="dc-title">Quickly fetch attributes</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.pingimageblob-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::pingImageBlob</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$image</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   This method can be used to query image width, height, size, and   format without reading the whole image to memory.    此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.pingimageblob-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">image</span></dt>     <dd>      <p class="para">      A string containing the image.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.pingimageblob-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.pingimageblob-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::pingImageBlob()</strong></span></strong></p>    <div class="example-contents"><p>      Pinging an image from a string    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// read image contents <br /></span><span style="color: #9876AA">$image </span><span style="color: #007700">= </span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">"test.jpg"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// create new imagick object <br /></span><span style="color: #9876AA">$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">// pass the string to the imagick object <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pingImageBlob</span><span style="color: #007700">(</span><span style="color: #9876AA">$image</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// output image width and height <br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">() . </span><span style="color: #DD0000">'x' </span><span style="color: #007700">. </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.pingimageblob-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::pingImage()} - Fetch basic attributes about the image</span></li>    <li class="member"><span class="function">{@link Imagick::pingImageFile()} - Get basic image attributes in a lightweight manner</span></li>    <li class="member"><span class="function">{@link Imagick::readImage()} - Reads image from filename</span></li>    <li class="member"><span class="function">{@link Imagick::readImageBlob()} - 从二进制字符串里读取图片</span></li>    <li class="member"><span class="function">{@link Imagick::readImageFile()} - Reads image from open filehandle</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function pingImageBlob($image) {}

/**
*<div id="imagick.pingimagefile" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::pingImageFile</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::pingImageFile</span> &mdash; <span class="dc-title">Get basic image attributes in a lightweight manner</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.pingimagefile-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::pingImageFile</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$filehandle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$fileName</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   This method can be used to query image width, height, size, and   format without reading the whole image to memory.    此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.pingimagefile-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filehandle</span></dt>     <dd>      <p class="para">      An open filehandle to the image.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">fileName</span></dt>     <dd>      <p class="para">      Optional filename for this image.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.pingimagefile-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.pingimagefile-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::pingImageFile()</strong></span></strong></p>    <div class="example-contents"><p>      Opening a remote location    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// fopen a remote location <br /></span><span style="color: #9876AA">$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://example.com/test.jpg"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// create new imagick object <br /></span><span style="color: #9876AA">$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">// pass the handle to imagick <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pingImageFile</span><span style="color: #007700">(</span><span style="color: #9876AA">$fp</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.pingimagefile-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::pingImage()} - Fetch basic attributes about the image</span></li>    <li class="member"><span class="function">{@link Imagick::pingImageBlob()} - Quickly fetch attributes</span></li>    <li class="member"><span class="function">{@link Imagick::readImage()} - Reads image from filename</span></li>    <li class="member"><span class="function">{@link Imagick::readImageBlob()} - 从二进制字符串里读取图片</span></li>    <li class="member"><span class="function">{@link Imagick::readImageFile()} - Reads image from open filehandle</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function pingImageFile($filehandle, $fileName = null) {}

/**
*<div id="imagick.transposeimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::transposeImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::transposeImage</span> &mdash; <span class="dc-title">Creates a vertical mirror image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.transposeimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::transposeImage</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Creates a vertical mirror image by reflecting the pixels    around the central x-axis while rotating them 90-degrees.   此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.transposeimage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.transposeimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.transposeimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::transposeImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">transposeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transposeImage</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.transposeimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::transverseImage()} - Creates a horizontal mirror image</span></li>   </ul>  </span> </div> </div>
     * @return bool <b>TRUE</b> on success.*/
    public function transposeImage() {}

/**
*<div id="imagick.transverseimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::transverseImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::transverseImage</span> &mdash; <span class="dc-title">Creates a horizontal mirror image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.transverseimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::transverseImage</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Creates a horizontal mirror image by reflecting the pixels around the   central y-axis while rotating them 270-degrees.   此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.transverseimage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.transverseimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.transverseimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::transverseImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">transverseImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transverseImage</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.transverseimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::transposeImage()} - Creates a vertical mirror image</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function transverseImage() {}

/**
*<div id="imagick.trimimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::trimImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::trimImage</span> &mdash; <span class="dc-title">Remove edges from the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.trimimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::trimImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Remove edges that are the background color from the image.    此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.trimimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">fuzz</span></dt>     <dd>      <p class="para">       By default target must match a particular pixel color exactly.       However, in many cases two colors may differ by a small amount.       The fuzz member of image defines how much tolerance is acceptable       to consider two colors as the same. This parameter represents the variation       on the quantum range.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.trimimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.trimimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.trimimage-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::trimImage()</strong></span>:</strong></p>    <div class="example-contents"><p>     Trim an image, then display to the browser.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Create the object and read the image in <br /></span><span style="color: #9876AA">$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">"image.jpg"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Trim the image. <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">trimImage</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Ouput the image <br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/" </span><span style="color: #007700">. </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageFormat</span><span style="color: #007700">());<br />echo </span><span style="color: #9876AA">$im</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.trimimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::getQuantumDepth()} - Gets the quantum depth</span></li>    <li class="member"><span class="function">{@link Imagick::getQuantumRange()} - Returns the Imagick quantum range</span></li>    <li class="member"><span class="function">{@link imagecropauto()} - Crop an image automatically using one of the available modes</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function trimImage($fuzz) {}

/**
*<div id="imagick.waveimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::waveImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::waveImage</span> &mdash; <span class="dc-title">Applies wave filter to the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.waveimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::waveImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$amplitude</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$length</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Applies a wave filter to the image.    此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.waveimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">amplitude</span></dt>     <dd>      <p class="para">       The amplitude of the wave.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">       The length of the wave.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.waveimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.waveimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.waveimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 WaveImage can be quite slow <span class="function"><strong style="color:#CC7832">Imagick::waveImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">waveImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$amplitude</span><span style="color: #007700">, </span><span style="color: #9876AA">$length</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">waveImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$amplitude</span><span style="color: #007700">, </span><span style="color: #9876AA">$length</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.waveimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::solarizeImage()} - Applies a solarizing effect to the image</span></li>    <li class="member"><span class="function">{@link Imagick::oilpaintImage()} - Simulates an oil painting</span></li>    <li class="member"><span class="function">{@link Imagick::embossImage()} - Returns a grayscale image with a three-dimensional effect</span></li>    <li class="member"><span class="function">{@link Imagick::addNoiseImage()} - Adds random noise to the image</span></li>    <li class="member"><span class="function">{@link Imagick::swirlImage()} - Swirls the pixels about the center of the image</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function waveImage($amplitude, $length) {}

/**
*<div id="imagick.vignetteimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::vignetteImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::vignetteImage</span> &mdash; <span class="dc-title">Adds vignette filter to the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.vignetteimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::vignetteImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$blackPoint</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$whitePoint</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Softens the edges of the image in vignette style.    此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.vignetteimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">blackPoint</span></dt>     <dd>      <p class="para">       The black point.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">whitePoint</span></dt>     <dd>      <p class="para">       The white point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       X offset of the ellipse      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       Y offset of the ellipse      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.vignetteimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.vignetteimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::vignetteImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">vignetteImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$blackPoint</span><span style="color: #007700">, </span><span style="color: #9876AA">$whitePoint</span><span style="color: #007700">, </span><span style="color: #9876AA">$x</span><span style="color: #007700">, </span><span style="color: #9876AA">$y</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">vignetteImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$blackPoint</span><span style="color: #007700">, </span><span style="color: #9876AA">$whitePoint</span><span style="color: #007700">, </span><span style="color: #9876AA">$x</span><span style="color: #007700">, </span><span style="color: #9876AA">$y</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.vignetteimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::waveImage()} - Applies wave filter to the image</span></li>    <li class="member"><span class="function">{@link Imagick::swirlImage()} - Swirls the pixels about the center of the image</span></li>   </ul>  </span> </div> </div>
     * @return bool <b>TRUE</b> on success.*/
    public function vignetteImage($blackPoint, $whitePoint, $x, $y) {}

/**
*<div id="imagick.uniqueimagecolors" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::uniqueImageColors</h1>  <p class="verinfo">(PECL imagick 2,PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::uniqueImageColors</span> &mdash; <span class="dc-title">Discards all but one of any pixel color</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.uniqueimagecolors-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::uniqueImageColors</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Discards all but one of any pixel color.    此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.uniqueimagecolors-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.uniqueimagecolors-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.uniqueimagecolors-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::uniqueImageColors()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">uniqueImageColors</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #FF8000">//Reduce the image to 256 colours nicely.<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">quantizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">256</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLORSPACE_YIQ</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">uniqueImageColors</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">scaleimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">(), </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">() * </span><span style="color: #9876AA">20</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function uniqueImageColors() {}

/**
*<div id="imagick.getimagematte" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageMatte</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageMatte</span> &mdash; <span class="dc-title">Return if the image has a matte channel</span></p> </div> <div id="imagick.getimagematte-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagematte-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageMatte</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Returns <strong><span>true</span></strong> if the image has a matte channel otherwise false.   此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagematte-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagematte-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
    public function getImageMatte() {}

/**
*<div id="imagick.setimagematte" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageMatte</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageMatte</span> &mdash; <span class="dc-title">Sets the image matte channel</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagematte-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageMatte</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$matte</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image matte channel.    此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagematte-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">matte</span></dt>     <dd>      <p class="para">       True activates the matte channel and false disables it.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagematte-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageMatte($matte) {}

/**
*<div id="imagick.adaptiveresizeimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::adaptiveResizeImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::adaptiveResizeImage</span> &mdash; <span class="dc-title">Adaptively resize image with data dependent triangulation</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.adaptiveresizeimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::adaptiveResizeImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$bestfit</span><span class="initializer"> = <strong><span>false</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$legacy</span><span class="initializer"> = <strong><span>false</span></strong></span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Adaptively resize image with data-dependent triangulation. Avoids   blurring across sharp color changes. Most useful when used to shrink   images slightly to a slightly smaller &quot;web size&quot;; may not look good   when a full-sized image is adaptively resized to a thumbnail.   此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara"> 参数 <span class="parameter" style="color:#3A95FF">bestfit</span> 的特性在 Imagick 3.0.0 中已改变。在此版本以前，当目标尺寸设为 400x400 时，原尺寸为 200x150 的图像将不会被改变。自 Imagick 3.0.0 起，源图像将会被放大到 400x300 因为这将更好的适合目标尺寸。当使用参数 <span class="parameter" style="color:#3A95FF">bestfit</span> 时，必须同时给出宽度和高度。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.adaptiveresizeimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">columns</span></dt>     <dd>      <p class="para">       The number of columns in the scaled image.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">rows</span></dt>     <dd>      <p class="para">       The number of rows in the scaled image.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">bestfit</span></dt>     <dd>      <p class="para">       Whether to fit the image inside a bounding box.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.adaptiveresizeimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.adaptiveresizeimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.adaptiveresizeimage-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>Added optional fit parameter.</td>      </tr>      <tr>       <td>PECL imagick 2.1.0</td>       <td>       This method now supports proportional scaling.       Pass zero as either parameter for proportional scaling.         </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.adaptiveresizeimage-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::adaptiveResizeImage()</strong></span></strong></p>    <div class="example-contents"><p>     Resize an image to a standard size for the web.  This method works best     when resizing to a size only slightly smaller than the previous image     size.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-type: image/jpeg'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">'image.jpg'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">adaptiveResizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">1024</span><span style="color: #007700">,</span><span style="color: #9876AA">768</span><span style="color: #007700">);<br /><br />echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.adaptiveresizeimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::chopImage()} - Removes a region of an image and trims</span></li>    <li class="member"><span class="function">{@link Imagick::cropImage()} - 截图图片的一块区域</span></li>    <li class="member"><span class="function">{@link Imagick::magnifyImage()} - Scales an image proportionally 2x</span></li>    <li class="member"><span class="function">{@link Imagick::minifyImage()} - Scales an image proportionally to half its size</span></li>    <li class="member"><span class="function">{@link Imagick::resizeImage()} - Scales an image</span></li>    <li class="member"><span class="function">{@link Imagick::scaleImage()} - Scales the size of an image</span></li>    <li class="member"><span class="function">{@link Imagick::shaveImage()} - Shaves pixels from the image edges</span></li>    <li class="member"><span class="function">{@link Imagick::thumbnailImage()} - Changes the size of an image</span></li>    <li class="member"><span class="function">{@link Imagick::trimImage()} - Remove edges from the image</span></li>   </ul>  </span> </div></div>
     * @return bool TRUE on success*/
    public function adaptiveResizeImage($columns, $rows, $bestfit = false, $legacy = false) {}

/**
*<div id="imagick.sketchimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::sketchImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::sketchImage</span> &mdash; <span class="dc-title">Simulates a pencil sketch</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.sketchimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::sketchImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$angle</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Simulates a pencil sketch. We convolve the image with a Gaussian operator   of the given radius and standard deviation (sigma). For reasonable   results, radius should be larger than sigma.  Use a radius of 0 and   Imagick::sketchImage() selects a suitable radius for you. Angle gives the   angle of the blurring motion.    此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.sketchimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">radius</span></dt>     <dd>      <p class="para">       The radius of the Gaussian, in pixels, not counting the center pixel      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">sigma</span></dt>     <dd>      <p class="para">       The standard deviation of the Gaussian, in pixels.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">angle</span></dt>     <dd>      <p class="para">       Apply the effect along this angle.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.sketchimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.sketchimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::sketchImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">sketchImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">$sigma</span><span style="color: #007700">, </span><span style="color: #9876AA">$angle</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">sketchimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">$sigma</span><span style="color: #007700">, </span><span style="color: #9876AA">$angle</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function sketchImage($radius, $sigma, $angle) {}

/**
*<div id="imagick.shadeimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::shadeImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::shadeImage</span> &mdash; <span class="dc-title">Creates a 3D effect</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.shadeimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::shadeImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$gray</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$azimuth</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$elevation</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Shines a distant light on an image to create a three-dimensional effect.   You control the positioning of the light with azimuth and elevation;   azimuth is measured in degrees off the x axis and elevation is measured   in pixels above the Z axis.   此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.shadeimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">gray</span></dt>     <dd>      <p class="para">       A value other than zero shades the intensity of each pixel.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">azimuth</span></dt>     <dd>      <p class="para">       Defines the light source direction.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">elevation</span></dt>     <dd>      <p class="para">       Defines the light source direction.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.shadeimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.shadeimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   Throws ImagickException on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.shadeimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::shadeImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">shadeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">shadeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">, </span><span style="color: #9876AA">45</span><span style="color: #007700">, </span><span style="color: #9876AA">20</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function shadeImage($gray, $azimuth, $elevation) {}

/**
*<div id="imagick.getsizeoffset" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getSizeOffset</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getSizeOffset</span> &mdash; <span class="dc-title">Returns the size offset</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getsizeoffset-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getSizeOffset</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the size offset associated with the Imagick object.   此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getsizeoffset-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getsizeoffset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the size offset associated with the Imagick object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getsizeoffset-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int the size offset associated with the Imagick object.*/
    public function getSizeOffset() {}

/**
*<div id="imagick.setsizeoffset" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setSizeOffset</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setSizeOffset</span> &mdash; <span class="dc-title">Sets the size and offset of the Imagick object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setsizeoffset-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setSizeOffset</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the size and offset of the Imagick object. Set it before you read a   raw image format such as RGB, GRAY, or CMYK.   此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setsizeoffset-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">columns</span></dt>     <dd>      <p class="para">       The width in pixels.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">rows</span></dt>     <dd>      <p class="para">       The height in pixels.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       The image offset.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setsizeoffset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setSizeOffset($columns, $rows, $offset) {}

/**
*<div id="imagick.adaptiveblurimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::adaptiveBlurImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::adaptiveBlurImage</span> &mdash; <span class="dc-title">Adds adaptive blur filter to image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.adaptiveblurimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::adaptiveBlurImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Adds an adaptive blur filter to image. The intensity of an adaptive blur   depends is dramatically decreased at edge of the image, whereas a standard   blur is uniform across the image. 此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.adaptiveblurimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">radius</span></dt>     <dd>      <p class="para">       The radius of the Gaussian, in pixels, not counting the center pixel.       Provide a value of 0 and the radius will be chosen automagically.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">sigma</span></dt>     <dd>      <p class="para">       The standard deviation of the Gaussian, in pixels.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a> using bitwise operators. 缺省为<strong><span>Imagick::CHANNEL_DEFAULT</span></strong>. 参考此 <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">通道常数</a>列表      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.adaptiveblurimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.adaptiveblurimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.adaptiveblurimage-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::adaptiveBlurImage()</strong></span>:</strong></p>    <div class="example-contents"><p>     Adaptively blur an image, then display to the browser.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-type: image/jpeg'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">'test.jpg'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">adaptiveBlurImage</span><span style="color: #007700">(</span><span style="color: #9876AA">5</span><span style="color: #007700">,</span><span style="color: #9876AA">3</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="mediaobject">          <div class="imageobject">      <img src="images/c0d23d2d6769e53e24a1b3136c064577-adaptiveBlurImage.gif" alt="Output of example : Using Imagick::adaptiveBlurImage()" width="120" height="67" />     </div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.adaptiveblurimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::blurImage()} - Adds blur filter to image</span></li>    <li class="member"><span class="function">{@link Imagick::motionBlurImage()} - Simulates motion blur</span></li>    <li class="member"><span class="function">{@link Imagick::radialBlurImage()} - Radial blurs an image</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function adaptiveBlurImage($radius, $sigma, $channel = Imagick::CHANNEL_DEFAULT) {}

/**
*<div id="imagick.contraststretchimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::contrastStretchImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::contrastStretchImage</span> &mdash; <span class="dc-title">Enhances the contrast of a color image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.contraststretchimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::contrastStretchImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$black_point</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$white_point</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Enhances the contrast of a color image by adjusting the pixels   color to span the entire range of colors available. 此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.contraststretchimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">black_point</span></dt>     <dd>      <p class="para">      The black point.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">white_point</span></dt>     <dd>      <p class="para">      The white point.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To       apply to more than one channel, combine channeltype constants using       bitwise operators. <strong><span>Imagick::CHANNEL_ALL</span></strong>. Refer to this       list of  <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.contraststretchimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function contrastStretchImage($black_point, $white_point, $channel = Imagick::CHANNEL_ALL) {}

/**
*<div id="imagick.adaptivesharpenimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::adaptiveSharpenImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::adaptiveSharpenImage</span> &mdash; <span class="dc-title">Adaptively sharpen the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.adaptivesharpenimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::adaptiveSharpenImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Adaptively sharpen the image by sharpening more intensely   near image edges and less intensely far from edges. 此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.adaptivesharpenimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">radius</span></dt>     <dd>      <p class="para">       The radius of the Gaussian, in pixels, not counting the center pixel. Use 0 for auto-select.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">sigma</span></dt>     <dd>      <p class="para">       The standard deviation of the Gaussian, in pixels.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a> using bitwise operators. 缺省为<strong><span>Imagick::CHANNEL_DEFAULT</span></strong>. 参考此 <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">通道常数</a>列表      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.adaptivesharpenimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.adaptivesharpenimage-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 A <span class="function"><strong style="color:#CC7832">Imagick::adaptiveSharpenImage()</strong></span> example</strong></p>    <div class="example-contents"><p>     Adaptively sharpen the image with radius 2 and sigma 1.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">try {<br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">'image.png'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">adaptiveSharpenImage</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />} catch(</span><span style="color: #9876AA">ImagickException $e</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">'Error: ' </span><span style="color: #007700">, </span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">();<br />    die();<br />}<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-type: image/png'</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.adaptivesharpenimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::sharpenImage()} - Sharpens an image</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function adaptiveSharpenImage($radius, $sigma, $channel = Imagick::CHANNEL_DEFAULT) {}

/**
*<div id="imagick.randomthresholdimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::randomThresholdImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::randomThresholdImage</span> &mdash; <span class="dc-title">Creates a high-contrast, two-color image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.randomthresholdimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::randomThresholdImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$low</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$high</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Changes the value of individual pixels based on the   intensity of each pixel compared to threshold. The   result is a high-contrast, two color image. 此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.randomthresholdimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">low</span></dt>     <dd>      <p class="para">       The low point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">high</span></dt>     <dd>      <p class="para">       The high point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To       apply to more than one channel, combine channeltype constants using       bitwise operators. Refer to this       list of  <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.randomthresholdimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.randomthresholdimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::randomThresholdImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">randomThresholdimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$lowThreshold</span><span style="color: #007700">, </span><span style="color: #9876AA">$highThreshold</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">randomThresholdimage</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">$lowThreshold </span><span style="color: #007700">* </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">getQuantum</span><span style="color: #007700">(),<br />        </span><span style="color: #9876AA">$highThreshold </span><span style="color: #007700">* </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">getQuantum</span><span style="color: #007700">(),<br />        </span><span style="color: #9876AA">$channel<br />    </span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function randomThresholdImage($low, $high, $channel = Imagick::CHANNEL_ALL) {}

    /**
     * @param $xRounding
     * @param $yRounding
     * @param $strokeWidth [optional]
     * @param $displace [optional]
     * @param $sizeCorrection [optional]
     * @throws ImagickException on error.
     */
    public function roundCornersImage($xRounding, $yRounding, $strokeWidth, $displace, $sizeCorrection) {}

/**
*<div id="imagick.roundcorners" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::roundCorners</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::roundCorners</span> &mdash; <span class="dc-title">Rounds image corners</span></p> </div> <div id="imagick.roundcorners-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.roundcorners-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::roundCorners</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x_rounding</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y_rounding</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$stroke_width</span><span class="initializer"> = 10</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$displace</span><span class="initializer"> = 5</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$size_correction</span><span class="initializer"> = -6</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Rounds image corners. The first two parameters control the amount    of rounding and the three last parameters can be used to fine-tune    the rounding process. 此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。   此方法在 Imagick 基于 ImageMagick 7.0.0 或以上版本编译时不可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.roundcorners-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x_rounding</span></dt>     <dd>      <p class="para">       x rounding      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y_rounding</span></dt>     <dd>      <p class="para">       y rounding      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">stroke_width</span></dt>     <dd>      <p class="para">        stroke width      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">displace</span></dt>     <dd>      <p class="para">        image displace      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">size_correction</span></dt>     <dd>      <p class="para">        size correction      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.roundcorners-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.roundcorners-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::roundCorners()</strong></span>:</strong></p>    <div class="example-contents"><p>     Rounds the image corners    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #DD0000">"magick:rose"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">roundCorners</span><span style="color: #007700">(</span><span style="color: #9876AA">5</span><span style="color: #007700">,</span><span style="color: #9876AA">3</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writeImage</span><span style="color: #007700">(</span><span style="color: #DD0000">"rounded.png"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function roundCorners($x_rounding, $y_rounding, $stroke_width = 10.0, $displace = 5.0, $size_correction = -6.0) {}

/**
*<div id="imagick.setiteratorindex" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setIteratorIndex</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setIteratorIndex</span> &mdash; <span class="dc-title">Set the iterator position</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setiteratorindex-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setIteratorIndex</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$index</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">  Set the iterator to the position in the image list specified with the index parameter.  此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setiteratorindex-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">index</span></dt>     <dd>      <p class="para">       The position to set the iterator to      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setiteratorindex-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setiteratorindex-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::setIteratorIndex()</strong></span>:</strong></p>    <div class="example-contents"><p>     Create images, set and get the iterator index    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, new </span><span style="color: #9876AA">ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">"red"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, new </span><span style="color: #9876AA">ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">"green"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, new </span><span style="color: #9876AA">ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">"blue"</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setIteratorIndex</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getIteratorIndex</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.setiteratorindex-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::getIteratorIndex()} - Gets the index of the current active image</span></li>    <li class="member"><span class="function">{@link Imagick::getImageIndex()} - Gets the index of the current active image</span></li>    <li class="member"><span class="function">{@link Imagick::setImageIndex()} - Set the iterator position</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setIteratorIndex($index) {}

/**
*<div id="imagick.getiteratorindex" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getIteratorIndex</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getIteratorIndex</span> &mdash; <span class="dc-title">Gets the index of the current active image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getiteratorindex-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getIteratorIndex</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the index of the current active image within the Imagick object.   此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getiteratorindex-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getiteratorindex-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an integer containing the index of the image in the stack.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getiteratorindex-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.getiteratorindex-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::getIteratorIndex()</strong></span>:</strong></p>    <div class="example-contents"><p>     Create images, set and get the iterator index    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, new </span><span style="color: #9876AA">ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">"red"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, new </span><span style="color: #9876AA">ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">"green"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, new </span><span style="color: #9876AA">ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">"blue"</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setIteratorIndex</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getIteratorIndex</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.getiteratorindex-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::setIteratorIndex()} - Set the iterator position</span></li>    <li class="member"><span class="function">{@link Imagick::getImageIndex()} - Gets the index of the current active image</span></li>    <li class="member"><span class="function">{@link Imagick::setImageIndex()} - Set the iterator position</span></li>   </ul>  </span> </div></div>
     * @return int an integer containing the index of the image in the stack.*/
    public function getIteratorIndex() {}

/**
*<div id="imagick.transformimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::transformImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::transformImage</span> &mdash; <span class="dc-title">Convenience method for setting crop size and the image geometry</span></p> </div> <div id="imagick.transformimage-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.transformimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::transformImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$crop</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$geometry</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   A convenience method for setting crop size and the image geometry from strings.   此方法在Imagick基于ImageMagick 6.2.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.transformimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">crop</span></dt>     <dd>      <p class="para">       A crop geometry string. This geometry defines a subregion of the image to crop.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">geometry</span></dt>     <dd>      <p class="para">       An image geometry string. This geometry defines the final size of the image.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.transformimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an Imagick object containing the transformed image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.transformimage-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::transformImage()</strong></span>:</strong></p>    <div class="example-contents"><p>     The example creates a 100x100 black image.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #DD0000">"black"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$new_image </span><span style="color: #007700">= </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transformImage</span><span style="color: #007700">(</span><span style="color: #DD0000">"100x100"</span><span style="color: #007700">, </span><span style="color: #DD0000">"100x100"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$new_image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writeImage</span><span style="color: #007700">(</span><span style="color: #DD0000">'test_out.jpg'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.transformimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::cropImage()} - 截图图片的一块区域</span></li>    <li class="member"><span class="function">{@link Imagick::resizeImage()} - Scales an image</span></li>    <li class="member"><span class="function">{@link Imagick::thumbnailImage()} - Changes the size of an image</span></li>   </ul>  </span> </div></div>
     * @return Imagick <b>TRUE</b> on success.*/
    public function transformImage($crop, $geometry) {}

/**
*<div id="imagick.setimageopacity" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageOpacity</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageOpacity</span> &mdash; <span class="dc-title">Sets the image opacity level</span></p> </div> <div id="imagick.setimageopacity-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimageopacity-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageOpacity</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$opacity</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image to the specified opacity level. 此方法在Imagick基于ImageMagick 6.3.1以上版本编译时可用。   This method operates on all channels, which means that for example opacity value   of 0.5 will set all transparent areas to partially opaque. To add transparency to   areas that are not already transparent use {@link Imagick::evaluateImage()}  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimageopacity-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">opacity</span></dt>     <dd>      <p class="para">       The level of transparency: 1.0 is fully opaque and 0.0 is fully       transparent.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimageopacity-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setimageopacity-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 A <span class="function"><strong style="color:#CC7832">Imagick::setImageOpacity()</strong></span> example</strong></p>    <div class="example-contents"><p>     An example of using Imagick::setImageOpacity()    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Create the object <br /></span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">'source.png'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Set the opacity <br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">0.7</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// output the image <br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-type: image/png'</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageOpacity($opacity) {}

/**
*<div id="imagick.orderedposterizeimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::orderedPosterizeImage</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.2.2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::orderedPosterizeImage</span> &mdash; <span class="dc-title">Performs an ordered dither</span></p> </div> <div id="imagick.orderedposterizeimage-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.orderedposterizeimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::orderedPosterizeImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$threshold_map</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    Performs an ordered dither based on a number of pre-defined dithering threshold maps,     but over multiple intensity levels, which can be different for different channels,     according to the input arguments. 此方法在Imagick基于ImageMagick 6.3.1以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.orderedposterizeimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">threshold_map</span></dt>     <dd>      <p class="para">       A string containing the name of the threshold dither map to use      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To       apply to more than one channel, combine channeltype constants using       bitwise operators. Refer to this       list of <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.orderedposterizeimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.orderedposterizeimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.orderedposterizeimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::orderedPosterizeImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">orderedPosterizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$orderedPosterizeType</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    <br />  <br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">orderedPosterizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$orderedPosterizeType</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br />    <br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #FF8000">//orderedPosterizeImage($imagePath, 'o4x4,3,3');<br />//orderedPosterizeImage($imagePath, 'o8x8,6,6');<br /></span><span style="color: #9876AA">orderedPosterizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #DD0000">'h8x8a'</span><span style="color: #007700">);<br /><br /><br /><br /><br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function orderedPosterizeImage($threshold_map, $channel = Imagick::CHANNEL_ALL) {}

/**
*<div id="imagick.polaroidimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::polaroidImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::polaroidImage</span> &mdash; <span class="dc-title">Simulates a Polaroid picture</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.polaroidimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::polaroidImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="type ImagickDraw" style="color:#EAB766">ImagickDraw</a></span> <span class="parameter" style="color:#3A95FF">$properties</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$angle</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Simulates a Polaroid picture. 此方法在Imagick基于ImageMagick 6.3.2以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.polaroidimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">properties</span></dt>     <dd>      <p class="para">       The polaroid properties      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">angle</span></dt>     <dd>      <p class="para">       The polaroid angle      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.polaroidimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.polaroidimage-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 A <span class="function"><strong style="color:#CC7832">Imagick::polaroidImage()</strong></span> example</strong></p>    <div class="example-contents"><p>     An example of using Imagick::polaroidImage()    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Create the object <br /></span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">'source.png'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Set the opacity <br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">polaroidImage</span><span style="color: #007700">(new </span><span style="color: #9876AA">ImagickDraw</span><span style="color: #007700">(), </span><span style="color: #9876AA">25</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// output the image <br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-type: image/png'</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function polaroidImage(ImagickDraw $properties, $angle) {}

/**
*<div id="imagick.getimageproperty" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageProperty</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageProperty</span> &mdash; <span class="dc-title">Returns the named image property</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageproperty-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageProperty</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Returns the named image property. 此方法在Imagick基于ImageMagick 6.3.2以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageproperty-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">       name of the property (for example Exif:DateTime)       </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageproperty-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a string containing the image property, false if a   property with the given name does not exist.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.getimageproperty-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::getImageProperty()</strong></span>:</strong></p>    <div class="example-contents"><p>     Setting and getting image property    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #DD0000">"black"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageProperty</span><span style="color: #007700">(</span><span style="color: #DD0000">'Exif:Make'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Imagick'</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageProperty</span><span style="color: #007700">(</span><span style="color: #DD0000">'Exif:Make'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.getimageproperty-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::setImageProperty()} - Sets an image property</span></li>   </ul>  </span> </div></div>
     * @return string|false a string containing the image property, false if a*/
    public function getImageProperty($name) {}

/**
*<div id="imagick.setimageproperty" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageProperty</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageProperty</span> &mdash; <span class="dc-title">Sets an image property</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimageproperty-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageProperty</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets a named property to the image. 此方法在Imagick基于ImageMagick 6.3.2以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimageproperty-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimageproperty-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setimageproperty-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::setImageProperty()</strong></span>:</strong></p>    <div class="example-contents"><p>     Setting and getting image properties    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #DD0000">"black"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageProperty</span><span style="color: #007700">(</span><span style="color: #DD0000">'Exif:Make'</span><span style="color: #007700">, </span><span style="color: #DD0000">'Imagick'</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageProperty</span><span style="color: #007700">(</span><span style="color: #DD0000">'Exif:Make'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.setimageproperty-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::getImageProperty()} - Returns the named image property</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageProperty($name, $value) {}

/**
*<div id="imagick.setimageinterpolatemethod" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageInterpolateMethod</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageInterpolateMethod</span> &mdash; <span class="dc-title">Sets the image interpolate pixel method</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimageinterpolatemethod-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageInterpolateMethod</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$method</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image interpolate pixel method.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimageinterpolatemethod-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">method</span></dt>     <dd>      <p class="para">       The method is one of the <strong><span>Imagick::INTERPOLATE_*</span></strong> constants      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimageinterpolatemethod-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageInterpolateMethod($method) {}

/**
*<div id="imagick.getimageinterpolatemethod" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageInterpolateMethod</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageInterpolateMethod</span> &mdash; <span class="dc-title">Returns the interpolation method</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageinterpolatemethod-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageInterpolateMethod</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the interpolation method for the specified image. The method is one of    the <strong><span>Imagick::INTERPOLATE_*</span></strong> constants.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageinterpolatemethod-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageinterpolatemethod-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the interpolate method on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimageinterpolatemethod-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int the interpolate method on success.*/
    public function getImageInterpolateMethod() {}

/**
*<div id="imagick.linearstretchimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::linearStretchImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::linearStretchImage</span> &mdash; <span class="dc-title">Stretches with saturation the image intensity</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.linearstretchimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::linearStretchImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$blackPoint</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$whitePoint</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Stretches with saturation the image intensity.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.linearstretchimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">blackPoint</span></dt>     <dd>      <p class="para">      The image black point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">whitePoint</span></dt>     <dd>      <p class="para">      The image white point      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.linearstretchimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.linearstretchimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::linearStretchImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">linearStretchImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$blackThreshold</span><span style="color: #007700">, </span><span style="color: #9876AA">$whiteThreshold</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$pixels </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">() * </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">linearStretchImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$blackThreshold </span><span style="color: #007700">* </span><span style="color: #9876AA">$pixels</span><span style="color: #007700">, </span><span style="color: #9876AA">$whiteThreshold </span><span style="color: #007700">* </span><span style="color: #9876AA">$pixels</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function linearStretchImage($blackPoint, $whitePoint) {}

/**
*<div id="imagick.getimagelength" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageLength</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageLength</span> &mdash; <span class="dc-title">Returns the image length in bytes</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagelength-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageLength</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the image length in bytes  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagelength-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagelength-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an int containing the current image size.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.getimagelength-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::getImageLength()</strong></span>:</strong></p>    <div class="example-contents"><p>     Getting image length in bytes    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">'test.jpg'</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageLength</span><span style="color: #007700">() . </span><span style="color: #DD0000">' bytes'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return int an int containing the current image size.*/
    public function getImageLength() {}

/**
*<div id="imagick.extentimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::extentImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::extentImage</span> &mdash; <span class="dc-title">Set image size</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.extentimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::extentImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Comfortability method for setting image size. The method sets the image size and allows   setting x,y coordinates where the new area begins.   此方法在Imagick基于ImageMagick 6.3.1以上版本编译时可用。  </p>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">  Prior to ImageMagick 6.5.7-8 (1623), $x was positive when shifting to the left and negative when shifting to the right, and $y was positive when shifting an image up and negative when shifting an image down.  Somewhere betwen ImageMagick 6.3.7 (1591) and ImageMagick 6.5.7-8 (1623), the axes of $x and $y were flipped, so that $x was negative when shifting to the left and positive when shifting to the right, and $y was negative when shifting an image up and positive when shifting an image down.  Somewhere between ImageMagick 6.5.7-8 (1623) and ImageMagick 6.6.9-7 (1641), the axes of $x and $y were flipped back to pre-ImageMagick 6.5.7-8 (1623) functionality.   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.extentimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">       The new width      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">height</span></dt>     <dd>      <p class="para">       The new height      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       X position for the new size      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       Y position for the new size      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.extentimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.extentimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::resizeImage()} - Scales an image</span></li>    <li class="member"><span class="function">{@link Imagick::thumbnailImage()} - Changes the size of an image</span></li>    <li class="member"><span class="function">{@link Imagick::cropImage()} - 截图图片的一块区域</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function extentImage($width, $height, $x, $y) {}

/**
*<div id="imagick.getimageorientation" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageOrientation</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageOrientation</span> &mdash; <span class="dc-title">Gets the image orientation</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageorientation-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageOrientation</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the image orientation. The return value is one of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.orientation" class="link">orientation constants</a>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageorientation-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageorientation-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an int on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimageorientation-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int an int on success.*/
    public function getImageOrientation() {}

/**
*<div id="imagick.setimageorientation" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageOrientation</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageOrientation</span> &mdash; <span class="dc-title">Sets the image orientation</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimageorientation-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageOrientation</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$orientation</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image orientation.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimageorientation-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">orientation</span></dt>     <dd>      <p class="para">       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.orientation" class="link">orientation constants</a>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimageorientation-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setimageorientation-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::setImageOrientation()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//Doesn't appear to do anything<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setImageOrientation</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$orientationType</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageOrientation</span><span style="color: #007700">(</span><span style="color: #9876AA">$orientationType</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageOrientation($orientation) {}

/**
*<div id="imagick.paintfloodfillimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::paintFloodfillImage</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.1.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::paintFloodfillImage</span> &mdash; <span class="dc-title">Changes the color value of any pixel that matches target</span></p> </div> <div id="imagick.paintfloodfillimage-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.paintfloodfillimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::paintFloodfillImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$fill</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$bordercolor</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Changes the color value of any pixel that matches target and is an   immediate neighbor. As of ImageMagick 6.3.8 this method has been deprecated   and <span class="function">{@link Imagick::floodfillPaintImage()}</span> should be used instead.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.paintfloodfillimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">fill</span></dt>     <dd>      <p class="para">       ImagickPixel object or a string containing the fill color      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">fuzz</span></dt>     <dd>      <p class="para">       The amount of fuzz. For example, set fuzz to 10 and the color red at       intensities of 100 and 102 respectively are now interpreted as the       same color for the purposes of the floodfill.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">bordercolor</span></dt>     <dd>      <p class="para">       ImagickPixel object or a string containing the border color      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       X start position of the floodfill      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       Y start position of the floodfill      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a> using bitwise operators. 缺省为<strong><span>Imagick::CHANNEL_DEFAULT</span></strong>. 参考此 <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">通道常数</a>列表      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.paintfloodfillimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function paintFloodfillImage($fill, $fuzz, $bordercolor, $x, $y, $channel = Imagick::CHANNEL_ALL) {}

/**
*<div id="imagick.clutimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::clutImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::clutImage</span> &mdash; <span class="dc-title">Replaces colors in the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.clutimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::clutImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$lookup_table</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Replaces colors in the image from a color lookup table. Optional second   parameter to replace colors in a specific channel. 此方法在Imagick基于ImageMagick 6.3.6以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.clutimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">lookup_table</span></dt>     <dd>      <p class="para">       Imagick object containing the color lookup table      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       The <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">Channeltype</a>       constant. When not supplied, default channels are replaced.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.clutimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.clutimage-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::clutImage()</strong></span>:</strong></p>    <div class="example-contents"><p>     Replace colors in the image from a color lookup table.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">'test.jpg'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$clut </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$clut</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, new </span><span style="color: #9876AA">ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">'black'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clutImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$clut</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writeImage</span><span style="color: #007700">(</span><span style="color: #DD0000">'test_out.jpg'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.clutimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::adaptiveBlurImage()} - Adds adaptive blur filter to image</span></li>    <li class="member"><span class="function">{@link Imagick::motionBlurImage()} - Simulates motion blur</span></li>    <li class="member"><span class="function">{@link Imagick::radialBlurImage()} - Radial blurs an image</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function clutImage(Imagick $lookup_table, $channel = Imagick::CHANNEL_DEFAULT) {}

/**
*<div id="imagick.getimageproperties" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageProperties</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageProperties</span> &mdash; <span class="dc-title">Returns the image properties</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageproperties-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageProperties</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pattern</span><span class="initializer"> = &quot;*&quot;</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$include_values</span><span class="initializer"> = <strong><span>true</span></strong></span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns all associated properties that match the pattern. If <strong><span>false</span></strong> is passed as second parameter   only the property names are returned. 此方法在Imagick基于ImageMagick 6.3.6以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageproperties-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">      The pattern for property names.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">include_values</span></dt>     <dd>      <p class="para">      Whether to return only property names. If <strong><span>false</span></strong> then only property names will be returned.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageproperties-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  Returns an array containing the image properties or property names.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.getimageproperties-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::getImageProperties()</strong></span>:</strong></p>    <div class="example-contents"><p>     An example of extracting EXIF information.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// Create the object <br /></span><span style="color: #9876AA">$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">"/path/to/example.jpg"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Get the EXIF information <br /></span><span style="color: #9876AA">$exifArray </span><span style="color: #007700">= </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageProperties</span><span style="color: #007700">(</span><span style="color: #DD0000">"exif:*"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Loop trough the EXIF properties <br /></span><span style="color: #007700">foreach (</span><span style="color: #9876AA">$exifArray </span><span style="color: #007700">as </span><span style="color: #9876AA">$name </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$property</span><span style="color: #007700">)<br />{<br />    echo </span><span style="color: #DD0000">"</span><span style="color: #007700">{</span><span style="color: #9876AA">$name</span><span style="color: #007700">}</span><span style="color: #DD0000"> =&gt; </span><span style="color: #007700">{</span><span style="color: #9876AA">$property</span><span style="color: #007700">}</span><span style="color: #DD0000">&lt;br /&gt;\n"</span><span style="color: #007700">; <br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return array an array containing the image properties or property names.*/
    public function getImageProperties($pattern = "*", $only_names = true) {}

/**
*<div id="imagick.getimageprofiles" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageProfiles</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageProfiles</span> &mdash; <span class="dc-title">Returns the image profiles</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageprofiles-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageProfiles</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pattern</span><span class="initializer"> = &quot;*&quot;</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$include_values</span><span class="initializer"> = <strong><span>true</span></strong></span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns all associated profiles that match the pattern. If <strong><span>false</span></strong> is passed as second parameter   only the profile names are returned. 此方法在Imagick基于ImageMagick 6.3.6以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageprofiles-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">      The pattern for profile names.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">include_values</span></dt>     <dd>      <p class="para">      Whether to return only profile names. If <strong><span>false</span></strong> then only profile names will be returned.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageprofiles-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an array containing the image profiles or profile names.  </p> </div></div>
     * @return array an array containing the image profiles or profile names.*/
    public function getImageProfiles($pattern = "*", $include_values = true) {}

/**
*<div id="imagick.distortimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::distortImage</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.0.1, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::distortImage</span> &mdash; <span class="dc-title">Distorts an image using various distortion methods</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.distortimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::distortImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$method</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$arguments</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$bestfit</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Distorts an image using various distortion methods, by mapping color   lookups of the source image to a new destination image usually of the same   size as the source image, unless &#039;bestfit&#039; is set to <strong><span>true</span></strong>.  </p>  <p class="para">   If &#039;bestfit&#039; is enabled, and distortion allows it, the destination image   is adjusted to ensure the whole source &#039;image&#039; will just fit within the   final destination image, which will be sized and offset accordingly. Also   in many cases the virtual offset of the source image will be taken into   account in the mapping.  </p>  <p class="para">   此方法在Imagick基于ImageMagick 6.3.6以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.distortimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">method</span></dt>     <dd>      <p class="para">       The method of image distortion. See <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.distortion" class="link">distortion constants</a>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">arguments</span></dt>     <dd>      <p class="para">       The arguments for this distortion method      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">bestfit</span></dt>     <dd>      <p class="para">       Attempt to resize destination to fit distorted source      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.distortimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.distortimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.distortimage-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::distortImage()</strong></span>:</strong></p>    <div class="example-contents"><p>     Distort an image and display to the browser.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Create new object <br /></span><span style="color: #9876AA">$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">// Create new checkerboard pattern <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #DD0000">"pattern:checkerboard"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Set the image format to png <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Fill new visible areas with transparent <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageVirtualPixelMethod</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">VIRTUALPIXELMETHOD_TRANSPARENT</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Activate matte <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageMatte</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Control points for the distortion <br /></span><span style="color: #9876AA">$controlPoints </span><span style="color: #007700">= array( </span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #9876AA">10</span><span style="color: #007700">, <br />                        </span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">,<br /><br />                        </span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">() - </span><span style="color: #9876AA">20</span><span style="color: #007700">,<br />                        </span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">() - </span><span style="color: #9876AA">5</span><span style="color: #007700">,<br /><br />                        </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">() - </span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #9876AA">10</span><span style="color: #007700">,<br />                        </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">() - </span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #9876AA">20</span><span style="color: #007700">,<br /><br />                        </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">() - </span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">() - </span><span style="color: #9876AA">10</span><span style="color: #007700">,<br />                        </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">() - </span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">() - </span><span style="color: #9876AA">30</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Perform the distortion                        <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">distortImage</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">DISTORTION_PERSPECTIVE</span><span style="color: #007700">, </span><span style="color: #9876AA">$controlPoints</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Ouput the image <br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$im</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="mediaobject">          <div class="imageobject">      <img src="images/c0d23d2d6769e53e24a1b3136c064577-distortImage.png" alt="Output of example : Using Imagick::distortImage()" width="111" height="150" />     </div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.distortimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::blurImage()} - Adds blur filter to image</span></li>    <li class="member"><span class="function">{@link Imagick::motionBlurImage()} - Simulates motion blur</span></li>    <li class="member"><span class="function">{@link Imagick::radialBlurImage()} - Radial blurs an image</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function distortImage($method, array $arguments, $bestfit) {}

/**
*<div id="imagick.writeimagefile" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::writeImageFile</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::writeImageFile</span> &mdash; <span class="dc-title">Writes an image to a filehandle</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.writeimagefile-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::writeImageFile</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$filehandle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$format</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Writes the image sequence to an open filehandle. The handle must be opened with   for example fopen. 此方法在Imagick基于ImageMagick 6.3.6以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.writeimagefile-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filehandle</span></dt>     <dd>      <p class="para">       Filehandle where to write the image.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">format</span></dt>     <dd>      <p class="para">       The image format.       The list of valid format specifiers depends on the compiled feature set of       ImageMagick, and can be queried at runtime via <span class="methodname" style="color:#CC7832">{@link Imagick::queryFormats()}</span>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.writeimagefile-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.writeimagefile-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link Imagick::queryFormats()} - Returns formats supported by Imagick</span></li>  </ul> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function writeImageFile($filehandle) {}

/**
*<div id="imagick.writeimagesfile" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::writeImagesFile</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::writeImagesFile</span> &mdash; <span class="dc-title">Writes frames to a filehandle</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.writeimagesfile-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::writeImagesFile</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$filehandle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$format</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Writes all image frames into an open filehandle. This method can be used to write   animated gifs or other multiframe images into open filehandle.   此方法在Imagick基于ImageMagick 6.3.6以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.writeimagesfile-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filehandle</span></dt>     <dd>      <p class="para">       Filehandle where to write the images.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">format</span></dt>     <dd>      <p class="para">       The image format.       The list of valid format specifiers depends on the compiled feature set of       ImageMagick, and can be queried at runtime via <span class="methodname" style="color:#CC7832">{@link Imagick::queryFormats()}</span>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.writeimagesfile-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.writeimagesfile-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link Imagick::queryFormats()} - Returns formats supported by Imagick</span></li>  </ul> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function writeImagesFile($filehandle) {}

/**
*<div id="imagick.resetimagepage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::resetImagePage</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::resetImagePage</span> &mdash; <span class="dc-title">Reset image page</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.resetimagepage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::resetImagePage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$page</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   The page definition as a string. The string is in format WxH+x+y.   此方法在Imagick基于ImageMagick 6.3.6以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.resetimagepage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">page</span></dt>     <dd>      <p class="para">       The page definition. For example <span>7168x5147+0+0</span>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.resetimagepage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function resetImagePage($page) {}

/**
*<div id="imagick.setimageclipmask" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageClipMask</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageClipMask</span> &mdash; <span class="dc-title">Sets image clip mask</span></p> </div> <div id="imagick.setimageclipmask-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimageclipmask-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageClipMask</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$clip_mask</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets image clip mask from another Imagick object.   此方法在Imagick基于ImageMagick 6.3.6以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimageclipmask-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">clip_mask</span></dt>     <dd>      <p class="para">      The Imagick object containing the clip mask      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimageclipmask-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimageclipmask-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setimageclipmask-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::setImageClipMask()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setImageClipMask</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">readImage</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br /><br />    </span><span style="color: #9876AA">$width </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$height </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$clipMask </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$clipMask</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">$width</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">$height</span><span style="color: #007700">,<br />        </span><span style="color: #DD0000">"canvas:transparent"<br />    </span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'white'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">circle</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">$width </span><span style="color: #007700">/ </span><span style="color: #9876AA">2</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">$height </span><span style="color: #007700">/ </span><span style="color: #9876AA">2</span><span style="color: #007700">,<br />        (</span><span style="color: #9876AA">$width </span><span style="color: #007700">/ </span><span style="color: #9876AA">2</span><span style="color: #007700">) + (</span><span style="color: #9876AA">$width </span><span style="color: #007700">/ </span><span style="color: #9876AA">4</span><span style="color: #007700">),<br />        </span><span style="color: #9876AA">$height </span><span style="color: #007700">/ </span><span style="color: #9876AA">2<br />    </span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$clipMask</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageClipMask</span><span style="color: #007700">(</span><span style="color: #9876AA">$clipMask</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">negateImage</span><span style="color: #007700">(</span><span style="color: #9876AA">false</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImagesBlob</span><span style="color: #007700">();<br />    <br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageClipMask(Imagick $clip_mask) {}

/**
*<div id="imagick.getimageclipmask" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageClipMask</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageClipMask</span> &mdash; <span class="dc-title">Gets image clip mask</span></p> </div> <div id="imagick.getimageclipmask-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageclipmask-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageClipMask</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Returns the image clip mask. The clip mask is an Imagick object containing the clip mask.   此方法在Imagick基于ImageMagick 6.3.6以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageclipmask-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageclipmask-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an Imagick object containing the clip mask.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimageclipmask-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return Imagick an Imagick object containing the clip mask.*/
    public function getImageClipMask() {}

/**
*<div id="imagick.animateimages" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::animateImages</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::animateImages</span> &mdash; <span class="dc-title">Animates an image or images</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.animateimages-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::animateImages</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$x_server</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   This method animates the image onto a local or remote X server. This method   is not available on Windows.   此方法在Imagick基于ImageMagick 6.3.6以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.animateimages-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x_server</span></dt>     <dd>      <p class="para">       X server address      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.animateimages-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.animateimages-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::displayImage()} - Displays an image</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function animateImages($x_server) {}

/**
*<div id="imagick.recolorimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::recolorImage</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::recolorImage</span> &mdash; <span class="dc-title">Recolors image</span></p> </div> <div id="imagick.recolorimage-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.recolorimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::recolorImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$matrix</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Translate, scale, shear, or rotate image colors. This method supports variable sized matrices but normally   5x5 matrix is used for RGBA and 6x6 is used for CMYK. The last row should contain the normalized values.   此方法在Imagick基于ImageMagick 6.3.6以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.recolorimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">matrix</span></dt>     <dd>      <p class="para">       The matrix containing the color values      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.recolorimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.recolorimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::recolorImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">recolorImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$remapColor </span><span style="color: #007700">= [ </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">,];<br /><br /></span><span style="color: #FF8000">//$remapColor = [<br />//    1.438, -0.122, -0.016,  0, 0, -0.03,<br />//    -0.062,  1.378, -0.016,  0, 0,  0.05,<br />//    -0.062, -0.122, 1.483,   0, 0, -0.02,<br />//];<br /><br />    </span><span style="color: #007700">@</span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">recolorImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$remapColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.recolorimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::displayImage()} - Displays an image</span></li>   </ul>  </span> </div> </div>
     * @return bool <b>TRUE</b> on success.*/
    public function recolorImage(array $matrix) {}

/**
*<div id="imagick.setfont" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setFont</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.1.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setFont</span> &mdash; <span class="dc-title">Sets font</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setfont-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setFont</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$font</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets object&#039;s font property. This method can be used for example to set font for    caption: pseudo-format. The font needs to be configured in ImageMagick configuration   or a file by the name of <span class="parameter" style="color:#3A95FF">font</span> must exist. This method should   not be confused with <span class="function">{@link ImagickDraw::setFont()}</span> which sets the font   for a specific ImagickDraw object.   此方法在Imagick基于ImageMagick 6.3.7以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setfont-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">font</span></dt>     <dd>      <p class="para">       Font name or a filename      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setfont-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setfont-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 A <span class="function"><strong style="color:#CC7832">Imagick::setFont()</strong></span> example</strong></p>    <div class="example-contents"><p>     Example of using Imagick::setFont    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Create new imagick object <br /></span><span style="color: #9876AA">$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">// Set the font for the object <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFont</span><span style="color: #007700">(</span><span style="color: #DD0000">"example.ttf"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Create new caption <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #DD0000">"caption:Hello"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Do something with the image <br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.setfont-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::getFont()} - Gets font</span></li>    <li class="member"><span class="function">{@link ImagickDraw::setFont()} - Sets the fully-specified font to use when annotating with text</span></li>    <li class="member"><span class="function">{@link ImagickDraw::getFont()} - Returns the font</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setFont($font) {}

/**
*<div id="imagick.getfont" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getFont</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.1.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getFont</span> &mdash; <span class="dc-title">Gets font</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getfont-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getFont</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Returns the objects font property.   此方法在Imagick基于ImageMagick 6.3.7以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getfont-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getfont-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the string containing the font name or <strong><span>false</span></strong> if not font is set.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.getfont-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::setFont()} - Sets font</span></li>    <li class="member"><span class="function">{@link ImagickDraw::setFont()} - Sets the fully-specified font to use when annotating with text</span></li>    <li class="member"><span class="function">{@link ImagickDraw::getFont()} - Returns the font</span></li>   </ul>  </span> </div></div>
     * @return string|false the string containing the font name or <b>FALSE</b> if not font is set.*/
    public function getFont() {}

/**
*<div id="imagick.setpointsize" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setPointSize</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.1.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setPointSize</span> &mdash; <span class="dc-title">Sets point size</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setpointsize-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setPointSize</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$point_size</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets object&#039;s point size property. This method can be used for example to set font size for    caption: pseudo-format.   此方法在Imagick基于ImageMagick 6.3.7以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setpointsize-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">point_size</span></dt>     <dd>      <p class="para">       Point size      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setpointsize-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setpointsize-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 A <span class="function"><strong style="color:#CC7832">Imagick::setPointSize()</strong></span> example</strong></p>    <div class="example-contents"><p>     Example of using Imagick::setPointSize    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Create new imagick object <br /></span><span style="color: #9876AA">$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">// Set the font for the object <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFont</span><span style="color: #007700">(</span><span style="color: #DD0000">"example.ttf"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Set the point size <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setPointSize</span><span style="color: #007700">(</span><span style="color: #9876AA">12</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Create new caption <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #DD0000">"caption:Hello"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Do something with the image <br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.setpointsize-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::getPointSize()} - Gets point size</span></li>   </ul>  </span> </div> </div>
     * @return bool <b>TRUE</b> on success.*/
    public function setPointSize($point_size) {}

/**
*<div id="imagick.getpointsize" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getPointSize</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.1.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getPointSize</span> &mdash; <span class="dc-title">Gets point size</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getpointsize-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getPointSize</strong></span>(): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   Returns the objects point size property.   此方法在Imagick基于ImageMagick 6.3.7以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getpointsize-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getpointsize-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <span class="type" style="color:#EAB766">float</span> containing the point size.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.getpointsize-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::setPointSize()} - Sets point size</span></li>   </ul>  </span> </div></div>
     * @return float a float containing the point size.*/
    public function getPointSize() {}

/**
*<div id="imagick.mergeimagelayers" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::mergeImageLayers</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.1.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::mergeImageLayers</span> &mdash; <span class="dc-title">Merges image layers</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.mergeimagelayers-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::mergeImageLayers</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$layer_method</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Merges image layers into one. This method is useful when working with image   formats that use multiple layers such as PSD. The merging is controlled using   the <span class="parameter" style="color:#3A95FF">layer_method</span> which defines how the layers are merged.   此方法在Imagick基于ImageMagick 6.3.7以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.mergeimagelayers-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">layer_method</span></dt>     <dd>      <p class="para">       One of the <strong><span>Imagick::LAYERMETHOD_*</span></strong> constants      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.mergeimagelayers-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an Imagick object containing the merged image.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.mergeimagelayers-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.mergeimagelayers-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::mergeImageLayers()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">mergeImageLayers</span><span style="color: #007700">(</span><span style="color: #9876AA">$layerMethodType</span><span style="color: #007700">, </span><span style="color: #9876AA">$imagePath1</span><span style="color: #007700">, </span><span style="color: #9876AA">$imagePath2</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br /><br />    </span><span style="color: #9876AA">$imagick2 </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath2</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagick2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">mergeImageLayers</span><span style="color: #007700">(</span><span style="color: #9876AA">$layerMethodType</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$result</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.mergeimagelayers-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::flattenImages()} - Merges a sequence of images</span></li>   </ul>  </span> </div> </div>
     * @return Imagick Returns an Imagick object containing the merged image.*/
    public function mergeImageLayers($layer_method) {}

/**
*<div id="imagick.setimagealphachannel" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageAlphaChannel</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.1.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageAlphaChannel</span> &mdash; <span class="dc-title">Sets image alpha channel</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagealphachannel-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageAlphaChannel</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$mode</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Activate or deactivate image alpha channel. The <span class="parameter" style="color:#3A95FF">mode</span>    is one of the <strong><span>Imagick::ALPHACHANNEL_*</span></strong> constants.   此方法在Imagick基于ImageMagick 6.3.8以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagealphachannel-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">mode</span></dt>     <dd>      <p class="para">       One of the <strong><span>Imagick::ALPHACHANNEL_*</span></strong> constants      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagealphachannel-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagealphachannel-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.setimagealphachannel-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::setImageMatte()} - Sets the image matte channel</span></li>    <li class="member"> <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.alphachannel" class="link">Imagick Alpha Channel Constants</a></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageAlphaChannel($mode) {}

/**
*<div id="imagick.floodfillpaintimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::floodFillPaintImage</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::floodFillPaintImage</span> &mdash; <span class="dc-title">Changes the color value of any pixel that matches target</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.floodfillpaintimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::floodFillPaintImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$fill</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$target</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$invert</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Changes the color value of any pixel that matches target and is an   immediate neighbor. This method is a replacement for deprecated    <span class="function">{@link Imagick::paintFloodFillImage()}</span>.   此方法在Imagick基于ImageMagick 6.3.8以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.floodfillpaintimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">fill</span></dt>     <dd>      <p class="para">       ImagickPixel object or a string containing the fill color      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">fuzz</span></dt>     <dd>      <p class="para">       The amount of fuzz. For example, set fuzz to 10 and the color red at intensities of 100 and 102 respectively are now interpreted as the same color.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">target</span></dt>     <dd>      <p class="para">       ImagickPixel object or a string containing the target color to paint      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       X start position of the floodfill      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       Y start position of the floodfill      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">invert</span></dt>     <dd>      <p class="para">       If <strong><span>true</span></strong> paints any pixel that does not match the target color.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a> using bitwise operators. 缺省为<strong><span>Imagick::CHANNEL_DEFAULT</span></strong>. 参考此 <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">通道常数</a>列表      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.floodfillpaintimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.floodfillpaintimage-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>Imagick::floodfillPaintImage()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// Create new imagick object <br /></span><span style="color: #9876AA">$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">// create red, green and blue images <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #DD0000">"red"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #DD0000">"green"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #DD0000">"blue"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Append the images into one <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">resetIterator</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$combined </span><span style="color: #007700">= </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendImages</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Save the intermediate image for comparison <br /></span><span style="color: #9876AA">$combined</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writeImage</span><span style="color: #007700">(</span><span style="color: #DD0000">"floodfillpaint_intermediate.png"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// The target pixel to paint <br /></span><span style="color: #9876AA">$x </span><span style="color: #007700">= </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$y </span><span style="color: #007700">= </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// Get the color we are painting <br /></span><span style="color: #9876AA">$target </span><span style="color: #007700">= </span><span style="color: #9876AA">$combined</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImagePixelColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$x</span><span style="color: #007700">, </span><span style="color: #9876AA">$y</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Paints pixel in position 1,1 black and all neighboring <br />   pixels that match the target color <br /></span><span style="color: #9876AA">$combined</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">floodfillPaintImage</span><span style="color: #007700">(</span><span style="color: #DD0000">"black"</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$target</span><span style="color: #007700">, </span><span style="color: #9876AA">$x</span><span style="color: #007700">, </span><span style="color: #9876AA">$y</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Save the result <br /></span><span style="color: #9876AA">$combined</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writeImage</span><span style="color: #007700">(</span><span style="color: #DD0000">"floodfillpaint_result.png"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="mediaobject">          <div class="imageobject">      <img src="images/c0d23d2d6769e53e24a1b3136c064577-floodfillpaint_intermediate.png" alt="Output of example : Imagick::floodfillPaintImage()" width="100" height="150" />     </div>     <div class="imageobject">      <img src="images/c0d23d2d6769e53e24a1b3136c064577-floodfillpaint_result.png" alt="Output of example : Imagick::floodfillPaintImage()" width="100" height="150" />     </div>    </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function floodFillPaintImage($fill, $fuzz, $target, $x, $y, $invert, $channel = Imagick::CHANNEL_DEFAULT) {}

/**
*<div id="imagick.opaquepaintimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::opaquePaintImage</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::opaquePaintImage</span> &mdash; <span class="dc-title">Changes the color value of any pixel that matches target</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.opaquepaintimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::opaquePaintImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$target</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$fill</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$invert</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Changes any pixel that matches color with the color defined by fill.   此方法在Imagick基于ImageMagick 6.3.8以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.opaquepaintimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">target</span></dt>     <dd>      <p class="para">       ImagickPixel object or a string containing the color to change      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">fill</span></dt>     <dd>      <p class="para">       The replacement color      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">fuzz</span></dt>     <dd>      <p class="para">       The amount of fuzz. For example, set fuzz to 10 and the color red at intensities of 100 and 102 respectively are now interpreted as the same color.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">invert</span></dt>     <dd>      <p class="para">       If <strong><span>true</span></strong> paints any pixel that does not match the target color.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a> using bitwise operators. 缺省为<strong><span>Imagick::CHANNEL_DEFAULT</span></strong>. 参考此 <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">通道常数</a>列表      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.opaquepaintimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function opaquePaintImage($target, $fill, $fuzz, $invert, $channel = Imagick::CHANNEL_DEFAULT) {}

/**
*<div id="imagick.transparentpaintimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::transparentPaintImage</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::transparentPaintImage</span> &mdash; <span class="dc-title">Paints pixels transparent</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.transparentpaintimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::transparentPaintImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$target</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$alpha</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$invert</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Paints pixels matching the target color transparent.   此方法在Imagick基于ImageMagick 6.3.8以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.transparentpaintimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">target</span></dt>     <dd>      <p class="para">       The target color to paint      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">alpha</span></dt>     <dd>      <p class="para">       透明级别：1.0 是完全不透明，0.0 是完全透明。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">fuzz</span></dt>     <dd>      <p class="para">       The amount of fuzz. For example, set fuzz to 10 and the color red at intensities of 100 and 102 respectively are now interpreted as the same color.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">invert</span></dt>     <dd>      <p class="para">       If <strong><span>true</span></strong> paints any pixel that does not match the target color.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.transparentpaintimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.transparentpaintimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::transparentPaintImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">transparentPaintImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$color</span><span style="color: #007700">, </span><span style="color: #9876AA">$alpha</span><span style="color: #007700">, </span><span style="color: #9876AA">$fuzz</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #DD0000">"images/BlueScreen.jpg"</span><span style="color: #007700">));<br /><br />    </span><span style="color: #FF8000">//Need to be in a format that supports transparency<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setimageformat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transparentPaintImage</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">$color</span><span style="color: #007700">, </span><span style="color: #9876AA">$alpha</span><span style="color: #007700">, </span><span style="color: #9876AA">$fuzz </span><span style="color: #007700">* </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">getQuantum</span><span style="color: #007700">(), </span><span style="color: #9876AA">false<br />    </span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//Not required, but helps tidy up left over pixels<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">despeckleimage</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function transparentPaintImage($target, $alpha, $fuzz, $invert) {}

/**
*<div id="imagick.liquidrescaleimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::liquidRescaleImage</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.2.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::liquidRescaleImage</span> &mdash; <span class="dc-title">Animates an image or images</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.liquidrescaleimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::liquidRescaleImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$delta_x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$rigidity</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   This method scales the images using liquid rescaling method. This method   is an implementation of a technique called seam carving. In order for this   method to work as expected ImageMagick must be compiled with liblqr support.   此方法在Imagick基于ImageMagick 6.3.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.liquidrescaleimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">       The width of the target size      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">height</span></dt>     <dd>      <p class="para">       The height of the target size      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">delta_x</span></dt>     <dd>      <p class="para">       How much the seam can traverse on x-axis.        Passing 0 causes the seams to be straight.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">rigidity</span></dt>     <dd>      <p class="para">       Introduces a bias for non-straight seams. This parameter is        typically 0.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.liquidrescaleimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.liquidrescaleimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::resizeImage()} - Scales an image</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function liquidRescaleImage($width, $height, $delta_x, $rigidity) {}

/**
*<div id="imagick.encipherimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::encipherImage</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::encipherImage</span> &mdash; <span class="dc-title">Enciphers an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.encipherimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::encipherImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$passphrase</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Converts plain pixels to enciphered pixels. The image is not readable   until it has been deciphered using <span class="function">{@link Imagick::decipherImage()}</span>   此方法在Imagick基于ImageMagick 6.3.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.encipherimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">passphrase</span></dt>     <dd>      <p class="para">       The passphrase      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.encipherimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.encipherimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::decipherImage()} - Deciphers an image</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function encipherImage($passphrase) {}

/**
*<div id="imagick.decipherimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::decipherImage</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::decipherImage</span> &mdash; <span class="dc-title">Deciphers an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.decipherimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::decipherImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$passphrase</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Deciphers image that has been enciphered before. The image must be enciphered   using <span class="function">{@link Imagick::encipherImage()}</span>.   此方法在Imagick基于ImageMagick 6.3.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.decipherimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">passphrase</span></dt>     <dd>      <p class="para">       The passphrase      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.decipherimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.decipherimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::encipherImage()} - Enciphers an image</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function decipherImage($passphrase) {}

/**
*<div id="imagick.setgravity" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setGravity</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.2.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setGravity</span> &mdash; <span class="dc-title">Sets the gravity</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setgravity-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setGravity</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$gravity</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the global gravity property for the Imagick object.   此方法在Imagick基于ImageMagick 6.4.0以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setgravity-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">gravity</span></dt>     <dd>      <p class="para">       The gravity property. Refer to the list of        <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.gravity" class="link">gravity constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setgravity-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function setGravity($gravity) {}

/**
*<div id="imagick.getgravity" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getGravity</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getGravity</span> &mdash; <span class="dc-title">Gets the gravity</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getgravity-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getGravity</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the global gravity property for the Imagick object.   此方法在Imagick基于ImageMagick 6.4.0以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getgravity-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getgravity-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the gravity property. Refer to the list of    <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.gravity" class="link">gravity constants</a>.  </p> </div></div>
     * @return int the gravity property. Refer to the list of*/
    public function getGravity() {}

/**
*<div id="imagick.getimagechannelrange" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageChannelRange</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.2.1, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageChannelRange</span> &mdash; <span class="dc-title">Gets channel range</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagechannelrange-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageChannelRange</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Gets the range for one or more image channels.   此方法在Imagick基于ImageMagick 6.4.0以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagechannelrange-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a> using bitwise operators. 缺省为<strong><span>Imagick::CHANNEL_DEFAULT</span></strong>. 参考此 <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">通道常数</a>列表      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagechannelrange-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an array containing minima and maxima values of the channel(s).  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagechannelrange-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return float[] an array containing minima and maxima values of the channel(s).*/
    public function getImageChannelRange($channel) {}

/**
*<div id="imagick.getimagealphachannel" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageAlphaChannel</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageAlphaChannel</span> &mdash; <span class="dc-title">检查图像是否有 alpha 通道</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagealphachannel-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageAlphaChannel</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   返回图像是否有 alpha 通道。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagealphachannel-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagealphachannel-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果图像具有 alpha 通道值，则返回 <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>，即图像是 <abbr title="Red-Green-Blue">RGB</abbr> 而不是 <abbr>RGBA</abbr> 或 <abbr>CMYK</abbr> 而不是 <abbr>CMYKA</abbr>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagealphachannel-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.getimagealphachannel-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>imagick 3.6.0</td>      <td>       现在返回 <span class="type" style="color:#EAB766">bool</span>；之前返回 <span class="type" style="color:#EAB766">int</span>。      </td>     </tr>    </tbody>     </table> </div></div>
     * @return int a constant defining the current alpha channel value. Refer to this*/
    public function getImageAlphaChannel() {}

/**
*<div id="imagick.getimagechanneldistortions" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageChannelDistortions</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageChannelDistortions</span> &mdash; <span class="dc-title">Gets channel distortions</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagechanneldistortions-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageChannelDistortions</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$reference</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$metric</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   Compares one or more image channels of an image to a reconstructed image and returns the specified distortion metrics   此方法在Imagick基于ImageMagick 6.4.4以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagechanneldistortions-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">reference</span></dt>     <dd>      <p class="para">       Imagick object containing the reference image      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">metric</span></dt>     <dd>      <p class="para">       Refer to this list of <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.metric" class="link">metric type constants</a>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a> using bitwise operators. 缺省为<strong><span>Imagick::CHANNEL_DEFAULT</span></strong>. 参考此 <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">通道常数</a>列表      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagechanneldistortions-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <span class="type" style="color:#EAB766">float</span> describing the channel distortion.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagechanneldistortions-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return float a float describing the channel distortion.*/
    public function getImageChannelDistortions(Imagick $reference, $metric, $channel = Imagick::CHANNEL_DEFAULT) {}

/**
*<div id="imagick.setimagegravity" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageGravity</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageGravity</span> &mdash; <span class="dc-title">Sets the image gravity</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagegravity-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageGravity</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$gravity</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the gravity property for the current image. This method can be used    to set the gravity property for a single image sequence.   此方法在Imagick基于ImageMagick 6.4.4以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagegravity-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">gravity</span></dt>     <dd>      <p class="para">       The gravity property. Refer to the list of        <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.gravity" class="link">gravity constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagegravity-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function setImageGravity($gravity) {}

/**
*<div id="imagick.getimagegravity" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageGravity</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageGravity</span> &mdash; <span class="dc-title">Gets the image gravity</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagegravity-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageGravity</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the current gravity value of the   image. Unlike <span class="function">{@link Imagick::getGravity()}</span>, this method   returns the gravity defined for the current image sequence.   此方法在Imagick基于ImageMagick 6.4.4以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagegravity-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagegravity-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the images gravity property. Refer to the list of    <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.gravity" class="link">gravity constants</a>.  </p> </div></div>
     * @return int the images gravity property. Refer to the list of*/
    public function getImageGravity() {}

/**
*<div id="imagick.importimagepixels" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::importImagePixels</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::importImagePixels</span> &mdash; <span class="dc-title">Imports image pixels</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.importimagepixels-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::importImagePixels</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$map</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$storage</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$pixels</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Imports pixels from an array into an image. The <span class="parameter" style="color:#3A95FF">map</span> is usually   &#039;RGB&#039;. This method imposes the following constraints for the parameters: amount of pixels   in the array must match <span class="parameter" style="color:#3A95FF">width</span> x <span class="parameter" style="color:#3A95FF">height</span> x length of the map.   此方法在Imagick基于ImageMagick 6.4.5以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.importimagepixels-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       The image x position      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       The image y position      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">       The image width      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">height</span></dt>     <dd>      <p class="para">       The image height      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">map</span></dt>     <dd>      <p class="para">       Map of pixel ordering as a string. This can be for example <span>RGB</span>.       The value can be any combination or order of R = red, G = green, B = blue, A = alpha (0 is transparent),        O = opacity (0 is opaque), C = cyan, Y = yellow, M = magenta, K = black, I = intensity (for grayscale), P = pad.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">storage</span></dt>     <dd>      <p class="para">       The pixel storage method.        Refer to this list of <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.pixel" class="link">pixel constants</a>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">pixels</span></dt>     <dd>      <p class="para">       The array of pixels      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.importimagepixels-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.importimagepixels-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.importimagepixels-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>Imagick::importImagePixels()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// Generate array of pixels. 2000 pixels per color stripe <br /></span><span style="color: #9876AA">$count </span><span style="color: #007700">= </span><span style="color: #9876AA">2000 </span><span style="color: #007700">* </span><span style="color: #9876AA">3</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$pixels </span><span style="color: #007700">= <br />   </span><span style="color: #9876AA">array_merge</span><span style="color: #007700">(</span><span style="color: #9876AA">array_pad</span><span style="color: #007700">(array(), </span><span style="color: #9876AA">$count</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">),<br />               </span><span style="color: #9876AA">array_pad</span><span style="color: #007700">(array(), </span><span style="color: #9876AA">$count</span><span style="color: #007700">, </span><span style="color: #9876AA">255</span><span style="color: #007700">), <br />               </span><span style="color: #9876AA">array_pad</span><span style="color: #007700">(array(), </span><span style="color: #9876AA">$count</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">),<br />               </span><span style="color: #9876AA">array_pad</span><span style="color: #007700">(array(), </span><span style="color: #9876AA">$count</span><span style="color: #007700">, </span><span style="color: #9876AA">255</span><span style="color: #007700">),<br />               </span><span style="color: #9876AA">array_pad</span><span style="color: #007700">(array(), </span><span style="color: #9876AA">$count</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">// Width and height. The area is amount of pixels divided<br />   by three. Three comes from 'RGB', three values per pixel <br /></span><span style="color: #9876AA">$width </span><span style="color: #007700">= </span><span style="color: #9876AA">$height </span><span style="color: #007700">= </span><span style="color: #9876AA">pow</span><span style="color: #007700">((</span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$pixels</span><span style="color: #007700">) / </span><span style="color: #9876AA">3</span><span style="color: #007700">), </span><span style="color: #9876AA">0.5</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Create empty image <br /></span><span style="color: #9876AA">$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">, </span><span style="color: #DD0000">'gray'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Import the pixels into image.<br />   width * height * strlen("RGB") must match count($pixels) <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">importImagePixels</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">, </span><span style="color: #DD0000">"RGB"</span><span style="color: #007700">, </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">PIXEL_CHAR</span><span style="color: #007700">, </span><span style="color: #9876AA">$pixels</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// output as jpeg image <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'jpg'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$im</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="mediaobject">          <div class="imageobject">      <img src="images/c0d23d2d6769e53e24a1b3136c064577-importimagepixels.jpg" alt="Output of example : Imagick::importImagePixels()" width="100" height="100" />     </div>    </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function importImagePixels($x, $y, $width, $height, $map, $storage, array $pixels) {}

/**
*<div id="imagick.deskewimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::deskewImage</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::deskewImage</span> &mdash; <span class="dc-title">Removes skew from the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.deskewimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::deskewImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$threshold</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   This method can be used to remove skew from for example scanned images where the paper   was not properly placed on the scanning surface. 此方法在Imagick基于ImageMagick 6.4.5以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.deskewimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">threshold</span></dt>     <dd>      <p class="para">       Deskew threshold      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.deskewimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.deskewimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::deskewImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">deskewImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$threshold</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #DD0000">"images/NYTimes-Page1-11-11-1918.jpg"</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$deskewImagick </span><span style="color: #007700">= clone </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">;<br />    <br />    </span><span style="color: #FF8000">//This is the only thing required for deskewing.<br />    </span><span style="color: #9876AA">$deskewImagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">deskewImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$threshold</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//The rest of this example is to make the result obvious - because<br />    //otherwise the result is not obvious.<br />    </span><span style="color: #9876AA">$trim </span><span style="color: #007700">= </span><span style="color: #9876AA">9</span><span style="color: #007700">;<br /><br />    </span><span style="color: #9876AA">$deskewImagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">cropImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$deskewImagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">() - </span><span style="color: #9876AA">$trim</span><span style="color: #007700">, </span><span style="color: #9876AA">$deskewImagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">(), </span><span style="color: #9876AA">$trim</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">cropImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">() - </span><span style="color: #9876AA">$trim</span><span style="color: #007700">, </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">(), </span><span style="color: #9876AA">$trim</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$deskewImagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">resizeimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$deskewImagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">() / </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">$deskewImagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">() / </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">FILTER_LANCZOS</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">resizeimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">() / </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">() / </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">FILTER_LANCZOS</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$newCanvas </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$newCanvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">() + </span><span style="color: #9876AA">$deskewImagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">() + </span><span style="color: #9876AA">20</span><span style="color: #007700">, </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">(), </span><span style="color: #DD0000">'red'</span><span style="color: #007700">, </span><span style="color: #DD0000">'jpg'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$newCanvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">compositeimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagick</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COMPOSITE_COPY</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$newCanvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">compositeimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$deskewImagick</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COMPOSITE_COPY</span><span style="color: #007700">, </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">() + </span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$newCanvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool*/
    public function deskewImage($threshold) {}

/**
*<div id="imagick.segmentimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::segmentImage</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::segmentImage</span> &mdash; <span class="dc-title">Segments an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.segmentimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::segmentImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$COLORSPACE</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$cluster_threshold</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$smooth_threshold</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$verbose</span><span class="initializer"> = <strong><span>false</span></strong></span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Analyses the image and identifies units that are similar. 此方法在Imagick基于ImageMagick 6.4.5以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.segmentimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">COLORSPACE</span></dt>     <dd>      <p class="para">       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.colorspace" class="link">COLORSPACE constants</a>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">cluster_threshold</span></dt>     <dd>      <p class="para">       A percentage describing minimum number of pixels        contained in hexedra before it is considered valid.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">smooth_threshold</span></dt>     <dd>      <p class="para">       Eliminates noise from the histogram.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">verbose</span></dt>     <dd>      <p class="para">       Whether to output detailed information about recognised classes.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.segmentimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.segmentimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::segmentImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">segmentImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$colorSpace</span><span style="color: #007700">, </span><span style="color: #9876AA">$clusterThreshold</span><span style="color: #007700">, </span><span style="color: #9876AA">$smoothThreshold</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">segmentImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$colorSpace</span><span style="color: #007700">, </span><span style="color: #9876AA">$clusterThreshold</span><span style="color: #007700">, </span><span style="color: #9876AA">$smoothThreshold</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">segmentImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLORSPACE_RGB</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool*/
    public function segmentImage($COLORSPACE, $cluster_threshold, $smooth_threshold, $verbose = false) {}

/**
*<div id="imagick.sparsecolorimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::sparseColorImage</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::sparseColorImage</span> &mdash; <span class="dc-title">Interpolates colors</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.sparsecolorimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::sparseColorImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$SPARSE_METHOD</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$arguments</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Given the arguments array containing numeric values this method interpolates   the colors found at those coordinates across the whole image using <span class="parameter" style="color:#3A95FF">sparse_method</span>.   此方法在Imagick基于ImageMagick 6.4.5以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.sparsecolorimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">SPARSE_METHOD</span></dt>     <dd>      <p class="para">       Refer to this list of <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.sparsecolormethod" class="link">sparse method constants</a>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">arguments</span></dt>     <dd>      <p class="para">       An array containing the coordinates.        The array is in format <span>array(1,1, 2,45)</span>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a> using bitwise operators. 缺省为<strong><span>Imagick::CHANNEL_DEFAULT</span></strong>. 参考此 <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">通道常数</a>列表      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.sparsecolorimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.sparsecolorimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.sparsecolorimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 SPARSECOLORMETHOD_BARYCENTRIC <span class="function"><strong style="color:#CC7832">Imagick::sparseColorImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />    </span><span style="color: #007700">function </span><span style="color: #9876AA">renderImageBarycentric2</span><span style="color: #007700">() {<br />        </span><span style="color: #9876AA">$points </span><span style="color: #007700">= [<br />            [</span><span style="color: #9876AA">0.30</span><span style="color: #007700">, </span><span style="color: #9876AA">0.10</span><span style="color: #007700">, </span><span style="color: #DD0000">'red'</span><span style="color: #007700">],<br />            [</span><span style="color: #9876AA">0.10</span><span style="color: #007700">, </span><span style="color: #9876AA">0.80</span><span style="color: #007700">, </span><span style="color: #DD0000">'blue'</span><span style="color: #007700">],<br />            [</span><span style="color: #9876AA">0.70</span><span style="color: #007700">, </span><span style="color: #9876AA">0.60</span><span style="color: #007700">, </span><span style="color: #DD0000">'lime'</span><span style="color: #007700">],<br />            [</span><span style="color: #9876AA">0.80</span><span style="color: #007700">, </span><span style="color: #9876AA">0.20</span><span style="color: #007700">, </span><span style="color: #DD0000">'yellow'</span><span style="color: #007700">],<br />        ];<br />        </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= </span><span style="color: #9876AA">createGradientImage</span><span style="color: #007700">(<br />            </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">,<br />            </span><span style="color: #9876AA">$points</span><span style="color: #007700">,<br />            </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">SPARSECOLORMETHOD_BARYCENTRIC<br />        </span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />    }<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #2 SPARSECOLORMETHOD_BILINEAR <span class="function"><strong style="color:#CC7832">Imagick::sparseColorImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />    </span><span style="color: #007700">function </span><span style="color: #9876AA">renderImageBilinear</span><span style="color: #007700">() {<br />        </span><span style="color: #9876AA">$points </span><span style="color: #007700">= [[</span><span style="color: #9876AA">0.30</span><span style="color: #007700">, </span><span style="color: #9876AA">0.10</span><span style="color: #007700">, </span><span style="color: #DD0000">'red'</span><span style="color: #007700">], [</span><span style="color: #9876AA">0.10</span><span style="color: #007700">, </span><span style="color: #9876AA">0.80</span><span style="color: #007700">, </span><span style="color: #DD0000">'blue'</span><span style="color: #007700">], [</span><span style="color: #9876AA">0.70</span><span style="color: #007700">, </span><span style="color: #9876AA">0.60</span><span style="color: #007700">, </span><span style="color: #DD0000">'lime'</span><span style="color: #007700">], [</span><span style="color: #9876AA">0.80</span><span style="color: #007700">, </span><span style="color: #9876AA">0.20</span><span style="color: #007700">, </span><span style="color: #DD0000">'yellow'</span><span style="color: #007700">],];<br />        </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= </span><span style="color: #9876AA">createGradientImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$points</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">SPARSECOLORMETHOD_BILINEAR</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />    }<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #3 SPARSECOLORMETHOD_SPEPARDS <span class="function"><strong style="color:#CC7832">Imagick::sparseColorImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />    </span><span style="color: #007700">function </span><span style="color: #9876AA">renderImageShepards</span><span style="color: #007700">() {<br />        </span><span style="color: #9876AA">$points </span><span style="color: #007700">= [<br />            [</span><span style="color: #9876AA">0.30</span><span style="color: #007700">, </span><span style="color: #9876AA">0.10</span><span style="color: #007700">, </span><span style="color: #DD0000">'red'</span><span style="color: #007700">],<br />            [</span><span style="color: #9876AA">0.10</span><span style="color: #007700">, </span><span style="color: #9876AA">0.80</span><span style="color: #007700">, </span><span style="color: #DD0000">'blue'</span><span style="color: #007700">],<br />            [</span><span style="color: #9876AA">0.70</span><span style="color: #007700">, </span><span style="color: #9876AA">0.60</span><span style="color: #007700">, </span><span style="color: #DD0000">'lime'</span><span style="color: #007700">],<br />            [</span><span style="color: #9876AA">0.80</span><span style="color: #007700">, </span><span style="color: #9876AA">0.20</span><span style="color: #007700">, </span><span style="color: #DD0000">'yellow'</span><span style="color: #007700">],<br />        ];<br />        </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= </span><span style="color: #9876AA">createGradientImage</span><span style="color: #007700">(</span><span style="color: #9876AA">600</span><span style="color: #007700">, </span><span style="color: #9876AA">600</span><span style="color: #007700">, </span><span style="color: #9876AA">$points</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">SPARSECOLORMETHOD_SPEPARDS</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />    }<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #4 SPARSECOLORMETHOD_VORONOI <span class="function"><strong style="color:#CC7832">Imagick::sparseColorImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />    </span><span style="color: #007700">function </span><span style="color: #9876AA">renderImageVoronoi</span><span style="color: #007700">() {<br />        </span><span style="color: #9876AA">$points </span><span style="color: #007700">= [<br />            [</span><span style="color: #9876AA">0.30</span><span style="color: #007700">, </span><span style="color: #9876AA">0.10</span><span style="color: #007700">, </span><span style="color: #DD0000">'red'</span><span style="color: #007700">],<br />            [</span><span style="color: #9876AA">0.10</span><span style="color: #007700">, </span><span style="color: #9876AA">0.80</span><span style="color: #007700">, </span><span style="color: #DD0000">'blue'</span><span style="color: #007700">],<br />            [</span><span style="color: #9876AA">0.70</span><span style="color: #007700">, </span><span style="color: #9876AA">0.60</span><span style="color: #007700">, </span><span style="color: #DD0000">'lime'</span><span style="color: #007700">],<br />            [</span><span style="color: #9876AA">0.80</span><span style="color: #007700">, </span><span style="color: #9876AA">0.20</span><span style="color: #007700">, </span><span style="color: #DD0000">'yellow'</span><span style="color: #007700">],<br />        ];<br />        </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= </span><span style="color: #9876AA">createGradientImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$points</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">SPARSECOLORMETHOD_VORONOI</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />    }<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #5 SPARSECOLORMETHOD_BARYCENTRIC <span class="function"><strong style="color:#CC7832">Imagick::sparseColorImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />    </span><span style="color: #007700">function </span><span style="color: #9876AA">renderImageBarycentric</span><span style="color: #007700">() {<br />        </span><span style="color: #9876AA">$points </span><span style="color: #007700">= [<br />            [</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #DD0000">'skyblue'</span><span style="color: #007700">],<br />            [-</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #DD0000">'skyblue'</span><span style="color: #007700">],<br />            [</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #DD0000">'black'</span><span style="color: #007700">],<br />        ];<br />        </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= </span><span style="color: #9876AA">createGradientImage</span><span style="color: #007700">(</span><span style="color: #9876AA">600</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">$points</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">SPARSECOLORMETHOD_BARYCENTRIC</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />    }<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #6 createGradientImage is used by other examples. <span class="function"><strong style="color:#CC7832">Imagick::sparseColorImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">createGradientImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">, </span><span style="color: #9876AA">$colorPoints</span><span style="color: #007700">, </span><span style="color: #9876AA">$sparseMethod</span><span style="color: #007700">, </span><span style="color: #9876AA">$absolute </span><span style="color: #007700">= </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">, </span><span style="color: #DD0000">"white"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$barycentricPoints </span><span style="color: #007700">= array();<br /><br />    foreach (</span><span style="color: #9876AA">$colorPoints </span><span style="color: #007700">as </span><span style="color: #9876AA">$colorPoint</span><span style="color: #007700">) {<br /><br />        if (</span><span style="color: #9876AA">$absolute </span><span style="color: #007700">== </span><span style="color: #9876AA">true</span><span style="color: #007700">) {<br />            </span><span style="color: #9876AA">$barycentricPoints</span><span style="color: #007700">[] = </span><span style="color: #9876AA">$colorPoint</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">];<br />            </span><span style="color: #9876AA">$barycentricPoints</span><span style="color: #007700">[] = </span><span style="color: #9876AA">$colorPoint</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">];<br />        }<br />        else {<br />            </span><span style="color: #9876AA">$barycentricPoints</span><span style="color: #007700">[] = </span><span style="color: #9876AA">$colorPoint</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">] * </span><span style="color: #9876AA">$width</span><span style="color: #007700">;<br />            </span><span style="color: #9876AA">$barycentricPoints</span><span style="color: #007700">[] = </span><span style="color: #9876AA">$colorPoint</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">] * </span><span style="color: #9876AA">$height</span><span style="color: #007700">;<br />        }<br /><br />        if (</span><span style="color: #9876AA">is_string</span><span style="color: #007700">(</span><span style="color: #9876AA">$colorPoint</span><span style="color: #007700">[</span><span style="color: #9876AA">2</span><span style="color: #007700">])) {<br />            </span><span style="color: #9876AA">$imagickPixel </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #9876AA">$colorPoint</span><span style="color: #007700">[</span><span style="color: #9876AA">2</span><span style="color: #007700">]);<br />        }<br />        else if (</span><span style="color: #9876AA">$colorPoint</span><span style="color: #007700">[</span><span style="color: #9876AA">2</span><span style="color: #007700">] instanceof </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">) {<br />            </span><span style="color: #9876AA">$imagickPixel </span><span style="color: #007700">= </span><span style="color: #9876AA">$colorPoint</span><span style="color: #007700">[</span><span style="color: #9876AA">2</span><span style="color: #007700">];<br />        }<br />        else{<br />            </span><span style="color: #9876AA">$errorMessage </span><span style="color: #007700">= </span><span style="color: #9876AA">sprintf</span><span style="color: #007700">(<br />                </span><span style="color: #DD0000">"Value %s is neither a string nor an ImagickPixel class. Cannot use as a color."</span><span style="color: #007700">,<br />                </span><span style="color: #9876AA">$colorPoint</span><span style="color: #007700">[</span><span style="color: #9876AA">2</span><span style="color: #007700">]<br />            );<br /><br />            throw new </span><span style="color: #9876AA">\InvalidArgumentException</span><span style="color: #007700">(<br />                </span><span style="color: #9876AA">$errorMessage<br />            </span><span style="color: #007700">);<br />        }<br /><br />        </span><span style="color: #9876AA">$red </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagickPixel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorValue</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_RED</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$green </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagickPixel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorValue</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_GREEN</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$blue </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagickPixel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorValue</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_BLUE</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$alpha </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagickPixel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorValue</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_ALPHA</span><span style="color: #007700">);<br /><br />        </span><span style="color: #9876AA">$barycentricPoints</span><span style="color: #007700">[] = </span><span style="color: #9876AA">$red</span><span style="color: #007700">;<br />        </span><span style="color: #9876AA">$barycentricPoints</span><span style="color: #007700">[] = </span><span style="color: #9876AA">$green</span><span style="color: #007700">;<br />        </span><span style="color: #9876AA">$barycentricPoints</span><span style="color: #007700">[] = </span><span style="color: #9876AA">$blue</span><span style="color: #007700">;<br />        </span><span style="color: #9876AA">$barycentricPoints</span><span style="color: #007700">[] = </span><span style="color: #9876AA">$alpha</span><span style="color: #007700">;<br />    }<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">sparseColorImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$sparseMethod</span><span style="color: #007700">, </span><span style="color: #9876AA">$barycentricPoints</span><span style="color: #007700">);<br /><br />    return </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function sparseColorImage($SPARSE_METHOD, array $arguments, $channel = Imagick::CHANNEL_DEFAULT) {}

/**
*<div id="imagick.remapimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::remapImage</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::remapImage</span> &mdash; <span class="dc-title">Remaps image colors</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.remapimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::remapImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$replacement</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$DITHER</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Replaces colors an image with those defined by <span class="parameter" style="color:#3A95FF">replacement</span>. The colors   are replaced with the closest possible color. 此方法在Imagick基于ImageMagick 6.4.5以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.remapimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">replacement</span></dt>     <dd>      <p class="para">       An Imagick object containing the replacement colors      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">DITHER</span></dt>     <dd>      <p class="para">       Refer to this list of <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.dithermethod" class="link">dither method constants</a>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.remapimage-returnvalues">   <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.remapimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function remapImage(Imagick $replacement, $DITHER) {}

/**
*<div id="imagick.exportimagepixels" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::exportImagePixels</h1>  <p class="verinfo">(PECL imagick 2 &gt;=2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::exportImagePixels</span> &mdash; <span class="dc-title">Exports raw image pixels</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.exportimagepixels-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::exportImagePixels</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$map</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$STORAGE</span></span><br>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Exports image pixels into an array. The map defines the ordering of the exported    pixels. The size of the returned array is <span>width * height * strlen(map)</span>.   此方法在Imagick基于ImageMagick 6.4.7以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.exportimagepixels-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       X-coordinate of the exported area      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       Y-coordinate of the exported area      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">       Width of the exported aread      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">height</span></dt>     <dd>      <p class="para">       Height of the exported area      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">map</span></dt>     <dd>      <p class="para">       Ordering of the exported pixels. For example <span>&quot;RGB&quot;</span>.        Valid characters for the map are R, G, B, A, O, C, Y, M, K, I and P.          </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">STORAGE</span></dt>     <dd>      <p class="para">       Refer to this list of <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.pixel" class="link">pixel type constants</a>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.exportimagepixels-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an array containing the pixels values.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.exportimagepixels-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.exportimagepixels-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::exportImagePixels()</strong></span></strong></p>    <div class="example-contents"><p>     Export image pixels into an array    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// Create new object <br /></span><span style="color: #9876AA">$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">// Create new image <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #DD0000">"magick:rose"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Export the image pixels <br /></span><span style="color: #9876AA">$pixels </span><span style="color: #007700">= </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">exportImagePixels</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #DD0000">"RGB"</span><span style="color: #007700">, </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">PIXEL_CHAR</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Output <br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$pixels</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(12) {<br>  [0]=&gt;<br>  int(72)<br>  [1]=&gt;<br>  int(64)<br>  [2]=&gt;<br>  int(57)<br>  [3]=&gt;<br>  int(69)<br>  [4]=&gt;<br>  int(59)<br>  [5]=&gt;<br>  int(43)<br>  [6]=&gt;<br>  int(124)<br>  [7]=&gt;<br>  int(120)<br>  [8]=&gt;<br>  int(-96)<br>  [9]=&gt;<br>  int(91)<br>  [10]=&gt;<br>  int(84)<br>  [11]=&gt;<br>  int(111)<br>}<br></span></div>    </div>   </div>  </span> </div></div>
     * @return int[] an array containing the pixels values.*/
    public function exportImagePixels($x, $y, $width, $height, $map, $STORAGE) {}

/**
*<div id="imagick.getimagechannelkurtosis" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageChannelKurtosis</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageChannelKurtosis</span> &mdash; <span class="dc-title">The getImageChannelKurtosis purpose</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagechannelkurtosis-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageChannelKurtosis</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Get the kurtosis and skewness of a specific channel. 此方法在Imagick基于ImageMagick 6.4.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagechannelkurtosis-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a> using bitwise operators. 缺省为<strong><span>Imagick::CHANNEL_DEFAULT</span></strong>. 参考此 <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">通道常数</a>列表      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagechannelkurtosis-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an array with <span>kurtosis</span> and <span>skewness</span>   members.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagechannelkurtosis-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return float[] an array with kurtosis and skewness*/
    public function getImageChannelKurtosis($channel = Imagick::CHANNEL_DEFAULT) {}

/**
*<div id="imagick.functionimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::functionImage</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::functionImage</span> &mdash; <span class="dc-title">Applies a function on the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.functionimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::functionImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$function</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$arguments</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Applies an arithmetic, relational, or logical expression to a pseudo image.  </p>  <p class="para">   See also <a href="http://www.imagemagick.org/Usage/transform/#function" class="link external">&raquo;&nbsp;ImageMagick   v6 Examples - Image Transformations — Function, Multi-Argument Evaluate</a>  </p>  <p class="para">   此方法在Imagick基于ImageMagick 6.4.9以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.functionimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">function</span></dt>     <dd>      <p class="para">       Refer to this list of <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.function" class="link">function constants</a>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">arguments</span></dt>     <dd>      <p class="para">       Array of arguments to pass to this function.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.functionimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.functionimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.functionimage-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Create a sinusoidal gradient</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #DD0000">'gradient:black-white'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$arguments </span><span style="color: #007700">= array(</span><span style="color: #9876AA">3</span><span style="color: #007700">, -</span><span style="color: #9876AA">90</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">functionImage</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">FUNCTION_SINUSOID</span><span style="color: #007700">, </span><span style="color: #9876AA">$arguments</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="mediaobject">          <div class="imageobject">      <img src="images/c0d23d2d6769e53e24a1b3136c064577-functionImage_sinusoidal.png" alt="Output of create a sinusoidal gradient" width="200" height="200" />     </div>    </div>   </div>      <div class="example" id="">    <p><strong>示例 #2 Create a gradient from the polynomial (4x^2 - 4x + 1) </strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #DD0000">'gradient:black-white'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$arguments </span><span style="color: #007700">= array(</span><span style="color: #9876AA">4</span><span style="color: #007700">, -</span><span style="color: #9876AA">4</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">functionImage</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">FUNCTION_POLYNOMIAL</span><span style="color: #007700">, </span><span style="color: #9876AA">$arguments</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setimageformat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="mediaobject">          <div class="imageobject">      <img src="images/c0d23d2d6769e53e24a1b3136c064577-functionImage_polynomial.png" alt="Output of create a polynomial gradient" width="200" height="200" />     </div>    </div>   </div>   <div class="example" id="">    <p><strong>示例 #3 Create a complex gradient from the polynomial (4x^2 - 4x^2 + 1) modulated by a sinusoidal gradient </strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$imagick1 </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$imagick1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #DD0000">'gradient:black-white'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$arguments </span><span style="color: #007700">= array(</span><span style="color: #9876AA">9</span><span style="color: #007700">, -</span><span style="color: #9876AA">90</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$imagick1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">functionImage</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">FUNCTION_SINUSOID</span><span style="color: #007700">, </span><span style="color: #9876AA">$arguments</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$imagick2 </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$imagick2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #DD0000">'gradient:black-white'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$arguments </span><span style="color: #007700">= array(</span><span style="color: #9876AA">0.5</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$imagick2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">functionImage</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">FUNCTION_SINUSOID</span><span style="color: #007700">, </span><span style="color: #9876AA">$arguments</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$imagick1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">compositeimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagick2</span><span style="color: #007700">, </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COMPOSITE_MULTIPLY</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$imagick1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$imagick1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="mediaobject">          <div class="imageobject">      <img src="images/c0d23d2d6769e53e24a1b3136c064577-functionImage_multiplied.png" alt="Output of create complex gradient" width="200" height="200" />     </div>    </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function functionImage($function, array $arguments, $channel = Imagick::CHANNEL_DEFAULT) {}

/**
*<div id="imagick.transformimagecolorspace" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::transformImageColorspace</h1>  <p class="verinfo">(PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::transformImageColorspace</span> &mdash; <span class="dc-title">Transforms an image to a new colorspace</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.transformimagecolorspace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::transformImageColorspace</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$colorspace</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    Transforms an image to a new colorspace.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.transformimagecolorspace-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">colorspace</span></dt>    <dd>     <span>       The colorspace the image should be transformed to, one of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.colorspace" class="link">COLORSPACE constants</a> e.g. Imagick::COLORSPACE_CMYK.     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.transformimagecolorspace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.transformimagecolorspace-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>Imagick::transformImageColorspace()</strong></span> example</strong></p>   <div class="example-contents"><p>   Transforms an image to a new colorspace, and then extracts a single channel so that the individual channel values can be viewed.   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">transformImageColorspace</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$colorSpace</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">transformimagecolorspace</span><span style="color: #007700">(</span><span style="color: #9876AA">$colorSpace</span><span style="color: #007700">);<br />    </span><span style="color: #FF8000">//channel should be one of the channel constants e.g. \Imagick::CHANNEL_BLUE <br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">separateImageChannel</span><span style="color: #007700">(</span><span style="color: #9876AA">$channel</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.transformimagecolorspace-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link Imagick::setColorSpace()} - Set colorspace</span></li>  </ul> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function transformImageColorspace($COLORSPACE) {}

/**
*<div id="imagick.haldclutimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::haldClutImage</h1>  <p class="verinfo">(PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::haldClutImage</span> &mdash; <span class="dc-title">Replaces colors in the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.haldclutimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::haldClutImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$clut</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Replaces colors in the image using a Hald lookup table. Hald images can be created using    HALD color coder.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.haldclutimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">clut</span></dt>     <dd>      <p class="para">       Imagick object containing the Hald lookup image.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a> using bitwise operators. 缺省为<strong><span>Imagick::CHANNEL_DEFAULT</span></strong>. 参考此 <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">通道常数</a>列表      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.haldclutimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.haldclutimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.haldclutimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::haldClutImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">haldClutImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagickPalette </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #DD0000">"images/hald/hald_8.png"</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagickPalette</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">sepiatoneImage</span><span style="color: #007700">(</span><span style="color: #9876AA">55</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">haldClutImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagickPalette</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function haldClutImage(Imagick $clut, $channel = Imagick::CHANNEL_DEFAULT) {}

/**
*<div id="imagick.autolevelimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::autoLevelImage</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::autoLevelImage</span> &mdash; <span class="dc-title">Adjusts the levels of a particular image channel</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.autolevelimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::autoLevelImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Adjusts the levels of a particular image channel by scaling the minimum and maximum values to the full quantum range.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.autolevelimage-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>    <dd>     <span>      Which channel should the auto-levelling should be done on.     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.autolevelimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.autolevelimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::autoLevelImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">autoLevelImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">autoLevelImage</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function autoLevelImage($CHANNEL) {}

/**
*<div id="imagick.blueshiftimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::blueShiftImage</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::blueShiftImage</span> &mdash; <span class="dc-title">Mutes the colors of the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.blueshiftimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::blueShiftImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$factor</span><span class="initializer"> = 1.5</span></span>): <span class="type" style="color:#EAB766">bool</span></div>    <p class="para rdfs-comment">   Mutes the colors of the image to simulate a scene at nighttime in the moonlight.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.blueshiftimage-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">factor</span></dt>    <dd>     <span>           </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.blueshiftimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.blueshiftimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::blueShiftImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">blueShiftImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$blueShift</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">blueShiftImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$blueShift</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool*/
    public function blueShiftImage($factor) {}

/**
*<div id="imagick.getimageartifact" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageArtifact</h1>  <p class="verinfo">(PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageArtifact</span> &mdash; <span class="dc-title">Get image artifact</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageartifact-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageArtifact</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$artifact</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Gets an artifact associated with the image.  The difference between image properties and    image artifacts is that properties are public and artifacts are private.   此方法在Imagick基于ImageMagick 6.5.7以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageartifact-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">artifact</span></dt>     <dd>      <p class="para">       The name of the artifact      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageartifact-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the artifact value on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimageartifact-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.getimageartifact-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::setImageArtifact()} - Set image artifact</span></li>    <li class="member"><span class="function">{@link Imagick::deleteImageArtifact()} - Delete image artifact</span></li>   </ul>  </span> </div></div>
     * @return string the artifact value on success.*/
    public function getImageArtifact($artifact) {}

/**
*<div id="imagick.setimageartifact" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageArtifact</h1>  <p class="verinfo">(PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageArtifact</span> &mdash; <span class="dc-title">Set image artifact</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimageartifact-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageArtifact</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$artifact</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Associates an artifact with the image. The difference between image properties and    image artifacts is that properties are public and artifacts are private.   此方法在Imagick基于ImageMagick 6.5.7以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimageartifact-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">artifact</span></dt>     <dd>      <p class="para">       The name of the artifact      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       The value of the artifact      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimageartifact-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimageartifact-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setimageartifact-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::setImageArtifact()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setImageArtifact</span><span style="color: #007700">() {<br /><br />    </span><span style="color: #9876AA">$src1 </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #DD0000">"./images/artifact/source1.png"</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$src2 </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #DD0000">"./images/artifact/source2.png"</span><span style="color: #007700">));<br /><br />    </span><span style="color: #9876AA">$src2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageVirtualPixelMethod</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">VIRTUALPIXELMETHOD_TRANSPARENT</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$src2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageArtifact</span><span style="color: #007700">(</span><span style="color: #DD0000">'compose:args'</span><span style="color: #007700">, </span><span style="color: #DD0000">"1,0,-0.5,0.5"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$src1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">compositeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$src2</span><span style="color: #007700">, </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COMPOSITE_MATHEMATICS</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    <br />    </span><span style="color: #9876AA">$src1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$src1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImagesBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.setimageartifact-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::getImageArtifact()} - Get image artifact</span></li>    <li class="member"><span class="function">{@link Imagick::deleteImageArtifact()} - Delete image artifact</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageArtifact($artifact, $value) {}

/**
*<div id="imagick.deleteimageartifact" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::deleteImageArtifact</h1>  <p class="verinfo">(PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::deleteImageArtifact</span> &mdash; <span class="dc-title">Delete image artifact</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.deleteimageartifact-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::deleteImageArtifact</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$artifact</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Deletes an artifact associated with the image.  The difference between image properties and    image artifacts is that properties are public and artifacts are private.   此方法在Imagick基于ImageMagick 6.5.7以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.deleteimageartifact-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">artifact</span></dt>     <dd>      <p class="para">       The name of the artifact to delete      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.deleteimageartifact-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.deleteimageartifact-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.deleteimageartifact-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::setImageArtifact()} - Set image artifact</span></li>    <li class="member"><span class="function">{@link Imagick::getImageArtifact()} - Get image artifact</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function deleteImageArtifact($artifact) {}

/**
*<div id="imagick.getcolorspace" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getColorspace</h1>  <p class="verinfo">(PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getColorspace</span> &mdash; <span class="dc-title">Gets the colorspace</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getcolorspace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getColorspace</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the global colorspace value.   此方法在Imagick基于ImageMagick 6.5.7以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getcolorspace-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getcolorspace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an integer which can be compared against <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.colorspace" class="link">COLORSPACE constants</a>.  </p> </div></div>
     * @return int an integer which can be compared against COLORSPACE constants.*/
    public function getColorspace() {}

/**
*<div id="imagick.setcolorspace" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setColorspace</h1>  <p class="verinfo">(PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setColorspace</span> &mdash; <span class="dc-title">Set colorspace</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setcolorspace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setColorspace</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$COLORSPACE</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the global colorspace value for the object.   此方法在Imagick基于ImageMagick 6.5.7以上版本编译时可用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setcolorspace-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">COLORSPACE</span></dt>     <dd>      <p class="para">       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.colorspace" class="link">COLORSPACE constants</a>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setcolorspace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setcolorspace-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setColorspace($COLORSPACE) {}

/**
*<div id="imagick.clampimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::clampImage</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::clampImage</span> &mdash; <span class="dc-title">Restricts the color range from 0 to the quantum depth.</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.clampimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::clampImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Restricts the color range from 0 to the quantum depth.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.clampimage-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>    <dd>     <span>           </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.clampimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div></div>
*/
    public function clampImage($CHANNEL) {}

/**
*<div id="imagick.smushimages" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::smushImages</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::smushImages</span> &mdash; <span class="dc-title">Takes all images from the current image pointer to the end of the image list and smushs them</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.smushimages-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::smushImages</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$stack</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Takes all images from the current image pointer to the end of the image list and smushs   them to each other top-to-bottom if the stack parameter is true, otherwise left-to-right.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.smushimages-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">stack</span></dt>    <dd>     <span>           </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.smushimages-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The new smushed image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.smushimages-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::smushImages()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">smushImages</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$imagePath2</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick2 </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath2</span><span style="color: #007700">));<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagick2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$smushed </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">smushImages</span><span style="color: #007700">(</span><span style="color: #9876AA">false</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$smushed</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'jpg'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$smushed</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return Imagick*/
    public function smushImages($stack, $offset) {}

    /**
     * (PECL imagick 2.0.0)<br/>
     * The Imagick constructor
     * @link https://php.net/manual/en/imagick.construct.php
     * @param mixed $files <p>
     * The path to an image to load or an array of paths. Paths can include
     * wildcards for file names, or can be URLs.
     * </p>
     * @throws ImagickException Throws ImagickException on error.
     */
    public function __construct($files = null) {}

    /**
     * @return string
     */
    public function __toString() {}

/**
*<div id="imagick.count" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::count</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::count</span> &mdash; <span class="dc-title">Get the number of images</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.count-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::count</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$mode</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the number of images.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.count-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">mode</span></dt>    <dd>     <span>      An unused argument. Currently there is a non-particularly well defined feature in PHP where calling count() on a countable object might (or might not) require this method to accept a parameter. This parameter is here to be conformant with the interface of countable, even though the param is not used.     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.count-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the number of images.  </p> </div></div>
*/
    public function count() {}

/**
*<div id="imagick.getpixeliterator" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getPixelIterator</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getPixelIterator</span> &mdash; <span class="dc-title">Returns a MagickPixelIterator</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getpixeliterator-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getPixelIterator</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixeliterator.php" class="type ImagickPixelIterator" style="color:#EAB766">ImagickPixelIterator</a></span></div>  <p class="para rdfs-comment">   Returns a MagickPixelIterator.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getpixeliterator-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getpixeliterator-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an ImagickPixelIterator on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getpixeliterator-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.getpixeliterator-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::getPixelIterator()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">getPixelIterator</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imageIterator </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPixelIterator</span><span style="color: #007700">();<br /><br />    foreach (</span><span style="color: #9876AA">$imageIterator </span><span style="color: #007700">as </span><span style="color: #9876AA">$row </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$pixels</span><span style="color: #007700">) { </span><span style="color: #FF8000">// Loop through pixel rows <br />        </span><span style="color: #007700">foreach (</span><span style="color: #9876AA">$pixels </span><span style="color: #007700">as </span><span style="color: #9876AA">$column </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$pixel</span><span style="color: #007700">) { </span><span style="color: #FF8000">// Loop through the pixels in the row (columns) <br />            //* @var $pixel \ImagickPixel <br />            </span><span style="color: #007700">if (</span><span style="color: #9876AA">$column </span><span style="color: #007700">% </span><span style="color: #9876AA">2</span><span style="color: #007700">) {<br />                </span><span style="color: #9876AA">$pixel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setColor</span><span style="color: #007700">(</span><span style="color: #DD0000">"rgba(0, 0, 0, 0)"</span><span style="color: #007700">); </span><span style="color: #FF8000">// Paint every second pixel black<br />            </span><span style="color: #007700">}<br />        }<br />        </span><span style="color: #9876AA">$imageIterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">syncIterator</span><span style="color: #007700">(); </span><span style="color: #FF8000">// Sync the iterator, this is important to do on each iteration <br />    </span><span style="color: #007700">}<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return ImagickPixelIterator an ImagickPixelIterator on success.*/
    public function getPixelIterator() {}

/**
*<div id="imagick.getpixelregioniterator" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getPixelRegionIterator</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getPixelRegionIterator</span> &mdash; <span class="dc-title">Get an ImagickPixelIterator for an image section</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getpixelregioniterator-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getPixelRegionIterator</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixeliterator.php" class="type ImagickPixelIterator" style="color:#EAB766">ImagickPixelIterator</a></span></div>  <p class="para rdfs-comment">   Get an ImagickPixelIterator for an image section.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getpixelregioniterator-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       The x-coordinate of the region.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       The y-coordinate of the region.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">columns</span></dt>     <dd>      <p class="para">       The width of the region.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">rows</span></dt>     <dd>      <p class="para">       The height of the region.      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getpixelregioniterator-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an ImagickPixelIterator for an image section.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getpixelregioniterator-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.getpixelregioniterator-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>Imagick::getPixelRegionIterator()</strong></span> example</strong></p>    <div class="example-contents"><p>     Iterate over the pixels in the top left of the image, changing them to be black.    </p></div>    <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #DD0000">"./testImage.png"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$areaIterator </span><span style="color: #007700">= </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPixelRegionIterator</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #9876AA">10</span><span style="color: #007700">);<br /><br />foreach (</span><span style="color: #9876AA">$areaIterator </span><span style="color: #007700">as </span><span style="color: #9876AA">$rowIterator</span><span style="color: #007700">) {<br />    foreach (</span><span style="color: #9876AA">$rowIterator </span><span style="color: #007700">as </span><span style="color: #9876AA">$pixel</span><span style="color: #007700">) {<br />        </span><span style="color: #FF8000">// Paint every pixel black<br />        </span><span style="color: #9876AA">$pixel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setColor</span><span style="color: #007700">(</span><span style="color: #DD0000">"rgba(0, 0, 0, 0)"</span><span style="color: #007700">);<br />    }<br />    </span><span style="color: #9876AA">$areaIterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">syncIterator</span><span style="color: #007700">();<br />}<br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writeImage</span><span style="color: #007700">(</span><span style="color: #DD0000">"./output.png"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> </div>
     * @return ImagickPixelIterator an ImagickPixelIterator for an image section.*/
    public function getPixelRegionIterator($x, $y, $columns, $rows) {}

/**
*<div id="imagick.readimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::readImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::readImage</span> &mdash; <span class="dc-title">Reads image from filename</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.readimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::readImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Reads image from filename  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.readimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.readimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function readImage($filename) {}

/**
*<div id="imagick.readimages" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::readimages</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::readimages</span> &mdash; <span class="dc-title">Reads image from an array of filenames</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.readimages-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::readImages</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$filenames</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Reads image from an array of filenames. All the images are held in a single Imagick object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.readimages-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">filenames</span></dt>    <dd>     <span>           </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.readimages-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
*/
    public function readImages($filenames) {}

/**
*<div id="imagick.readimageblob" class="refentry">    <div class="refnamediv">        <h1 class="refname">Imagick::readImageBlob</h1>        <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::readImageBlob</span> &mdash; <span class="dc-title">从二进制字符串里读取图片</span></p>    </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.readimageblob-description">        <h3 class="title">说明</h3>        <div class="methodsynopsis dc-description">            <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::readImageBlob</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$image</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">bool</span></div>        <p class="para rdfs-comment">            从二进制字符串里读取图片        </p>    </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.readimageblob-parameters">        <h3 class="title">参数</h3>        <span>            <dl>                                    <dt><span class="parameter" style="color:#3A95FF">image</span></dt>                    <dd>                        <p class="para">                        </p>                    </dd>                            </dl>        </span>    </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.readimageblob-returnvalues">        <h3 class="title">返回值</h3>        <p class="para">            成功时返回 <strong><span>true</span></strong>。        </p>    </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.readimageblob-errors">        <h3 class="title">错误／异常</h3>        <p class="para">            错误时抛出 ImagickException。        </p>    </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.readimageblob-examples">        <h3 class="title">示例</h3>        <span>            <div class="example" id="">                <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::readImageBlob()</strong></span></strong></p>                <div class="example-contents">                    <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">readImageBlob</span><span style="color: #007700">() {<br />    </span><span style="color: #9876AA">$base64 </span><span style="color: #007700">= </span><span style="color: #DD0000">"iVBORw0KGgoAAAANSUhEUgAAAM0AAAD<br /> NCAMAAAAsYgRbAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5c<br /> cllPAAAABJQTFRF3NSmzMewPxIG//ncJEJsldTou1jHgAAAARBJREFUeNrs2EEK<br /> gCAQBVDLuv+V20dENbMY831wKz4Y/VHb/5RGQ0NDQ0NDQ0NDQ0NDQ0NDQ<br /> 0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0PzMWtyaGhoaGhoaGhoaGhoaGhoxtb0QGho<br /> aGhoaGhoaGhoaGhoaMbRLEvv50VTQ9OTQ5OpyZ01GpM2g0bfmDQaL7S+ofFC6x<br /> v3ZpxJiywakzbvd9r3RWPS9I2+MWk0+kbf0Hih9Y17U0nTHibrDDQ0NDQ0NDQ0<br /> NDQ0NDQ0NTXbRSL/AK72o6GhoaGhoRlL8951vwsNDQ0NDQ1NDc0WyHtDTEhD<br /> Q0NDQ0NTS5MdGhoaGhoaGhoaGhoaGhoaGhoaGhoaGposzSHAAErMwwQ2HwRQ<br /> AAAAAElFTkSuQmCC"</span><span style="color: #007700">;<br /><br />    </span><span style="color: #9876AA">$imageBlob </span><span style="color: #007700">= </span><span style="color: #9876AA">base64_decode</span><span style="color: #007700">(</span><span style="color: #9876AA">$base64</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">readImageBlob</span><span style="color: #007700">(</span><span style="color: #9876AA">$imageBlob</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>                </div>            </div>        </span>    </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function readImageBlob($image, $filename = null) {}

/**
*<div id="imagick.setimageformat" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageFormat</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageFormat</span> &mdash; <span class="dc-title">为图片设置指定的格式</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimageformat-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageFormat</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$format</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   为图片设置指定的格式  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimageformat-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">format</span></dt>     <dd>      <p class="para">       表示图片格式的一个字符串。支持的格式依赖于 ImageMagick 的安装。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimageformat-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageFormat($format) {}

/**
*<div id="imagick.scaleimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::scaleImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::scaleImage</span> &mdash; <span class="dc-title">Scales the size of an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.scaleimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::scaleImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$bestfit</span><span class="initializer"> = <strong><span>false</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$legacy</span><span class="initializer"> = <strong><span>false</span></strong></span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Scales the size of an image to the given dimensions. The other parameter   will be calculated if 0 is passed as either param.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara"> 参数 <span class="parameter" style="color:#3A95FF">bestfit</span> 的特性在 Imagick 3.0.0 中已改变。在此版本以前，当目标尺寸设为 400x400 时，原尺寸为 200x150 的图像将不会被改变。自 Imagick 3.0.0 起，源图像将会被放大到 400x300 因为这将更好的适合目标尺寸。当使用参数 <span class="parameter" style="color:#3A95FF">bestfit</span> 时，必须同时给出宽度和高度。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.scaleimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">columns</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">rows</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">bestfit</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.scaleimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.scaleimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.scaleimage-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>       Added optional fit parameter. This method now supports proportional scaling.       Pass zero as either parameter for proportional scaling.         </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.scaleimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::scaleImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">scaleImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">scaleImage</span><span style="color: #007700">(</span><span style="color: #9876AA">150</span><span style="color: #007700">, </span><span style="color: #9876AA">150</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function scaleImage($columns, $rows, $bestfit = false, $legacy = false) {}

/**
*<div id="imagick.writeimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::writeImage</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::writeImage</span> &mdash; <span class="dc-title">把图片写入指定的文件</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.writeimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::writeImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span><span class="initializer"> = NULL</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   把图片写入指定的文件。如果指定文件参数的值是 NULL ，图片将会写入通过 Imagick::readImage() 或者   Imagick::setImageFilename() 设定的文件。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.writeimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">       图片将被写入的文件名。文件的后缀指定了文件的类型。       可以强制指定图片的格式而不管文件的后缀名。在文件名前面加上一个前缀，例如 “jpg:test.png”。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.writeimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function writeImage($filename = null) {}

/**
*<div id="imagick.writeimages" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::writeImages</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::writeImages</span> &mdash; <span class="dc-title">Writes an image or image sequence</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.writeimages-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::writeImages</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$adjoin</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Writes an image or image sequence.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.writeimages-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">adjoin</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.writeimages-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function writeImages($filename, $adjoin) {}

/**
*<div id="imagick.blurimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::blurImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::blurImage</span> &mdash; <span class="dc-title">Adds blur filter to image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.blurimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::blurImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Adds blur filter to image. Optional third parameter to blur a specific   channel.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.blurimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">radius</span></dt>     <dd>      <p class="para">       Blur radius      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">sigma</span></dt>     <dd>      <p class="para">       Standard deviation      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       The <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">Channeltype</a>       constant. When not supplied, all channels are blurred.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.blurimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.blurimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.blurimage-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::blurImage()</strong></span>:</strong></p>    <div class="example-contents"><p>     Blur an image, then display to the browser.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-type: image/jpeg'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">'test.jpg'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">blurImage</span><span style="color: #007700">(</span><span style="color: #9876AA">5</span><span style="color: #007700">,</span><span style="color: #9876AA">3</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.blurimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::adaptiveBlurImage()} - Adds adaptive blur filter to image</span></li>    <li class="member"><span class="function">{@link Imagick::motionBlurImage()} - Simulates motion blur</span></li>    <li class="member"><span class="function">{@link Imagick::radialBlurImage()} - Radial blurs an image</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function blurImage($radius, $sigma, $channel = null) {}

/**
*<div id="imagick.thumbnailimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::thumbnailImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::thumbnailImage</span> &mdash; <span class="dc-title">Changes the size of an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.thumbnailimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::thumbnailImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$bestfit</span><span class="initializer"> = <strong><span>false</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$fill</span><span class="initializer"> = <strong><span>false</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$legacy</span><span class="initializer"> = <strong><span>false</span></strong></span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Changes the size of an image to the given dimensions and removes any   associated profiles. The goal is to produce small, low cost thumbnail   images suited for display on the Web.    If <strong><span>true</span></strong> is given as a third parameter then columns and rows parameters   are used as maximums for each side. Both sides will be scaled down until   they match or are smaller than the parameter given for the side.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara"> 参数 <span class="parameter" style="color:#3A95FF">bestfit</span> 的特性在 Imagick 3.0.0 中已改变。在此版本以前，当目标尺寸设为 400x400 时，原尺寸为 200x150 的图像将不会被改变。自 Imagick 3.0.0 起，源图像将会被放大到 400x300 因为这将更好的适合目标尺寸。当使用参数 <span class="parameter" style="color:#3A95FF">bestfit</span> 时，必须同时给出宽度和高度。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.thumbnailimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">columns</span></dt>     <dd>      <p class="para">      Image width      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">rows</span></dt>     <dd>      <p class="para">      Image height      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">bestfit</span></dt>     <dd>      <p class="para">      Whether to force maximum values      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.thumbnailimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.thumbnailimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.thumbnailimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::thumbnailImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">thumbnailImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setbackgroundcolor</span><span style="color: #007700">(</span><span style="color: #DD0000">'rgb(64, 64, 64)'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">thumbnailImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function thumbnailImage($columns, $rows, $bestfit = false, $fill = false, $legacy = false) {}

/**
*<div id="imagick.cropthumbnailimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::cropThumbnailImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::cropThumbnailImage</span> &mdash; <span class="dc-title">创建缩略图</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.cropthumbnailimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::cropThumbnailImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$legacy</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">  首先将图片放大或者缩小，然后从图片的中间裁剪到指定的的大小。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.cropthumbnailimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">       缩略图的宽      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">height</span></dt>     <dd>      <p class="para">       缩略图的高      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.cropthumbnailimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.cropthumbnailimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool TRUE on succes*/
    public function cropThumbnailImage($width, $height, $legacy = false) {}

/**
*<div id="imagick.getimagefilename" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageFilename</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageFilename</span> &mdash; <span class="dc-title">Returns the filename of a particular image in a sequence</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagefilename-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageFilename</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Returns the filename of a particular image in a sequence.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagefilename-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagefilename-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a string with the filename of the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagefilename-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return string a string with the filename of the image.*/
    public function getImageFilename() {}

/**
*<div id="imagick.setimagefilename" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageFilename</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageFilename</span> &mdash; <span class="dc-title">Sets the filename of a particular image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagefilename-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageFilename</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the filename of a particular image in a sequence.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagefilename-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagefilename-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagefilename-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageFilename($filename) {}

/**
*<div id="imagick.getimageformat" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageFormat</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageFormat</span> &mdash; <span class="dc-title">Returns the format of a particular image in a sequence</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageformat-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageFormat</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Returns the format of a particular image in a sequence.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageformat-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageformat-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a string containing the image format on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimageformat-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return string a string containing the image format on success.*/
    public function getImageFormat() {}

/**
*<div id="imagick.getimagemimetype" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageMimeType</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageMimeType</span> &mdash; <span class="dc-title">Returns the image mime-type</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagemimetype-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageMimeType</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Returns the image mime-type.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagemimetype-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagemimetype-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
     * @return string Returns the image mime-type.*/
    public function getImageMimeType() {}

/**
*<div id="imagick.removeimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::removeImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::removeImage</span> &mdash; <span class="dc-title">Removes an image from the image list</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.removeimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::removeImage</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Removes an image from the image list.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.removeimage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.removeimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.removeimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function removeImage() {}

/**
*<div id="imagick.destroy" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::destroy</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::destroy</span> &mdash; <span class="dc-title">Destroys the Imagick object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.destroy-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::destroy</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Destroys the Imagick object and frees all resources associated with it.    This method is deprecated in favour of {@link Imagick::clear}.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.destroy-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.destroy-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function destroy() {}

/**
*<div id="imagick.clear" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::clear</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::clear</span> &mdash; <span class="dc-title">Clears all resources associated to Imagick object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.clear-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::clear</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Clears all resources associated to Imagick object  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.clear-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.clear-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function clear() {}

/**
*<div id="imagick.getimagesize" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageSize</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageSize</span> &mdash; <span class="dc-title">Returns the image length in bytes</span></p> </div> <div id="imagick.getimagesize-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagesize-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageSize</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the image length in bytes.   Deprecated in favour of {@link Imagick::getImageLength()}  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagesize-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagesize-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an int containing the current image size.  </p> </div></div>
     * @return int an int containing the current image size.*/
    public function getImageSize() {}

/**
*<div id="imagick.getimageblob" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageBlob</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageBlob</span> &mdash; <span class="dc-title">Returns the image sequence as a blob</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageblob-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageBlob</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Implements direct to memory image formats.  It returns the image   sequence as a string.  The format of the image determines the   format of the returned blob (GIF, JPEG, PNG, etc.). To return a   different image format, use Imagick::setImageFormat().  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageblob-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageblob-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a string containing the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimageblob-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return string a string containing the image.*/
    public function getImageBlob() {}

/**
*<div id="imagick.getimagesblob" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImagesBlob</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImagesBlob</span> &mdash; <span class="dc-title">Returns all image sequences as a blob</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagesblob-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImagesBlob</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Implements direct to memory image formats.  It returns all image   sequences as a string.  The format of the image determines the   format of the returned blob (GIF, JPEG, PNG, etc.). To return a   different image format, use Imagick::setImageFormat().  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagesblob-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagesblob-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a string containing the images. On failure, throws   ImagickException.  </p> </div></div>
     * @return string a string containing the images. On failure, throws ImagickException on failure*/
    public function getImagesBlob() {}

/**
*<div id="imagick.setfirstiterator" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setFirstIterator</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setFirstIterator</span> &mdash; <span class="dc-title">Sets the Imagick iterator to the first image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setfirstiterator-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setFirstIterator</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the Imagick iterator to the first image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setfirstiterator-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setfirstiterator-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setFirstIterator() {}

/**
*<div id="imagick.setlastiterator" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setLastIterator</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.0.1, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setLastIterator</span> &mdash; <span class="dc-title">Sets the Imagick iterator to the last image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setlastiterator-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setLastIterator</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the Imagick iterator to the last image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setlastiterator-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setlastiterator-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setLastIterator() {}

    public function resetIterator() {}

/**
*<div id="imagick.previousimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::previousImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::previousImage</span> &mdash; <span class="dc-title">Move to the previous image in the object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.previousimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::previousImage</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Associates the previous image in an image list with the Imagick object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.previousimage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.previousimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function previousImage() {}

/**
*<div id="imagick.nextimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::nextImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::nextImage</span> &mdash; <span class="dc-title">Moves to the next image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.nextimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::nextImage</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Associates the next image in the image list with an Imagick object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.nextimage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.nextimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function nextImage() {}

/**
*<div id="imagick.haspreviousimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::hasPreviousImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::hasPreviousImage</span> &mdash; <span class="dc-title">Checks if the object has a previous image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.haspreviousimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::hasPreviousImage</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Returns <strong><span>true</span></strong> if the object has more images when traversing the list in the reverse direction  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.haspreviousimage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.haspreviousimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> if the object has more images when traversing the list in the   reverse direction, returns <strong><span>false</span></strong> if there are none.  </p> </div></div>
     * @return bool <b>TRUE</b> if the object has more images when traversing the list in the*/
    public function hasPreviousImage() {}

/**
*<div id="imagick.hasnextimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::hasNextImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::hasNextImage</span> &mdash; <span class="dc-title">Checks if the object has more images</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.hasnextimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::hasNextImage</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Returns <strong><span>true</span></strong> if the object has more images when traversing the list in the forward direction.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.hasnextimage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.hasnextimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> if the object has more images when traversing the list in the   forward direction, returns <strong><span>false</span></strong> if there are none.  </p> </div></div>
     * @return bool <b>TRUE</b> if the object has more images when traversing the list in the*/
    public function hasNextImage() {}

/**
*<div id="imagick.setimageindex" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageIndex</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageIndex</span> &mdash; <span class="dc-title">Set the iterator position</span></p> </div> <div id="imagick.setimageindex-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimageindex-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageIndex</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$index</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Set the iterator to the position in the image list specified with the index   parameter.   </p>  <p class="para">   This method has been deprecated. See   <span class="function">{@link Imagick::setIteratorIndex()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimageindex-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">index</span></dt>     <dd>      <p class="para">      The position to set the iterator to      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimageindex-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimageindex-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageIndex($index) {}

/**
*<div id="imagick.getimageindex" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageIndex</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageIndex</span> &mdash; <span class="dc-title">Gets the index of the current active image</span></p> </div> <div id="imagick.getimageindex-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageindex-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageIndex</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the index of the current active image within the Imagick object.   This method has been deprecated. See   <span class="function">{@link Imagick::getIteratorIndex()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageindex-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageindex-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an integer containing the index of the image in the stack.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimageindex-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int an integer containing the index of the image in the stack.*/
    public function getImageIndex() {}

/**
*<div id="imagick.commentimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::commentImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::commentImage</span> &mdash; <span class="dc-title">Adds a comment to your image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.commentimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::commentImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$comment</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Adds a comment to your image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.commentimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">comment</span></dt>     <dd>      <p class="para">       The comment to add      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.commentimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.commentimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.commentimage-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::commentImage()</strong></span>:</strong></p>    <div class="example-contents"><p>     Commenting an image and retrieving the comment:    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// Create new Imagick object <br /></span><span style="color: #9876AA">$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">imagick</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">// Create an empty image <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, new </span><span style="color: #9876AA">ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">"red"</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">// Add comment to the image <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">commentImage</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hello World!"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Display the comment <br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageProperty</span><span style="color: #007700">(</span><span style="color: #DD0000">"comment"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function commentImage($comment) {}

/**
*<div id="imagick.cropimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::cropImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::cropImage</span> &mdash; <span class="dc-title">截图图片的一块区域</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.cropimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::cropImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   截图图片的一块区域  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.cropimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">       截图的宽度      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">height</span></dt>     <dd>      <p class="para">       截图的高度      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       裁剪区域左上角的 X 轴坐标（以原图的左上角为原点）      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       裁剪区域左上角的 X 轴坐标（以原图的左上角为原点）      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.cropimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.cropimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.cropimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::cropImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">cropImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$startX</span><span style="color: #007700">, </span><span style="color: #9876AA">$startY</span><span style="color: #007700">, </span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">cropImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">, </span><span style="color: #9876AA">$startX</span><span style="color: #007700">, </span><span style="color: #9876AA">$startY</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function cropImage($width, $height, $x, $y) {}

/**
*<div id="imagick.labelimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::labelImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::labelImage</span> &mdash; <span class="dc-title">Adds a label to an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.labelimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::labelImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$label</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Adds a label to an image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.labelimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">label</span></dt>     <dd>      <p class="para">      The label to add      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.labelimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function labelImage($label) {}

/**
*<div id="imagick.getimagegeometry" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageGeometry</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageGeometry</span> &mdash; <span class="dc-title">Gets the width and height as an associative array</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagegeometry-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageGeometry</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns the width and height as an associative array.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagegeometry-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagegeometry-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an array with the width/height of the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagegeometry-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.getimagegeometry-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::getImageGeometry()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #DD0000">"black"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageGeometry</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>      <div class="example-contents"><p>以上示例会输出：</p></div>      <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [width] =&gt; 100<br>    [height] =&gt; 200<br>)<br></span></div>      </div>    </div>  </span> </div></div>
     * @return int[] an array with the width/height of the image.*/
    public function getImageGeometry() {}

/**
*<div id="imagick.drawimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::drawImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::drawImage</span> &mdash; <span class="dc-title">把 ImagickDraw 对象渲染到当前图片上</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.drawimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::drawImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="type ImagickDraw" style="color:#EAB766">ImagickDraw</a></span> <span class="parameter" style="color:#3A95FF">$draw</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">      把 ImagickDraw 对象渲染到当前图片上。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.drawimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">draw</span></dt>     <dd>      <p class="para">      被渲染到图片上的 ImagickDraw 对象（在经过各种绘画操作之后的 ImagickDraw 对象）      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.drawimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function drawImage(ImagickDraw $draw) {}

/**
*<div id="imagick.setimagecompressionquality" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageCompressionQuality</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageCompressionQuality</span> &mdash; <span class="dc-title">设置图片压缩的质量</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagecompressionquality-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageCompressionQuality</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$quality</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    设置图片压缩的质量  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagecompressionquality-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">quality</span></dt>     <dd>      <p class="para">       配置压缩质量的整数      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagecompressionquality-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagecompressionquality-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setimagecompressionquality-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::setImageCompressionQuality()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setImageCompressionQuality</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$quality</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageCompressionQuality</span><span style="color: #007700">(</span><span style="color: #9876AA">$quality</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageCompressionQuality($quality) {}

/**
*<div id="imagick.getimagecompressionquality" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageCompressionQuality</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.2.2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageCompressionQuality</span> &mdash; <span class="dc-title">Gets the current image&#039;s compression quality</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagecompressionquality-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageCompressionQuality</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the current image&#039;s compression quality  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagecompressionquality-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagecompressionquality-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns integer describing the images compression quality  </p> </div></div>
     * @return int integer describing the images compression quality*/
    public function getImageCompressionQuality() {}

/**
*<div id="imagick.annotateimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::annotateImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::annotateImage</span> &mdash; <span class="dc-title">Annotates an image with text</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.annotateimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::annotateImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="type ImagickDraw" style="color:#EAB766">ImagickDraw</a></span> <span class="parameter" style="color:#3A95FF">$draw_settings</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$angle</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$text</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Annotates an image with text.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.annotateimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">draw_settings</span></dt>     <dd>      <p class="para">       The ImagickDraw object that contains settings for drawing the text      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       Horizontal offset in pixels to the left of text      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       Vertical offset in pixels to the baseline of text      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">angle</span></dt>     <dd>      <p class="para">       The angle at which to write the text      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">text</span></dt>     <dd>      <p class="para">       The string to draw      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.annotateimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.annotateimage-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::annotateImage()</strong></span>:</strong></p>    <div class="example-contents"><p>     Annotate text on an empty image    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Create some objects <br /></span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">ImagickDraw</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$pixel </span><span style="color: #007700">= new </span><span style="color: #9876AA">ImagickPixel</span><span style="color: #007700">( </span><span style="color: #DD0000">'gray' </span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// New image <br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">800</span><span style="color: #007700">, </span><span style="color: #9876AA">75</span><span style="color: #007700">, </span><span style="color: #9876AA">$pixel</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Black text <br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'black'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Font properties <br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFont</span><span style="color: #007700">(</span><span style="color: #DD0000">'Bookman-DemiItalic'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">( </span><span style="color: #9876AA">30 </span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Create text <br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotateImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">, </span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #9876AA">45</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #DD0000">'The quick brown fox jumps over the lazy dog'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Give image a format <br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Output the image with headers <br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-type: image/png'</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.annotateimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link ImagickDraw::annotation()} - Draws text on the image</span></li>    <li class="member"><span class="function">{@link ImagickDraw::setFont()} - Sets the fully-specified font to use when annotating with text</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function annotateImage(ImagickDraw $draw_settings, $x, $y, $angle, $text) {}

/**
*<div id="imagick.compositeimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::compositeImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::compositeImage</span> &mdash; <span class="dc-title">把一张图合并到一张图</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.compositeimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::compositeImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$composite_object</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$composite</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   以指定的偏移量（offset）将一幅图像合成到另一幅图像上。组合算法所需的任何额外参数都应传递给 setImageArtifact，其中“compose:args”作为第一个参数，数据作为第二个参数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.compositeimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">composite_object</span></dt>     <dd>      <p class="para">       用于合并的图片的Imagick对象      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">composite</span></dt>     <dd>      <p class="para">       合并操作，定义操作常量。 具体请查看 <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.compositeop" class="link">合并操作常量列表</a>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       相对图像顶点左上位置（0,0）的横坐标      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       相对图像顶点左上位置（0,0）的纵坐标      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       通过传入一个通道常量，来开启通道模式。为了支持多个通道，可以通过二进制运算的操作来合并多个通道常量。（Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channeltype constants using bitwise operators）可以参考这个列表 <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">通道常量列表</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.compositeimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.compositeimage-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 使用 <span class="function"><strong style="color:#CC7832">Imagick::compositeImage()</strong></span>:</strong></p>    <div class="example-contents"><p>     使用“mathematics”组合方法合成两个图像    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// 等同于运行命令<br />// convert src1.png src2.png -compose mathematics -define compose:args="1,0,-0.5,0.5" -composite output.png<br /><br /></span><span style="color: #9876AA">$src1 </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">"./src1.png"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$src2 </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">"./src2.png"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$src1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageVirtualPixelMethod</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">VIRTUALPIXELMETHOD_TRANSPARENT</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$src1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageArtifact</span><span style="color: #007700">(</span><span style="color: #DD0000">'compose:args'</span><span style="color: #007700">, </span><span style="color: #DD0000">"1,0,-0.5,0.5"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$src1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">compositeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$src2</span><span style="color: #007700">, </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COMPOSITE_MATHEMATICS</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$src1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writeImage</span><span style="color: #007700">(</span><span style="color: #DD0000">"./output.png"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.compositeimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::setImageArtifact()} - Set image artifact</span></li>   </ul>  </span> </div> </div>
     * @return bool <b>TRUE</b> on success.*/
    public function compositeImage(Imagick $composite_object, $composite, $x, $y, $channel = Imagick::CHANNEL_ALL) {}

/**
*<div id="imagick.modulateimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::modulateImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::modulateImage</span> &mdash; <span class="dc-title">Control the brightness, saturation, and hue</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.modulateimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::modulateImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$brightness</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$saturation</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$hue</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Lets you control the brightness, saturation, and hue of an image.  Hue   is the percentage of absolute rotation from the current position.  For   example 50 results in a counter-clockwise rotation of 90 degrees, 150   results in a clockwise rotation of 90 degrees, with 0 and 200 both   resulting in a rotation of 180 degrees.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.modulateimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">brightness</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">saturation</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">hue</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.modulateimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.modulateimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::modulateImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">modulateImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$hue</span><span style="color: #007700">, </span><span style="color: #9876AA">$brightness</span><span style="color: #007700">, </span><span style="color: #9876AA">$saturation</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">modulateImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$brightness</span><span style="color: #007700">, </span><span style="color: #9876AA">$saturation</span><span style="color: #007700">, </span><span style="color: #9876AA">$hue</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function modulateImage($brightness, $saturation, $hue) {}

/**
*<div id="imagick.getimagecolors" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageColors</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageColors</span> &mdash; <span class="dc-title">Gets the number of unique colors in the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagecolors-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageColors</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the number of unique colors in the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagecolors-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagecolors-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an <span class="type" style="color:#EAB766">int</span>, the number of unique colors in the image.  </p> </div></div>
     * @return int <b>TRUE</b> on success.*/
    public function getImageColors() {}

/**
*<div id="imagick.montageimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::montageImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::montageImage</span> &mdash; <span class="dc-title">Creates a composite image</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.montageimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::montageImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="type ImagickDraw" style="color:#EAB766">ImagickDraw</a></span> <span class="parameter" style="color:#3A95FF">$draw</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$tile_geometry</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$thumbnail_geometry</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$mode</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$frame</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Creates a composite image by combining several separate images.   The images are tiled on the composite image with the name of the   image optionally appearing just below the individual tile.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.montageimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">draw</span></dt>     <dd>      <p class="para">       The font name, size, and color are obtained from this object.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">tile_geometry</span></dt>     <dd>      <p class="para">       The number of tiles per row and page (e.g. 6x4+0+0).      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">thumbnail_geometry</span></dt>     <dd>      <p class="para">       Preferred image size and border size of each thumbnail       (e.g. 120x120+4+3).      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">mode</span></dt>     <dd>      <p class="para">       Thumbnail framing mode, see <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.montagemode" class="link">Montage Mode constants</a>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">frame</span></dt>     <dd>      <p class="para">       Surround the image with an ornamental border (e.g. 15x15+3+3). The       frame color is that of the thumbnail&#039;s matte color.      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.montageimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Creates a composite image and returns it as a new <span class="classname"><a href="https://www.php.net/manual/zh/class.imagick.php" class="classname">Imagick</a></span> object.  </p> </div> </div>
     * @return Imagick <b>TRUE</b> on success.*/
    public function montageImage(ImagickDraw $draw, $tile_geometry, $thumbnail_geometry, $mode, $frame) {}

/**
*<div id="imagick.identifyimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::identifyImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::identifyImage</span> &mdash; <span class="dc-title">Identifies an image and fetches attributes</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.identifyimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::identifyImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$appendRawOutput</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Identifies an image and returns the attributes.  Attributes include   the image width, height, size, and others.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.identifyimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">appendRawOutput</span></dt>     <dd>      <p class="para">         If <strong><span>true</span></strong> then the raw output is appended to the array.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.identifyimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Identifies an image and returns the attributes.  Attributes include   the image width, height, size, and others.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.identifyimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.identifyimage-examples">  <span>   <div class="example" id="">   <p><strong>示例 #1 Example Result Format</strong></p>   <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="examplescode"><span>Array<br>(<br>    [imageName] =&gt; /some/path/image.jpg<br>    [format] =&gt; JPEG (Joint Photographic Experts Group JFIF format)<br>    [geometry] =&gt; Array<br>        (<br>            [width] =&gt; 90<br>            [height] =&gt; 90<br>        )<br><br>    [type] =&gt; TrueColor<br>    [colorSpace] =&gt; RGB<br>    [resolution] =&gt; Array<br>        (<br>            [x] =&gt; 300<br>            [y] =&gt; 300<br>        )<br><br>    [units] =&gt; PixelsPerInch<br>    [fileSize] =&gt; 1.88672kb<br>    [compression] =&gt; JPEG<br>    [signature] =&gt; 9a6dc8f604f97d0d691c0286176ddf992e188f0bebba98494b2146ee2d7118da<br>)</span></div>   </div>   </div>   </span> </div></div>
     * @return array Identifies an image and returns the attributes. Attributes include*/
    public function identifyImage($appendRawOutput = false) {}

/**
*<div id="imagick.thresholdimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::thresholdImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::thresholdImage</span> &mdash; <span class="dc-title">Changes the value of individual pixels based on a threshold</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.thresholdimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::thresholdImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$threshold</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Changes the value of individual pixels based on the intensity of each pixel   compared to threshold.  The result is a high-contrast, two color image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.thresholdimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">threshold</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.thresholdimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.thresholdimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::thresholdImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">thresholdimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$threshold</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">thresholdimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$threshold </span><span style="color: #007700">* </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">getQuantum</span><span style="color: #007700">(), </span><span style="color: #9876AA">$channel</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function thresholdImage($threshold, $channel = Imagick::CHANNEL_ALL) {}

/**
*<div id="imagick.adaptivethresholdimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::adaptiveThresholdImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::adaptiveThresholdImage</span> &mdash; <span class="dc-title">Selects a threshold for each pixel based on a range of intensity</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.adaptivethresholdimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::adaptiveThresholdImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Selects an individual threshold for each pixel based on the   range of intensity values in its local neighborhood.  This   allows for thresholding of an image whose global intensity   histogram doesn&#039;t contain distinctive peaks.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.adaptivethresholdimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">       Width of the local neighborhood.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">height</span></dt>     <dd>      <p class="para">       Height of the local neighborhood.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       The mean offset      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.adaptivethresholdimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.adaptivethresholdimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::adaptiveThresholdImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">adaptiveThresholdImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">, </span><span style="color: #9876AA">$adaptiveOffset</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$adaptiveOffsetQuantum </span><span style="color: #007700">= </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">$adaptiveOffset </span><span style="color: #007700">* </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">getQuantum</span><span style="color: #007700">());<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">adaptiveThresholdImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">, </span><span style="color: #9876AA">$adaptiveOffsetQuantum</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function adaptiveThresholdImage($width, $height, $offset) {}

/**
*<div id="imagick.blackthresholdimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::blackThresholdImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::blackThresholdImage</span> &mdash; <span class="dc-title">Forces all pixels below the threshold into black</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.blackthresholdimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::blackThresholdImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$threshold</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Is like Imagick::thresholdImage() but forces all pixels below the threshold   into black while leaving all pixels above the threshold unchanged.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.blackthresholdimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">threshold</span></dt>     <dd>      <p class="para">       The threshold below which everything turns black      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.blackthresholdimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.blackthresholdimage-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>        Now allows a string representing the color as a parameter.        Previous versions allow only an ImagickPixel object.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.blackthresholdimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::blackThresholdImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">blackThresholdImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$thresholdColor</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">blackthresholdimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$thresholdColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function blackThresholdImage($threshold) {}

/**
*<div id="imagick.whitethresholdimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::whiteThresholdImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::whiteThresholdImage</span> &mdash; <span class="dc-title">Force all pixels above the threshold into white</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.whitethresholdimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::whiteThresholdImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$threshold</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Is like Imagick::ThresholdImage() but force all pixels above the threshold   into white while leaving all pixels below the threshold unchanged.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.whitethresholdimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">threshold</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.whitethresholdimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.whitethresholdimage-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>        Now allows a string representing the color as a parameter.        Previous versions allow only an ImagickPixel object.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.whitethresholdimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::whiteThresholdImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">whiteThresholdImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$color</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">whiteThresholdImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$color</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function whiteThresholdImage($threshold) {}

/**
*<div id="imagick.appendimages" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::appendImages</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::appendImages</span> &mdash; <span class="dc-title">Append a set of images</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.appendimages-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::appendImages</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$stack</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Append a set of images into one larger image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.appendimages-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stack</span></dt>     <dd>      <p class="para">       Whether to stack the images vertically.       By default (or if <strong><span>false</span></strong> is specified) images are stacked left-to-right.       If <span class="parameter" style="color:#3A95FF">stack</span> is <strong><span>true</span></strong>, images are stacked top-to-bottom.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.appendimages-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns Imagick instance on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.appendimages-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.appendimages-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>Imagick::appendImages()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// Create new imagick object <br /></span><span style="color: #9876AA">$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">// create red, green and blue images <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #DD0000">"red"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #DD0000">"green"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #DD0000">"blue"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Append the images into one <br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">resetIterator</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$combined </span><span style="color: #007700">= </span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">appendImages</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Output the image <br /></span><span style="color: #9876AA">$combined</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$combined</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="mediaobject">          <div class="imageobject">      <img src="images/c0d23d2d6769e53e24a1b3136c064577-floodfillpaint_intermediate.png" alt="Output of example : Imagick::appendImages()" width="100" height="150" />     </div>    </div>   </div>  </span> </div></div>
     * @return Imagick Imagick instance on success.*/
    public function appendImages($stack = false) {}

/**
*<div id="imagick.charcoalimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::charcoalImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::charcoalImage</span> &mdash; <span class="dc-title">Simulates a charcoal drawing</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.charcoalimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::charcoalImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Simulates a charcoal drawing.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.charcoalimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">radius</span></dt>     <dd>      <p class="para">       The radius of the Gaussian, in pixels, not counting the center pixel      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">sigma</span></dt>     <dd>      <p class="para">       The standard deviation of the Gaussian, in pixels      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.charcoalimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.charcoalimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::charcoalImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">charcoalImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">$sigma</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">charcoalImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">$sigma</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function charcoalImage($radius, $sigma) {}

/**
*<div id="imagick.normalizeimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::normalizeImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::normalizeImage</span> &mdash; <span class="dc-title">Enhances the contrast of a color image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.normalizeimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::normalizeImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Enhances the contrast of a color image by adjusting the pixels   color to span the entire range of colors available.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.normalizeimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To       apply to more than one channel, combine channeltype constants using       bitwise operators. Refer to this       list of <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.normalizeimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.normalizeimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::normalizeImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">normalizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$original </span><span style="color: #007700">= clone </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$original</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">cropimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$original</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">() / </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">$original</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">(), </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">normalizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$channel</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">compositeimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$original</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COMPOSITE_ATOP</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function normalizeImage($channel = Imagick::CHANNEL_ALL) {}

/**
*<div id="imagick.oilpaintimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::oilPaintImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::oilPaintImage</span> &mdash; <span class="dc-title">Simulates an oil painting</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.oilpaintimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::oilPaintImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Applies a special effect filter that simulates an oil painting.   Each pixel is replaced by the most frequent color occurring in   a circular region defined by radius.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.oilpaintimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">radius</span></dt>     <dd>      <p class="para">      The radius of the circular neighborhood.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.oilpaintimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.oilpaintimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::oilPaintImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">oilPaintImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$radius</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">oilPaintImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$radius</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function oilPaintImage($radius) {}

/**
*<div id="imagick.posterizeimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::posterizeImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::posterizeImage</span> &mdash; <span class="dc-title">Reduces the image to a limited number of color level</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.posterizeimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::posterizeImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$levels</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$dither</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Reduces the image to a limited number of color level.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.posterizeimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">levels</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">dither</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.posterizeimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.posterizeimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::posterizeImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">posterizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$posterizeType</span><span style="color: #007700">, </span><span style="color: #9876AA">$numberLevels</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">posterizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$numberLevels</span><span style="color: #007700">, </span><span style="color: #9876AA">$posterizeType</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">posterizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">DITHERMETHOD_RIEMERSMA</span><span style="color: #007700">, </span><span style="color: #9876AA">8</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function posterizeImage($levels, $dither) {}

/**
*<div id="imagick.radialblurimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::radialBlurImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::radialBlurImage</span> &mdash; <span class="dc-title">Radial blurs an image</span></p> </div> <div id="imagick.radialblurimage-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.radialblurimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::radialBlurImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$angle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Radial blurs an image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.radialblurimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">angle</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.radialblurimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.radialblurimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::radialBlurImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">radialBlurImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #FF8000">//Blur 3 times with different radii<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">radialBlurImage</span><span style="color: #007700">(</span><span style="color: #9876AA">3</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">radialBlurImage</span><span style="color: #007700">(</span><span style="color: #9876AA">5</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">radialBlurImage</span><span style="color: #007700">(</span><span style="color: #9876AA">7</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function radialBlurImage($angle, $channel = Imagick::CHANNEL_ALL) {}

/**
*<div id="imagick.raiseimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::raiseImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::raiseImage</span> &mdash; <span class="dc-title">Creates a simulated 3d button-like effect</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.raiseimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::raiseImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$raise</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Creates a simulated three-dimensional button-like effect   by lightening and darkening the edges of the image.   Members width and height of raise_info define the width   of the vertical and horizontal edge of the effect.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.raiseimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">height</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">raise</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.raiseimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.raiseimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::raiseImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">raiseImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">, </span><span style="color: #9876AA">$x</span><span style="color: #007700">, </span><span style="color: #9876AA">$y</span><span style="color: #007700">, </span><span style="color: #9876AA">$raise</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br /><br />    </span><span style="color: #FF8000">//x and y do nothing?<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">raiseImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">, </span><span style="color: #9876AA">$x</span><span style="color: #007700">, </span><span style="color: #9876AA">$y</span><span style="color: #007700">, </span><span style="color: #9876AA">$raise</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function raiseImage($width, $height, $x, $y, $raise) {}

/**
*<div id="imagick.resampleimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::resampleImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::resampleImage</span> &mdash; <span class="dc-title">Resample image to desired resolution</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.resampleimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::resampleImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x_resolution</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y_resolution</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$filter</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$blur</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Resample image to desired resolution.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.resampleimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x_resolution</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y_resolution</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">filter</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">blur</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.resampleimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.resampleimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::resampleImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">resampleImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">resampleImage</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">FILTER_LANCZOS</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function resampleImage($x_resolution, $y_resolution, $filter, $blur) {}

/**
*<div id="imagick.resizeimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::resizeImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::resizeImage</span> &mdash; <span class="dc-title">Scales an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.resizeimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::resizeImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$filter</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$blur</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$bestfit</span><span class="initializer"> = <strong><span>false</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$legacy</span><span class="initializer"> = <strong><span>false</span></strong></span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Scales an image to the desired dimensions with a   <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.filters" class="link">filter</a>.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <span class="simpara"> 参数 <span class="parameter" style="color:#3A95FF">bestfit</span> 的特性在 Imagick 3.0.0 中已改变。在此版本以前，当目标尺寸设为 400x400 时，原尺寸为 200x150 的图像将不会被改变。自 Imagick 3.0.0 起，源图像将会被放大到 400x300 因为这将更好的适合目标尺寸。当使用参数 <span class="parameter" style="color:#3A95FF">bestfit</span> 时，必须同时给出宽度和高度。</span></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.resizeimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">columns</span></dt>     <dd>      <p class="para">       Width of the image      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">rows</span></dt>     <dd>      <p class="para">       Height of the image      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">filter</span></dt>     <dd>      <p class="para">       Refer to the list of <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.filters" class="link">filter constants</a>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">blur</span></dt>     <dd>      <p class="para">       The blur factor where &gt; 1 is blurry, &lt; 1 is sharp.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">bestfit</span></dt>     <dd>      <p class="para">       Optional fit parameter.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.resizeimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.resizeimage-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>       Added optional fit parameter. This method now supports proportional scaling.       Pass zero as either parameter for proportional scaling.         </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.resizeimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::resizeImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">resizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">, </span><span style="color: #9876AA">$filterType</span><span style="color: #007700">, </span><span style="color: #9876AA">$blur</span><span style="color: #007700">, </span><span style="color: #9876AA">$bestFit</span><span style="color: #007700">, </span><span style="color: #9876AA">$cropZoom</span><span style="color: #007700">) {<br />    </span><span style="color: #FF8000">//The blur factor where &gt; 1 is blurry, &lt; 1 is sharp.<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">resizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">, </span><span style="color: #9876AA">$filterType</span><span style="color: #007700">, </span><span style="color: #9876AA">$blur</span><span style="color: #007700">, </span><span style="color: #9876AA">$bestFit</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$cropWidth </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$cropHeight </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">();<br /><br />    if (</span><span style="color: #9876AA">$cropZoom</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$newWidth </span><span style="color: #007700">= </span><span style="color: #9876AA">$cropWidth </span><span style="color: #007700">/ </span><span style="color: #9876AA">2</span><span style="color: #007700">;<br />        </span><span style="color: #9876AA">$newHeight </span><span style="color: #007700">= </span><span style="color: #9876AA">$cropHeight </span><span style="color: #007700">/ </span><span style="color: #9876AA">2</span><span style="color: #007700">;<br /><br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">cropimage</span><span style="color: #007700">(<br />            </span><span style="color: #9876AA">$newWidth</span><span style="color: #007700">,<br />            </span><span style="color: #9876AA">$newHeight</span><span style="color: #007700">,<br />            (</span><span style="color: #9876AA">$cropWidth </span><span style="color: #007700">- </span><span style="color: #9876AA">$newWidth</span><span style="color: #007700">) / </span><span style="color: #9876AA">2</span><span style="color: #007700">,<br />            (</span><span style="color: #9876AA">$cropHeight </span><span style="color: #007700">- </span><span style="color: #9876AA">$newHeight</span><span style="color: #007700">) / </span><span style="color: #9876AA">2<br />        </span><span style="color: #007700">);<br /><br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">scaleimage</span><span style="color: #007700">(<br />            </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">() * </span><span style="color: #9876AA">4</span><span style="color: #007700">,<br />            </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">() * </span><span style="color: #9876AA">4<br />        </span><span style="color: #007700">);<br />    }<br /><br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool TRUE on success*/
    public function resizeImage($columns, $rows, $filter, $blur, $bestfit = false, $legacy = false) {}

/**
*<div id="imagick.rollimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::rollImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::rollImage</span> &mdash; <span class="dc-title">Offsets an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.rollimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::rollImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Offsets an image as defined by x and y.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.rollimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       The X offset.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       The Y offset.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.rollimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.rollimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::rollImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">rollImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$rollX</span><span style="color: #007700">, </span><span style="color: #9876AA">$rollY</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rollimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$rollX</span><span style="color: #007700">, </span><span style="color: #9876AA">$rollY</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function rollImage($x, $y) {}

/**
*<div id="imagick.rotateimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::rotateImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::rotateImage</span> &mdash; <span class="dc-title">Rotates an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.rotateimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::rotateImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$background</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$degrees</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Rotates an image the specified number of degrees. Empty   triangles left over from rotating the image are filled   with the background color.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.rotateimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">background</span></dt>     <dd>      <p class="para">       The background color      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">degrees</span></dt>     <dd>      <p class="para">       Rotation angle, in degrees. The rotation angle is interpreted as the       number of degrees to rotate the image clockwise.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.rotateimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.rotateimage-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>        Now allows a string representing the color as the first parameter.        Previous versions allow only an ImagickPixel object.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.rotateimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::rotateImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">rotateImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$angle</span><span style="color: #007700">, </span><span style="color: #9876AA">$color</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rotateimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$color</span><span style="color: #007700">, </span><span style="color: #9876AA">$angle</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function rotateImage($background, $degrees) {}

/**
*<div id="imagick.sampleimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::sampleImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::sampleImage</span> &mdash; <span class="dc-title">Scales an image with pixel sampling</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.sampleimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::sampleImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Scales an image to the desired dimensions with pixel sampling.   Unlike other scaling methods, this method does not introduce   any additional color into the scaled image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.sampleimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">columns</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">rows</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.sampleimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function sampleImage($columns, $rows) {}

/**
*<div id="imagick.solarizeimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::solarizeImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::solarizeImage</span> &mdash; <span class="dc-title">Applies a solarizing effect to the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.solarizeimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::solarizeImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$threshold</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Applies a special effect to the image, similar to the effect achieved in   a photo darkroom by selectively exposing areas of photo sensitive paper   to light. Threshold ranges from 0 to QuantumRange and is a measure of the   extent of the solarization.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.solarizeimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">threshold</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.solarizeimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.solarizeimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::solarizeImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">solarizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$solarizeThreshold</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">solarizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$solarizeThreshold </span><span style="color: #007700">* </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">getQuantum</span><span style="color: #007700">());<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function solarizeImage($threshold) {}

/**
*<div id="imagick.shadowimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::shadowImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::shadowImage</span> &mdash; <span class="dc-title">Simulates an image shadow</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.shadowimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::shadowImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$opacity</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Simulates an image shadow.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.shadowimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">opacity</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">sigma</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.shadowimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.shadowimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::shadowImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">shadowImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">shadowImage</span><span style="color: #007700">(</span><span style="color: #9876AA">0.4</span><span style="color: #007700">, </span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function shadowImage($opacity, $sigma, $x, $y) {}

/**
*<div id="imagick.setimageattribute" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageAttribute</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageAttribute</span> &mdash; <span class="dc-title">Sets an image attribute</span></p> </div> <div id="imagick.setimageattribute-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimageattribute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageAttribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$key</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets an image attribute.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimageattribute-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <span>           </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimageattribute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool*/
    public function setImageAttribute($key, $value) {}

/**
*<div id="imagick.setimagebackgroundcolor" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageBackgroundColor</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageBackgroundColor</span> &mdash; <span class="dc-title">Sets the image background color</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagebackgroundcolor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageBackgroundColor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$background</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image background color.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagebackgroundcolor-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">background</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagebackgroundcolor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagebackgroundcolor-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.setimagebackgroundcolor-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>        Now allows a string representing the color as the parameter.        Previous versions allow only an ImagickPixel object.       </td>      </tr>     </tbody>       </table>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageBackgroundColor($background) {}

/**
*<div id="imagick.setimagecompose" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageCompose</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageCompose</span> &mdash; <span class="dc-title">Sets the image composite operator</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagecompose-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageCompose</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$compose</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image composite operator, useful for specifying how   to composite the image thumbnail when using the   Imagick::montageImage() method.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagecompose-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">compose</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagecompose-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagecompose-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageCompose($compose) {}

/**
*<div id="imagick.setimagecompression" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageCompression</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageCompression</span> &mdash; <span class="dc-title">设置图片压缩的类型</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagecompression-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageCompression</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$compression</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagecompression-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">compression</span></dt>     <dd>      <p class="para">      <strong><span>COMPRESSION</span></strong> 常量里的一种      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagecompression-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagecompression-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageCompression($compression) {}

/**
*<div id="imagick.setimagedelay" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageDelay</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageDelay</span> &mdash; <span class="dc-title">Sets the image delay</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagedelay-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageDelay</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$delay</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image delay. For an animated image this is the amount of time that   this frame of the image should be displayed for, before displaying the next   frame.  </p>  <p class="para">   The delay can be set individually for each frame in an image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagedelay-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">delay</span></dt>     <dd>      <p class="para">       The amount of time expressed in &#039;ticks&#039; that the image should be       displayed for. For animated GIFs there are 100 ticks per second, so a       value of 20 would be 20/100 of a second aka 1/5th of a second.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagedelay-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagedelay-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setimagedelay-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Modify animated Gif with <span class="function"><strong style="color:#CC7832">Imagick::setImageDelay()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// Modify an animated Gif so that it's frames are played at a variable speed,<br />// varying between being shown for 50ms down to 0ms, which will cause the frame<br />// to be skipped in most browsers.<br /></span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #DD0000">"Test.gif"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">coalesceImages</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$frameCount </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">;<br /><br />foreach (</span><span style="color: #9876AA">$imagick </span><span style="color: #007700">as </span><span style="color: #9876AA">$frame</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageDelay</span><span style="color: #007700">(((</span><span style="color: #9876AA">$frameCount </span><span style="color: #007700">% </span><span style="color: #9876AA">11</span><span style="color: #007700">) * </span><span style="color: #9876AA">5</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$frameCount</span><span style="color: #007700">++;<br />}<br /><br /></span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">deconstructImages</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writeImages</span><span style="color: #007700">(</span><span style="color: #DD0000">"/path/to/save/output.gif"</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageDelay($delay) {}

/**
*<div id="imagick.setimagedepth" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageDepth</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageDepth</span> &mdash; <span class="dc-title">Sets the image depth</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagedepth-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageDepth</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$depth</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image depth.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagedepth-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">depth</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagedepth-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagedepth-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageDepth($depth) {}

/**
*<div id="imagick.setimagegamma" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageGamma</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageGamma</span> &mdash; <span class="dc-title">Sets the image gamma</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagegamma-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageGamma</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$gamma</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image gamma.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagegamma-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">gamma</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagegamma-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagegamma-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageGamma($gamma) {}

/**
*<div id="imagick.setimageiterations" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageIterations</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageIterations</span> &mdash; <span class="dc-title">Sets the image iterations</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimageiterations-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageIterations</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$iterations</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the number of iterations an animated image is repeated.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimageiterations-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">iterations</span></dt>     <dd>      <p class="para">       The number of iterations the image should loop over. Set to &#039;0&#039; to loop       continuously.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimageiterations-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimageiterations-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setimageiterations-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Basic <span class="function"><strong style="color:#CC7832">Imagick::setImageIterations()</strong></span> usage</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #DD0000">"Test.gif"</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">coalesceImages</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageIterations</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">deconstructImages</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writeImages</span><span style="color: #007700">(</span><span style="color: #DD0000">'/path/to/save/OnceOnly.gif'</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageIterations($iterations) {}

/**
*<div id="imagick.setimagemattecolor" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageMatteColor</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageMatteColor</span> &mdash; <span class="dc-title">Sets the image matte color</span></p> </div> <div id="imagick.setimagemattecolor-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagemattecolor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageMatteColor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$matte</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image matte color.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagemattecolor-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">matte</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagemattecolor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagemattecolor-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.setimagemattecolor-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>        Now allows a string representing the color as the parameter.        Previous versions allow only an ImagickPixel object.       </td>      </tr>     </tbody>       </table>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageMatteColor($matte) {}

/**
*<div id="imagick.setimagepage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImagePage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImagePage</span> &mdash; <span class="dc-title">Sets the page geometry of the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagepage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImagePage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the page geometry of the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagepage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">height</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagepage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagepage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImagePage($width, $height, $x, $y) {}

    /**
     * @param $filename
     * @throws ImagickException on error.
     */
    public function setImageProgressMonitor($filename) {}

/**
*<div id="imagick.setimageresolution" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageResolution</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageResolution</span> &mdash; <span class="dc-title">Sets the image resolution</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimageresolution-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageResolution</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x_resolution</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y_resolution</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image resolution.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimageresolution-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x_resolution</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y_resolution</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimageresolution-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimageresolution-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setimageresolution-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::setImageResolution()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setImageResolution</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageResolution</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">);<br />    <br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageResolution($x_resolution, $y_resolution) {}

/**
*<div id="imagick.setimagescene" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageScene</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageScene</span> &mdash; <span class="dc-title">Sets the image scene</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagescene-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageScene</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$scene</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image scene.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagescene-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">scene</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagescene-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagescene-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageScene($scene) {}

/**
*<div id="imagick.setimagetickspersecond" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageTicksPerSecond</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageTicksPerSecond</span> &mdash; <span class="dc-title">Sets the image ticks-per-second</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagetickspersecond-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageTicksPerSecond</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$ticks_per_second</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Adjust the amount of time that a frame of an animated image is displayed for.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    For animated GIFs, this function does not change the number of &#039;image ticks&#039;    per second, which is always defined as 100. Instead it adjusts the amount of    time that the frame is displayed for to simulate the change in &#039;ticks per    second&#039;.   </p>   <p class="para">    For example, for an animated GIF where each frame is displayed for 20 ticks    (1/5 of a second) when this method is called on each frame of that image    with an argument of <span>50</span> the frames are adjusted to be    displayed for 40 ticks (2/5 of a second) and the animation will play at half    the original speed.   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagetickspersecond-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">ticks_per_second</span></dt>     <dd>      <p class="para">       The duration for which an image should be displayed expressed in ticks       per second.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagetickspersecond-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setimagetickspersecond-examples">    <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Modify animated Gif with <span class="function"><strong style="color:#CC7832">Imagick::setImageTicksPerSecond()</strong></span></strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// Modify an animated gif so the first half of the gif is played at half the<br />// speed it currently is, and the second half to be played at double the speed<br />// it currently is<br /><br /></span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #DD0000">"Test.gif"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">coalesceImages</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$totalFrames </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getNumberImages</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$frameCount </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">;<br /><br />foreach (</span><span style="color: #9876AA">$imagick </span><span style="color: #007700">as </span><span style="color: #9876AA">$frame</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageTicksPerSecond</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">);<br />    <br />    if (</span><span style="color: #9876AA">$frameCount </span><span style="color: #007700">&lt; (</span><span style="color: #9876AA">$totalFrames </span><span style="color: #007700">/ </span><span style="color: #9876AA">2</span><span style="color: #007700">)) {<br />        </span><span style="color: #FF8000">// Modify the frame to be displayed for twice as long as it currently is<br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageTicksPerSecond</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">);<br />    } else {<br />        </span><span style="color: #FF8000">// Modify the frame to be displayed for half as long as it currently is<br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageTicksPerSecond</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">);<br />    }<br /><br />    </span><span style="color: #9876AA">$frameCount</span><span style="color: #007700">++;<br />}<br /><br /></span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">deconstructImages</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writeImages</span><span style="color: #007700">(</span><span style="color: #DD0000">"/path/to/save/output.gif"</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageTicksPerSecond($ticks_per_second) {}

/**
*<div id="imagick.setimagetype" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageType</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageType</span> &mdash; <span class="dc-title">Sets the image type</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagetype-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageType</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$image_type</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image type.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagetype-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">image_type</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagetype-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageType($image_type) {}

/**
*<div id="imagick.setimageunits" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageUnits</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageUnits</span> &mdash; <span class="dc-title">Sets the image units of resolution</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimageunits-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageUnits</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$units</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image units of resolution.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimageunits-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">units</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimageunits-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageUnits($units) {}

/**
*<div id="imagick.sharpenimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::sharpenImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::sharpenImage</span> &mdash; <span class="dc-title">Sharpens an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.sharpenimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::sharpenImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sharpens an image. We convolve the image with a Gaussian operator   of the given radius and standard deviation (sigma). For reasonable   results, the radius should be larger than sigma. Use a radius of   0 and <span class="function"><strong style="color:#CC7832">Imagick::sharpenImage()</strong></span> selects a suitable radius   for you.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.sharpenimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">radius</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">sigma</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.sharpenimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.sharpenimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::sharpenImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">sharpenImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">$sigma</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">sharpenimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">$sigma</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function sharpenImage($radius, $sigma, $channel = Imagick::CHANNEL_ALL) {}

/**
*<div id="imagick.shaveimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::shaveImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::shaveImage</span> &mdash; <span class="dc-title">Shaves pixels from the image edges</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.shaveimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::shaveImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Shaves pixels from the image edges. It allocates the memory necessary for   the new Image structure and returns a pointer to the new image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.shaveimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">columns</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">rows</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.shaveimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.shaveimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::shaveImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">shaveImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">shaveImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function shaveImage($columns, $rows) {}

/**
*<div id="imagick.shearimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::shearImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::shearImage</span> &mdash; <span class="dc-title">Creating a parallelogram</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.shearimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::shearImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$background</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x_shear</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y_shear</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Slides one edge of an image along the X or Y axis, creating a parallelogram.   An X direction shear slides an edge along the X axis, while a Y direction   shear slides an edge along the Y axis.  The amount of the shear is controlled   by a shear angle.  For X direction shears, x_shear is measured relative to   the Y axis, and similarly, for Y direction shears y_shear is measured   relative to the X axis.  Empty triangles left over from shearing the image   are filled with the background color.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.shearimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">background</span></dt>     <dd>      <p class="para">       The background color      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x_shear</span></dt>     <dd>      <p class="para">       The number of degrees to shear on the x axis      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y_shear</span></dt>     <dd>      <p class="para">       The number of degrees to shear on the y axis      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.shearimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.shearimage-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>        Now allows a string representing the color as the first parameter.        Previous versions allow only an ImagickPixel object.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.shearimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::shearImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">shearImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$color</span><span style="color: #007700">, </span><span style="color: #9876AA">$shearX</span><span style="color: #007700">, </span><span style="color: #9876AA">$shearY</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">shearimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$color</span><span style="color: #007700">, </span><span style="color: #9876AA">$shearX</span><span style="color: #007700">, </span><span style="color: #9876AA">$shearY</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function shearImage($background, $x_shear, $y_shear) {}

/**
*<div id="imagick.spliceimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::spliceImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::spliceImage</span> &mdash; <span class="dc-title">Splices a solid color into the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.spliceimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::spliceImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Splices a solid color into the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.spliceimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">height</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.spliceimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.spliceimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::spliceImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">spliceImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$startX</span><span style="color: #007700">, </span><span style="color: #9876AA">$startY</span><span style="color: #007700">, </span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">spliceImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">, </span><span style="color: #9876AA">$startX</span><span style="color: #007700">, </span><span style="color: #9876AA">$startY</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function spliceImage($width, $height, $x, $y) {}

/**
*<div id="imagick.pingimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::pingImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::pingImage</span> &mdash; <span class="dc-title">Fetch basic attributes about the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.pingimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::pingImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   This method can be used to query image width, height, size, and   format without reading the whole image in to memory.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.pingimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">      The filename to read the information from.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.pingimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function pingImage($filename) {}

/**
*<div id="imagick.readimagefile" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::readImageFile</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::readImageFile</span> &mdash; <span class="dc-title">Reads image from open filehandle</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.readimagefile-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::readImageFile</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$filehandle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$fileName</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Reads image from open filehandle  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.readimagefile-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filehandle</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">fileName</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.readimagefile-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.readimagefile-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function readImageFile($filehandle, $fileName = null) {}

/**
*<div id="imagick.displayimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::displayImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::displayImage</span> &mdash; <span class="dc-title">Displays an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.displayimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::displayImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$servername</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   This method displays an image on a X server.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.displayimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">servername</span></dt>     <dd>      <p class="para">       The X server name      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.displayimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.displayimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function displayImage($servername) {}

/**
*<div id="imagick.displayimages" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::displayImages</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::displayImages</span> &mdash; <span class="dc-title">Displays an image or image sequence</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.displayimages-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::displayImages</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$servername</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Displays an image or image sequence on a X server.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.displayimages-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">servername</span></dt>     <dd>      <p class="para">       The X server name      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.displayimages-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.displayimages-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function displayImages($servername) {}

/**
*<div id="imagick.spreadimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::spreadImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::spreadImage</span> &mdash; <span class="dc-title">Randomly displaces each pixel in a block</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.spreadimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::spreadImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Special effects method that randomly displaces each pixel in a block   defined by the radius parameter.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.spreadimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">radius</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.spreadimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.spreadimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.spreadimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::spreadImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">spreadImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$radius</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">spreadImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$radius</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function spreadImage($radius) {}

/**
*<div id="imagick.swirlimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::swirlImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::swirlImage</span> &mdash; <span class="dc-title">Swirls the pixels about the center of the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.swirlimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>Imagick::swirlImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$degrees</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Swirls the pixels about the center of the image, where degrees indicates   the sweep of the arc through which each pixel is moved. You get a more   dramatic effect as the degrees move from 1 to 360.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.swirlimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">degrees</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.swirlimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.swirlimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.swirlimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::swirlImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">swirlImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$swirl</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">swirlImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$swirl</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function swirlImage($degrees) {}

/**
*<div id="imagick.stripimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::stripImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::stripImage</span> &mdash; <span class="dc-title">去掉图片的所有配置和设置</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.stripimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::stripImage</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">      去掉图片的所有配置和设置  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.stripimage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.stripimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.stripimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function stripImage() {}

/**
*<div id="imagick.queryformats" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::queryFormats</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::queryFormats</span> &mdash; <span class="dc-title">Returns formats supported by Imagick</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.queryformats-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::queryFormats</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pattern</span><span class="initializer"> = &quot;*&quot;</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns formats supported by Imagick.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.queryformats-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.queryformats-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an array containing the formats supported by Imagick.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.queryformats-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.queryformats-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::queryFormats()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />    </span><span style="color: #007700">function </span><span style="color: #9876AA">render</span><span style="color: #007700">() {<br />        </span><span style="color: #9876AA">$output </span><span style="color: #007700">= </span><span style="color: #DD0000">""</span><span style="color: #007700">;<br />        </span><span style="color: #9876AA">$input </span><span style="color: #007700">= </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">queryformats</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$columns </span><span style="color: #007700">= </span><span style="color: #9876AA">6</span><span style="color: #007700">;<br /><br />        </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;table border='2'&gt;"</span><span style="color: #007700">;<br /><br />        for (</span><span style="color: #9876AA">$i</span><span style="color: #007700">=</span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$input</span><span style="color: #007700">); </span><span style="color: #9876AA">$i </span><span style="color: #007700">+= </span><span style="color: #9876AA">$columns</span><span style="color: #007700">) {<br />            </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;tr&gt;"</span><span style="color: #007700">;<br />            for (</span><span style="color: #9876AA">$c</span><span style="color: #007700">=</span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$c</span><span style="color: #007700">&lt;</span><span style="color: #9876AA">$columns</span><span style="color: #007700">; </span><span style="color: #9876AA">$c</span><span style="color: #007700">++) {<br />                </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;td&gt;"</span><span style="color: #007700">;<br />                if ((</span><span style="color: #9876AA">$i </span><span style="color: #007700">+ </span><span style="color: #9876AA">$c</span><span style="color: #007700">) &lt;  </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$input</span><span style="color: #007700">)) {<br />                    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #9876AA">$input</span><span style="color: #007700">[</span><span style="color: #9876AA">$i </span><span style="color: #007700">+ </span><span style="color: #9876AA">$c</span><span style="color: #007700">];<br />                }<br />                </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;/td&gt;"</span><span style="color: #007700">;<br />            }<br />            </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;/tr&gt;"</span><span style="color: #007700">;<br />        }<br /><br />        </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;/table&gt;"</span><span style="color: #007700">;<br /><br />        return </span><span style="color: #9876AA">$output</span><span style="color: #007700">;<br />    }<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return array an array containing the formats supported by Imagick.*/
    public static function queryFormats($pattern = "*") {}

/**
*<div id="imagick.queryfonts" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::queryFonts</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::queryFonts</span> &mdash; <span class="dc-title">Returns the configured fonts</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.queryfonts-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::queryFonts</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pattern</span><span class="initializer"> = &quot;*&quot;</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns the configured fonts.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.queryfonts-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       The query pattern      </p>     </dd>       </dl>  </span>   </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.queryfonts-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an array containing the configured fonts.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.queryfonts-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.queryfonts-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::queryFonts()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $output </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />        </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"Fonts that match 'Helvetica*' are:&lt;br/&gt;"</span><span style="color: #007700">;<br /><br />        </span><span style="color: #9876AA">$fontList </span><span style="color: #007700">= </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">queryFonts</span><span style="color: #007700">(</span><span style="color: #DD0000">"Helvetica*"</span><span style="color: #007700">);<br /> <br />        foreach (</span><span style="color: #9876AA">$fontList </span><span style="color: #007700">as </span><span style="color: #9876AA">$fontName</span><span style="color: #007700">) {<br />            </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">'&lt;li&gt;'</span><span style="color: #007700">. </span><span style="color: #9876AA">$fontName</span><span style="color: #007700">.</span><span style="color: #DD0000">"&lt;/li&gt;"</span><span style="color: #007700">;<br />        }<br /><br />        return </span><span style="color: #9876AA">$output</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return array an array containing the configured fonts.*/
    public static function queryFonts($pattern = "*") {}

/**
*<div id="imagick.queryfontmetrics" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::queryFontMetrics</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::queryFontMetrics</span> &mdash; <span class="dc-title">Returns an array representing the font metrics</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.queryfontmetrics-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::queryFontMetrics</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="type ImagickDraw" style="color:#EAB766">ImagickDraw</a></span> <span class="parameter" style="color:#3A95FF">$properties</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$text</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$multiline</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns a multi-dimensional array representing the font metrics.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.queryfontmetrics-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">properties</span></dt>     <dd>      <p class="para">       ImagickDraw object containing font properties      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">text</span></dt>     <dd>      <p class="para">       The text      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">multiline</span></dt>     <dd>      <p class="para">       Multiline parameter. If left empty it is autodetected      </p>     </dd>           </dl>  </span>   </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.queryfontmetrics-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a multi-dimensional array representing the font metrics.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.queryfontmetrics-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.queryfontmetrics-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::queryFontMetrics()</strong></span>:</strong></p>    <div class="example-contents"><p>     Query the metrics for the text and dump the results on the screen.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Create a new Imagick object <br /></span><span style="color: #9876AA">$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">// Create an ImagickDraw object <br /></span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">ImagickDraw</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">// Set the font <br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFont</span><span style="color: #007700">(</span><span style="color: #DD0000">'/path/to/font.ttf'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Dump the font metrics, autodetect multiline <br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">queryFontMetrics</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">, </span><span style="color: #DD0000">"Hello World!"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> </div>
     * @return array a multi-dimensional array representing the font metrics.*/
    public function queryFontMetrics(ImagickDraw $properties, $text, $multiline = null) {}

/**
*<div id="imagick.steganoimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::steganoImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::steganoImage</span> &mdash; <span class="dc-title">Hides a digital watermark within the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.steganoimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::steganoImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$watermark_wand</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Hides a digital watermark within the image. Recover the hidden watermark   later to prove that the authenticity of an image. Offset defines the start   position within the image to hide the watermark.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.steganoimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">watermark_wand</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.steganoimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return Imagick <b>TRUE</b> on success.*/
    public function steganoImage(Imagick $watermark_wand, $offset) {}

/**
*<div id="imagick.addnoiseimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::addNoiseImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::addNoiseImage</span> &mdash; <span class="dc-title">Adds random noise to the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.addnoiseimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::addNoiseImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$noise_type</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Adds random noise to the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.addnoiseimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">noise_type</span></dt>     <dd>      <p class="para">       The type of the noise. Refer to this list of       <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.noise" class="link">noise constants</a>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a> using bitwise operators. 缺省为<strong><span>Imagick::CHANNEL_DEFAULT</span></strong>. 参考此 <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">通道常数</a>列表      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.addnoiseimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.addnoiseimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::addNoiseImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">addNoiseImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$noiseType</span><span style="color: #007700">, </span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addNoiseImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$noiseType</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function addNoiseImage($noise_type, $channel = Imagick::CHANNEL_DEFAULT) {}

/**
*<div id="imagick.motionblurimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::motionBlurImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::motionBlurImage</span> &mdash; <span class="dc-title">Simulates motion blur</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.motionblurimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::motionBlurImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$angle</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Simulates motion blur.  We convolve the image with a Gaussian   operator of the given radius and standard deviation (sigma).   For reasonable results, radius should be larger than sigma.   Use a radius of 0 and MotionBlurImage() selects a suitable   radius for you. Angle gives the angle of the blurring motion.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.motionblurimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">radius</span></dt>     <dd>      <p class="para">      The radius of the Gaussian, in pixels, not counting the center pixel.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">sigma</span></dt>     <dd>      <p class="para">      The standard deviation of the Gaussian, in pixels.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">angle</span></dt>     <dd>      <p class="para">      Apply the effect along this angle.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To       apply to more than one channel, combine channeltype constants using       bitwise operators. Refer to this       list of <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a>.       The channel argument affects only if Imagick is compiled against ImageMagick version       6.4.4 or greater.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.motionblurimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.motionblurimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::motionBlurImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">motionBlurImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">$sigma</span><span style="color: #007700">, </span><span style="color: #9876AA">$angle</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">motionBlurImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">$sigma</span><span style="color: #007700">, </span><span style="color: #9876AA">$angle</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function motionBlurImage($radius, $sigma, $angle, $channel = Imagick::CHANNEL_DEFAULT) {}

/**
*<div id="imagick.mosaicimages" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::mosaicImages</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::mosaicImages</span> &mdash; <span class="dc-title">Forms a mosaic from images</span></p> </div> <div id="imagick.mosaicimages-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.mosaicimages-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::mosaicImages</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Inlays an image sequence to form a single coherent picture. It   returns a wand with each image in the sequence composited at   the location defined by the page offset of the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.mosaicimages-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.mosaicimages-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return Imagick <b>TRUE</b> on success.*/
    public function mosaicImages() {}

/**
*<div id="imagick.morphimages" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::morphImages</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::morphImages</span> &mdash; <span class="dc-title">Method morphs a set of images</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.morphimages-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::morphImages</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$number_frames</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Method morphs a set of images.  Both the image pixels and size   are linearly interpolated to give the appearance of a   meta-morphosis from one image to the next.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.morphimages-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">number_frames</span></dt>     <dd>      <p class="para">      The number of in-between images to generate.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.morphimages-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  This method returns a new Imagick object on success.  错误时抛出<span class="classname"><strong class="classname">ImagickException</strong></span>。  </p> </div></div>
     * @return Imagick This method returns a new Imagick object on success.*/
    public function morphImages($number_frames) {}

/**
*<div id="imagick.minifyimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::minifyImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::minifyImage</span> &mdash; <span class="dc-title">Scales an image proportionally to half its size</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.minifyimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::minifyImage</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Is a convenience method that scales an image proportionally to one-half its original size  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.minifyimage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.minifyimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function minifyImage() {}

/**
*<div id="imagick.affinetransformimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::affineTransformImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::affineTransformImage</span> &mdash; <span class="dc-title">Transforms an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.affinetransformimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::affineTransformImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="type ImagickDraw" style="color:#EAB766">ImagickDraw</a></span> <span class="parameter" style="color:#3A95FF">$matrix</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Transforms an image as dictated by the affine matrix.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.affinetransformimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">matrix</span></dt>     <dd>      <p class="para">       The affine matrix      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.affinetransformimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.affinetransformimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::affineTransformImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">affineTransformImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$angle </span><span style="color: #007700">= </span><span style="color: #9876AA">deg2rad</span><span style="color: #007700">(</span><span style="color: #9876AA">40</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$affineRotate </span><span style="color: #007700">= array(<br />        </span><span style="color: #DD0000">"sx" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">cos</span><span style="color: #007700">(</span><span style="color: #9876AA">$angle</span><span style="color: #007700">), </span><span style="color: #DD0000">"sy" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">cos</span><span style="color: #007700">(</span><span style="color: #9876AA">$angle</span><span style="color: #007700">), <br />        </span><span style="color: #DD0000">"rx" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">sin</span><span style="color: #007700">(</span><span style="color: #9876AA">$angle</span><span style="color: #007700">), </span><span style="color: #DD0000">"ry" </span><span style="color: #007700">=&gt; -</span><span style="color: #9876AA">sin</span><span style="color: #007700">(</span><span style="color: #9876AA">$angle</span><span style="color: #007700">), <br />        </span><span style="color: #DD0000">"tx" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #DD0000">"ty" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">,<br />    );<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">affine</span><span style="color: #007700">(</span><span style="color: #9876AA">$affineRotate</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">affineTransformImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function affineTransformImage(ImagickDraw $matrix) {}

/**
*<div id="imagick.averageimages" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::averageImages</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::averageImages</span> &mdash; <span class="dc-title">Average a set of images</span></p> </div> <div id="imagick.averageimages-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.averageimages-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::averageImages</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Average a set of images.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.averageimages-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.averageimages-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a new Imagick object on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.averageimages-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return Imagick a new Imagick object on success.*/
    public function averageImages() {}

/**
*<div id="imagick.borderimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::borderImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::borderImage</span> &mdash; <span class="dc-title">Surrounds the image with a border</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.borderimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::borderImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$bordercolor</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Surrounds the image with a border of the color defined by the bordercolor ImagickPixel object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.borderimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">bordercolor</span></dt>     <dd>      <p class="para">       ImagickPixel object or a string containing the border color      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">       Border width      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">height</span></dt>     <dd>      <p class="para">       Border height      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.borderimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.borderimage-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>        Now allows a string representing the color as the first parameter.        Previous versions allow only an ImagickPixel object.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.borderimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::borderImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">borderImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$color</span><span style="color: #007700">, </span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">borderImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$color</span><span style="color: #007700">, </span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function borderImage($bordercolor, $width, $height) {}

/**
*<div id="imagick.chopimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::chopImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::chopImage</span> &mdash; <span class="dc-title">Removes a region of an image and trims</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.chopimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::chopImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Removes a region of an image and collapses the image to occupy the removed portion.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.chopimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">       Width of the chopped area      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">height</span></dt>     <dd>      <p class="para">       Height of the chopped area      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       X origo of the chopped area      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       Y origo of the chopped area      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.chopimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.chopimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.chopimage-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::chopImage()</strong></span>:</strong></p>    <div class="example-contents"><p>     Example of using Imagick::chopImage    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Create some objects <br /></span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$pixel </span><span style="color: #007700">= new </span><span style="color: #9876AA">ImagickPixel</span><span style="color: #007700">( </span><span style="color: #DD0000">'gray' </span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// New image <br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">$pixel</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Chop image <br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">chopImage</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Give image a format <br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Output the image with headers <br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-type: image/png'</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.chopimage-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link Imagick::cropImage()} - 截图图片的一块区域</span></li>   </ul>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function chopImage($width, $height, $x, $y) {}

/**
*<div id="imagick.clipimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::clipImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::clipImage</span> &mdash; <span class="dc-title">Clips along the first path from the 8BIM profile</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.clipimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::clipImage</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Clips along the first path from the 8BIM profile, if present.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.clipimage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.clipimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.clipimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function clipImage() {}

/**
*<div id="imagick.clippathimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::clipPathImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::clipPathImage</span> &mdash; <span class="dc-title">Clips along the named paths from the 8BIM profile</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.clippathimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::clipPathImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pathname</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$inside</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Clips along the named paths from the 8BIM profile, if   present. Later operations take effect inside the path.   It may be a number if preceded with #, to work on a   numbered path, e.g., &quot;#1&quot; to use the first path.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.clippathimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">pathname</span></dt>     <dd>      <p class="para">       The name of the path      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">inside</span></dt>     <dd>      <p class="para">       If <strong><span>true</span></strong> later operations take effect inside clipping path.       Otherwise later operations take effect outside clipping path.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.clippathimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.clippathimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function clipPathImage($pathname, $inside) {}

/**
*<div id="imagick.clipimagepath" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::clipImagePath</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::clipImagePath</span> &mdash; <span class="dc-title">Clips along the named paths from the 8BIM profile, if present</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.clipimagepath-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::clipImagePath</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pathname</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$inside</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   Clips along the named paths from the 8BIM profile, if present. Later operations take effect inside the path.  Id may be a number if preceded with #, to work on a numbered path, e.g., &quot;#1&quot; to use the first path.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.clipimagepath-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">pathname</span></dt>    <dd>     <span>           </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">inside</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.clipimagepath-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
*/
    public function clipImagePath($pathname, $inside) {}

/**
*<div id="imagick.coalesceimages" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::coalesceImages</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::coalesceImages</span> &mdash; <span class="dc-title">Composites a set of images</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.coalesceimages-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::coalesceImages</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Composites a set of images while respecting any page offsets   and disposal methods.  GIF, MIFF, and MNG animation sequences   typically start with an image background and each subsequent   image varies in size and offset.  Returns a new Imagick object   where each image in the sequence is the same size as the first   and composited with the next image in the sequence.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.coalesceimages-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.coalesceimages-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a new Imagick object on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.coalesceimages-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return Imagick a new Imagick object on success.*/
    public function coalesceImages() {}

/**
*<div id="imagick.colorfloodfillimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::colorFloodfillImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::colorFloodfillImage</span> &mdash; <span class="dc-title">Changes the color value of any pixel that matches target</span></p> </div> <div id="imagick.colorfloodfillimage-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.colorfloodfillimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::colorFloodfillImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$fill</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$bordercolor</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Changes the color value of any pixel that matches target and is an   immediate neighbor.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.colorfloodfillimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">fill</span></dt>     <dd>      <p class="para">       ImagickPixel object containing the fill color      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">fuzz</span></dt>     <dd>      <p class="para">       The amount of fuzz. For example, set fuzz to 10 and the color red at       intensities of 100 and 102 respectively are now interpreted as the       same color for the purposes of the floodfill.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">bordercolor</span></dt>     <dd>      <p class="para">       ImagickPixel object containing the border color      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       X start position of the floodfill      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       Y start position of the floodfill      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.colorfloodfillimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.colorfloodfillimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.colorfloodfillimage-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>        Now allows a string representing the color as first and third        parameter. Previous versions allow only an ImagickPixel object.       </td>      </tr>     </tbody>       </table>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function colorFloodfillImage($fill, $fuzz, $bordercolor, $x, $y) {}

/**
*<div id="imagick.colorizeimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::colorizeImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::colorizeImage</span> &mdash; <span class="dc-title">Blends the fill color with the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.colorizeimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::colorizeImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$colorize</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$opacity</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$legacy</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Blends the fill color with each pixel in the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.colorizeimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">colorize</span></dt>     <dd>      <p class="para">       ImagickPixel object or a string containing the colorize color      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">opacity</span></dt>     <dd>      <p class="para">       ImagickPixel object or an float containing the opacity value.        1.0 is fully opaque and 0.0 is fully transparent.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.colorizeimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.colorizeimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.colorizeimage-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>        Now allows a string representing the color as the first parameter and        a float representing the opacity value as the second parameter.        Previous versions allow only an ImagickPixel objects.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.colorizeimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::colorizeImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">colorizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$color</span><span style="color: #007700">, </span><span style="color: #9876AA">$opacity</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$opacity </span><span style="color: #007700">= </span><span style="color: #9876AA">$opacity </span><span style="color: #007700">/ </span><span style="color: #9876AA">255.0</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$opacityColor </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">"rgba(0, 0, 0, </span><span style="color: #9876AA">$opacity</span><span style="color: #DD0000">)"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">colorizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$color</span><span style="color: #007700">, </span><span style="color: #9876AA">$opacityColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function colorizeImage($colorize, $opacity, $legacy = false) {}

/**
*<div id="imagick.compareimagechannels" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::compareImageChannels</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::compareImageChannels</span> &mdash; <span class="dc-title">Returns the difference in one or more images</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.compareimagechannels-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::compareImageChannels</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$image</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channelType</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$metricType</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Compares one or more images and returns the difference image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.compareimagechannels-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">image</span></dt>     <dd>      <p class="para">       Imagick object containing the image to compare.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channelType</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To       apply to more than one channel, combine channeltype constants using       bitwise operators. Refer to this       list of <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">metricType</span></dt>     <dd>      <p class="para">       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.metric" class="link">metric type constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.compareimagechannels-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Array consisting of <span>new_wand</span> and   <span>distortion</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.compareimagechannels-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return array Array consisting of new_wand and*/
    public function compareImageChannels(Imagick $image, $channelType, $metricType) {}

/**
*<div id="imagick.compareimages" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::compareImages</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::compareImages</span> &mdash; <span class="dc-title">Compares an image to a reconstructed image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.compareimages-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::compareImages</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$compare</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$metric</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns an array containing a reconstructed image and the difference between images.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.compareimages-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">compare</span></dt>     <dd>      <p class="para">       An image to compare to.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">metric</span></dt>     <dd>      <p class="para">       Provide a valid metric type constant. Refer to this       list of  <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.metric" class="link">metric constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.compareimages-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an array containing a reconstructed image and the difference between images.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.compareimages-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.compareimages-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::compareImages()</strong></span>:</strong></p>    <div class="example-contents"><p>     Compare images and display the reconstructed image    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$image1 </span><span style="color: #007700">= new </span><span style="color: #9876AA">imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">"image1.png"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$image2 </span><span style="color: #007700">= new </span><span style="color: #9876AA">imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">"image2.png"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">$image1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">compareImages</span><span style="color: #007700">(</span><span style="color: #9876AA">$image2</span><span style="color: #007700">, </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">METRIC_MEANSQUAREERROR</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$result</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$result</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">];<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return array Array consisting of an Imagick object of the*/
    public function compareImages(Imagick $compare, $metric) {}

/**
*<div id="imagick.contrastimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::contrastImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::contrastImage</span> &mdash; <span class="dc-title">Change the contrast of the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.contrastimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::contrastImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$sharpen</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Enhances the intensity differences between the lighter and   darker elements of the image.  Set sharpen to a value other   than 0 to increase the image contrast otherwise the contrast   is reduced.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.contrastimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">sharpen</span></dt>     <dd>      <p class="para">      The sharpen value      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.contrastimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.contrastimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.contrastimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::contrastImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">contrastImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$contrastType</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    if (</span><span style="color: #9876AA">$contrastType </span><span style="color: #007700">!= </span><span style="color: #9876AA">2</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">contrastImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$contrastType</span><span style="color: #007700">);<br />    }<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function contrastImage($sharpen) {}

/**
*<div id="imagick.combineimages" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::combineImages</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::combineImages</span> &mdash; <span class="dc-title">Combines one or more images into a single image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.combineimages-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::combineImages</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channelType</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Combines one or more images into a single image. The grayscale   value of the pixels of each image in the sequence is assigned   in order to the specified channels of the combined image. The   typical ordering would be image 1 =&gt; Red, 2 =&gt; Green,   3 =&gt; Blue, etc.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.combineimages-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">channelType</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To       apply to more than one channel, combine channeltype constants using       bitwise operators. Refer to this       list of  <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.combineimages-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.combineimages-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return Imagick <b>TRUE</b> on success.*/
    public function combineImages($channelType) {}

/**
*<div id="imagick.convolveimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::convolveImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::convolveImage</span> &mdash; <span class="dc-title">Applies a custom convolution kernel to the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.convolveimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::convolveImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$kernel</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Applies a custom convolution kernel to the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.convolveimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">kernel</span></dt>     <dd>      <p class="para">      The convolution kernel      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To       apply to more than one channel, combine channeltype constants using       bitwise operators. Refer to this       list of  <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.convolveimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.convolveimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.convolveimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::convolveImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">convolveImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$bias</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernelMatrix</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));    <br />    </span><span style="color: #FF8000">//$edgeFindingKernel = [-1, -1, -1, -1, 8, -1, -1, -1, -1,];<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageBias</span><span style="color: #007700">(</span><span style="color: #9876AA">$bias </span><span style="color: #007700">* </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">getQuantum</span><span style="color: #007700">());<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">convolveImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernelMatrix</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function convolveImage(array $kernel, $channel = Imagick::CHANNEL_ALL) {}

/**
*<div id="imagick.cyclecolormapimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::cycleColormapImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::cycleColormapImage</span> &mdash; <span class="dc-title">Displaces an image&#039;s colormap</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.cyclecolormapimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::cycleColormapImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$displace</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Displaces an image&#039;s colormap by a given number of positions.  If you   cycle the colormap a number of times you can produce a psychedelic   effect.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.cyclecolormapimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">displace</span></dt>     <dd>      <p class="para">      The amount to displace the colormap.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.cyclecolormapimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.cyclecolormapimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function cycleColormapImage($displace) {}

/**
*<div id="imagick.deconstructimages" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::deconstructImages</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::deconstructImages</span> &mdash; <span class="dc-title">Returns certain pixel differences between images</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.deconstructimages-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::deconstructImages</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Compares each image with the next in a sequence and returns the maximum   bounding region of any pixel differences it discovers.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.deconstructimages-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.deconstructimages-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a new Imagick object on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.deconstructimages-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return Imagick a new Imagick object on success.*/
    public function deconstructImages() {}

/**
*<div id="imagick.despeckleimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::despeckleImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::despeckleImage</span> &mdash; <span class="dc-title">Reduces the speckle noise in an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.despeckleimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::despeckleImage</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Reduces the speckle noise in an image while preserving the edges of the original image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.despeckleimage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.despeckleimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.despeckleimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.despeckleimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::despeckleImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">despeckleImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">despeckleImage</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function despeckleImage() {}

/**
*<div id="imagick.edgeimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::edgeImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::edgeImage</span> &mdash; <span class="dc-title">Enhance edges within the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.edgeimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::edgeImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Enhance edges within the image with a convolution filter of the given   radius. Use radius 0 and it will be auto-selected.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.edgeimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">radius</span></dt>     <dd>      <p class="para">      The radius of the operation.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.edgeimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.edgeimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.edgeimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::edgeImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">edgeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$radius</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">edgeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$radius</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function edgeImage($radius) {}

/**
*<div id="imagick.embossimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::embossImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::embossImage</span> &mdash; <span class="dc-title">Returns a grayscale image with a three-dimensional effect</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.embossimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::embossImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Returns a grayscale image with a three-dimensional effect.  We convolve   the image with a Gaussian operator of the given radius and standard    deviation (sigma).  For reasonable results, radius should be larger than    sigma.  Use a radius of 0 and it will choose a suitable radius for you.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.embossimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">radius</span></dt>     <dd>      <p class="para">      The radius of the effect      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">sigma</span></dt>     <dd>      <p class="para">      The sigma of the effect      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.embossimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.embossimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.embossimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::embossImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">embossImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">$sigma</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">embossImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">$sigma</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function embossImage($radius, $sigma) {}

/**
*<div id="imagick.enhanceimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::enhanceImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::enhanceImage</span> &mdash; <span class="dc-title">Improves the quality of a noisy image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.enhanceimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::enhanceImage</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Applies a digital filter that improves the quality of a noisy image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.enhanceimage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.enhanceimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.enhanceimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.enhanceimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::enhanceImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">enhanceImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">enhanceImage</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function enhanceImage() {}

/**
*<div id="imagick.equalizeimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::equalizeImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::equalizeImage</span> &mdash; <span class="dc-title">Equalizes the image histogram</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.equalizeimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::equalizeImage</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Equalizes the image histogram.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.equalizeimage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.equalizeimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.equalizeimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.equalizeimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::equalizeImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">equalizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">equalizeImage</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function equalizeImage() {}

/**
*<div id="imagick.evaluateimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::evaluateImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::evaluateImage</span> &mdash; <span class="dc-title">Applies an expression to an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.evaluateimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::evaluateImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$op</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$constant</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Applys an arithmetic, relational, or logical expression to an image.  Use   these operators to lighten or darken an image, to increase or decrease   contrast in an image, or to produce the &quot;negative&quot; of an image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.evaluateimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">op</span></dt>     <dd>      <p class="para">      The evaluation operator      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">constant</span></dt>     <dd>      <p class="para">      The value of the operator      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To       apply to more than one channel, combine channeltype constants using       bitwise operators. Refer to this       list of  <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.evaluateimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.evaluateimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.evaluateimage-examples">  <h3 class="title">示例</h3>  <span>  <div class="example" id="">   <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::evaluateImage()</strong></span></strong></p>   <div class="example-contents"><p>    Using evaluateImage to reduce opacity in an image.   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Create new object with the image<br /></span><span style="color: #9876AA">$im </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">'example-alpha.png'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Reduce the alpha by 50%<br /></span><span style="color: #9876AA">$im</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">evaluateImage</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">EVALUATE_DIVIDE</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">CHANNEL_ALPHA</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Output the image<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$im</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function evaluateImage($op, $constant, $channel = Imagick::CHANNEL_ALL) {}

/**
*<div id="imagick.flattenimages" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::flattenImages</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::flattenImages</span> &mdash; <span class="dc-title">Merges a sequence of images</span></p> </div> <div id="imagick.flattenimages-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.flattenimages-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::flattenImages</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Merges a sequence of images.  This is useful for combining Photoshop layers into a single image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.flattenimages-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.flattenimages-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.flattenimages-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return Imagick Returns an Imagick object containing the merged image.*/
    public function flattenImages() {}

/**
*<div id="imagick.flipimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::flipImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::flipImage</span> &mdash; <span class="dc-title">Creates a vertical mirror image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.flipimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::flipImage</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Creates a vertical mirror image by reflecting the pixels around the central x-axis.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.flipimage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.flipimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.flipimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.flipimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::flipImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">flipImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">flipImage</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.flipimage-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="function">{@link Imagick::flopimage()} - Creates a horizontal mirror image</span></li>  </ul> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function flipImage() {}

/**
*<div id="imagick.flopimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::flopImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::flopImage</span> &mdash; <span class="dc-title">Creates a horizontal mirror image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.flopimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::flopImage</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Creates a horizontal mirror image by reflecting the pixels around the central y-axis.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.flopimage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.flopimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.flopimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.flopimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::flopImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">flopImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">flopImage</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.flopimage-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="function">{@link Imagick::flipimage()} - Creates a vertical mirror image</span></li>  </ul> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function flopImage() {}

/**
*<div id="imagick.frameimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::frameImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::frameImage</span> &mdash; <span class="dc-title">Adds a simulated three-dimensional border</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.frameimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::frameImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$matte_color</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$inner_bevel</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$outer_bevel</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Adds a simulated three-dimensional border around the image.   The width and height specify the border width of the vertical   and horizontal sides of the frame.  The inner and outer   bevels indicate the width of the inner and outer shadows of   the frame.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.frameimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">matte_color</span></dt>     <dd>      <p class="para">      ImagickPixel object or a string representing the matte color      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">      The width of the border      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">height</span></dt>     <dd>      <p class="para">      The height of the border      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">inner_bevel</span></dt>     <dd>      <p class="para">      The inner bevel width      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">outer_bevel</span></dt>     <dd>      <p class="para">      The outer bevel width      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.frameimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.frameimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.frameimage-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>        Now allows a string representing the color as the first parameter.        Previous versions allow only an ImagickPixel object.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.frameimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::frameImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">frameImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$color</span><span style="color: #007700">, </span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">, </span><span style="color: #9876AA">$innerBevel</span><span style="color: #007700">, </span><span style="color: #9876AA">$outerBevel</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br /><br />    </span><span style="color: #9876AA">$width </span><span style="color: #007700">= </span><span style="color: #9876AA">$width </span><span style="color: #007700">+ </span><span style="color: #9876AA">$innerBevel </span><span style="color: #007700">+ </span><span style="color: #9876AA">$outerBevel</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$height </span><span style="color: #007700">= </span><span style="color: #9876AA">$height </span><span style="color: #007700">+ </span><span style="color: #9876AA">$innerBevel </span><span style="color: #007700">+ </span><span style="color: #9876AA">$outerBevel</span><span style="color: #007700">;<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">frameimage</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">$color</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">$width</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">$height</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">$innerBevel</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">$outerBevel<br />    </span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function frameImage($matte_color, $width, $height, $inner_bevel, $outer_bevel) {}

/**
*<div id="imagick.fximage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::fxImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::fxImage</span> &mdash; <span class="dc-title">Evaluate expression for each pixel in the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.fximage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::fxImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$expression</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Evaluate expression for each pixel in the image. Consult <a href="http://www.imagemagick.org/script/fx.php" class="link external">&raquo;&nbsp;The Fx Special Effects Image   Operator</a> for more information.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.fximage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">expression</span></dt>     <dd>      <p class="para">      The expression.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To       apply to more than one channel, combine channeltype constants using       bitwise operators. Refer to this       list of  <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.fximage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.fximage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.fximage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::fxImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">fxImage</span><span style="color: #007700">() {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #DD0000">"xc:white"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$fx </span><span style="color: #007700">= </span><span style="color: #DD0000">'xx=i-w/2; yy=j-h/2; rr=hypot(xx,yy); (.5-rr/140)*1.2+.5'</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$fxImage </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fxImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$fx</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$fxImage</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setimageformat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$fxImage</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return Imagick <b>TRUE</b> on success.*/
    public function fxImage($expression, $channel = Imagick::CHANNEL_ALL) {}

/**
*<div id="imagick.gammaimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::gammaImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::gammaImage</span> &mdash; <span class="dc-title">Gamma-corrects an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.gammaimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::gammaImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$gamma</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Gamma-corrects an image.  The same image viewed on different devices will   have perceptual differences in the way the image&#039;s intensities are   represented on the screen.  Specify individual gamma levels for the red,   green, and blue channels, or adjust all three with the gamma parameter.   Values typically range from 0.8 to 2.3.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.gammaimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">gamma</span></dt>     <dd>      <p class="para">      The amount of gamma-correction.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To       apply to more than one channel, combine channeltype constants using       bitwise operators. Refer to this       list of  <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.gammaimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.gammaimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.gammaimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::gammaImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">gammaImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$gamma</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">gammaImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$gamma</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function gammaImage($gamma, $channel = Imagick::CHANNEL_ALL) {}

/**
*<div id="imagick.gaussianblurimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::gaussianBlurImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::gaussianBlurImage</span> &mdash; <span class="dc-title">Blurs an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.gaussianblurimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::gaussianBlurImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Blurs an image.  We convolve the image with a Gaussian operator of the   given radius and standard deviation (sigma). For reasonable results, the   radius should be larger than sigma.  Use a radius of 0 and selects a   suitable radius for you.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.gaussianblurimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">radius</span></dt>     <dd>      <p class="para">      The radius of the Gaussian, in pixels, not counting the center pixel.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">sigma</span></dt>     <dd>      <p class="para">       The standard deviation of the Gaussian, in pixels.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To       apply to more than one channel, combine channeltype constants using       bitwise operators. Refer to this       list of  <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.gaussianblurimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.gaussianblurimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.gaussianblurimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::gaussianBlurImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">gaussianBlurImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">$sigma</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">gaussianBlurImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">$sigma</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function gaussianBlurImage($radius, $sigma, $channel = Imagick::CHANNEL_ALL) {}

/**
*<div id="imagick.getimageattribute" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageAttribute</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageAttribute</span> &mdash; <span class="dc-title">Returns a named attribute</span></p> </div> <div id="imagick.getimageattribute-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageattribute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageAttribute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$key</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Returns a named attribute.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageattribute-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <span>      The key of the attribute to get.     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageattribute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
     * @return string*/
    public function getImageAttribute($key) {}

/**
*<div id="imagick.getimagebackgroundcolor" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageBackgroundColor</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageBackgroundColor</span> &mdash; <span class="dc-title">Returns the image background color</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagebackgroundcolor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageBackgroundColor</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span></div>  <p class="para rdfs-comment">   Returns the image background color.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagebackgroundcolor-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagebackgroundcolor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an ImagickPixel set to the background color of the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagebackgroundcolor-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return ImagickPixel an ImagickPixel set to the background color of the image.*/
    public function getImageBackgroundColor() {}

/**
*<div id="imagick.getimageblueprimary" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageBluePrimary</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageBluePrimary</span> &mdash; <span class="dc-title">Returns the chromaticy blue primary point</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageblueprimary-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageBluePrimary</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns the chromaticity blue primary point for the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageblueprimary-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">      The chromaticity blue primary x-point.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">      The chromaticity blue primary y-point.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageblueprimary-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Array consisting of &quot;x&quot; and &quot;y&quot; coordinates of point.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimageblueprimary-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return float[] Array consisting of "x" and "y" coordinates of point.*/
    public function getImageBluePrimary() {}

/**
*<div id="imagick.getimagebordercolor" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageBorderColor</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageBorderColor</span> &mdash; <span class="dc-title">Returns the image border color</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagebordercolor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageBorderColor</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span></div>  <p class="para rdfs-comment">   Returns the image border color.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagebordercolor-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagebordercolor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagebordercolor-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return ImagickPixel <b>TRUE</b> on success.*/
    public function getImageBorderColor() {}

/**
*<div id="imagick.getimagechanneldepth" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageChannelDepth</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageChannelDepth</span> &mdash; <span class="dc-title">Gets the depth for a particular image channel</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagechanneldepth-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageChannelDepth</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the depth for a particular image channel.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagechanneldepth-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a> using bitwise operators. 缺省为<strong><span>Imagick::CHANNEL_DEFAULT</span></strong>. 参考此 <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">通道常数</a>列表      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagechanneldepth-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return int <b>TRUE</b> on success.*/
    public function getImageChannelDepth($channel) {}

/**
*<div id="imagick.getimagechanneldistortion" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageChannelDistortion</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageChannelDistortion</span> &mdash; <span class="dc-title">Compares image channels of an image to a reconstructed image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagechanneldistortion-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageChannelDistortion</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$reference</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$metric</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   Compares one or more image channels of an image to a reconstructed image   and returns the specified distortion metric.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagechanneldistortion-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">reference</span></dt>     <dd>      <p class="para">      Imagick object to compare to.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To       apply to more than one channel, combine channeltype constants using       bitwise operators. Refer to this       list of  <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">metric</span></dt>     <dd>      <p class="para">      One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.metric" class="link">metric type constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagechanneldistortion-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagechanneldistortion-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return float <b>TRUE</b> on success.*/
    public function getImageChannelDistortion(Imagick $reference, $channel, $metric) {}

/**
*<div id="imagick.getimagechannelextrema" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageChannelExtrema</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageChannelExtrema</span> &mdash; <span class="dc-title">Gets the extrema for one or more image channels</span></p> </div> <div id="imagick.getimagechannelextrema-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagechannelextrema-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageChannelExtrema</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Gets the extrema for one or more image channels.  Return value is an   associative array with the keys &quot;minima&quot; and &quot;maxima&quot;.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagechannelextrema-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To       apply to more than one channel, combine channeltype constants using       bitwise operators. Refer to this       list of  <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagechannelextrema-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagechannelextrema-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int[]*/
    public function getImageChannelExtrema($channel) {}

/**
*<div id="imagick.getimagechannelmean" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageChannelMean</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageChannelMean</span> &mdash; <span class="dc-title">Gets the mean and standard deviation</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagechannelmean-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageChannelMean</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Gets the mean and standard deviation of one or more image channels.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagechannelmean-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To       apply to more than one channel, combine channeltype constants using       bitwise operators. Refer to this       list of  <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagechannelmean-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an array with <span>&quot;mean&quot;</span> and <span>&quot;standardDeviation&quot;</span>   members.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagechannelmean-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return float[]*/
    public function getImageChannelMean($channel) {}

/**
*<div id="imagick.getimagechannelstatistics" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageChannelStatistics</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageChannelStatistics</span> &mdash; <span class="dc-title">Returns statistics for each channel in the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagechannelstatistics-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageChannelStatistics</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns statistics for each channel in the image.  The statistics include   the channel depth, its minima and maxima, the mean, and the standard   deviation.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagechannelstatistics-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagechannelstatistics-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return array*/
    public function getImageChannelStatistics() {}

/**
*<div id="imagick.getimagecolormapcolor" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageColormapColor</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageColormapColor</span> &mdash; <span class="dc-title">Returns the color of the specified colormap index</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagecolormapcolor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageColormapColor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$index</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span></div>  <p class="para rdfs-comment">   Returns the color of the specified colormap index.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagecolormapcolor-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">index</span></dt>     <dd>      <p class="para">      The offset into the image colormap.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagecolormapcolor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagecolormapcolor-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return ImagickPixel <b>TRUE</b> on success.*/
    public function getImageColormapColor($index) {}

/**
*<div id="imagick.getimagecolorspace" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageColorspace</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageColorspace</span> &mdash; <span class="dc-title">Gets the image colorspace</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagecolorspace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageColorspace</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the image colorspace.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagecolorspace-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagecolorspace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an integer which can be compared against <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.colorspace" class="link">COLORSPACE constants</a>.  </p> </div></div>
     * @return int <b>TRUE</b> on success.*/
    public function getImageColorspace() {}

/**
*<div id="imagick.getimagecompose" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageCompose</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageCompose</span> &mdash; <span class="dc-title">Returns the composite operator associated with the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagecompose-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageCompose</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the composite operator associated with the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagecompose-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagecompose-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return int <b>TRUE</b> on success.*/
    public function getImageCompose() {}

/**
*<div id="imagick.getimagedelay" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageDelay</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageDelay</span> &mdash; <span class="dc-title">Gets the image delay</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagedelay-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageDelay</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the image delay.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagedelay-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagedelay-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the image delay.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagedelay-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int the image delay.*/
    public function getImageDelay() {}

/**
*<div id="imagick.getimagedepth" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageDepth</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageDepth</span> &mdash; <span class="dc-title">Gets the image depth</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagedepth-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageDepth</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the image depth.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagedepth-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagedepth-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The image depth.  </p> </div></div>
     * @return int The image depth.*/
    public function getImageDepth() {}

/**
*<div id="imagick.getimagedistortion" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageDistortion</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageDistortion</span> &mdash; <span class="dc-title">Compares an image to a reconstructed image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagedistortion-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageDistortion</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type MagickWand" style="color:#EAB766">MagickWand</span></span> <span class="parameter" style="color:#3A95FF">$reference</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$metric</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   Compares an image to a reconstructed image and returns the specified distortion   metric.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagedistortion-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">reference</span></dt>     <dd>      <p class="para">      Imagick object to compare to.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">metric</span></dt>     <dd>      <p class="para">      One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.metric" class="link">metric type constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagedistortion-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the distortion metric used on the image (or the best guess   thereof).  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagedistortion-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return float the distortion metric used on the image (or the best guess*/
    public function getImageDistortion(Imagick $reference, $metric) {}

/**
*<div id="imagick.getimageextrema" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageExtrema</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageExtrema</span> &mdash; <span class="dc-title">Gets the extrema for the image</span></p> </div> <div id="imagick.getimageextrema-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageextrema-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageExtrema</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Gets the extrema for the image.  Returns an associative array with the keys &quot;min&quot; and &quot;max&quot;.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageextrema-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageextrema-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an associative array with the keys &quot;min&quot; and &quot;max&quot;.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimageextrema-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int[] an associative array with the keys "min" and "max".*/
    public function getImageExtrema() {}

/**
*<div id="imagick.getimagedispose" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageDispose</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageDispose</span> &mdash; <span class="dc-title">Gets the image disposal method</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagedispose-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageDispose</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the image disposal method.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagedispose-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagedispose-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the dispose method on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagedispose-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int the dispose method on success.*/
    public function getImageDispose() {}

/**
*<div id="imagick.getimagegamma" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageGamma</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageGamma</span> &mdash; <span class="dc-title">Gets the image gamma</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagegamma-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageGamma</strong></span>(): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   Gets the image gamma.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagegamma-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagegamma-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the image gamma on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagegamma-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return float the image gamma on success.*/
    public function getImageGamma() {}

/**
*<div id="imagick.getimagegreenprimary" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageGreenPrimary</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageGreenPrimary</span> &mdash; <span class="dc-title">Returns the chromaticy green primary point</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagegreenprimary-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageGreenPrimary</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns the chromaticity green primary point. Returns an array with the keys &quot;x&quot; and &quot;y&quot;.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagegreenprimary-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagegreenprimary-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an array with the keys &quot;x&quot; and &quot;y&quot; on success, throws an   ImagickException on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagegreenprimary-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return float[] an array with the keys "x" and "y" on success, throws an ImagickException on failure.*/
    public function getImageGreenPrimary() {}

/**
*<div id="imagick.getimageheight" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageHeight</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageHeight</span> &mdash; <span class="dc-title">Returns the image height</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageheight-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageHeight</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the image height.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageheight-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageheight-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the image height in pixels.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimageheight-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int the image height in pixels.*/
    public function getImageHeight() {}

/**
*<div id="imagick.getimagehistogram" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageHistogram</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageHistogram</span> &mdash; <span class="dc-title">Gets the image histogram</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagehistogram-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageHistogram</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns the image histogram as an array of ImagickPixel objects.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagehistogram-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagehistogram-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the image histogram as an array of ImagickPixel objects.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagehistogram-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.getimagehistogram-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 Generates  <span class="function"><strong style="color:#CC7832">Imagick::getImageHistogram()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">getColorStatistics</span><span style="color: #007700">(</span><span style="color: #9876AA">$histogramElements</span><span style="color: #007700">, </span><span style="color: #9876AA">$colorChannel</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$colorStatistics </span><span style="color: #007700">= [];<br /><br />    foreach (</span><span style="color: #9876AA">$histogramElements </span><span style="color: #007700">as </span><span style="color: #9876AA">$histogramElement</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$color </span><span style="color: #007700">= </span><span style="color: #9876AA">$histogramElement</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorValue</span><span style="color: #007700">(</span><span style="color: #9876AA">$colorChannel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$color </span><span style="color: #007700">= </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">$color </span><span style="color: #007700">* </span><span style="color: #9876AA">255</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$count </span><span style="color: #007700">= </span><span style="color: #9876AA">$histogramElement</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorCount</span><span style="color: #007700">();<br /><br />        if (</span><span style="color: #9876AA">array_key_exists</span><span style="color: #007700">(</span><span style="color: #9876AA">$color</span><span style="color: #007700">, </span><span style="color: #9876AA">$colorStatistics</span><span style="color: #007700">)) {<br />            </span><span style="color: #9876AA">$colorStatistics</span><span style="color: #007700">[</span><span style="color: #9876AA">$color</span><span style="color: #007700">] += </span><span style="color: #9876AA">$count</span><span style="color: #007700">;<br />        }<br />        else {<br />            </span><span style="color: #9876AA">$colorStatistics</span><span style="color: #007700">[</span><span style="color: #9876AA">$color</span><span style="color: #007700">] = </span><span style="color: #9876AA">$count</span><span style="color: #007700">;<br />        }<br />    }<br /><br />    </span><span style="color: #9876AA">ksort</span><span style="color: #007700">(</span><span style="color: #9876AA">$colorStatistics</span><span style="color: #007700">);<br />    <br />    return </span><span style="color: #9876AA">$colorStatistics</span><span style="color: #007700">;<br />}<br />    <br /><br /><br />function </span><span style="color: #9876AA">getImageHistogram</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$backgroundColor </span><span style="color: #007700">= </span><span style="color: #DD0000">'black'</span><span style="color: #007700">;<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">); </span><span style="color: #FF8000">//make the lines be as thin as possible<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$histogramWidth </span><span style="color: #007700">= </span><span style="color: #9876AA">256</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$histogramHeight </span><span style="color: #007700">= </span><span style="color: #9876AA">100</span><span style="color: #007700">; </span><span style="color: #FF8000">// the height for each RGB segment<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #FF8000">//Resize the image to be small, otherwise PHP tends to run out of memory<br />    //This might lead to bad results for images that are pathologically 'pixelly'<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">adaptiveResizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$histogramElements </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHistogram</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$histogram </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$histogram</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newpseudoimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$histogramWidth</span><span style="color: #007700">, </span><span style="color: #9876AA">$histogramHeight </span><span style="color: #007700">* </span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #DD0000">'xc:black'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$histogram</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$getMax </span><span style="color: #007700">= function (</span><span style="color: #9876AA">$carry</span><span style="color: #007700">, </span><span style="color: #9876AA">$item</span><span style="color: #007700">)  {<br />        if (</span><span style="color: #9876AA">$item </span><span style="color: #007700">&gt; </span><span style="color: #9876AA">$carry</span><span style="color: #007700">) {<br />            return </span><span style="color: #9876AA">$item</span><span style="color: #007700">;<br />        }<br />        return </span><span style="color: #9876AA">$carry</span><span style="color: #007700">;<br />    };<br /><br />    </span><span style="color: #9876AA">$colorValues </span><span style="color: #007700">= [<br />        </span><span style="color: #DD0000">'red' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">getColorStatistics</span><span style="color: #007700">(</span><span style="color: #9876AA">$histogramElements</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_RED</span><span style="color: #007700">),<br />        </span><span style="color: #DD0000">'lime' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">getColorStatistics</span><span style="color: #007700">(</span><span style="color: #9876AA">$histogramElements</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_GREEN</span><span style="color: #007700">),<br />        </span><span style="color: #DD0000">'blue' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">getColorStatistics</span><span style="color: #007700">(</span><span style="color: #9876AA">$histogramElements</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_BLUE</span><span style="color: #007700">),<br />    ];<br /><br />    </span><span style="color: #9876AA">$max </span><span style="color: #007700">= </span><span style="color: #9876AA">array_reduce</span><span style="color: #007700">(</span><span style="color: #9876AA">$colorValues</span><span style="color: #007700">[</span><span style="color: #DD0000">'red'</span><span style="color: #007700">] , </span><span style="color: #9876AA">$getMax</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$max </span><span style="color: #007700">= </span><span style="color: #9876AA">array_reduce</span><span style="color: #007700">(</span><span style="color: #9876AA">$colorValues</span><span style="color: #007700">[</span><span style="color: #DD0000">'lime'</span><span style="color: #007700">] , </span><span style="color: #9876AA">$getMax</span><span style="color: #007700">, </span><span style="color: #9876AA">$max</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$max </span><span style="color: #007700">= </span><span style="color: #9876AA">array_reduce</span><span style="color: #007700">(</span><span style="color: #9876AA">$colorValues</span><span style="color: #007700">[</span><span style="color: #DD0000">'blue'</span><span style="color: #007700">] , </span><span style="color: #9876AA">$getMax</span><span style="color: #007700">, </span><span style="color: #9876AA">$max</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$scale </span><span style="color: #007700">=  </span><span style="color: #9876AA">$histogramHeight </span><span style="color: #007700">/ </span><span style="color: #9876AA">$max</span><span style="color: #007700">;<br /><br />    </span><span style="color: #9876AA">$count </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">;<br />    foreach (</span><span style="color: #9876AA">$colorValues </span><span style="color: #007700">as </span><span style="color: #9876AA">$color </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$values</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setstrokecolor</span><span style="color: #007700">(</span><span style="color: #9876AA">$color</span><span style="color: #007700">);<br /><br />        </span><span style="color: #9876AA">$offset </span><span style="color: #007700">= (</span><span style="color: #9876AA">$count </span><span style="color: #007700">+ </span><span style="color: #9876AA">1</span><span style="color: #007700">) * </span><span style="color: #9876AA">$histogramHeight</span><span style="color: #007700">;<br /><br />        foreach (</span><span style="color: #9876AA">$values </span><span style="color: #007700">as </span><span style="color: #9876AA">$index </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$value</span><span style="color: #007700">) {<br />            </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">$index</span><span style="color: #007700">, </span><span style="color: #9876AA">$offset</span><span style="color: #007700">, </span><span style="color: #9876AA">$index</span><span style="color: #007700">, </span><span style="color: #9876AA">$offset </span><span style="color: #007700">- (</span><span style="color: #9876AA">$value </span><span style="color: #007700">* </span><span style="color: #9876AA">$scale</span><span style="color: #007700">));<br />        }<br />        </span><span style="color: #9876AA">$count</span><span style="color: #007700">++;<br />    }<br /><br />    </span><span style="color: #9876AA">$histogram</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br />    <br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">( </span><span style="color: #DD0000">"Content-Type: image/png" </span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$histogram</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return array the image histogram as an array of ImagickPixel objects.*/
    public function getImageHistogram() {}

/**
*<div id="imagick.getimageinterlacescheme" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageInterlaceScheme</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageInterlaceScheme</span> &mdash; <span class="dc-title">Gets the image interlace scheme</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageinterlacescheme-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageInterlaceScheme</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the image interlace scheme.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageinterlacescheme-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageinterlacescheme-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the interlace scheme as an integer on success.   错误时抛出<span class="classname"><strong class="classname">ImagickException</strong></span>。     </p> </div></div>
     * @return int the interlace scheme as an integer on success.*/
    public function getImageInterlaceScheme() {}

/**
*<div id="imagick.getimageiterations" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageIterations</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageIterations</span> &mdash; <span class="dc-title">Gets the image iterations</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageiterations-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageIterations</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the image iterations.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageiterations-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageiterations-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the image iterations as an integer.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimageiterations-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int the image iterations as an integer.*/
    public function getImageIterations() {}

/**
*<div id="imagick.getimagemattecolor" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageMatteColor</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageMatteColor</span> &mdash; <span class="dc-title">Returns the image matte color</span></p> </div> <div id="imagick.getimagemattecolor-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagemattecolor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageMatteColor</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span></div>  <p class="para rdfs-comment">   Returns the image matte color.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagemattecolor-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagemattecolor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns ImagickPixel object on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagemattecolor-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return ImagickPixel ImagickPixel object on success.*/
    public function getImageMatteColor() {}

/**
*<div id="imagick.getimagepage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImagePage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImagePage</span> &mdash; <span class="dc-title">Returns the page geometry</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagepage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImagePage</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns the page geometry associated with the image in an array with the   keys &quot;width&quot;, &quot;height&quot;, &quot;x&quot;, and &quot;y&quot;.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagepage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagepage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the page geometry associated with the image in an array with the   keys &quot;width&quot;, &quot;height&quot;, &quot;x&quot;, and &quot;y&quot;.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagepage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int[] the page geometry associated with the image in an array with the*/
    public function getImagePage() {}

/**
*<div id="imagick.getimagepixelcolor" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImagePixelColor</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImagePixelColor</span> &mdash; <span class="dc-title">Returns the color of the specified pixel</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagepixelcolor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImagePixelColor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span></div>  <p class="para rdfs-comment">   Returns the color of the specified pixel.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagepixelcolor-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">      The x-coordinate of the pixel      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">      The y-coordinate of the pixel      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagepixelcolor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an ImagickPixel instance for the color at the coordinates given.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagepixelcolor-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return ImagickPixel an ImagickPixel instance for the color at the coordinates given.*/
    public function getImagePixelColor($x, $y) {}

/**
*<div id="imagick.getimageprofile" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageProfile</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageProfile</span> &mdash; <span class="dc-title">Returns the named image profile</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageprofile-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageProfile</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Returns the named image profile.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageprofile-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">      The name of the profile to return.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageprofile-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a string containing the image profile.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimageprofile-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return string a string containing the image profile.*/
    public function getImageProfile($name) {}

/**
*<div id="imagick.getimageredprimary" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageRedPrimary</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageRedPrimary</span> &mdash; <span class="dc-title">Returns the chromaticity red primary point</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageredprimary-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageRedPrimary</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns the chromaticity red primary point as an array with the keys &quot;x&quot; and &quot;y&quot;.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageredprimary-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageredprimary-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Returns the chromaticity red primary point as an array with the keys &quot;x&quot;    and &quot;y&quot;.    错误时抛出<span class="classname"><strong class="classname">ImagickException</strong></span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimageredprimary-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return float[] the chromaticity red primary point as an array with the keys "x"*/
    public function getImageRedPrimary() {}

/**
*<div id="imagick.getimagerenderingintent" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageRenderingIntent</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageRenderingIntent</span> &mdash; <span class="dc-title">Gets the image rendering intent</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagerenderingintent-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageRenderingIntent</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the image rendering intent.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagerenderingintent-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagerenderingintent-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the image <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.renderingintent" class="link">rendering intent</a>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagerenderingintent-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int the image rendering intent.*/
    public function getImageRenderingIntent() {}

/**
*<div id="imagick.getimageresolution" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageResolution</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageResolution</span> &mdash; <span class="dc-title">获取图像的x,y轴分辨率</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageresolution-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageResolution</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   获取图像的x,y轴分辨率  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageresolution-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageresolution-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回分辨率值的数组  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimageresolution-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return float[] the resolution as an array.*/
    public function getImageResolution() {}

/**
*<div id="imagick.getimagescene" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageScene</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageScene</span> &mdash; <span class="dc-title">Gets the image scene</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagescene-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageScene</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the image scene.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagescene-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagescene-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the image scene.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagescene-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int the image scene.*/
    public function getImageScene() {}

/**
*<div id="imagick.getimagesignature" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageSignature</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageSignature</span> &mdash; <span class="dc-title">Generates an SHA-256 message digest</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagesignature-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageSignature</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Generates an SHA-256 message digest for the image pixel stream.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagesignature-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagesignature-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a string containing the SHA-256 hash of the file.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagesignature-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return string a string containing the SHA-256 hash of the file.*/
    public function getImageSignature() {}

/**
*<div id="imagick.getimagetickspersecond" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageTicksPerSecond</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageTicksPerSecond</span> &mdash; <span class="dc-title">Gets the image ticks-per-second</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagetickspersecond-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageTicksPerSecond</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the image ticks-per-second.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagetickspersecond-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagetickspersecond-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the image ticks-per-second.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagetickspersecond-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int the image ticks-per-second.*/
    public function getImageTicksPerSecond() {}

/**
*<div id="imagick.getimagetype" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageType</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageType</span> &mdash; <span class="dc-title">Gets the potential image type</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagetype-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageType</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the potential image type.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagetype-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagetype-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the potential image type.   <ul class="itemizedlist">    <li class="listitem">     <span class="simpara">      <strong><span>imagick::IMGTYPE_UNDEFINED</span></strong>     </span>    </li>    <li class="listitem">     <span class="simpara">      <strong><span>imagick::IMGTYPE_BILEVEL</span></strong>     </span>    </li>    <li class="listitem">     <span class="simpara">      <strong><span>imagick::IMGTYPE_GRAYSCALE</span></strong>     </span>    </li>    <li class="listitem">     <span class="simpara">      <strong><span>imagick::IMGTYPE_GRAYSCALEMATTE</span></strong>     </span>    </li>    <li class="listitem">     <span class="simpara">      <strong><span>imagick::IMGTYPE_PALETTE</span></strong>     </span>    </li>    <li class="listitem">     <span class="simpara">      <strong><span>imagick::IMGTYPE_PALETTEMATTE</span></strong>     </span>    </li>    <li class="listitem">     <span class="simpara">      <strong><span>imagick::IMGTYPE_TRUECOLOR</span></strong>     </span>    </li>    <li class="listitem">     <span class="simpara">      <strong><span>imagick::IMGTYPE_TRUECOLORMATTE</span></strong>     </span>    </li>    <li class="listitem">     <span class="simpara">      <strong><span>imagick::IMGTYPE_COLORSEPARATION</span></strong>     </span>    </li>    <li class="listitem">     <span class="simpara">      <strong><span>imagick::IMGTYPE_COLORSEPARATIONMATTE</span></strong>     </span>    </li>    <li class="listitem">     <span class="simpara">      <strong><span>imagick::IMGTYPE_OPTIMIZE</span></strong>     </span>    </li>   </ul>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagetype-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int the potential image type.*/
    public function getImageType() {}

/**
*<div id="imagick.getimageunits" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageUnits</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageUnits</span> &mdash; <span class="dc-title">获取图像的分辨率单位</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageunits-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageUnits</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   获取图像的分辨率单位。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageunits-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageunits-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回分辨率的单位  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimageunits-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int the image units of resolution.*/
    public function getImageUnits() {}

/**
*<div id="imagick.getimagevirtualpixelmethod" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageVirtualPixelMethod</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageVirtualPixelMethod</span> &mdash; <span class="dc-title">Returns the virtual pixel method</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagevirtualpixelmethod-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageVirtualPixelMethod</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the virtual pixel method for the specified image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagevirtualpixelmethod-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagevirtualpixelmethod-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the virtual pixel method on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagevirtualpixelmethod-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int the virtual pixel method on success.*/
    public function getImageVirtualPixelMethod() {}

/**
*<div id="imagick.getimagewhitepoint" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageWhitePoint</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageWhitePoint</span> &mdash; <span class="dc-title">Returns the chromaticity white point</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagewhitepoint-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageWhitePoint</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns the chromaticity white point as an associative array with the keys &quot;x&quot; and &quot;y&quot;.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagewhitepoint-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagewhitepoint-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the chromaticity white point as an associative array with the keys   &quot;x&quot; and &quot;y&quot;.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagewhitepoint-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return float[] the chromaticity white point as an associative array with the keys*/
    public function getImageWhitePoint() {}

/**
*<div id="imagick.getimagewidth" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageWidth</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageWidth</span> &mdash; <span class="dc-title">Returns the image width</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagewidth-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageWidth</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the image width.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagewidth-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagewidth-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the image width.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimagewidth-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int the image width.*/
    public function getImageWidth() {}

/**
*<div id="imagick.getnumberimages" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getNumberImages</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getNumberImages</span> &mdash; <span class="dc-title">Returns the number of images in the object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getnumberimages-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getNumberImages</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the number of images associated with Imagick object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getnumberimages-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getnumberimages-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the number of images associated with Imagick object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getnumberimages-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int the number of images associated with Imagick object.*/
    public function getNumberImages() {}

/**
*<div id="imagick.getimagetotalinkdensity" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageTotalInkDensity</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageTotalInkDensity</span> &mdash; <span class="dc-title">Gets the image total ink density</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagetotalinkdensity-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageTotalInkDensity</strong></span>(): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   Gets the image total ink density.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagetotalinkdensity-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagetotalinkdensity-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Returns the image total ink density of the image.    错误时抛出<span class="classname"><strong class="classname">ImagickException</strong></span>。  </p> </div></div>
     * @return float the image total ink density of the image.*/
    public function getImageTotalInkDensity() {}

/**
*<div id="imagick.getimageregion" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageRegion</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImageRegion</span> &mdash; <span class="dc-title">Extracts a region of the image</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimageregion-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageRegion</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Extracts a region of the image and returns it as a new Imagick object.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimageregion-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">       The width of the extracted region.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">height</span></dt>     <dd>      <p class="para">       The height of the extracted region.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       X-coordinate of the top-left corner of the extracted region.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       Y-coordinate of the top-left corner of the extracted region.      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimageregion-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Extracts a region of the image and returns it as a new wand.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimageregion-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> </div>
     * @return Imagick Extracts a region of the image and returns it as a new wand.*/
    public function getImageRegion($width, $height, $x, $y) {}

/**
*<div id="imagick.implodeimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::implodeImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::implodeImage</span> &mdash; <span class="dc-title">Creates a new image as a copy</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.implodeimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::implodeImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Creates a new image that is a copy of an existing one with the image pixels   &quot;imploded&quot; by the specified percentage.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.implodeimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">radius</span></dt>     <dd>      <p class="para">      The radius of the implode      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.implodeimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.implodeimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.implodeimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::implodeImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">implodeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">implodeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">0.0001</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function implodeImage($radius) {}

/**
*<div id="imagick.levelimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::levelImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::levelImage</span> &mdash; <span class="dc-title">Adjusts the levels of an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.levelimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::levelImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$blackPoint</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$gamma</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$whitePoint</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Adjusts the levels of an image by scaling the colors falling   between specified white and black points to the full   available quantum range. The parameters provided represent   the black, mid, and white points. The black point specifies   the darkest color in the image. Colors darker than the black   point are set to zero. Mid point specifies a gamma   correction to apply to the image.  White point specifies the   lightest color in the image. Colors brighter than the white   point are set to the maximum quantum value.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.levelimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">blackPoint</span></dt>     <dd>      <p class="para">      The image black point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">gamma</span></dt>     <dd>      <p class="para">      The gamma value      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">whitePoint</span></dt>     <dd>      <p class="para">      The image white point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To       apply to more than one channel, combine channeltype constants using       bitwise operators. Refer to this       list of  <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.levelimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.levelimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.levelimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::levelImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">levelImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$blackPoint</span><span style="color: #007700">, </span><span style="color: #9876AA">$gamma</span><span style="color: #007700">, </span><span style="color: #9876AA">$whitePoint</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoimage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #DD0000">'gradient:black-white'</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$quantum </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getQuantum</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">levelImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$blackPoint </span><span style="color: #007700">/ </span><span style="color: #9876AA">100 </span><span style="color: #007700">, </span><span style="color: #9876AA">$gamma</span><span style="color: #007700">, </span><span style="color: #9876AA">$quantum </span><span style="color: #007700">* </span><span style="color: #9876AA">$whitePoint </span><span style="color: #007700">/ </span><span style="color: #9876AA">100</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function levelImage($blackPoint, $gamma, $whitePoint, $channel = Imagick::CHANNEL_ALL) {}

/**
*<div id="imagick.magnifyimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::magnifyImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::magnifyImage</span> &mdash; <span class="dc-title">Scales an image proportionally 2x</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.magnifyimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::magnifyImage</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Is a convenience method that scales an image proportionally to twice its original size.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.magnifyimage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.magnifyimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.magnifyimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.magnifyimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::magnifyImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">magnifyImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">magnifyImage</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function magnifyImage() {}

/**
*<div id="imagick.mapimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::mapImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::mapImage</span> &mdash; <span class="dc-title">Replaces the colors of an image with the closest color from a reference image</span></p> </div> <div id="imagick.mapimage-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.mapimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::mapImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$map</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$dither</span></span>): <span class="type" style="color:#EAB766">bool</span></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.mapimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">map</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">dither</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.mapimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.mapimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function mapImage(Imagick $map, $dither) {}

/**
*<div id="imagick.mattefloodfillimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::matteFloodfillImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::matteFloodfillImage</span> &mdash; <span class="dc-title">Changes the transparency value of a color</span></p> </div> <div id="imagick.mattefloodfillimage-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.mattefloodfillimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::matteFloodfillImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$alpha</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$bordercolor</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Changes the transparency value of any pixel that matches   target and is an immediate neighbor.  If the method   <strong><span>FillToBorderMethod</span></strong> is specified, the transparency value   is changed for any neighbor pixel that does not match   the bordercolor member of image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.mattefloodfillimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">alpha</span></dt>     <dd>      <p class="para">       The level of transparency: 1.0 is fully opaque and 0.0 is fully       transparent.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">fuzz</span></dt>     <dd>      <p class="para">       The fuzz member of image defines how much tolerance is acceptable to       consider two colors as the same.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">bordercolor</span></dt>     <dd>      <p class="para">      An <span class="classname"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="classname">ImagickPixel</a></span> object or string representing the border color.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">      The starting x coordinate of the operation.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">      The starting y coordinate of the operation.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.mattefloodfillimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.mattefloodfillimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.mattefloodfillimage-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>        Now allows a string representing the color as the third parameter.        Previous versions allow only an <span class="classname"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="classname">ImagickPixel</a></span> object.       </td>      </tr>     </tbody>       </table>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function matteFloodfillImage($alpha, $fuzz, $bordercolor, $x, $y) {}

/**
*<div id="imagick.medianfilterimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::medianFilterImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::medianFilterImage</span> &mdash; <span class="dc-title">Applies a digital filter</span></p> </div> <div id="imagick.medianfilterimage-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.medianfilterimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::medianFilterImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Applies a digital filter that improves the quality of a   noisy image.  Each pixel is replaced by the median in a   set of neighboring pixels as defined by radius.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.medianfilterimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">radius</span></dt>     <dd>      <p class="para">      The radius of the pixel neighborhood.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.medianfilterimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.medianfilterimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.medianfilterimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::medianFilterImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">medianFilterImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    @</span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">medianFilterImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$radius</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function medianFilterImage($radius) {}

/**
*<div id="imagick.negateimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::negateImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::negateImage</span> &mdash; <span class="dc-title">Negates the colors in the reference image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.negateimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::negateImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$gray</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Negates the colors in the reference image. The Grayscale   option means that only grayscale values within the image   are negated.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.negateimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">gray</span></dt>     <dd>      <p class="para">      Whether to only negate grayscale pixels within the image.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To       apply to more than one channel, combine channeltype constants using       bitwise operators. Refer to this       list of <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.negateimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.negateimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.negateimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::negateImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">negateImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$grayOnly</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">negateImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$grayOnly</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function negateImage($gray, $channel = Imagick::CHANNEL_ALL) {}

/**
*<div id="imagick.paintopaqueimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::paintOpaqueImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::paintOpaqueImage</span> &mdash; <span class="dc-title">Change any pixel that matches color</span></p> </div> <div id="imagick.paintopaqueimage-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.paintopaqueimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::paintOpaqueImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$target</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$fill</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Changes any pixel that matches color with the color defined by fill.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.paintopaqueimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">target</span></dt>     <dd>      <p class="para">       Change this target color to the fill color within the image. An       ImagickPixel object or a string representing the target color.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">fill</span></dt>     <dd>      <p class="para">       An ImagickPixel object or a string representing the fill color.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">fuzz</span></dt>     <dd>      <p class="para">       The fuzz member of image defines how much tolerance is acceptable to       consider two colors as the same.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Provide any channel constant that is valid for your channel mode. To       apply to more than one channel, combine channeltype constants using       bitwise operators. Refer to this       list of <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.paintopaqueimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.paintopaqueimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.paintopaqueimage-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>        Now allows a string representing the color as first and second parameter.        Previous versions allow only an ImagickPixel object.       </td>      </tr>     </tbody>       </table>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function paintOpaqueImage($target, $fill, $fuzz, $channel = Imagick::CHANNEL_ALL) {}

/**
*<div id="imagick.painttransparentimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::paintTransparentImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::paintTransparentImage</span> &mdash; <span class="dc-title">Changes any pixel that matches color with the color defined by fill</span></p> </div> <div id="imagick.painttransparentimage-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.painttransparentimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::paintTransparentImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$target</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$alpha</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Changes any pixel that matches color with the color defined by fill.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.painttransparentimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">target</span></dt>     <dd>      <p class="para">      Change this target color to specified opacity value within the image.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">alpha</span></dt>     <dd>      <p class="para">       The level of transparency: 1.0 is fully opaque and 0.0 is fully        transparent.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">fuzz</span></dt>     <dd>      <p class="para">       The fuzz member of image defines how much tolerance is acceptable to       consider two colors as the same.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.painttransparentimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.painttransparentimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.painttransparentimage-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>        Now allows a string representing the color as the first parameter.        Previous versions allow only an ImagickPixel object.       </td>      </tr>     </tbody>       </table>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function paintTransparentImage($target, $alpha, $fuzz) {}

/**
*<div id="imagick.previewimages" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::previewImages</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::previewImages</span> &mdash; <span class="dc-title">Quickly pin-point appropriate parameters for image processing</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.previewimages-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::previewImages</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$preview</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Tiles 9 thumbnails of the specified image with an image processing   operation applied at varying strengths.  This is helpful to quickly   pin-point an appropriate parameter for an image processing operation.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.previewimages-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">preview</span></dt>     <dd>      <p class="para">       Preview type. See <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.preview" class="link">Preview type constants</a>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.previewimages-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.previewimages-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function previewImages($preview) {}

/**
*<div id="imagick.profileimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::profileImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::profileImage</span> &mdash; <span class="dc-title">Adds or removes a profile from an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.profileimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::profileImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type ?string" style="color:#EAB766">?string</span></span> <span class="parameter" style="color:#3A95FF">$profile</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Adds or removes a ICC, IPTC, or generic profile from an image.   If the profile is NULL, it is removed from the image otherwise   added.  Use a name of &#039;*&#039; and a profile of NULL to remove all   profiles from the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.profileimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">profile</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.profileimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.profileimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function profileImage($name, $profile) {}

/**
*<div id="imagick.quantizeimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::quantizeImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::quantizeImage</span> &mdash; <span class="dc-title">Analyzes the colors within a reference image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.quantizeimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::quantizeImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$numberColors</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$colorspace</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$treedepth</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$dither</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$measureError</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.quantizeimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">numberColors</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">colorspace</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">treedepth</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">dither</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">measureError</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.quantizeimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.quantizeimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.quantizeimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::quantizeImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">quantizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$numberColors</span><span style="color: #007700">, </span><span style="color: #9876AA">$colorSpace</span><span style="color: #007700">, </span><span style="color: #9876AA">$treeDepth</span><span style="color: #007700">, </span><span style="color: #9876AA">$dither</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">quantizeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$numberColors</span><span style="color: #007700">, </span><span style="color: #9876AA">$colorSpace</span><span style="color: #007700">, </span><span style="color: #9876AA">$treeDepth</span><span style="color: #007700">, </span><span style="color: #9876AA">$dither</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function quantizeImage($numberColors, $colorspace, $treedepth, $dither, $measureError) {}

/**
*<div id="imagick.quantizeimages" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::quantizeImages</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::quantizeImages</span> &mdash; <span class="dc-title">Analyzes the colors within a sequence of images</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.quantizeimages-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::quantizeImages</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$numberColors</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$colorspace</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$treedepth</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$dither</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$measureError</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.quantizeimages-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">numberColors</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">colorspace</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">treedepth</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">dither</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">measureError</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.quantizeimages-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.quantizeimages-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function quantizeImages($numberColors, $colorspace, $treedepth, $dither, $measureError) {}

/**
*<div id="imagick.reducenoiseimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::reduceNoiseImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::reduceNoiseImage</span> &mdash; <span class="dc-title">Smooths the contours of an image</span></p> </div> <div id="imagick.reducenoiseimage-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.reducenoiseimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::reduceNoiseImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Smooths the contours of an image while still preserving edge   information. The algorithm works by replacing each pixel with   its neighbor closest in value. A neighbor is defined by radius.   Use a radius of 0 and Imagick::reduceNoiseImage() selects a   suitable radius for you.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.reducenoiseimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">radius</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.reducenoiseimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.reducenoiseimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.reducenoiseimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::reduceNoiseImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">reduceNoiseImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$reduceNoise</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    @</span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">reduceNoiseImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$reduceNoise</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function reduceNoiseImage($radius) {}

/**
*<div id="imagick.removeimageprofile" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::removeImageProfile</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::removeImageProfile</span> &mdash; <span class="dc-title">Removes the named image profile and returns it</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.removeimageprofile-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::removeImageProfile</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Removes the named image profile and returns it.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.removeimageprofile-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.removeimageprofile-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a string containing the profile of the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.removeimageprofile-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return string a string containing the profile of the image.*/
    public function removeImageProfile($name) {}

/**
*<div id="imagick.separateimagechannel" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::separateImageChannel</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::separateImageChannel</span> &mdash; <span class="dc-title">Separates a channel from the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.separateimagechannel-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::separateImageChannel</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Separates a channel from the image and returns a grayscale image. A channel   is a particular color component of each pixel in the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.separateimagechannel-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Which &#039;channel&#039; to return. For colorspaces other than RGB, you can still use the CHANNEL_RED, CHANNEL_GREEN, CHANNEL_BLUE constants to indicate the 1st, 2nd and 3rd channels.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.separateimagechannel-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.separateimagechannel-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.separateimagechannel-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::separateImageChannel()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">separateImageChannel</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">separateimagechannel</span><span style="color: #007700">(</span><span style="color: #9876AA">$channel</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">separateImageChannel</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">CHANNEL_GREEN</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function separateImageChannel($channel) {}

/**
*<div id="imagick.sepiatoneimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::sepiaToneImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::sepiaToneImage</span> &mdash; <span class="dc-title">Sepia tones an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.sepiatoneimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::sepiaToneImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$threshold</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Applies a special effect to the image, similar to the effect achieved   in a photo darkroom by sepia toning.  Threshold ranges from 0 to   QuantumRange and is a measure of the extent of the sepia toning. A   threshold of 80 is a good starting point for a reasonable tone.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.sepiatoneimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">threshold</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.sepiatoneimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.sepiatoneimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.sepiatoneimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::sepiaToneImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">sepiaToneImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$sepia</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">sepiaToneImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$sepia</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function sepiaToneImage($threshold) {}

/**
*<div id="imagick.setimagebias" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageBias</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageBias</span> &mdash; <span class="dc-title">Sets the image bias for any method that convolves an image</span></p> </div> <div id="imagick.setimagebias-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagebias-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageBias</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$bias</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image bias for any method that convolves an image (e.g. Imagick::ConvolveImage()).  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagebias-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">bias</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagebias-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagebias-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setimagebias-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::setImageBias()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//requires ImageMagick version 6.9.0-1 to have an effect on convolveImage<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setImageBias</span><span style="color: #007700">(</span><span style="color: #9876AA">$bias</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #DD0000">"images/stack.jpg"</span><span style="color: #007700">));<br /><br />    </span><span style="color: #9876AA">$xKernel </span><span style="color: #007700">= array(<br />        -</span><span style="color: #9876AA">0.70</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0.70</span><span style="color: #007700">,<br />        -</span><span style="color: #9876AA">0.70</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0.70</span><span style="color: #007700">,<br />        -</span><span style="color: #9876AA">0.70</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0.70<br />    </span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageBias</span><span style="color: #007700">(</span><span style="color: #9876AA">$bias </span><span style="color: #007700">* </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">getQuantum</span><span style="color: #007700">());<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">convolveImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$xKernel</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">CHANNEL_ALL</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br />    <br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-type: image/png'</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageBias($bias) {}

/**
*<div id="imagick.setimageblueprimary" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageBluePrimary</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageBluePrimary</span> &mdash; <span class="dc-title">Sets the image chromaticity blue primary point</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimageblueprimary-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageBluePrimary</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image chromaticity blue primary point.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimageblueprimary-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimageblueprimary-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimageblueprimary-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageBluePrimary($x, $y) {}

/**
*<div id="imagick.setimagebordercolor" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageBorderColor</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageBorderColor</span> &mdash; <span class="dc-title">Sets the image border color</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagebordercolor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageBorderColor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$border</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image border color.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagebordercolor-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">border</span></dt>     <dd>      <p class="para">       The border color      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagebordercolor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagebordercolor-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.setimagebordercolor-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>        Now allows a string representing the color as a parameter.        Previous versions allow only an ImagickPixel object.       </td>      </tr>     </tbody>       </table>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageBorderColor($border) {}

/**
*<div id="imagick.setimagechanneldepth" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageChannelDepth</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageChannelDepth</span> &mdash; <span class="dc-title">Sets the depth of a particular image channel</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagechanneldepth-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageChannelDepth</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$depth</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the depth of a particular image channel.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagechanneldepth-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">depth</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagechanneldepth-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagechanneldepth-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageChannelDepth($channel, $depth) {}

/**
*<div id="imagick.setimagecolormapcolor" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageColormapColor</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageColormapColor</span> &mdash; <span class="dc-title">Sets the color of the specified colormap index</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagecolormapcolor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageColormapColor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$index</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span> <span class="parameter" style="color:#3A95FF">$color</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the color of the specified colormap index.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagecolormapcolor-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">index</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">color</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagecolormapcolor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagecolormapcolor-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageColormapColor($index, ImagickPixel $color) {}

/**
*<div id="imagick.setimagecolorspace" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageColorspace</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageColorspace</span> &mdash; <span class="dc-title">Sets the image colorspace</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagecolorspace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageColorspace</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$colorspace</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image colorspace. This method should be used when creating new images. To change the colorspace of an existing image, you should use <span class="methodname" style="color:#CC7832">{@link Imagick::transformImageColorspace()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagecolorspace-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">colorspace</span></dt>     <dd>      <p class="para">        One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.colorspace" class="link">COLORSPACE constants</a>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagecolorspace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagecolorspace-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageColorspace($colorspace) {}

/**
*<div id="imagick.setimagedispose" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageDispose</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageDispose</span> &mdash; <span class="dc-title">Sets the image disposal method</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagedispose-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageDispose</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$dispose</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image disposal method.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagedispose-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">dispose</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagedispose-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagedispose-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageDispose($dispose) {}

/**
*<div id="imagick.setimageextent" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageExtent</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageExtent</span> &mdash; <span class="dc-title">Sets the image size</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimageextent-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageExtent</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image size (i.e. columns &amp; rows).  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimageextent-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">columns</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">rows</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimageextent-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimageextent-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageExtent($columns, $rows) {}

/**
*<div id="imagick.setimagegreenprimary" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageGreenPrimary</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageGreenPrimary</span> &mdash; <span class="dc-title">Sets the image chromaticity green primary point</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagegreenprimary-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageGreenPrimary</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image chromaticity green primary point.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagegreenprimary-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagegreenprimary-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagegreenprimary-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageGreenPrimary($x, $y) {}

/**
*<div id="imagick.setimageinterlacescheme" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageInterlaceScheme</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageInterlaceScheme</span> &mdash; <span class="dc-title">Sets the image compression</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimageinterlacescheme-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageInterlaceScheme</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$interlace_scheme</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image compression.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimageinterlacescheme-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">interlace_scheme</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimageinterlacescheme-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimageinterlacescheme-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageInterlaceScheme($interlace_scheme) {}

/**
*<div id="imagick.setimageprofile" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageProfile</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageProfile</span> &mdash; <span class="dc-title">Adds a named profile to the Imagick object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimageprofile-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageProfile</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$profile</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Adds a named profile to the Imagick object.  If a profile   with the same name already exists, it is replaced. This   method differs from the Imagick::ProfileImage() method in   that it does not apply any CMS color profiles.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimageprofile-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">name</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">profile</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimageprofile-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimageprofile-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageProfile($name, $profile) {}

/**
*<div id="imagick.setimageredprimary" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageRedPrimary</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageRedPrimary</span> &mdash; <span class="dc-title">Sets the image chromaticity red primary point</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimageredprimary-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageRedPrimary</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image chromaticity red primary point.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimageredprimary-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimageredprimary-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimageredprimary-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageRedPrimary($x, $y) {}

/**
*<div id="imagick.setimagerenderingintent" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageRenderingIntent</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageRenderingIntent</span> &mdash; <span class="dc-title">Sets the image rendering intent</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagerenderingintent-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageRenderingIntent</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rendering_intent</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image rendering intent.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagerenderingintent-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">rendering_intent</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagerenderingintent-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagerenderingintent-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageRenderingIntent($rendering_intent) {}

/**
*<div id="imagick.setimagevirtualpixelmethod" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageVirtualPixelMethod</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageVirtualPixelMethod</span> &mdash; <span class="dc-title">Sets the image virtual pixel method</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagevirtualpixelmethod-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageVirtualPixelMethod</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$method</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image virtual pixel method.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagevirtualpixelmethod-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">method</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagevirtualpixelmethod-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageVirtualPixelMethod($method) {}

/**
*<div id="imagick.setimagewhitepoint" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageWhitePoint</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImageWhitePoint</span> &mdash; <span class="dc-title">Sets the image chromaticity white point</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagewhitepoint-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageWhitePoint</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image chromaticity white point.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagewhitepoint-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagewhitepoint-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimagewhitepoint-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImageWhitePoint($x, $y) {}

/**
*<div id="imagick.sigmoidalcontrastimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::sigmoidalContrastImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::sigmoidalContrastImage</span> &mdash; <span class="dc-title">Adjusts the contrast of an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.sigmoidalcontrastimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::sigmoidalContrastImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$sharpen</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$alpha</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$beta</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Adjusts the contrast of an image with a non-linear sigmoidal contrast   algorithm. Increase the contrast of the image using a sigmoidal transfer   function without saturating highlights or shadows. Contrast indicates   how much to increase the contrast (0 is none; 3 is typical; 20 is   pushing it); mid-point indicates where midtones fall in the resultant   image (0 is white; 50 is middle-gray; 100 is black). Set sharpen to   <strong><span>true</span></strong> to increase the image contrast otherwise the contrast is reduced.  </p>  <p class="para">   See also <a href="http://www.imagemagick.org/Usage/color_mods/#sigmoidal" class="link external">&raquo;&nbsp;ImageMagick   v6 Examples - Image Transformations — Sigmoidal Non-linearity Contrast</a>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.sigmoidalcontrastimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">sharpen</span></dt>     <dd>      <p class="para">       If true increase the contrast, if false decrease the contrast.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">alpha</span></dt>     <dd>      <p class="para">       The amount of contrast to apply. 1 is very little, 5 is a significant amount, 20 is extreme.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">beta</span></dt>     <dd>      <p class="para">       Where the midpoint of the gradient will be. This value should be in the range 0 to 1 - mutliplied by the quantum value for ImageMagick.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">       Which color channels the contrast will be applied to.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.sigmoidalcontrastimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.sigmoidalcontrastimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.sigmoidalcontrastimage-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1      Create a gradient image using <span class="function"><strong style="color:#CC7832">Imagick::sigmoidalContrastImage()</strong></span>     suitable for blending two images together smoothly, with the blending     defined by $contrast and $the midpoint    </strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">function </span><span style="color: #9876AA">generateBlendImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">, </span><span style="color: #9876AA">$contrast </span><span style="color: #007700">= </span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #9876AA">$midpoint </span><span style="color: #007700">= </span><span style="color: #9876AA">0.5</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">, </span><span style="color: #DD0000">'gradient:black-white'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$quanta </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getQuantumRange</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">sigmoidalContrastImage</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">, </span><span style="color: #9876AA">$contrast</span><span style="color: #007700">, </span><span style="color: #9876AA">$midpoint </span><span style="color: #007700">* </span><span style="color: #9876AA">$quanta</span><span style="color: #007700">[</span><span style="color: #DD0000">"quantumRangeLong"</span><span style="color: #007700">]);<br /><br />    return </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">; <br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function sigmoidalContrastImage($sharpen, $alpha, $beta, $channel = Imagick::CHANNEL_ALL) {}

/**
*<div id="imagick.stereoimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::stereoImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::stereoImage</span> &mdash; <span class="dc-title">Composites two images</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.stereoimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::stereoImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$offset_wand</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Composites two images and produces a single image that is the composite   of a left and right image of a stereo pair.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.stereoimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">offset_wand</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.stereoimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.stereoimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function stereoImage(Imagick $offset_wand) {}

/**
*<div id="imagick.textureimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::textureImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::textureImage</span> &mdash; <span class="dc-title">Repeatedly tiles the texture image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.textureimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>Imagick::textureImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$texture_wand</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Repeatedly tiles the texture image across and down the image canvas.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.textureimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">texture_wand</span></dt>     <dd>      <p class="para">       Imagick object to use as texture image      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.textureimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a new Imagick object that has the repeated texture applied.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.textureimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.textureimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::textureImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">textureImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">640</span><span style="color: #007700">, </span><span style="color: #9876AA">480</span><span style="color: #007700">, new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">'pink'</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"jpg"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$texture </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$texture</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">scaleimage</span><span style="color: #007700">(</span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getimagewidth</span><span style="color: #007700">() / </span><span style="color: #9876AA">4</span><span style="color: #007700">, </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getimageheight</span><span style="color: #007700">() / </span><span style="color: #9876AA">4</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">textureImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$texture</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return Imagick a new Imagick object that has the repeated texture applied.*/
    public function textureImage(Imagick $texture_wand) {}

/**
*<div id="imagick.tintimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::tintImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::tintImage</span> &mdash; <span class="dc-title">Applies a color vector to each pixel in the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.tintimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::tintImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$tint</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$opacity</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$legacy</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Applies a color vector to each pixel in the image. The length of the vector   is 0 for black and white and at its maximum for the midtones. The vector   weighing function is f(x)=(1-(4.0*((x-0.5)*(x-0.5)))).  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.tintimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">tint</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">opacity</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.tintimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.tintimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.tintimage-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>        Now allows a string representing the color as the first parameter and        a float representing the opacity value as the second parameter.        Previous versions allow only an ImagickPixel objects.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.tintimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::tintImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">tintImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$r</span><span style="color: #007700">, </span><span style="color: #9876AA">$g</span><span style="color: #007700">, </span><span style="color: #9876AA">$b</span><span style="color: #007700">, </span><span style="color: #9876AA">$a</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$a </span><span style="color: #007700">= </span><span style="color: #9876AA">$a </span><span style="color: #007700">/ </span><span style="color: #9876AA">100</span><span style="color: #007700">;<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(</span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #DD0000">'gradient:black-white'</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$tint </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">"rgb(</span><span style="color: #9876AA">$r</span><span style="color: #DD0000">, </span><span style="color: #9876AA">$g</span><span style="color: #DD0000">, </span><span style="color: #9876AA">$b</span><span style="color: #DD0000">)"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$opacity </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">"rgb(128, 128, 128, </span><span style="color: #9876AA">$a</span><span style="color: #DD0000">)"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">tintImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$tint</span><span style="color: #007700">, </span><span style="color: #9876AA">$opacity</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function tintImage($tint, $opacity, $legacy = false) {}

/**
*<div id="imagick.unsharpmaskimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::unsharpMaskImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::unsharpMaskImage</span> &mdash; <span class="dc-title">Sharpens an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.unsharpmaskimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::unsharpMaskImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$amount</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$threshold</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sharpens an image. We convolve the image with a Gaussian operator of the given   radius and standard deviation (sigma). For reasonable results, radius should be   larger than sigma.  Use a radius of 0 and Imagick::UnsharpMaskImage() selects a   suitable radius for you.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.unsharpmaskimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">radius</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">sigma</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">amount</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">threshold</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.unsharpmaskimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.unsharpmaskimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.unsharpmaskimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::unsharpMaskImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">unsharpMaskImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">$sigma</span><span style="color: #007700">, </span><span style="color: #9876AA">$amount</span><span style="color: #007700">, </span><span style="color: #9876AA">$unsharpThreshold</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">unsharpMaskImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">$sigma</span><span style="color: #007700">, </span><span style="color: #9876AA">$amount</span><span style="color: #007700">, </span><span style="color: #9876AA">$unsharpThreshold</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function unsharpMaskImage($radius, $sigma, $amount, $threshold, $channel = Imagick::CHANNEL_ALL) {}

/**
*<div id="imagick.getimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getImage</span> &mdash; <span class="dc-title">Returns a new Imagick object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImage</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Returns a new Imagick object with the current image sequence.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a new Imagick object with the current image sequence.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return Imagick a new Imagick object with the current image sequence.*/
    public function getImage() {}

/**
*<div id="imagick.addimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::addImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::addImage</span> &mdash; <span class="dc-title">Adds new image to Imagick object image list</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.addimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::addImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$source</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Adds new image to Imagick object from the current position of the source object.   After the operation iterator position is moved at the end of the list.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.addimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">source</span></dt>     <dd>      <p class="para">       The source Imagick object      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.addimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.addimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function addImage(Imagick $source) {}

/**
*<div id="imagick.setimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setImage</span> &mdash; <span class="dc-title">Replaces image in the object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$replace</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Replaces the current image sequence with the image from replace object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">replace</span></dt>     <dd>      <p class="para">       The replace Imagick object      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.setimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setimage-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 A <span class="function"><strong style="color:#CC7832">Imagick::setImage()</strong></span> example</strong></p>    <div class="example-contents"><p>     An example of using Imagick::setImage()    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Create the objects <br /></span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">'source.jpg'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$replace </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">(</span><span style="color: #DD0000">'replace.jpg'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// source.jpg is replaced with replace.jpg <br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$replace</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// output the image <br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-type: image/jpeg'</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setImage(Imagick $replace) {}

/**
*<div id="imagick.newimage" class="refentry">    <div class="refnamediv">        <h1 class="refname">Imagick::newImage</h1>        <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::newImage</span> &mdash; <span class="dc-title">创建一张图片</span></p>    </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.newimage-description">        <h3 class="title">说明</h3>        <div class="methodsynopsis dc-description">            <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::newImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$cols</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$background</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$format</span><span class="initializer"> = ?</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>        <p class="para rdfs-comment">            创建一个 Imagick 图片对象，同时可以附带设置一个 ImagickPixel 值作为其背景色。        </p>    </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.newimage-parameters">        <h3 class="title">参数</h3>        <span>            <dl>                                    <dt><span class="parameter" style="color:#3A95FF">cols</span></dt>                    <dd>                        <p class="para">                            新建图片对象列的值（宽多少像素）                        </p>                    </dd>                                                    <dt><span class="parameter" style="color:#3A95FF">rows</span></dt>                    <dd>                        <p class="para">                            新建图片对象行的值（高多少像素）                        </p>                    </dd>                                                    <dt><span class="parameter" style="color:#3A95FF">background</span></dt>                    <dd>                        <p class="para">                            新建图片独享的背景色                        </p>                    </dd>                                                    <dt><span class="parameter" style="color:#3A95FF">format</span></dt>                    <dd>                        <p class="para">                            图片格式。这个参数是在 Imagick 2.0.1 版本添加的。                        </p>                    </dd>                            </dl>        </span>    </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.newimage-returnvalues">        <h3 class="title">返回值</h3>        <p class="para">            成功时返回 <strong><span>true</span></strong>。        </p>    </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.newimage-errors">        <h3 class="title">错误／异常</h3>        <p class="para">            错误时抛出 ImagickException。        </p>    </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.newimage-changelog">        <h3 class="title">更新日志</h3>        <span>            <table class="doctable informaltable">                                    <thead>                        <tr>                            <th>版本</th>                            <th>说明</th>                        </tr>                    </thead>                    <tbody class="tbody">                        <tr>                            <td>PECL imagick 2.1.0</td>                            <td>                                现在可以似乎用了一个字符串作为颜色传入第三个参数。在此之前的版本只允许以一个 ImagickPixel 对象的形式传入。                            </td>                        </tr>                    </tbody>                            </table>        </span>    </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.newimage-examples">        <h3 class="title">示例</h3>        <span>            <div class="example" id="">                <p><strong>示例 #1 Using <span class="function"><strong style="color:#CC7832">Imagick::newImage()</strong></span>:</strong></p>                <div class="example-contents"><p>                    Create a new image and display it.                </p></div>                <div class="example-contents">                    <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, new </span><span style="color: #9876AA">ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">'red'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">'Content-type: image/png'</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>                </div>            </div>        </span>    </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function newImage($cols, $rows, $background, $format = null) {}

/**
*<div id="imagick.newpseudoimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::newPseudoImage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::newPseudoImage</span> &mdash; <span class="dc-title">Creates a new image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.newpseudoimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::newPseudoImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pseudoString</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Creates a new image using ImageMagick pseudo-formats.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.newpseudoimage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">columns</span></dt>     <dd>      <p class="para">       columns in the new image      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">rows</span></dt>     <dd>      <p class="para">       rows in the new image      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">pseudoString</span></dt>     <dd>      <p class="para">       string containing pseudo image definition.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.newpseudoimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.newpseudoimage-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.newpseudoimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::newPseudoImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$canvasType</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(</span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">$canvasType</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #FF8000">//newPseudoImage('gradient:red-rgba(64, 255, 255, 0.5)');<br />//newPseudoImage("radial-gradient:red-blue");<br /></span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(</span><span style="color: #DD0000">"plasma:fractal"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function newPseudoImage($columns, $rows, $pseudoString) {}

/**
*<div id="imagick.getcompression" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getCompression</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getCompression</span> &mdash; <span class="dc-title">Gets the object compression type</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getcompression-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getCompression</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the object compression type.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getcompression-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getcompression-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the compression constant  </p> </div></div>
     * @return int the compression constant*/
    public function getCompression() {}

/**
*<div id="imagick.getcompressionquality" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getCompressionQuality</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getCompressionQuality</span> &mdash; <span class="dc-title">Gets the object compression quality</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getcompressionquality-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getCompressionQuality</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the object compression quality.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getcompressionquality-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getcompressionquality-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns integer describing the compression quality  </p> </div></div>
     * @return int integer describing the compression quality*/
    public function getCompressionQuality() {}

/**
*<div id="imagick.getcopyright" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getCopyright</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getCopyright</span> &mdash; <span class="dc-title">Returns the ImageMagick API copyright as a string</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getcopyright-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getCopyright</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Returns the ImageMagick API copyright as a string.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getcopyright-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getcopyright-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a string containing the copyright notice of Imagemagick and   Magickwand C API.  </p> </div></div>
     * @return string a string containing the copyright notice of Imagemagick and*/
    public static function getCopyright() {}

/**
*<div id="imagick.getfilename" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getFilename</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getFilename</span> &mdash; <span class="dc-title">The filename associated with an image sequence</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getfilename-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getFilename</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Returns the filename associated with an image sequence.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getfilename-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getfilename-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a string on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getfilename-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return string a string on success.*/
    public function getFilename() {}

/**
*<div id="imagick.getformat" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getFormat</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getFormat</span> &mdash; <span class="dc-title">Returns the format of the Imagick object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getformat-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getFormat</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Returns the format of the Imagick object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getformat-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getformat-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the format of the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getformat-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return string the format of the image.*/
    public function getFormat() {}

/**
*<div id="imagick.gethomeurl" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getHomeURL</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getHomeURL</span> &mdash; <span class="dc-title">Returns the ImageMagick home URL</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.gethomeurl-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getHomeURL</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Returns the ImageMagick home URL.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.gethomeurl-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.gethomeurl-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a link to the imagemagick homepage.  </p> </div></div>
     * @return string a link to the imagemagick homepage.*/
    public static function getHomeURL() {}

/**
*<div id="imagick.getinterlacescheme" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getInterlaceScheme</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getInterlaceScheme</span> &mdash; <span class="dc-title">Gets the object interlace scheme</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getinterlacescheme-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getInterlaceScheme</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the object interlace scheme.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getinterlacescheme-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getinterlacescheme-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Gets the wand <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.interlace" class="link">interlace   scheme</a>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getinterlacescheme-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int Gets the wand interlace*/
    public function getInterlaceScheme() {}

/**
*<div id="imagick.getoption" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getOption</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getOption</span> &mdash; <span class="dc-title">Returns a value associated with the specified key</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getoption-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getOption</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$key</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Returns a value associated within the object for the specified key.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getoption-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">key</span></dt>     <dd>      <p class="para">      The name of the option      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getoption-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a value associated with a wand and the specified key.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getoption-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return string a value associated with a wand and the specified key.*/
    public function getOption($key) {}

/**
*<div id="imagick.getpackagename" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getPackageName</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getPackageName</span> &mdash; <span class="dc-title">Returns the ImageMagick package name</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getpackagename-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getPackageName</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Returns the ImageMagick package name.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getpackagename-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getpackagename-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the ImageMagick package name as a string.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getpackagename-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return string the ImageMagick package name as a string.*/
    public static function getPackageName() {}

    /**
     * (PECL imagick 2.0.0)<br/>
     * Returns the page geometry
     * @link https://php.net/manual/en/imagick.getpage.php
     * @return int[] the page geometry associated with the Imagick object in
     * an associative array with the keys "width", "height", "x", and "y",
     * throwing ImagickException on error.
     * @throws ImagickException on error
     */
    //width:int, height:int, x:int, y:int
/**
*<div id="imagick.getpage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getPage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getPage</span> &mdash; <span class="dc-title">Returns the page geometry</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getpage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getPage</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns the page geometry associated with the Imagick object in   an associative array with the keys &quot;width&quot;, &quot;height&quot;, &quot;x&quot;, and &quot;y&quot;.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getpage-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getpage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the page geometry associated with the Imagick object in   an associative array with the keys &quot;width&quot;, &quot;height&quot;, &quot;x&quot;, and &quot;y&quot;,   throwing ImagickException on error.  </p> </div></div>
*/
    public function getPage() {}

    /**
     * (PECL imagick 2.0.0)<br/>
     * Gets the quantum depth
     * @link https://php.net/manual/en/imagick.getquantumdepth.php
     * @return array the Imagick quantum depth as a string.
     */
    // quantumDepthLong:int, quantumDepthString:string
/**
*<div id="imagick.getquantumdepth" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getQuantumDepth</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getQuantumDepth</span> &mdash; <span class="dc-title">Gets the quantum depth</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getquantumdepth-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getQuantumDepth</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns the Imagick quantum depth.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getquantumdepth-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getquantumdepth-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an array with <span>&quot;quantumDepthLong&quot;</span> and <span>&quot;quantumDepthString&quot;</span>   members.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getquantumdepth-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
*/
    public static function getQuantumDepth() {}

/**
*<div id="imagick.getquantumrange" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getQuantumRange</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getQuantumRange</span> &mdash; <span class="dc-title">Returns the Imagick quantum range</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getquantumrange-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getQuantumRange</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns the quantum range for the Imagick instance.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getquantumrange-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getquantumrange-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an associative array containing the quantum range as an   <span class="type" style="color:#EAB766">int</span> (<span>&quot;quantumRangeLong&quot;</span>) and as a    <span class="type" style="color:#EAB766">string</span> (<span>&quot;quantumRangeString&quot;</span>).  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getquantumrange-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return array the Imagick quantum range as a string.*/
    public static function getQuantumRange() {}

/**
*<div id="imagick.getreleasedate" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getReleaseDate</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getReleaseDate</span> &mdash; <span class="dc-title">Returns the ImageMagick release date</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getreleasedate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getReleaseDate</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Returns the ImageMagick release date as a string.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getreleasedate-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getreleasedate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the ImageMagick release date as a string.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getreleasedate-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return string the ImageMagick release date as a string.*/
    public static function getReleaseDate() {}

/**
*<div id="imagick.getresource" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getResource</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getResource</span> &mdash; <span class="dc-title">Returns the specified resource&#039;s memory usage</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getresource-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getResource</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$type</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the specified resource&#039;s memory usage in megabytes.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getresource-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">type</span></dt>     <dd>      <p class="para">      Refer to the list of <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.resourcetypes" class="link">resourcetype constants</a>.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getresource-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the specified resource&#039;s memory usage in megabytes.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getresource-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return int the specified resource's memory usage in megabytes.*/
    public static function getResource($type) {}

/**
*<div id="imagick.getresourcelimit" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getResourceLimit</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getResourceLimit</span> &mdash; <span class="dc-title">Returns the specified resource limit</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getresourcelimit-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getResourceLimit</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$type</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the specified resource limit.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getresourcelimit-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">type</span></dt>     <dd>      <p class="para">       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.resourcetypes" class="link">resourcetype constants</a>.       The unit depends on the type of the resource being limited.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getresourcelimit-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the specified resource limit in megabytes.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getresourcelimit-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.getresourcelimit-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link Imagick::setResourceLimit()} - Sets the limit for a particular resource</span></li>  </ul> </div></div>
     * @return int the specified resource limit in megabytes.*/
    public static function getResourceLimit($type) {}

/**
*<div id="imagick.getsamplingfactors" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getSamplingFactors</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getSamplingFactors</span> &mdash; <span class="dc-title">Gets the horizontal and vertical sampling factor</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getsamplingfactors-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getSamplingFactors</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Gets the horizontal and vertical sampling factor.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getsamplingfactors-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getsamplingfactors-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an associative array with the horizontal and vertical sampling   factors of the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getsamplingfactors-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return array an associative array with the horizontal and vertical sampling*/
    public function getSamplingFactors() {}

/**
*<div id="imagick.getsize" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getSize</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getSize</span> &mdash; <span class="dc-title">Returns the size associated with the Imagick object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getsize-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getSize</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Get the size in pixels associated with the Imagick object, previously set by <span class="function">{@link Imagick::setSize()}</span>.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    This method just returns the size that was set using <span class="function">{@link Imagick::setSize()}</span>. If you want to get the actual width / height of the image, use <span class="function">{@link Imagick::getImageWidth()}</span> and <span class="function">{@link Imagick::getImageHeight()}</span>.   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getsize-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getsize-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the size associated with the Imagick object as an array with the   keys &quot;columns&quot; and &quot;rows&quot;.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.getsize-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Getting the size of a raw RGB image set at 200x400, after scaling to 400x800 (compared to width / height)</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//Set size first and then load the raw image<br /></span><span style="color: #9876AA">$img </span><span style="color: #007700">= new </span><span style="color: #9876AA">Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$img</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setSize</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$img</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">readImage</span><span style="color: #007700">(</span><span style="color: #DD0000">"image.rgb"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$img</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">scaleImage</span><span style="color: #007700">(</span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">800</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$size </span><span style="color: #007700">= </span><span style="color: #9876AA">$img</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getSize</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$size</span><span style="color: #007700">);<br /><br />echo </span><span style="color: #9876AA">$img</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">().</span><span style="color: #DD0000">"x"</span><span style="color: #007700">.</span><span style="color: #9876AA">$img</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [columns] =&gt; 200<br>    [rows] =&gt; 400<br>)<br>400x800<br></span></div>    </div>   </div>  </span> </div></div>
     * @return int[] the size associated with the Imagick object as an array with the*/
    public function getSize() {}

/**
*<div id="imagick.getversion" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getVersion</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::getVersion</span> &mdash; <span class="dc-title">Returns the ImageMagick API version</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getversion-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getVersion</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns the ImageMagick API version as a string and as a number.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getversion-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getversion-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the ImageMagick API version as a string and as a number.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.getversion-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return array the ImageMagick API version as a string and as a number.*/
    public static function getVersion() {}

/**
*<div id="imagick.setbackgroundcolor" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setBackgroundColor</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setBackgroundColor</span> &mdash; <span class="dc-title">Sets the object&#039;s default background color</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setbackgroundcolor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setBackgroundColor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$background</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the object&#039;s default background color.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setbackgroundcolor-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">background</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setbackgroundcolor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-imagick.setbackgroundcolor-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL imagick 2.1.0</td>       <td>        Now allows a string representing the color as a parameter.        Previous versions allow only an ImagickPixel object.       </td>      </tr>     </tbody>       </table>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setBackgroundColor($background) {}

/**
*<div id="imagick.setcompression" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setCompression</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setCompression</span> &mdash; <span class="dc-title">Sets the object&#039;s default compression type</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setcompression-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setCompression</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$compression</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the object&#039;s default compression type  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setcompression-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">compression</span></dt>     <dd>      <p class="para">       The compression type. See the {@link Imagick::COMPRESSION_*} constants.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setcompression-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setCompression($compression) {}

/**
*<div id="imagick.setcompressionquality" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setCompressionQuality</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setCompressionQuality</span> &mdash; <span class="dc-title">Sets the object&#039;s default compression quality</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setcompressionquality-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setCompressionQuality</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$quality</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the object&#039;s default compression quality.  </p>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    This method only works for new images e.g. those created through Imagick::newPseudoImage. For existing images you should use <span class="methodname" style="color:#CC7832">{@link Imagick::setImageCompressionQuality()}</span>.   </p>  </div>   </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setcompressionquality-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">quality</span></dt>     <dd>      <p class="para">       An <span class="type" style="color:#EAB766">int</span> between 1 and 100, 1 = high compression, 100 low compression.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setcompressionquality-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setcompressionquality-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::setCompressionQuality()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setCompressionQuality</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$quality</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$backgroundImagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setCompressionQuality</span><span style="color: #007700">(</span><span style="color: #9876AA">$quality</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">$backgroundImagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">(),<br />        </span><span style="color: #9876AA">$backgroundImagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">(),<br />        </span><span style="color: #DD0000">'canvas:white'<br />    </span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">compositeImage</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">$backgroundImagick</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COMPOSITE_ATOP</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">0</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">0<br />    </span><span style="color: #007700">);<br />    <br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"jpg"</span><span style="color: #007700">);    <br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setCompressionQuality($quality) {}

/**
*<div id="imagick.setfilename" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setFilename</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setFilename</span> &mdash; <span class="dc-title">Sets the filename before you read or write the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setfilename-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setFilename</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the filename before you read or write an image file.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setfilename-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setfilename-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setFilename($filename) {}

/**
*<div id="imagick.setformat" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setFormat</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setFormat</span> &mdash; <span class="dc-title">Sets the format of the Imagick object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setformat-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setFormat</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$format</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the format of the Imagick object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setformat-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">format</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setformat-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setFormat($format) {}

/**
*<div id="imagick.setinterlacescheme" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setInterlaceScheme</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setInterlaceScheme</span> &mdash; <span class="dc-title">Sets the image compression</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setinterlacescheme-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setInterlaceScheme</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$interlace_scheme</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image compression.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setinterlacescheme-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">interlace_scheme</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setinterlacescheme-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setInterlaceScheme($interlace_scheme) {}

/**
*<div id="imagick.setoption" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setOption</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setOption</span> &mdash; <span class="dc-title">Set an option</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setoption-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setOption</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$key</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Associates one or more options with the wand.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setoption-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">key</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setoption-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setoption-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  Attempt to reach &#039;$extent&#039; size<span class="function"><strong style="color:#CC7832">Imagick::setOption()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />    </span><span style="color: #007700">function </span><span style="color: #9876AA">renderJPG</span><span style="color: #007700">(</span><span style="color: #9876AA">$extent</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$imagePath </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">control</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImagePath</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'jpg'</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setOption</span><span style="color: #007700">(</span><span style="color: #DD0000">'jpeg:extent'</span><span style="color: #007700">, </span><span style="color: #9876AA">$extent</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />    }<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #2  <span class="function"><strong style="color:#CC7832">Imagick::setOption()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />    </span><span style="color: #007700">function </span><span style="color: #9876AA">renderPNG</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$format</span><span style="color: #007700">) {<br /><br />        </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setOption</span><span style="color: #007700">(</span><span style="color: #DD0000">'png:format'</span><span style="color: #007700">, </span><span style="color: #9876AA">$format</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />    }<br />    <br />    </span><span style="color: #FF8000">//Save as 64bit PNG.<br />    </span><span style="color: #9876AA">renderPNG</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #DD0000">'png64'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #3  <span class="function"><strong style="color:#CC7832">Imagick::setOption()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />    </span><span style="color: #007700">function </span><span style="color: #9876AA">renderCustomBitDepthPNG</span><span style="color: #007700">() {<br />        </span><span style="color: #9876AA">$imagePath </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">control</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImagePath</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br />        <br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setOption</span><span style="color: #007700">(</span><span style="color: #DD0000">'png:bit-depth'</span><span style="color: #007700">, </span><span style="color: #DD0000">'16'</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setOption</span><span style="color: #007700">(</span><span style="color: #DD0000">'png:color-type'</span><span style="color: #007700">, </span><span style="color: #9876AA">6</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$crash </span><span style="color: #007700">= </span><span style="color: #9876AA">true</span><span style="color: #007700">;<br />        if (</span><span style="color: #9876AA">$crash</span><span style="color: #007700">) {<br />            echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />        }<br />        else {<br />            </span><span style="color: #9876AA">$tempFilename </span><span style="color: #007700">= </span><span style="color: #9876AA">tempnam</span><span style="color: #007700">(</span><span style="color: #DD0000">'./'</span><span style="color: #007700">, </span><span style="color: #DD0000">'imagick'</span><span style="color: #007700">);<br />            </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">writeimage</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$tempFilename</span><span style="color: #007700">));<br />            echo </span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #9876AA">$tempFilename</span><span style="color: #007700">);<br />        }<br />    }<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setOption($key, $value) {}

/**
*<div id="imagick.setpage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setPage</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setPage</span> &mdash; <span class="dc-title">Sets the page geometry of the Imagick object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setpage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setPage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the page geometry of the Imagick object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setpage-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">height</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setpage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setPage($width, $height, $x, $y) {}

/**
*<div id="imagick.setresourcelimit" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setResourceLimit</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setResourceLimit</span> &mdash; <span class="dc-title">Sets the limit for a particular resource</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setresourcelimit-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setResourceLimit</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$type</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$limit</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   This method is used to modify the resource limits of the underlying ImageMagick   library.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setresourcelimit-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">type</span></dt>     <dd>      <p class="para">       Refer to the list of <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.resourcetypes" class="link">resourcetype constants</a>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">limit</span></dt>     <dd>      <p class="para">       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.resourcetypes" class="link">resourcetype constants</a>.       The unit depends on the type of the resource being limited.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setresourcelimit-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.setresourcelimit-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link Imagick::getResourceLimit()} - Returns the specified resource limit</span></li>  </ul> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public static function setResourceLimit($type, $limit) {}

/**
*<div id="imagick.setresolution" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setResolution</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setResolution</span> &mdash; <span class="dc-title">Sets the image resolution</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setresolution-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setResolution</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x_resolution</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y_resolution</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image resolution.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setresolution-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x_resolution</span></dt>     <dd>      <p class="para">       The horizontal resolution.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y_resolution</span></dt>     <dd>      <p class="para">       The vertical resolution.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setresolution-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-imagick.setresolution-notes">  <h3 class="title">注释</h3>  <p class="para">   <span class="methodname" style="color:#CC7832"><strong>Imagick::setResolution()</strong></span> must be called before   loading or creating an image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-imagick.setresolution-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link Imagick::setImageResolution()} - Sets the image resolution</span></li>   <li class="member"><span class="methodname" style="color:#CC7832">{@link Imagick::getImageResolution()} - 获取图像的x,y轴分辨率</span></li>  </ul> </div>  </div>
     * @return bool <b>TRUE</b> on success.*/
    public function setResolution($x_resolution, $y_resolution) {}

/**
*<div id="imagick.setsamplingfactors" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setSamplingFactors</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setSamplingFactors</span> &mdash; <span class="dc-title">Sets the image sampling factors</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setsamplingfactors-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setSamplingFactors</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$factors</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image sampling factors.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setsamplingfactors-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">factors</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setsamplingfactors-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setsamplingfactors-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::setSamplingFactors()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setSamplingFactors</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$imagePath </span><span style="color: #007700">= </span><span style="color: #DD0000">"../imagick/images/FineDetail.png"</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'jpg'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setSamplingFactors</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'2x2'</span><span style="color: #007700">, </span><span style="color: #DD0000">'1x1'</span><span style="color: #007700">, </span><span style="color: #DD0000">'1x1'</span><span style="color: #007700">));<br /><br />    </span><span style="color: #9876AA">$compressed </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br />    <br />    </span><span style="color: #9876AA">$reopen </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$reopen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">readImageBlob</span><span style="color: #007700">(</span><span style="color: #9876AA">$compressed</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$reopen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">resizeImage</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">$reopen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">() * </span><span style="color: #9876AA">4</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">$reopen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">() * </span><span style="color: #9876AA">4</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">FILTER_POINT</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">1<br />    </span><span style="color: #007700">);<br />    <br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$reopen</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setSamplingFactors(array $factors) {}

/**
*<div id="imagick.setsize" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setSize</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setSize</span> &mdash; <span class="dc-title">Sets the size of the Imagick object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setsize-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setSize</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the size of the Imagick object. Set it before you read a raw image   format such as RGB, GRAY, or CMYK.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setsize-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">columns</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">rows</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setsize-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setSize($columns, $rows) {}

/**
*<div id="imagick.settype" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setType</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::setType</span> &mdash; <span class="dc-title">Sets the image type attribute</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.settype-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setType</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$image_type</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the image type attribute.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.settype-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">image_type</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.settype-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setType($image_type) {}

    public function key() {}

    public function next() {}

    public function rewind() {}

/**
*<div id="imagick.valid" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::valid</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::valid</span> &mdash; <span class="dc-title">Checks if the current item is valid</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.valid-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::valid</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Checks if the current item is valid.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.valid-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.valid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function valid() {}

/**
*<div id="imagick.current" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::current</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">Imagick::current</span> &mdash; <span class="dc-title">Returns a reference to the current Imagick object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.current-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::current</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Returns reference to the current imagick object with image pointer at the correct sequence.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.current-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.current-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns self on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-imagick.current-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   错误时抛出 ImagickException。  </p> </div></div>
     * @return Imagick self on success.*/
    public function current() {}

/**
*<div id="imagick.brightnesscontrastimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::brightnessContrastImage</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::brightnessContrastImage</span> &mdash; <span class="dc-title">Change the brightness and/or contrast of an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.brightnesscontrastimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::brightnessContrastImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$brightness</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$contrast</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Change the brightness and/or contrast of an image. It converts the brightness and contrast parameters into slope and intercept and calls a polynomical function to apply to the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.brightnesscontrastimage-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">brightness</span></dt>    <dd>     <span>           </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">contrast</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.brightnesscontrastimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.brightnesscontrastimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::brightnessContrastImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">brightnessContrastImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$brightness</span><span style="color: #007700">, </span><span style="color: #9876AA">$contrast</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">brightnessContrastImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$brightness</span><span style="color: #007700">, </span><span style="color: #9876AA">$contrast</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return void*/
    public function brightnessContrastImage($brightness, $contrast, $CHANNEL = Imagick::CHANNEL_DEFAULT) {}

/**
*<div id="imagick.morphology" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::morphology</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::morphology</span> &mdash; <span class="dc-title">Applies a user supplied kernel to the image according to the given morphology method.</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.morphology-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::morphology</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$morphologyMethod</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$iterations</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickkernel.php" class="type ImagickKernel" style="color:#EAB766">ImagickKernel</a></span> <span class="parameter" style="color:#3A95FF">$ImagickKernel</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Applies a user supplied kernel to the image according to the given morphology method.  </p>  </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.morphology-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">morphologyMethod</span></dt>    <dd>     <span>      Which morphology method to use one of the \Imagick::MORPHOLOGY_* constants.     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">iterations</span></dt>    <dd>     <p class="para">      The number of iteration to apply the morphology function. A value of -1 means loop until no change found. How this is applied may depend on the morphology method. Typically this is a value of 1.     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">ImagickKernel</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.morphology-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.morphology-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 Convolve <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $imagick </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacter</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_GAUSSIAN</span><span style="color: #007700">, </span><span style="color: #DD0000">"5,1"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_CONVOLVE</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #2 Correlate <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />        </span><span style="color: #FF8000">// Top-left pixel must be black<br />        // Bottom right pixel must be white<br />        // We don't care about the rest.<br />        <br /><br />        </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromMatrix</span><span style="color: #007700">(</span><span style="color: #9876AA">self</span><span style="color: #007700">::</span><span style="color: #9876AA">$correlateMatrix</span><span style="color: #007700">, [</span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">]);<br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_CORRELATE</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #3 Erode <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_OCTAGON</span><span style="color: #007700">, </span><span style="color: #DD0000">"3"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_ERODE</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #4 Erode Intensity <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacter</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_OCTAGON</span><span style="color: #007700">, </span><span style="color: #DD0000">"1"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_ERODE_INTENSITY</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #5 Dilate <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_OCTAGON</span><span style="color: #007700">, </span><span style="color: #DD0000">"3"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_DILATE</span><span style="color: #007700">, </span><span style="color: #9876AA">4</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #6 Dilate intensity <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacter</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_OCTAGON</span><span style="color: #007700">, </span><span style="color: #DD0000">"1"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_DILATE_INTENSITY</span><span style="color: #007700">, </span><span style="color: #9876AA">4</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #7 Distance with Chebyshev kernel <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_CHEBYSHEV</span><span style="color: #007700">, </span><span style="color: #DD0000">"3"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_DISTANCE</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">autoLevelImage</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #8 Distance with Manhattan kernel <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_MANHATTAN</span><span style="color: #007700">, </span><span style="color: #DD0000">"5"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_DISTANCE</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">autoLevelImage</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #9 Distance with ocatagonal kernel <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_OCTAGONAL</span><span style="color: #007700">, </span><span style="color: #DD0000">"5"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_DISTANCE</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">autoLevelImage</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #10 Distance with Euclidean kernel <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_EUCLIDEAN</span><span style="color: #007700">, </span><span style="color: #DD0000">"4"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_DISTANCE</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">autoLevelImage</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #11 Edge <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_OCTAGON</span><span style="color: #007700">, </span><span style="color: #DD0000">"3"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_EDGE</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #12 Open <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        </span><span style="color: #FF8000">// As a result you will see that 'Open' smoothed the outline, by rounding off any sharp points, and remove any parts that is smaller than the shape used. It will also disconnect or 'open' any thin bridges.<br />        </span><span style="color: #9876AA">$canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_DISK</span><span style="color: #007700">, </span><span style="color: #DD0000">"6"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_OPEN</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #13 Open intensity <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        </span><span style="color: #FF8000">// As a result you will see that 'Open' smoothed the outline, by rounding off any sharp points, and remove any parts that is smaller than the shape used. It will also disconnect or 'open' any thin bridges.<br /><br />        </span><span style="color: #9876AA">$canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacter</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_DISK</span><span style="color: #007700">, </span><span style="color: #DD0000">"6"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_OPEN_INTENSITY</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #14 Close <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        </span><span style="color: #FF8000">//The basic use of the 'Close' method is to reduce or remove any 'holes' or 'gaps' about the size of the kernel 'Structure Element'. That is 'close' parts of the background that are about that size.<br />        </span><span style="color: #9876AA">$canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_DISK</span><span style="color: #007700">, </span><span style="color: #DD0000">"6"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_CLOSE</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #15 Close Intensity <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        </span><span style="color: #FF8000">//The basic use of the 'Close' method is to reduce or remove any 'holes' or 'gaps' about the size of the kernel 'Structure Element'. That is 'close' parts of the background that are about that size.<br />        </span><span style="color: #9876AA">$canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacter</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_DISK</span><span style="color: #007700">, </span><span style="color: #DD0000">"6"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_CLOSE_INTENSITY</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #16 Smooth <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_OCTAGON</span><span style="color: #007700">, </span><span style="color: #DD0000">"3"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_SMOOTH</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #17 Edge in <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_OCTAGON</span><span style="color: #007700">, </span><span style="color: #DD0000">"3"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_EDGE_IN</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #18 Edge out <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_OCTAGON</span><span style="color: #007700">, </span><span style="color: #DD0000">"3"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_EDGE_OUT</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #19 The &#039;TopHat&#039; method, or more specifically &#039;White Top Hat&#039;, returns the pixels that were removed by a Opening of the shape, that is the pixels that were removed to round off the points, and the connecting bridged between shapes. <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_DISK</span><span style="color: #007700">, </span><span style="color: #DD0000">"5"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_TOP_HAT</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #20 The &#039;BottomHat&#039; method, also known as &#039;Black TopHat&#039; is the pixels that a Closing of the shape adds to the image. That is the pixels that were used to fill in the &#039;holes&#039;, &#039;gaps&#039;, and &#039;bridges&#039;. <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_DISK</span><span style="color: #007700">, </span><span style="color: #DD0000">"5"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_BOTTOM_HAT</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #21 Hit and Miss <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #FF8000">//This finds all the pixels with 3 pixels of the right edge<br />        </span><span style="color: #9876AA">$matrix </span><span style="color: #007700">= [[</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">]];<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromMatrix</span><span style="color: #007700">(<br />            </span><span style="color: #9876AA">$matrix</span><span style="color: #007700">,<br />            [</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">]<br />        );<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_HIT_AND_MISS</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #22 Thinning <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$leftEdgeKernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromMatrix</span><span style="color: #007700">([[</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">]], [</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br />        </span><span style="color: #9876AA">$rightEdgeKernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromMatrix</span><span style="color: #007700">([[</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">]], [</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br />        </span><span style="color: #9876AA">$leftEdgeKernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addKernel</span><span style="color: #007700">(</span><span style="color: #9876AA">$rightEdgeKernel</span><span style="color: #007700">);<br />        <br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_THINNING</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #9876AA">$leftEdgeKernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #23 Thicken <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$leftEdgeKernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromMatrix</span><span style="color: #007700">([[</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">]], [</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br />        </span><span style="color: #9876AA">$rightEdgeKernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromMatrix</span><span style="color: #007700">([[</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">]], [</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br />        </span><span style="color: #9876AA">$leftEdgeKernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addKernel</span><span style="color: #007700">(</span><span style="color: #9876AA">$rightEdgeKernel</span><span style="color: #007700">);<br /><br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_THICKEN</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #9876AA">$leftEdgeKernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #24 Thick to generate a convex hull <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$diamondKernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_DIAMOND</span><span style="color: #007700">, </span><span style="color: #DD0000">"1"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$convexKernel </span><span style="color: #007700">=  </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_CONVEX_HULL</span><span style="color: #007700">, </span><span style="color: #DD0000">""</span><span style="color: #007700">);<br /><br />        </span><span style="color: #FF8000">// The thicken morphology doesn't handle small gaps. We close them<br />        // with the close morphology.<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_CLOSE</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$diamondKernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_THICKEN</span><span style="color: #007700">, -</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$convexKernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_CLOSE</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$diamondKernel</span><span style="color: #007700">);<br /><br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #25 Iterative morphology <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_DISK</span><span style="color: #007700">, </span><span style="color: #DD0000">"2"</span><span style="color: #007700">);        <br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">morphology</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">MORPHOLOGY_ITERATIVE</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">autoLevelImage</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #26 Helper function to get an image silhouette <span class="function"><strong style="color:#CC7832">Imagick::morphology()</strong></span></strong></p>      <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">getCharacterOutline</span><span style="color: #007700">() {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #DD0000">"./images/character.png"</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$character </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$character</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">(),<br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">(),<br />        </span><span style="color: #DD0000">"canvas:white"<br />    </span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$canvas </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">(),<br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">(),<br />        </span><span style="color: #DD0000">"canvas:black"<br />    </span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$character</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">compositeimage</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COMPOSITE_COPYOPACITY</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0<br />    </span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">compositeimage</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">$character</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COMPOSITE_ATOP</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0<br />    </span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br /><br />    return </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return void*/
    public function morphology($morphologyMethod, $iterations, ImagickKernel $ImagickKernel, $CHANNEL = Imagick::CHANNEL_DEFAULT) {}

/**
*<div id="imagick.filter" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::filter</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::filter</span> &mdash; <span class="dc-title">Applies a custom convolution kernel to the image</span></p> </div> <div id="imagick.filter-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.filter-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::filter</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickkernel.php" class="type ImagickKernel" style="color:#EAB766">ImagickKernel</a></span> <span class="parameter" style="color:#3A95FF">$ImagickKernel</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_UNDEFINED</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Applies a custom convolution kernel to the image.  </p>  </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.filter-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ImagickKernel</span></dt>    <dd>     <span>      An instance of ImagickKernel that represents either a single kernel or a linked series of kernels.     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>    <dd>     <p class="para">      Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a> using bitwise operators. 缺省为<strong><span>Imagick::CHANNEL_DEFAULT</span></strong>. 参考此 <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">通道常数</a>列表     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.filter-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.filter-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::filter()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">filter</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$matrix </span><span style="color: #007700">= [<br />        [-</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, -</span><span style="color: #9876AA">1</span><span style="color: #007700">],<br />        [</span><span style="color: #9876AA">0</span><span style="color: #007700">,  </span><span style="color: #9876AA">5</span><span style="color: #007700">,  </span><span style="color: #9876AA">0</span><span style="color: #007700">],<br />        [-</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, -</span><span style="color: #9876AA">1</span><span style="color: #007700">],<br />    ];<br />    <br />    </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromMatrix</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$strength </span><span style="color: #007700">= </span><span style="color: #9876AA">0.5</span><span style="color: #007700">;    <br />    </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">scale</span><span style="color: #007700">(</span><span style="color: #9876AA">$strength</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">NORMALIZE_KERNEL_VALUE</span><span style="color: #007700">);    <br />    </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addUnityKernel</span><span style="color: #007700">(</span><span style="color: #9876AA">1 </span><span style="color: #007700">- </span><span style="color: #9876AA">$strength</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">filter</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return void*/
    public function filter(ImagickKernel $ImagickKernel, $CHANNEL = Imagick::CHANNEL_DEFAULT) {}

/**
*<div id="imagick.colormatriximage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::colorMatrixImage</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::colorMatrixImage</span> &mdash; <span class="dc-title">Apply color transformation to an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.colormatriximage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::colorMatrixImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$color_matrix</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Apply color transformation to an image. The method permits saturation changes, hue rotation, luminance to alpha, and various other effects. Although variable-sized transformation matrices can be used, typically one uses a 5x5 matrix for an RGBA image and a 6x6 for CMYKA (or RGBA with offsets). The matrix is similar to those used by Adobe Flash except offsets are in column 6 rather than 5 (in support of CMYKA images) and offsets are normalized (divide Flash offset by 255)  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.colormatriximage-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">color_matrix</span></dt>    <dd>     <span>           </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.colormatriximage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.colormatriximage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::colorMatrixImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">colorMatrixImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$colorMatrix</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//A color matrix should look like:<br />    //    $colorMatrix = [<br />    //        1.5, 0.0, 0.0, 0.0, 0.0, -0.157,<br />    //        0.0, 1.0, 0.5, 0.0, 0.0, -0.157,<br />    //        0.0, 0.0, 1.5, 0.0, 0.0, -0.157,<br />    //        0.0, 0.0, 0.0, 1.0, 0.0,  0.0,<br />    //        0.0, 0.0, 0.0, 0.0, 1.0,  0.0,<br />    //        0.0, 0.0, 0.0, 0.0, 0.0,  1.0<br />    //    ];<br /><br />    </span><span style="color: #9876AA">$background </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$background</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageWidth</span><span style="color: #007700">(), </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHeight</span><span style="color: #007700">(),  </span><span style="color: #DD0000">"pattern:checkerboard"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$background</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">colorMatrixImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$colorMatrix</span><span style="color: #007700">);<br />    <br />    </span><span style="color: #9876AA">$background</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">compositeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagick</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COMPOSITE_ATOP</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$background</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return void*/
    public function colorMatrixImage($color_matrix = Imagick::CHANNEL_DEFAULT) {}

/**
*<div id="imagick.deleteimageproperty" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::deleteImageProperty</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::deleteImageProperty</span> &mdash; <span class="dc-title">Deletes an image property</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.deleteimageproperty-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::deleteImageProperty</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Deletes an image property.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.deleteimageproperty-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">name</span></dt>    <dd>     <span>      The name of the property to delete.     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.deleteimageproperty-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return void*/
    public function deleteImageProperty($name) {}

/**
*<div id="imagick.forwardfouriertransformimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::forwardFourierTransformImage</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::forwardFourierTransformImage</span> &mdash; <span class="dc-title">Implements the discrete Fourier transform (DFT)</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.forwardfouriertransformimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::forwardFourierTransformimage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$magnitude</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Implements the discrete Fourier transform (DFT) of the image either as a magnitude / phase or real / imaginary image pair.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.forwardfouriertransformimage-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">magnitude</span></dt>    <dd>     <span>      If true, return as magnitude / phase pair otherwise a real / imaginary image pair.     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.forwardfouriertransformimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.forwardfouriertransformimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::forwardFourierTransformImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">//Utility function for forwardTransformImage<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">createMask</span><span style="color: #007700">() {<br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'rgb(255, 255, 255)'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'rgb(255, 255, 255)'</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//Draw a circle on the y-axis, with it's centre<br />    //at x, y that touches the origin<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">circle</span><span style="color: #007700">(</span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">220</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">512</span><span style="color: #007700">, </span><span style="color: #9876AA">512</span><span style="color: #007700">, </span><span style="color: #DD0000">"black"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">gaussianBlurImage</span><span style="color: #007700">(</span><span style="color: #9876AA">20</span><span style="color: #007700">, </span><span style="color: #9876AA">20</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">autoLevelImage</span><span style="color: #007700">();<br /><br />    return </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">;<br />}<br /><br /><br />function </span><span style="color: #9876AA">forwardFourierTransformImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">resizeimage</span><span style="color: #007700">(</span><span style="color: #9876AA">512</span><span style="color: #007700">, </span><span style="color: #9876AA">512</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">FILTER_LANCZOS</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$mask </span><span style="color: #007700">= </span><span style="color: #9876AA">createMask</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">forwardFourierTransformImage</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br />    @</span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setimageindex</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$magnitude </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getimage</span><span style="color: #007700">();<br /><br />    @</span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setimageindex</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagickPhase </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getimage</span><span style="color: #007700">();<br /><br />    if (</span><span style="color: #9876AA">true</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$imagickPhase</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">compositeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$mask</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COMPOSITE_MULTIPLY</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    }<br /><br />    if (</span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$output </span><span style="color: #007700">= clone </span><span style="color: #9876AA">$imagickPhase</span><span style="color: #007700">;<br />        </span><span style="color: #9876AA">$output</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setimageformat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />        echo </span><span style="color: #9876AA">$output</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />    }<br /><br />    </span><span style="color: #9876AA">$magnitude</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">inverseFourierTransformImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagickPhase</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$magnitude</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setimageformat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$magnitude</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return void*/
    public function forwardFourierTransformimage($magnitude) {}

/**
*<div id="imagick.getimagecompression" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getImageCompression</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::getImageCompression</span> &mdash; <span class="dc-title">Gets the current image&#039;s compression type</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getimagecompression-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getImageCompression</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the current image&#039;s compression type.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getimagecompression-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getimagecompression-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the compression constant  </p> </div></div>
     * @return int*/
    public function getImageCompression() {}

/**
*<div id="imagick.getregistry" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getRegistry</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::getRegistry</span> &mdash; <span class="dc-title">Get a StringRegistry entry</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getregistry-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getRegistry</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$key</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Get the StringRegistry entry for the named key or false if not set.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getregistry-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <span>      The entry to get.     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getregistry-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
     * @return string|false*/
    public static function getRegistry($key) {}

/**
*<div id="imagick.getquantum" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::getQuantum</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::getQuantum</span> &mdash; <span class="dc-title">Returns the ImageMagick quantum range</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.getquantum-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::getQuantum</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the ImageMagick quantum range. If HDRI was enabled then the type is a float, if not it is an int.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.getquantum-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.getquantum-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
     * @return int*/
    public static function getQuantum() {}

/**
*<div id="imagick.identifyformat" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::identifyFormat</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::identifyFormat</span> &mdash; <span class="dc-title">Formats a string with image details</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.identifyformat-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::identifyFormat</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$embedText</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   Replaces any embedded formatting characters with the appropriate image property and returns the interpreted text. See http://www.imagemagick.org/script/escape.php for escape sequences.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.identifyformat-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">embedText</span></dt>    <dd>     <span>      A string containing formatting sequences e.g. &quot;Trim box: %@ number of unique colors: %k&quot;.     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.identifyformat-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns format 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.identifyformat-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::identifyFormat()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $output </span><span style="color: #007700">= </span><span style="color: #DD0000">"Output of 'Trim box: %@ number of unique colors: %k' is: &lt;br/&gt;"</span><span style="color: #007700">;<br />        </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #DD0000">"./images/artifact/mask.png"</span><span style="color: #007700">));<br />        </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">identifyFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"Trim box: %@ number of unique colors: %k"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool*/
    public function identifyFormat($embedText) {}

/**
*<div id="imagick.inversefouriertransformimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::inverseFourierTransformImage</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::inverseFourierTransformImage</span> &mdash; <span class="dc-title">Implements the inverse discrete Fourier transform (DFT)</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.inversefouriertransformimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::inverseFourierTransformImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$complement</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$magnitude</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Implements the inverse discrete Fourier transform (DFT) of the image either as a magnitude / phase or real / imaginary image pair.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.inversefouriertransformimage-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">complement</span></dt>    <dd>     <span>      The second image to combine with this one to form either the magnitude / phase or real / imaginary image pair.     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">magnitude</span></dt>    <dd>     <p class="para">      If true, combine as magnitude / phase pair otherwise a real / imaginary image pair.     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.inversefouriertransformimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return void*/
    public function inverseFourierTransformImage($complement, $magnitude) {}

/**
*<div id="imagick.listregistry" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::listRegistry</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::listRegistry</span> &mdash; <span class="dc-title">List all the registry settings</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.listregistry-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::listRegistry</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   List all the registry settings. Returns an array of all the key/value pairs in the registry  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.listregistry-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.listregistry-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An array containing the key/values from the registry.  </p> </div></div>
     * @return array An array containing the key/values from the registry.*/
    public static function listRegistry() {}

/**
*<div id="imagick.rotationalblurimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::rotationalBlurImage</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::rotationalBlurImage</span> &mdash; <span class="dc-title">Rotational blurs an image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.rotationalblurimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::rotationalBlurImage</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$angle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Rotational blurs an image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.rotationalblurimage-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">angle</span></dt>    <dd>     <span>      The angle to apply the blur over.     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>    <dd>     <p class="para">      Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a> using bitwise operators. 缺省为<strong><span>Imagick::CHANNEL_DEFAULT</span></strong>. 参考此 <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">通道常数</a>列表     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.rotationalblurimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.rotationalblurimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::rotationalBlurImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">rotationalBlurImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rotationalBlurImage</span><span style="color: #007700">(</span><span style="color: #9876AA">3</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rotationalBlurImage</span><span style="color: #007700">(</span><span style="color: #9876AA">5</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rotationalBlurImage</span><span style="color: #007700">(</span><span style="color: #9876AA">7</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return void*/
    public function rotationalBlurImage($angle, $CHANNEL = Imagick::CHANNEL_DEFAULT) {}

/**
*<div id="imagick.selectiveblurimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::selectiveBlurImage</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::selectiveBlurImage</span> &mdash; <span class="dc-title">Selectively blur an image within a contrast threshold</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.selectiveblurimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::selectiveBlurImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$radius</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sigma</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$threshold</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Selectively blur an image within a contrast threshold. It is similar to the unsharpen mask that sharpens everything with contrast above a certain threshold.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.selectiveblurimage-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">radius</span></dt>    <dd>     <span>           </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">sigma</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">threshold</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>    <dd>     <p class="para">      Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">channel constants</a> using bitwise operators. 缺省为<strong><span>Imagick::CHANNEL_DEFAULT</span></strong>. 参考此 <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.channel" class="link">通道常数</a>列表     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.selectiveblurimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.selectiveblurimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::selectiveBlurImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">selectiveBlurImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">$sigma</span><span style="color: #007700">, </span><span style="color: #9876AA">$threshold</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">selectiveBlurImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">$sigma</span><span style="color: #007700">, </span><span style="color: #9876AA">$threshold</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return void*/
    public function selectiveBlurImage($radius, $sigma, $threshold, $CHANNEL = Imagick::CHANNEL_DEFAULT) {}

    /**
     * Set whether antialiasing should be used for operations. On by default.
     * @param bool $antialias
     * @return int
     * @throws ImagickException on error.
     * @since 3.3.0
     */
    public function setAntiAlias($antialias) {}

/**
*<div id="imagick.setimagebiasquantum" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setImageBiasQuantum</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::setImageBiasQuantum</span> &mdash; <span class="dc-title">Sets the image bias</span></p> </div> <div id="imagick.setimagebiasquantum-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数在 Imagick 3.4.4 中被 <em>废弃</em>，强烈建议不要应用此函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setimagebiasquantum-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setImageBiasQuantum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$bias</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   Sets the image bias. Bias should be scaled with <span>0</span> (no adjustment) to <span>1</span> (quantum value).  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setimagebiasquantum-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">bias</span></dt>    <dd>     <span>           </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setimagebiasquantum-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
     * @return void*/
    public function setImageBiasQuantum($bias) {}

/**
*<div id="imagick.setprogressmonitor" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setProgressMonitor</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::setProgressMonitor</span> &mdash; <span class="dc-title">Set a callback to be called during processing</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setprogressmonitor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setProgressMonitor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$callback</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Set a callback that will be called during the processing of the Imagick image.  </p>  </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setprogressmonitor-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">callback</span></dt>    <dd>     <span>      The progress function to call. It should return true if image processing should continue, or false if it should be cancelled. The offset parameter indicates the progress and the span parameter indicates the total amount of work needed to be done.     </span>          <div class="methodsynopsis dc-description">      <span class="methodname" style="color:#CC7832">       <span class="replaceable">callback</span>      </span>(<span class="methodparam">       <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$offset</span>      </span>, <span class="methodparam">       <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span>        <span class="parameter" style="color:#3A95FF">$span</span>      </span>): <span class="type" style="color:#EAB766">bool</span></div>     <div class="caution"><strong class="caution">警告</strong>      <p class="para">       The values passed to the callback function are not consistent. In particular the span parameter can increase during image processing. Because of this calculating the percentage complete of an image operation is not trivial.      </p>     </div>         </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setprogressmonitor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.setprogressmonitor-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::setProgressMonitor()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $abortReason </span><span style="color: #007700">= </span><span style="color: #9876AA">null</span><span style="color: #007700">;<br />        <br />        try {<br />            </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">control</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImagePath</span><span style="color: #007700">()));<br />            </span><span style="color: #9876AA">$startTime </span><span style="color: #007700">= </span><span style="color: #9876AA">time</span><span style="color: #007700">();<br /><br />            </span><span style="color: #9876AA">$callback </span><span style="color: #007700">= function (</span><span style="color: #9876AA">$offset</span><span style="color: #007700">, </span><span style="color: #9876AA">$span</span><span style="color: #007700">)  use (</span><span style="color: #9876AA">$startTime</span><span style="color: #007700">, &amp;</span><span style="color: #9876AA">$abortReason</span><span style="color: #007700">) {<br />                if (((</span><span style="color: #9876AA">100 </span><span style="color: #007700">* </span><span style="color: #9876AA">$offset</span><span style="color: #007700">) / </span><span style="color: #9876AA">$span</span><span style="color: #007700">)  &gt; </span><span style="color: #9876AA">20</span><span style="color: #007700">) {<br />                    </span><span style="color: #9876AA">$abortReason </span><span style="color: #007700">= </span><span style="color: #DD0000">"Processing reached 20%"</span><span style="color: #007700">;<br />                    return </span><span style="color: #9876AA">false</span><span style="color: #007700">;<br />                }<br /><br />                </span><span style="color: #9876AA">$nowTime </span><span style="color: #007700">= </span><span style="color: #9876AA">time</span><span style="color: #007700">();<br /><br />                if (</span><span style="color: #9876AA">$nowTime </span><span style="color: #007700">- </span><span style="color: #9876AA">$startTime </span><span style="color: #007700">&gt; </span><span style="color: #9876AA">5</span><span style="color: #007700">) {<br />                    </span><span style="color: #9876AA">$abortReason </span><span style="color: #007700">= </span><span style="color: #DD0000">"Image processing took more than 5 seconds"</span><span style="color: #007700">;<br />                    return </span><span style="color: #9876AA">false</span><span style="color: #007700">;<br />                }<br />                if ((</span><span style="color: #9876AA">$offset </span><span style="color: #007700">% </span><span style="color: #9876AA">5</span><span style="color: #007700">) == </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br />                    echo </span><span style="color: #DD0000">"Progress: </span><span style="color: #9876AA">$offset</span><span style="color: #DD0000"> / </span><span style="color: #9876AA">$span</span><span style="color: #DD0000"> &lt;br/&gt;"</span><span style="color: #007700">;<br />                }<br />                return </span><span style="color: #9876AA">true</span><span style="color: #007700">;<br />            };<br /><br />            </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setProgressMonitor</span><span style="color: #007700">(</span><span style="color: #9876AA">$callback</span><span style="color: #007700">);<br /><br />            </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">waveImage</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">15</span><span style="color: #007700">);<br /><br />            echo </span><span style="color: #DD0000">"Data len is: "</span><span style="color: #007700">.</span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">());<br />        }<br />        catch(</span><span style="color: #9876AA">\ImagickException $e</span><span style="color: #007700">) {<br />            if (</span><span style="color: #9876AA">$abortReason </span><span style="color: #007700">!= </span><span style="color: #9876AA">null</span><span style="color: #007700">) {<br />                echo </span><span style="color: #DD0000">"Image processing was aborted: "</span><span style="color: #007700">.</span><span style="color: #9876AA">$abortReason</span><span style="color: #007700">.</span><span style="color: #DD0000">"&lt;br/&gt;"</span><span style="color: #007700">;<br />            }<br />            else {<br />                echo </span><span style="color: #DD0000">"ImagickException caught: "</span><span style="color: #007700">.</span><span style="color: #9876AA">$e</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMessage</span><span style="color: #007700">().</span><span style="color: #DD0000">" Exception type is "</span><span style="color: #007700">.</span><span style="color: #9876AA">get_class</span><span style="color: #007700">(</span><span style="color: #9876AA">$e</span><span style="color: #007700">);<br />            }<br />        }<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return void*/
    public function setProgressMonitor($callback) {}

/**
*<div id="imagick.setregistry" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::setRegistry</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::setRegistry</span> &mdash; <span class="dc-title">Sets the ImageMagick registry entry named key to value</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.setregistry-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::setRegistry</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$key</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the ImageMagick registry entry named key to value. This is most   useful for setting &quot;temporary-path&quot; which controls where ImageMagick   creates temporary images e.g. while processing PDFs.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.setregistry-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">key</span></dt>    <dd>     <span>           </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.setregistry-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return void*/
    public static function setRegistry($key, $value) {}

/**
*<div id="imagick.statisticimage" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::statisticImage</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::statisticImage</span> &mdash; <span class="dc-title">Modifies image using a statistics function</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.statisticimage-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::statisticImage</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$type</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$channel</span><span class="initializer"> = Imagick::CHANNEL_DEFAULT</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Replace each pixel with corresponding statistic from the neighborhood of the specified width and height.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.statisticimage-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">type</span></dt>    <dd>     <span>           </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">width</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">height</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">channel</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.statisticimage-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.statisticimage-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::statisticImage()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">statisticImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">$statisticType</span><span style="color: #007700">, </span><span style="color: #9876AA">$width</span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">, </span><span style="color: #9876AA">$channel</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">statisticImage</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">$statisticType</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">$width</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">$height</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">$channel<br />    </span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">statisticImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">STATISTIC_MEDIAN</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">CHANNEL_DEFAULT</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return void*/
    public function statisticImage($type, $width, $height, $channel = Imagick::CHANNEL_DEFAULT) {}

/**
*<div id="imagick.subimagematch" class="refentry"> <div class="refnamediv">  <h1 class="refname">Imagick::subImageMatch</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">Imagick::subImageMatch</span> &mdash; <span class="dc-title">Searches for a subimage in the current image and returns a similarity image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagick.subimagematch-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>Imagick::subImageMatch</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$Imagick</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">&$offset</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">&$similarity</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span></div>  <p class="para rdfs-comment">   Searches for a subimage in the current image and returns a similarity image such that an exact match location is completely white and if none of the pixels match, black, otherwise some gray level in-between.   You can also pass in the optional parameters bestMatch and similarity. After calling the function similarity will be set to the &#039;score&#039; of the similarity between the subimage and the matching position in the larger image, bestMatch will contain an associative array with elements x, y, width, height that describe the matching region.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagick.subimagematch-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">Imagick</span></dt>    <dd>     <span>           </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>    <dd>     <p class="para">           </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">similarity</span></dt>    <dd>     <p class="para">      A new image that displays the amount of similarity at each pixel.     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagick.subimagematch-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagick.subimagematch-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">Imagick::subImageMatch()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">subImageMatch</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick2 </span><span style="color: #007700">= clone </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$imagick2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">cropimage</span><span style="color: #007700">(</span><span style="color: #9876AA">40</span><span style="color: #007700">, </span><span style="color: #9876AA">40</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">110</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">vignetteimage</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$similarity </span><span style="color: #007700">= </span><span style="color: #9876AA">null</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$bestMatch </span><span style="color: #007700">= </span><span style="color: #9876AA">null</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$comparison </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">subImageMatch</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagick2</span><span style="color: #007700">, </span><span style="color: #9876AA">$bestMatch</span><span style="color: #007700">, </span><span style="color: #9876AA">$similarity</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$comparison</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return Imagick*/
    public function subImageMatch(Imagick $imagick, array &$bestMatch, &$similarity, $similarity_threshold, $metric) {}

    /**
     * Is an alias of Imagick::subImageMatch
     *
     * @param Imagick $imagick
     * @param array &$bestMatch [optional]
     * @param float &$similarity [optional] A new image that displays the amount of similarity at each pixel.
     * @param float $similarity_threshold [optional]
     * @param int $metric [optional]
     * @return Imagick
     * @throws ImagickException on error.
     * @see Imagick::subImageMatch() This function is an alias of subImageMatch()
     * @since 3.4.0
     */
    public function similarityImage(Imagick $imagick, array &$bestMatch, &$similarity, $similarity_threshold, $metric) {}

    /**
     * Returns any ImageMagick  configure options that match the specified pattern (e.g. "*" for all). Options include NAME, VERSION, LIB_VERSION, etc.
     * @return string
     * @since 3.4.0
     */
    #[Pure]
    public function getConfigureOptions() {}

    /**
     * GetFeatures() returns the ImageMagick features that have been compiled into the runtime.
     * @return string
     * @since 3.4.0
     */
    #[Pure]
    public function getFeatures() {}

    /**
     * @return int
     * @since 3.4.0
     */
    #[Pure]
    public function getHDRIEnabled() {}

    /**
     * Sets the image channel mask. Returns the previous set channel mask.
     * Only works with Imagick >= 7
     * @param int $channel
     * @throws ImagickException on error.
     * @since 3.4.0
     */
    public function setImageChannelMask($channel) {}

    /**
     * Merge multiple images of the same size together with the selected operator. https://www.imagemagick.org/Usage/layers/#evaluate-sequence
     * @param int $EVALUATE_CONSTANT
     * @return bool
     * @see https://www.imagemagick.org/Usage/layers/#evaluate-sequence
     * @throws ImagickException on error.
     * @since 3.4.0
     */
    public function evaluateImages($EVALUATE_CONSTANT) {}

    /**
     * Extracts the 'mean' from the image and adjust the image to try make set its gamma appropriately.
     * @param int $channel [optional] Default value Imagick::CHANNEL_ALL
     * @return bool
     * @throws ImagickException on error.
     * @since 3.4.1
     */
    public function autoGammaImage($channel = Imagick::CHANNEL_ALL) {}

    /**
     * Adjusts an image so that its orientation is suitable $ for viewing (i.e. top-left orientation).
     * @return bool
     * @throws ImagickException on error.
     * @since 3.4.1
     */
    public function autoOrient() {}

    /**
     * Composite one image onto another using the specified gravity.
     *
     * @param Imagick $imagick
     * @param int $COMPOSITE_CONSTANT
     * @param int $GRAVITY_CONSTANT
     * @return bool
     * @throws ImagickException on error.
     * @since 3.4.1
     */
    public function compositeImageGravity(Imagick $imagick, $COMPOSITE_CONSTANT, $GRAVITY_CONSTANT) {}

    /**
     * Attempts to increase the appearance of large-scale light-dark transitions.
     *
     * @param float $radius
     * @param float $strength
     * @return bool
     * @throws ImagickException on error.
     * @since 3.4.1
     */
    public function localContrastImage($radius, $strength) {}

    /**
     * Identifies the potential image type, returns one of the Imagick::IMGTYPE_* constants
     * @return int
     * @throws ImagickException on error.
     * @since 3.4.3
     */
    public function identifyImageType() {}

    /**
     * Sets the image to the specified alpha level. Will replace ImagickDraw::setOpacity()
     *
     * @param float $alpha
     * @return bool
     * @throws ImagickException on error.
     * @since 3.4.3
     */
    public function setImageAlpha($alpha) {}
}

/**
*<div id="class.imagickdraw" class="reference"> <h1 class="title">The <span class="classname"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="classname">ImagickDraw</a></span> class</h1>  <div class="partintro"><p class="verinfo">(PECL imagick 2, PECL imagick 3)</p>  <div class="section" id="imagickdraw.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass"><span class="modifier">class</span> <strong class="classname">ImagickDraw</strong></span>     {</div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.affine.php" class="methodname" style="color:#CC7832">affine</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$affine</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.annotation.php" class="methodname" style="color:#CC7832">annotation</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$text</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.arc.php" class="methodname" style="color:#CC7832">arc</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sx</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sy</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ex</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ey</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sd</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ed</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.bezier.php" class="methodname" style="color:#CC7832">bezier</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$coordinates</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.circle.php" class="methodname" style="color:#CC7832">circle</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ox</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$oy</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$px</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$py</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.clear.php" class="methodname" style="color:#CC7832">clear</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.clone.php" class="methodname" style="color:#CC7832">clone</a></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="type ImagickDraw" style="color:#EAB766">ImagickDraw</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.color.php" class="methodname" style="color:#CC7832">color</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$paintMethod</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.comment.php" class="methodname" style="color:#CC7832">comment</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$comment</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.composite.php" class="methodname" style="color:#CC7832">composite</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$compose</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$compositeWand</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>()</div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.destroy.php" class="methodname" style="color:#CC7832">destroy</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.ellipse.php" class="methodname" style="color:#CC7832">ellipse</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ox</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$oy</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$rx</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ry</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$start</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$end</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getclippath.php" class="methodname" style="color:#CC7832">getClipPath</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getcliprule.php" class="methodname" style="color:#CC7832">getClipRule</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getclipunits.php" class="methodname" style="color:#CC7832">getClipUnits</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getfillcolor.php" class="methodname" style="color:#CC7832">getFillColor</a></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getfillopacity.php" class="methodname" style="color:#CC7832">getFillOpacity</a></span>(): <span class="type" style="color:#EAB766">float</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getfillrule.php" class="methodname" style="color:#CC7832">getFillRule</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getfont.php" class="methodname" style="color:#CC7832">getFont</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getfontfamily.php" class="methodname" style="color:#CC7832">getFontFamily</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getfontsize.php" class="methodname" style="color:#CC7832">getFontSize</a></span>(): <span class="type" style="color:#EAB766">float</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getfontstretch.php" class="methodname" style="color:#CC7832">getFontStretch</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getfontstyle.php" class="methodname" style="color:#CC7832">getFontStyle</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getfontweight.php" class="methodname" style="color:#CC7832">getFontWeight</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getgravity.php" class="methodname" style="color:#CC7832">getGravity</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getstrokeantialias.php" class="methodname" style="color:#CC7832">getStrokeAntialias</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getstrokecolor.php" class="methodname" style="color:#CC7832">getStrokeColor</a></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getstrokedasharray.php" class="methodname" style="color:#CC7832">getStrokeDashArray</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getstrokedashoffset.php" class="methodname" style="color:#CC7832">getStrokeDashOffset</a></span>(): <span class="type" style="color:#EAB766">float</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getstrokelinecap.php" class="methodname" style="color:#CC7832">getStrokeLineCap</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getstrokelinejoin.php" class="methodname" style="color:#CC7832">getStrokeLineJoin</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getstrokemiterlimit.php" class="methodname" style="color:#CC7832">getStrokeMiterLimit</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getstrokeopacity.php" class="methodname" style="color:#CC7832">getStrokeOpacity</a></span>(): <span class="type" style="color:#EAB766">float</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getstrokewidth.php" class="methodname" style="color:#CC7832">getStrokeWidth</a></span>(): <span class="type" style="color:#EAB766">float</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.gettextalignment.php" class="methodname" style="color:#CC7832">getTextAlignment</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.gettextantialias.php" class="methodname" style="color:#CC7832">getTextAntialias</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.gettextdecoration.php" class="methodname" style="color:#CC7832">getTextDecoration</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.gettextencoding.php" class="methodname" style="color:#CC7832">getTextEncoding</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.gettextinterlinespacing.php" class="methodname" style="color:#CC7832">getTextInterlineSpacing</a></span>(): <span class="type" style="color:#EAB766">float</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.gettextinterwordspacing.php" class="methodname" style="color:#CC7832">getTextInterwordSpacing</a></span>(): <span class="type" style="color:#EAB766">float</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.gettextkerning.php" class="methodname" style="color:#CC7832">getTextKerning</a></span>(): <span class="type" style="color:#EAB766">float</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.gettextundercolor.php" class="methodname" style="color:#CC7832">getTextUnderColor</a></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.getvectorgraphics.php" class="methodname" style="color:#CC7832">getVectorGraphics</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.line.php" class="methodname" style="color:#CC7832">line</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sx</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sy</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ex</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ey</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.matte.php" class="methodname" style="color:#CC7832">matte</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$paintMethod</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathclose.php" class="methodname" style="color:#CC7832">pathClose</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathcurvetoabsolute.php" class="methodname" style="color:#CC7832">pathCurveToAbsolute</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathcurvetoquadraticbezierabsolute.php" class="methodname" style="color:#CC7832">pathCurveToQuadraticBezierAbsolute</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathcurvetoquadraticbezierrelative.php" class="methodname" style="color:#CC7832">pathCurveToQuadraticBezierRelative</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathcurvetoquadraticbeziersmoothabsolute.php" class="methodname" style="color:#CC7832">pathCurveToQuadraticBezierSmoothAbsolute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathcurvetoquadraticbeziersmoothrelative.php" class="methodname" style="color:#CC7832">pathCurveToQuadraticBezierSmoothRelative</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathcurvetorelative.php" class="methodname" style="color:#CC7832">pathCurveToRelative</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathcurvetosmoothabsolute.php" class="methodname" style="color:#CC7832">pathCurveToSmoothAbsolute</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathcurvetosmoothrelative.php" class="methodname" style="color:#CC7832">pathCurveToSmoothRelative</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathellipticarcabsolute.php" class="methodname" style="color:#CC7832">pathEllipticArcAbsolute</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$rx</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ry</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x_axis_rotation</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$large_arc_flag</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$sweep_flag</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathellipticarcrelative.php" class="methodname" style="color:#CC7832">pathEllipticArcRelative</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$rx</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ry</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x_axis_rotation</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$large_arc_flag</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$sweep_flag</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathfinish.php" class="methodname" style="color:#CC7832">pathFinish</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathlinetoabsolute.php" class="methodname" style="color:#CC7832">pathLineToAbsolute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathlinetohorizontalabsolute.php" class="methodname" style="color:#CC7832">pathLineToHorizontalAbsolute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathlinetohorizontalrelative.php" class="methodname" style="color:#CC7832">pathLineToHorizontalRelative</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathlinetorelative.php" class="methodname" style="color:#CC7832">pathLineToRelative</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathlinetoverticalabsolute.php" class="methodname" style="color:#CC7832">pathLineToVerticalAbsolute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathlinetoverticalrelative.php" class="methodname" style="color:#CC7832">pathLineToVerticalRelative</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathmovetoabsolute.php" class="methodname" style="color:#CC7832">pathMoveToAbsolute</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathmovetorelative.php" class="methodname" style="color:#CC7832">pathMoveToRelative</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pathstart.php" class="methodname" style="color:#CC7832">pathStart</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.point.php" class="methodname" style="color:#CC7832">point</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.polygon.php" class="methodname" style="color:#CC7832">polygon</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$coordinates</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.polyline.php" class="methodname" style="color:#CC7832">polyline</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$coordinates</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pop.php" class="methodname" style="color:#CC7832">pop</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.popclippath.php" class="methodname" style="color:#CC7832">popClipPath</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.popdefs.php" class="methodname" style="color:#CC7832">popDefs</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.poppattern.php" class="methodname" style="color:#CC7832">popPattern</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.push.php" class="methodname" style="color:#CC7832">push</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pushclippath.php" class="methodname" style="color:#CC7832">pushClipPath</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$clip_mask_id</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pushdefs.php" class="methodname" style="color:#CC7832">pushDefs</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.pushpattern.php" class="methodname" style="color:#CC7832">pushPattern</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pattern_id</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$height</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.rectangle.php" class="methodname" style="color:#CC7832">rectangle</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y2</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.render.php" class="methodname" style="color:#CC7832">render</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.resetvectorgraphics.php" class="methodname" style="color:#CC7832">resetVectorGraphics</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.rotate.php" class="methodname" style="color:#CC7832">rotate</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$degrees</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.roundrectangle.php" class="methodname" style="color:#CC7832">roundRectangle</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$rx</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ry</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.scale.php" class="methodname" style="color:#CC7832">scale</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setclippath.php" class="methodname" style="color:#CC7832">setClipPath</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$clip_mask</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setcliprule.php" class="methodname" style="color:#CC7832">setClipRule</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$fill_rule</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setclipunits.php" class="methodname" style="color:#CC7832">setClipUnits</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$clip_units</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setfillalpha.php" class="methodname" style="color:#CC7832">setFillAlpha</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$opacity</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setfillcolor.php" class="methodname" style="color:#CC7832">setFillColor</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span> <span class="parameter" style="color:#3A95FF">$fill_pixel</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setfillopacity.php" class="methodname" style="color:#CC7832">setFillOpacity</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fillOpacity</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setfillpatternurl.php" class="methodname" style="color:#CC7832">setFillPatternURL</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$fill_url</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setfillrule.php" class="methodname" style="color:#CC7832">setFillRule</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$fill_rule</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setfont.php" class="methodname" style="color:#CC7832">setFont</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$font_name</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setfontfamily.php" class="methodname" style="color:#CC7832">setFontFamily</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$font_family</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setfontsize.php" class="methodname" style="color:#CC7832">setFontSize</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$pointsize</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setfontstretch.php" class="methodname" style="color:#CC7832">setFontStretch</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$fontStretch</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setfontstyle.php" class="methodname" style="color:#CC7832">setFontStyle</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$style</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setfontweight.php" class="methodname" style="color:#CC7832">setFontWeight</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$font_weight</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setgravity.php" class="methodname" style="color:#CC7832">setGravity</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$gravity</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setresolution.php" class="methodname" style="color:#CC7832">setResolution</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x_resolution</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y_resolution</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setstrokealpha.php" class="methodname" style="color:#CC7832">setStrokeAlpha</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$opacity</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setstrokeantialias.php" class="methodname" style="color:#CC7832">setStrokeAntialias</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$stroke_antialias</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setstrokecolor.php" class="methodname" style="color:#CC7832">setStrokeColor</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span> <span class="parameter" style="color:#3A95FF">$stroke_pixel</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setstrokedasharray.php" class="methodname" style="color:#CC7832">setStrokeDashArray</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$dashArray</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setstrokedashoffset.php" class="methodname" style="color:#CC7832">setStrokeDashOffset</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$dash_offset</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setstrokelinecap.php" class="methodname" style="color:#CC7832">setStrokeLineCap</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$linecap</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setstrokelinejoin.php" class="methodname" style="color:#CC7832">setStrokeLineJoin</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$linejoin</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setstrokemiterlimit.php" class="methodname" style="color:#CC7832">setStrokeMiterLimit</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$miterlimit</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setstrokeopacity.php" class="methodname" style="color:#CC7832">setStrokeOpacity</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$stroke_opacity</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setstrokepatternurl.php" class="methodname" style="color:#CC7832">setStrokePatternURL</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$stroke_url</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setstrokewidth.php" class="methodname" style="color:#CC7832">setStrokeWidth</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$stroke_width</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.settextalignment.php" class="methodname" style="color:#CC7832">setTextAlignment</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$alignment</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.settextantialias.php" class="methodname" style="color:#CC7832">setTextAntialias</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$antiAlias</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.settextdecoration.php" class="methodname" style="color:#CC7832">setTextDecoration</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$decoration</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.settextencoding.php" class="methodname" style="color:#CC7832">setTextEncoding</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$encoding</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.settextinterlinespacing.php" class="methodname" style="color:#CC7832">setTextInterlineSpacing</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$spacing</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.settextinterwordspacing.php" class="methodname" style="color:#CC7832">setTextInterwordSpacing</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$spacing</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.settextkerning.php" class="methodname" style="color:#CC7832">setTextKerning</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$kerning</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.settextundercolor.php" class="methodname" style="color:#CC7832">setTextUnderColor</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span> <span class="parameter" style="color:#3A95FF">$under_color</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setvectorgraphics.php" class="methodname" style="color:#CC7832">setVectorGraphics</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$xml</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.setviewbox.php" class="methodname" style="color:#CC7832">setViewbox</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y2</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.skewx.php" class="methodname" style="color:#CC7832">skewX</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$degrees</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.skewy.php" class="methodname" style="color:#CC7832">skewY</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$degrees</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickdraw.translate.php" class="methodname" style="color:#CC7832">translate</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link ImagickDraw::affine} — Adjusts the current affine transformation matrix</li><li>{@link ImagickDraw::annotation} — Draws text on the image</li><li>{@link ImagickDraw::arc} — Draws an arc</li><li>{@link ImagickDraw::bezier} — Draws a bezier curve</li><li>{@link ImagickDraw::circle} — Draws a circle</li><li>{@link ImagickDraw::clear} — Clears the ImagickDraw</li><li>{@link ImagickDraw::clone} — Makes an exact copy of the specified ImagickDraw object</li><li>{@link ImagickDraw::color} — Draws color on image</li><li>{@link ImagickDraw::comment} — Adds a comment</li><li>{@link ImagickDraw::composite} — Composites an image onto the current image</li><li>{@link ImagickDraw::__construct} — The ImagickDraw constructor</li><li>{@link ImagickDraw::destroy} — Frees all associated resources</li><li>{@link ImagickDraw::ellipse} — Draws an ellipse on the image</li><li>{@link ImagickDraw::getClipPath} — Obtains the current clipping path ID</li><li>{@link ImagickDraw::getClipRule} — Returns the current polygon fill rule</li><li>{@link ImagickDraw::getClipUnits} — Returns the interpretation of clip path units</li><li>{@link ImagickDraw::getFillColor} — Returns the fill color</li><li>{@link ImagickDraw::getFillOpacity} — Returns the opacity used when drawing</li><li>{@link ImagickDraw::getFillRule} — Returns the fill rule</li><li>{@link ImagickDraw::getFont} — Returns the font</li><li>{@link ImagickDraw::getFontFamily} — Returns the font family</li><li>{@link ImagickDraw::getFontSize} — Returns the font pointsize</li><li>{@link ImagickDraw::getFontStretch} — Gets the font stretch to use when annotating with text</li><li>{@link ImagickDraw::getFontStyle} — Returns the font style</li><li>{@link ImagickDraw::getFontWeight} — Returns the font weight</li><li>{@link ImagickDraw::getGravity} — Returns the text placement gravity</li><li>{@link ImagickDraw::getStrokeAntialias} — Returns the current stroke antialias setting</li><li>{@link ImagickDraw::getStrokeColor} — Returns the color used for stroking object outlines</li><li>{@link ImagickDraw::getStrokeDashArray} — Returns an array representing the pattern of dashes and gaps used to stroke paths</li><li>{@link ImagickDraw::getStrokeDashOffset} — Returns the offset into the dash pattern to start the dash</li><li>{@link ImagickDraw::getStrokeLineCap} — Returns the shape to be used at the end of open subpaths when they are stroked</li><li>{@link ImagickDraw::getStrokeLineJoin} — Returns the shape to be used at the corners of paths when they are stroked</li><li>{@link ImagickDraw::getStrokeMiterLimit} — Returns the stroke miter limit</li><li>{@link ImagickDraw::getStrokeOpacity} — Returns the opacity of stroked object outlines</li><li>{@link ImagickDraw::getStrokeWidth} — Returns the width of the stroke used to draw object outlines</li><li>{@link ImagickDraw::getTextAlignment} — Returns the text alignment</li><li>{@link ImagickDraw::getTextAntialias} — Returns the current text antialias setting</li><li>{@link ImagickDraw::getTextDecoration} — Returns the text decoration</li><li>{@link ImagickDraw::getTextEncoding} — Returns the code set used for text annotations</li><li>{@link ImagickDraw::getTextInterlineSpacing} — Gets the text interword spacing</li><li>{@link ImagickDraw::getTextInterwordSpacing} — Gets the text interword spacing</li><li>{@link ImagickDraw::getTextKerning} — Gets the text kerning</li><li>{@link ImagickDraw::getTextUnderColor} — Returns the text under color</li><li>{@link ImagickDraw::getVectorGraphics} — Returns a string containing vector graphics</li><li>{@link ImagickDraw::line} — Draws a line</li><li>{@link ImagickDraw::matte} — Paints on the image's opacity channel</li><li>{@link ImagickDraw::pathClose} — Adds a path element to the current path</li><li>{@link ImagickDraw::pathCurveToAbsolute} — Draws a cubic Bezier curve</li><li>{@link ImagickDraw::pathCurveToQuadraticBezierAbsolute} — Draws a quadratic Bezier curve</li><li>{@link ImagickDraw::pathCurveToQuadraticBezierRelative} — Draws a quadratic Bezier curve</li><li>{@link ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute} — Draws a quadratic Bezier curve</li><li>{@link ImagickDraw::pathCurveToQuadraticBezierSmoothRelative} — Draws a quadratic Bezier curve</li><li>{@link ImagickDraw::pathCurveToRelative} — Draws a cubic Bezier curve</li><li>{@link ImagickDraw::pathCurveToSmoothAbsolute} — Draws a cubic Bezier curve</li><li>{@link ImagickDraw::pathCurveToSmoothRelative} — Draws a cubic Bezier curve</li><li>{@link ImagickDraw::pathEllipticArcAbsolute} — Draws an elliptical arc</li><li>{@link ImagickDraw::pathEllipticArcRelative} — Draws an elliptical arc</li><li>{@link ImagickDraw::pathFinish} — Terminates the current path</li><li>{@link ImagickDraw::pathLineToAbsolute} — Draws a line path</li><li>{@link ImagickDraw::pathLineToHorizontalAbsolute} — Draws a horizontal line path</li><li>{@link ImagickDraw::pathLineToHorizontalRelative} — Draws a horizontal line</li><li>{@link ImagickDraw::pathLineToRelative} — Draws a line path</li><li>{@link ImagickDraw::pathLineToVerticalAbsolute} — Draws a vertical line</li><li>{@link ImagickDraw::pathLineToVerticalRelative} — Draws a vertical line path</li><li>{@link ImagickDraw::pathMoveToAbsolute} — Starts a new sub-path</li><li>{@link ImagickDraw::pathMoveToRelative} — Starts a new sub-path</li><li>{@link ImagickDraw::pathStart} — Declares the start of a path drawing list</li><li>{@link ImagickDraw::point} — Draws a point</li><li>{@link ImagickDraw::polygon} — Draws a polygon</li><li>{@link ImagickDraw::polyline} — Draws a polyline</li><li>{@link ImagickDraw::pop} — Destroys the current ImagickDraw in the stack, and returns to the previously pushed ImagickDraw</li><li>{@link ImagickDraw::popClipPath} — Terminates a clip path definition</li><li>{@link ImagickDraw::popDefs} — Terminates a definition list</li><li>{@link ImagickDraw::popPattern} — Terminates a pattern definition</li><li>{@link ImagickDraw::push} — Clones the current ImagickDraw and pushes it to the stack</li><li>{@link ImagickDraw::pushClipPath} — Starts a clip path definition</li><li>{@link ImagickDraw::pushDefs} — Indicates that following commands create named elements for early processing</li><li>{@link ImagickDraw::pushPattern} — Indicates that subsequent commands up to a ImagickDraw::opPattern() command comprise the definition of a named pattern</li><li>{@link ImagickDraw::rectangle} — Draws a rectangle</li><li>{@link ImagickDraw::render} — Renders all preceding drawing commands onto the image</li><li>{@link ImagickDraw::resetVectorGraphics} — Resets the vector graphics</li><li>{@link ImagickDraw::rotate} — Applies the specified rotation to the current coordinate space</li><li>{@link ImagickDraw::roundRectangle} — Draws a rounded rectangle</li><li>{@link ImagickDraw::scale} — Adjusts the scaling factor</li><li>{@link ImagickDraw::setClipPath} — Associates a named clipping path with the image</li><li>{@link ImagickDraw::setClipRule} — Set the polygon fill rule to be used by the clipping path</li><li>{@link ImagickDraw::setClipUnits} — Sets the interpretation of clip path units</li><li>{@link ImagickDraw::setFillAlpha} — Sets the opacity to use when drawing using the fill color or fill texture</li><li>{@link ImagickDraw::setFillColor} — Sets the fill color to be used for drawing filled objects</li><li>{@link ImagickDraw::setFillOpacity} — Sets the opacity to use when drawing using the fill color or fill texture</li><li>{@link ImagickDraw::setFillPatternURL} — Sets the URL to use as a fill pattern for filling objects</li><li>{@link ImagickDraw::setFillRule} — Sets the fill rule to use while drawing polygons</li><li>{@link ImagickDraw::setFont} — Sets the fully-specified font to use when annotating with text</li><li>{@link ImagickDraw::setFontFamily} — Sets the font family to use when annotating with text</li><li>{@link ImagickDraw::setFontSize} — Sets the font pointsize to use when annotating with text</li><li>{@link ImagickDraw::setFontStretch} — Sets the font stretch to use when annotating with text</li><li>{@link ImagickDraw::setFontStyle} — Sets the font style to use when annotating with text</li><li>{@link ImagickDraw::setFontWeight} — Sets the font weight</li><li>{@link ImagickDraw::setGravity} — Sets the text placement gravity</li><li>{@link ImagickDraw::setResolution} — Sets the resolution</li><li>{@link ImagickDraw::setStrokeAlpha} — Specifies the opacity of stroked object outlines</li><li>{@link ImagickDraw::setStrokeAntialias} — Controls whether stroked outlines are antialiased</li><li>{@link ImagickDraw::setStrokeColor} — Sets the color used for stroking object outlines</li><li>{@link ImagickDraw::setStrokeDashArray} — Specifies the pattern of dashes and gaps used to stroke paths</li><li>{@link ImagickDraw::setStrokeDashOffset} — Specifies the offset into the dash pattern to start the dash</li><li>{@link ImagickDraw::setStrokeLineCap} — Specifies the shape to be used at the end of open subpaths when they are stroked</li><li>{@link ImagickDraw::setStrokeLineJoin} — Specifies the shape to be used at the corners of paths when they are stroked</li><li>{@link ImagickDraw::setStrokeMiterLimit} — Specifies the miter limit</li><li>{@link ImagickDraw::setStrokeOpacity} — Specifies the opacity of stroked object outlines</li><li>{@link ImagickDraw::setStrokePatternURL} — Sets the pattern used for stroking object outlines</li><li>{@link ImagickDraw::setStrokeWidth} — Sets the width of the stroke used to draw object outlines</li><li>{@link ImagickDraw::setTextAlignment} — Specifies a text alignment</li><li>{@link ImagickDraw::setTextAntialias} — Controls whether text is antialiased</li><li>{@link ImagickDraw::setTextDecoration} — Specifies a decoration</li><li>{@link ImagickDraw::setTextEncoding} — Specifies the text code set</li><li>{@link ImagickDraw::setTextInterlineSpacing} — Sets the text interline spacing</li><li>{@link ImagickDraw::setTextInterwordSpacing} — Sets the text interword spacing</li><li>{@link ImagickDraw::setTextKerning} — Sets the text kerning</li><li>{@link ImagickDraw::setTextUnderColor} — Specifies the color of a background rectangle</li><li>{@link ImagickDraw::setVectorGraphics} — Sets the vector graphics</li><li>{@link ImagickDraw::setViewbox} — Sets the overall canvas size</li><li>{@link ImagickDraw::skewX} — Skews the current coordinate system in the horizontal direction</li><li>{@link ImagickDraw::skewY} — Skews the current coordinate system in the vertical direction</li><li>{@link ImagickDraw::translate} — Applies a translation to the current coordinate system</li></ul></div>
*/
class ImagickDraw
{
/**
*<div id="imagickdraw.resetvectorgraphics" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::resetVectorGraphics</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::resetVectorGraphics</span> &mdash; <span class="dc-title">Resets the vector graphics</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.resetvectorgraphics-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::resetVectorGraphics</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Resets the vector graphics.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.resetvectorgraphics-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.resetvectorgraphics-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
*/
    public function resetVectorGraphics() {}

/**
*<div id="imagickdraw.gettextkerning" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getTextKerning</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3 &gt;= 3.1.0)</p><p class="refpurpose"><span class="refname">ImagickDraw::getTextKerning</span> &mdash; <span class="dc-title">Gets the text kerning</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.gettextkerning-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getTextKerning</strong></span>(): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   Gets the text kerning.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.gettextkerning-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.gettextkerning-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
*/
    public function getTextKerning() {}

/**
*<div id="imagickdraw.settextkerning" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setTextKerning</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setTextKerning</span> &mdash; <span class="dc-title">Sets the text kerning</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.settextkerning-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setTextKerning</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$kerning</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the text kerning  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.settextkerning-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">kerning</span></dt>    <dd>     <span>           </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.settextkerning-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
*/
    public function setTextKerning($kerning) {}

/**
*<div id="imagickdraw.gettextinterwordspacing" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getTextInterwordSpacing</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3 &gt;= 3.1.0)</p><p class="refpurpose"><span class="refname">ImagickDraw::getTextInterwordSpacing</span> &mdash; <span class="dc-title">Gets the text interword spacing</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.gettextinterwordspacing-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getTextInterwordSpacing</strong></span>(): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   Gets the text interword spacing.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.gettextinterwordspacing-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.gettextinterwordspacing-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
*/
    public function getTextInterWordSpacing() {}

/**
*<div id="imagickdraw.settextinterwordspacing" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setTextInterwordSpacing</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setTextInterwordSpacing</span> &mdash; <span class="dc-title">Sets the text interword spacing</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.settextinterwordspacing-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setTextInterwordSpacing</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$spacing</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the text interword spacing.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.settextinterwordspacing-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">spacing</span></dt>    <dd>     <span>           </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.settextinterwordspacing-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
*/
    public function setTextInterWordSpacing($spacing) {}

/**
*<div id="imagickdraw.gettextinterlinespacing" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getTextInterlineSpacing</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.1.0)</p><p class="refpurpose"><span class="refname">ImagickDraw::getTextInterlineSpacing</span> &mdash; <span class="dc-title">Gets the text interword spacing</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.gettextinterlinespacing-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getTextInterlineSpacing</strong></span>(): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   Gets the text interword spacing.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.gettextinterlinespacing-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.gettextinterlinespacing-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
*/
    public function getTextInterLineSpacing() {}

/**
*<div id="imagickdraw.settextinterlinespacing" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setTextInterlineSpacing</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.1.0)</p><p class="refpurpose"><span class="refname">ImagickDraw::setTextInterlineSpacing</span> &mdash; <span class="dc-title">Sets the text interline spacing</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.settextinterlinespacing-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setTextInterlineSpacing</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$spacing</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the text interline spacing.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.settextinterlinespacing-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">spacing</span></dt>    <dd>     <span>           </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.settextinterlinespacing-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
*/
    public function setTextInterLineSpacing($spacing) {}

    /**
     * (PECL imagick 2.0.0)<br/>
     * The ImagickDraw constructor
     * @link https://php.net/manual/en/imagickdraw.construct.php
     */
    public function __construct() {}

/**
*<div id="imagickdraw.setfillcolor" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setFillColor</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setFillColor</span> &mdash; <span class="dc-title">Sets the fill color to be used for drawing filled objects</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setfillcolor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setFillColor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span> <span class="parameter" style="color:#3A95FF">$fill_pixel</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the fill color to be used for drawing filled objects.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setfillcolor-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">fill_pixel</span></dt>     <dd>      <p class="para">       ImagickPixel to use to set the color      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setfillcolor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setfillcolor-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">ImagickDraw::setFillColor()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">1.5</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">150</span><span style="color: #007700">, </span><span style="color: #9876AA">150</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #DD0000">"rgb(200, 32, 32)"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">150</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setFillColor(ImagickPixel $fill_pixel) {}

/**
*<div id="imagickdraw.setfillalpha" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setFillAlpha</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setFillAlpha</span> &mdash; <span class="dc-title">Sets the opacity to use when drawing using the fill color or fill texture</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setfillalpha-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setFillAlpha</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$opacity</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the opacity to use when drawing using the fill color or fill texture.   Fully opaque is 1.0.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setfillalpha-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">opacity</span></dt>     <dd>      <p class="para">       fill alpha      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setfillalpha-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setfillalpha-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setFillAlpha()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setFillAlpha</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">);<br />    @</span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillAlpha</span><span style="color: #007700">(</span><span style="color: #9876AA">0.4</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setFillAlpha($opacity) {}

/**
*<div id="imagickdraw.setresolution" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setResolution</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.1.0)</p><p class="refpurpose"><span class="refname">ImagickDraw::setResolution</span> &mdash; <span class="dc-title">Sets the resolution</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setresolution-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setResolution</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x_resolution</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y_resolution</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the resolution.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setresolution-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">x_resolution</span></dt>    <dd>     <span>           </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">y_resolution</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setresolution-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool*/
    public function setResolution($x_resolution, $y_resolution) {}

/**
*<div id="imagickdraw.setstrokecolor" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setStrokeColor</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setStrokeColor</span> &mdash; <span class="dc-title">Sets the color used for stroking object outlines</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setstrokecolor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setStrokeColor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span> <span class="parameter" style="color:#3A95FF">$stroke_pixel</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the color used for stroking object outlines.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setstrokecolor-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stroke_pixel</span></dt>     <dd>      <p class="para">       the stroke color      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setstrokecolor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setstrokecolor-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setStrokeColor()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">5</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">145</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">225</span><span style="color: #007700">, </span><span style="color: #9876AA">350</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">0.1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">120</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">165</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">275</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">350</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setStrokeColor(ImagickPixel $stroke_pixel) {}

/**
*<div id="imagickdraw.setstrokealpha" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setStrokeAlpha</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setStrokeAlpha</span> &mdash; <span class="dc-title">Specifies the opacity of stroked object outlines</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setstrokealpha-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setStrokeAlpha</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$opacity</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Specifies the opacity of stroked object outlines.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setstrokealpha-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">opacity</span></dt>     <dd>      <p class="para">       opacity      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setstrokealpha-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setstrokealpha-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setStrokeAlpha()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setStrokeAlpha</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">4</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">145</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">225</span><span style="color: #007700">, </span><span style="color: #9876AA">350</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">0.1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">120</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">165</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">275</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">350</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setStrokeAlpha($opacity) {}

/**
*<div id="imagickdraw.setstrokewidth" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setStrokeWidth</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setStrokeWidth</span> &mdash; <span class="dc-title">Sets the width of the stroke used to draw object outlines</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setstrokewidth-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setStrokeWidth</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$stroke_width</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the width of the stroke used to draw object outlines.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setstrokewidth-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stroke_width</span></dt>     <dd>      <p class="para">       stroke width      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setstrokewidth-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setstrokewidth-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setStrokeWidth()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">145</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">225</span><span style="color: #007700">, </span><span style="color: #9876AA">350</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">5</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">120</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">165</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">275</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">350</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setStrokeWidth($stroke_width) {}

/**
*<div id="imagickdraw.clear" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::clear</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::clear</span> &mdash; <span class="dc-title">Clears the ImagickDraw</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.clear-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::clear</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Clears the ImagickDraw object of any accumulated commands, and resets the   settings it contains to their defaults.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.clear-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an <span class="classname"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="classname">ImagickDraw</a></span> object.  </p> </div></div>
     * @return bool an ImagickDraw object.*/
    public function clear() {}

/**
*<div id="imagickdraw.circle" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::circle</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::circle</span> &mdash; <span class="dc-title">Draws a circle</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.circle-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::circle</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ox</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$oy</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$px</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$py</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a circle on the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.circle-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">ox</span></dt>     <dd>      <p class="para">       origin x coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">oy</span></dt>     <dd>      <p class="para">       origin y coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">px</span></dt>     <dd>      <p class="para">       perimeter x coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">py</span></dt>     <dd>      <p class="para">       perimeter y coordinate      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.circle-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.circle-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::circle()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">circle</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$originX</span><span style="color: #007700">, </span><span style="color: #9876AA">$originY</span><span style="color: #007700">, </span><span style="color: #9876AA">$endX</span><span style="color: #007700">, </span><span style="color: #9876AA">$endY</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #FF8000">//Create a ImagickDraw object to draw into.<br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$strokeColor </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$fillColor </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">72</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">circle</span><span style="color: #007700">(</span><span style="color: #9876AA">$originX</span><span style="color: #007700">, </span><span style="color: #9876AA">$originY</span><span style="color: #007700">, </span><span style="color: #9876AA">$endX</span><span style="color: #007700">, </span><span style="color: #9876AA">$endY</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function circle($ox, $oy, $px, $py) {}

/**
*<div id="imagickdraw.annotation" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::annotation</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::annotation</span> &mdash; <span class="dc-title">Draws text on the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.annotation-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::annotation</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$text</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws text on the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.annotation-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       The x coordinate where text is drawn      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       The y coordinate where text is drawn      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">text</span></dt>     <dd>      <p class="para">       The text to draw on the image      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.annotation-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function annotation($x, $y, $text) {}

/**
*<div id="imagickdraw.settextantialias" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setTextAntialias</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setTextAntialias</span> &mdash; <span class="dc-title">Controls whether text is antialiased</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.settextantialias-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setTextAntialias</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$antiAlias</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Controls whether text is antialiased. Text is antialiased by default.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.settextantialias-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">antiAlias</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.settextantialias-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.settextantialias-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setTextAntialias()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setTextAntialias</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'none'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">32</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTextAntialias</span><span style="color: #007700">(</span><span style="color: #9876AA">false</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #9876AA">30</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTextAntialias</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #9876AA">65</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">220</span><span style="color: #007700">, </span><span style="color: #9876AA">80</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//Scale the image so that people can see the aliasing.<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">scaleImage</span><span style="color: #007700">(</span><span style="color: #9876AA">220 </span><span style="color: #007700">* </span><span style="color: #9876AA">6</span><span style="color: #007700">, </span><span style="color: #9876AA">80 </span><span style="color: #007700">* </span><span style="color: #9876AA">6</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">cropImage</span><span style="color: #007700">(</span><span style="color: #9876AA">640</span><span style="color: #007700">, </span><span style="color: #9876AA">480</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setTextAntialias($antiAlias) {}

/**
*<div id="imagickdraw.settextencoding" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setTextEncoding</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setTextEncoding</span> &mdash; <span class="dc-title">Specifies the text code set</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.settextencoding-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setTextEncoding</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$encoding</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Specifies the code set to use for text annotations. The only   character encoding which may be specified at this time is &quot;UTF-8&quot; for   representing Unicode as a sequence of bytes. Specify an empty string to   set text encoding to the system&#039;s default. Successful text annotation   using Unicode may require fonts designed to support Unicode.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.settextencoding-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para">       the encoding name      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.settextencoding-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function setTextEncoding($encoding) {}

/**
*<div id="imagickdraw.setfont" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setFont</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setFont</span> &mdash; <span class="dc-title">Sets the fully-specified font to use when annotating with text</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setfont-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setFont</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$font_name</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the fully-specified font to use when annotating with text.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setfont-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">font_name</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setfont-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setfont-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setFont()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setFont</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">36</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFont</span><span style="color: #007700">(</span><span style="color: #DD0000">"../fonts/Arial.ttf"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFont</span><span style="color: #007700">(</span><span style="color: #DD0000">"../fonts/Consolas.ttf"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFont</span><span style="color: #007700">(</span><span style="color: #DD0000">"../fonts/CANDY.TTF"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">150</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFont</span><span style="color: #007700">(</span><span style="color: #DD0000">"../fonts/Inconsolata-dz.otf"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setFont($font_name) {}

/**
*<div id="imagickdraw.setfontfamily" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setFontFamily</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setFontFamily</span> &mdash; <span class="dc-title">Sets the font family to use when annotating with text</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setfontfamily-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setFontFamily</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$font_family</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the font family to use when annotating with text.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setfontfamily-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">font_family</span></dt>     <dd>      <p class="para">       the font family      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setfontfamily-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setfontfamily-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setFontFamily()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setFontFamily</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$strokeColor </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$fillColor </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">48</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontFamily</span><span style="color: #007700">(</span><span style="color: #DD0000">"Times"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontFamily</span><span style="color: #007700">(</span><span style="color: #DD0000">"AvantGarde"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontFamily</span><span style="color: #007700">(</span><span style="color: #DD0000">"NewCenturySchlbk"</span><span style="color: #007700">);    <br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">150</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontFamily</span><span style="color: #007700">(</span><span style="color: #DD0000">"Palatino"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">450</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setFontFamily($font_family) {}

/**
*<div id="imagickdraw.setfontsize" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setFontSize</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setFontSize</span> &mdash; <span class="dc-title">Sets the font pointsize to use when annotating with text</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setfontsize-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setFontSize</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$pointsize</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the font pointsize to use when annotating with text.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setfontsize-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">pointsize</span></dt>     <dd>      <p class="para">       the point size      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setfontsize-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setfontsize-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setFontSize()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFont</span><span style="color: #007700">(</span><span style="color: #DD0000">"../fonts/Arial.ttf"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$sizes </span><span style="color: #007700">= [</span><span style="color: #9876AA">24</span><span style="color: #007700">, </span><span style="color: #9876AA">36</span><span style="color: #007700">, </span><span style="color: #9876AA">48</span><span style="color: #007700">, </span><span style="color: #9876AA">60</span><span style="color: #007700">, </span><span style="color: #9876AA">72</span><span style="color: #007700">];<br /><br />    foreach (</span><span style="color: #9876AA">$sizes </span><span style="color: #007700">as </span><span style="color: #9876AA">$size</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">$size</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, (</span><span style="color: #9876AA">$size </span><span style="color: #007700">* </span><span style="color: #9876AA">$size </span><span style="color: #007700">/ </span><span style="color: #9876AA">16</span><span style="color: #007700">), </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br />    }<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setFontSize($pointsize) {}

/**
*<div id="imagickdraw.setfontstyle" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setFontStyle</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setFontStyle</span> &mdash; <span class="dc-title">Sets the font style to use when annotating with text</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setfontstyle-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setFontStyle</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$style</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the font style to use when annotating with text. The AnyStyle   enumeration acts as a wild-card &quot;don&#039;t care&quot; option.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setfontstyle-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">style</span></dt>     <dd>      <p class="para">       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.styles" class="link">STYLE</a> constant       (<span>imagick::STYLE_*</span>).      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setfontstyle-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setfontstyle-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setFontStyle()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setFontStyle</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">36</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontStyle</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">STYLE_NORMAL</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontStyle</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">STYLE_ITALIC</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontStyle</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">STYLE_OBLIQUE</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">150</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">350</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setFontStyle($style) {}

/**
*<div id="imagickdraw.setfontweight" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setFontWeight</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setFontWeight</span> &mdash; <span class="dc-title">Sets the font weight</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setfontweight-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setFontWeight</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$font_weight</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the font weight to use when annotating with text.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setfontweight-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">font_weight</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setfontweight-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setfontweight-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setFontWeight()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setFontWeight</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">36</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontWeight</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontWeight</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontWeight</span><span style="color: #007700">(</span><span style="color: #9876AA">400</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">150</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontWeight</span><span style="color: #007700">(</span><span style="color: #9876AA">800</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool*/
    public function setFontWeight($font_weight) {}

/**
*<div id="imagickdraw.getfont" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getFont</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getFont</span> &mdash; <span class="dc-title">Returns the font</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getfont-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getFont</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns a string specifying the font used when annotating with text.   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getfont-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a string on success and false if no font is set.  </p> </div></div>
     * @return string|false a string on success and false if no font is set.*/
    public function getFont() {}

/**
*<div id="imagickdraw.getfontfamily" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getFontFamily</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getFontFamily</span> &mdash; <span class="dc-title">Returns the font family</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getfontfamily-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getFontFamily</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the font family to use when annotating with text.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getfontfamily-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the font family currently selected or false if font family is not set.   </p> </div></div>
     * @return string|false the font family currently selected or false if font family is not set.*/
    public function getFontFamily() {}

/**
*<div id="imagickdraw.getfontsize" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getFontSize</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getFontSize</span> &mdash; <span class="dc-title">Returns the font pointsize</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getfontsize-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getFontSize</strong></span>(): <span class="type" style="color:#EAB766">float</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the font pointsize used when annotating with text.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getfontsize-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the font size associated with the current <span class="classname"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="classname">ImagickDraw</a></span> object.  </p> </div></div>
     * @return float the font size associated with the current ImagickDraw object.*/
    public function getFontSize() {}

/**
*<div id="imagickdraw.getfontstyle" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getFontStyle</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getFontStyle</span> &mdash; <span class="dc-title">Returns the font style</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getfontstyle-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getFontStyle</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the font style used when annotating with text.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getfontstyle-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.styles" class="link">STYLE</a> constant   (<span>imagick::STYLE_*</span>) associated with the <span class="classname"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="classname">ImagickDraw</a></span> object    or 0 if no style is set.  </p> </div></div>
     * @return int the font style constant (STYLE_) associated with the ImagickDraw object*/
    public function getFontStyle() {}

/**
*<div id="imagickdraw.getfontweight" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getFontWeight</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getFontWeight</span> &mdash; <span class="dc-title">Returns the font weight</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getfontweight-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getFontWeight</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the font weight used when annotating with text.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getfontweight-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an <span class="type" style="color:#EAB766">int</span> on success and 0 if no weight is set.  </p> </div></div>
     * @return int an int on success and 0 if no weight is set.*/
    public function getFontWeight() {}

/**
*<div id="imagickdraw.destroy" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::destroy</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::destroy</span> &mdash; <span class="dc-title">Frees all associated resources</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.destroy-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::destroy</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Frees all resources associated with the <span class="classname"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="classname">ImagickDraw</a></span> object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.destroy-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function destroy() {}

/**
*<div id="imagickdraw.rectangle" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::rectangle</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::rectangle</span> &mdash; <span class="dc-title">Draws a rectangle</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.rectangle-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::rectangle</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y2</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a rectangle given two coordinates and using the current stroke,   stroke width, and fill settings.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.rectangle-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x1</span></dt>     <dd>      <p class="para">       x coordinate of the top left corner      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y1</span></dt>     <dd>      <p class="para">       y coordinate of the top left corner      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x2</span></dt>     <dd>      <p class="para">       x coordinate of the bottom right corner      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y2</span></dt>     <dd>      <p class="para">       y coordinate of the bottom right corner      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.rectangle-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.rectangle-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::rectangle()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$strokeColor </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$fillColor </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function rectangle($x1, $y1, $x2, $y2) {}

/**
*<div id="imagickdraw.roundrectangle" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::roundRectangle</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::roundRectangle</span> &mdash; <span class="dc-title">Draws a rounded rectangle</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.roundrectangle-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::roundRectangle</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$rx</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ry</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a rounded rectangle given two coordinates, x &amp; y corner radiuses   and using the current stroke, stroke width, and fill settings.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.roundrectangle-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x1</span></dt>     <dd>      <p class="para">       x coordinate of the top left corner      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y1</span></dt>     <dd>      <p class="para">       y coordinate of the top left corner      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x2</span></dt>     <dd>      <p class="para">        x coordinate of the bottom right       </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y2</span></dt>     <dd>      <p class="para">       y coordinate of the bottom right       </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">rx</span></dt>     <dd>      <p class="para">       x rounding      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">ry</span></dt>     <dd>      <p class="para">       y rounding      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.roundrectangle-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.roundrectangle-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::roundRectangle()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">roundRectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$startX</span><span style="color: #007700">, </span><span style="color: #9876AA">$startY</span><span style="color: #007700">, </span><span style="color: #9876AA">$endX</span><span style="color: #007700">, </span><span style="color: #9876AA">$endY</span><span style="color: #007700">, </span><span style="color: #9876AA">$roundX</span><span style="color: #007700">, </span><span style="color: #9876AA">$roundY</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">roundRectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">$startX</span><span style="color: #007700">, </span><span style="color: #9876AA">$startY</span><span style="color: #007700">, </span><span style="color: #9876AA">$endX</span><span style="color: #007700">, </span><span style="color: #9876AA">$endY</span><span style="color: #007700">, </span><span style="color: #9876AA">$roundX</span><span style="color: #007700">, </span><span style="color: #9876AA">$roundY</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function roundRectangle($x1, $y1, $x2, $y2, $rx, $ry) {}

/**
*<div id="imagickdraw.ellipse" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::ellipse</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::ellipse</span> &mdash; <span class="dc-title">Draws an ellipse on the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.ellipse-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::ellipse</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ox</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$oy</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$rx</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ry</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$start</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$end</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws an ellipse on the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.ellipse-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">ox</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">oy</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">rx</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">ry</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">start</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">end</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.ellipse-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.ellipse-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::ellipse()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">ellipse</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">72</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ellipse</span><span style="color: #007700">(</span><span style="color: #9876AA">125</span><span style="color: #007700">, </span><span style="color: #9876AA">70</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">360</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ellipse</span><span style="color: #007700">(</span><span style="color: #9876AA">350</span><span style="color: #007700">, </span><span style="color: #9876AA">70</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">315</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">push</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">translate</span><span style="color: #007700">(</span><span style="color: #9876AA">125</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rotate</span><span style="color: #007700">(</span><span style="color: #9876AA">30</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ellipse</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">360</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pop</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">push</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">translate</span><span style="color: #007700">(</span><span style="color: #9876AA">350</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rotate</span><span style="color: #007700">(</span><span style="color: #9876AA">30</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">ellipse</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">315</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pop</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function ellipse($ox, $oy, $rx, $ry, $start, $end) {}

/**
*<div id="imagickdraw.skewx" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::skewX</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::skewX</span> &mdash; <span class="dc-title">Skews the current coordinate system in the horizontal direction</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.skewx-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::skewX</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$degrees</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Skews the current coordinate system in the horizontal direction.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.skewx-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">degrees</span></dt>     <dd>      <p class="para">       degrees to skew      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.skewx-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.skewx-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::skewX()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">skewX</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillModifiedColor</span><span style="color: #007700">, <br />               </span><span style="color: #9876AA">$startX</span><span style="color: #007700">, </span><span style="color: #9876AA">$startY</span><span style="color: #007700">, </span><span style="color: #9876AA">$endX</span><span style="color: #007700">, </span><span style="color: #9876AA">$endY</span><span style="color: #007700">, </span><span style="color: #9876AA">$skew</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">$startX</span><span style="color: #007700">, </span><span style="color: #9876AA">$startY</span><span style="color: #007700">, </span><span style="color: #9876AA">$endX</span><span style="color: #007700">, </span><span style="color: #9876AA">$endY</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillModifiedColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">skewX</span><span style="color: #007700">(</span><span style="color: #9876AA">$skew</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">$startX</span><span style="color: #007700">, </span><span style="color: #9876AA">$startY</span><span style="color: #007700">, </span><span style="color: #9876AA">$endX</span><span style="color: #007700">, </span><span style="color: #9876AA">$endY</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function skewX($degrees) {}

/**
*<div id="imagickdraw.skewy" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::skewY</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::skewY</span> &mdash; <span class="dc-title">Skews the current coordinate system in the vertical direction</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.skewy-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::skewY</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$degrees</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Skews the current coordinate system in the vertical direction.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.skewy-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">degrees</span></dt>     <dd>      <p class="para">       degrees to skew      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.skewy-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.skewy-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::skewY()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">skewY</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillModifiedColor</span><span style="color: #007700">, <br />               </span><span style="color: #9876AA">$startX</span><span style="color: #007700">, </span><span style="color: #9876AA">$startY</span><span style="color: #007700">, </span><span style="color: #9876AA">$endX</span><span style="color: #007700">, </span><span style="color: #9876AA">$endY</span><span style="color: #007700">, </span><span style="color: #9876AA">$skew</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">$startX</span><span style="color: #007700">, </span><span style="color: #9876AA">$startY</span><span style="color: #007700">, </span><span style="color: #9876AA">$endX</span><span style="color: #007700">, </span><span style="color: #9876AA">$endY</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillModifiedColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">skewY</span><span style="color: #007700">(</span><span style="color: #9876AA">$skew</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">$startX</span><span style="color: #007700">, </span><span style="color: #9876AA">$startY</span><span style="color: #007700">, </span><span style="color: #9876AA">$endX</span><span style="color: #007700">, </span><span style="color: #9876AA">$endY</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function skewY($degrees) {}

/**
*<div id="imagickdraw.translate" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::translate</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::translate</span> &mdash; <span class="dc-title">Applies a translation to the current coordinate system</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.translate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::translate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Applies a translation to the current coordinate system which moves the   coordinate system origin to the specified coordinate.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.translate-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       horizontal translation      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       vertical translation      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.translate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.translate-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::translate()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">translate</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillModifiedColor</span><span style="color: #007700">, <br />                   </span><span style="color: #9876AA">$startX</span><span style="color: #007700">, </span><span style="color: #9876AA">$startY</span><span style="color: #007700">, </span><span style="color: #9876AA">$endX</span><span style="color: #007700">, </span><span style="color: #9876AA">$endY</span><span style="color: #007700">, </span><span style="color: #9876AA">$translateX</span><span style="color: #007700">, </span><span style="color: #9876AA">$translateY</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">$startX</span><span style="color: #007700">, </span><span style="color: #9876AA">$startY</span><span style="color: #007700">, </span><span style="color: #9876AA">$endX</span><span style="color: #007700">, </span><span style="color: #9876AA">$endY</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillModifiedColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">translate</span><span style="color: #007700">(</span><span style="color: #9876AA">$translateX</span><span style="color: #007700">, </span><span style="color: #9876AA">$translateY</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">$startX</span><span style="color: #007700">, </span><span style="color: #9876AA">$startY</span><span style="color: #007700">, </span><span style="color: #9876AA">$endX</span><span style="color: #007700">, </span><span style="color: #9876AA">$endY</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function translate($x, $y) {}

/**
*<div id="imagickdraw.line" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::line</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::line</span> &mdash; <span class="dc-title">Draws a line</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.line-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::line</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sx</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sy</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ex</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ey</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a line on the image using the current stroke color, stroke opacity, and stroke width.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.line-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">sx</span></dt>     <dd>      <p class="para">       starting x coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">sy</span></dt>     <dd>      <p class="para">       starting y coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">ex</span></dt>     <dd>      <p class="para">       ending x coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">ey</span></dt>     <dd>      <p class="para">       ending y coordinate      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.line-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.line-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::line()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">72</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">125</span><span style="color: #007700">, </span><span style="color: #9876AA">70</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">350</span><span style="color: #007700">, </span><span style="color: #9876AA">170</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">150</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function line($sx, $sy, $ex, $ey) {}

/**
*<div id="imagickdraw.arc" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::arc</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::arc</span> &mdash; <span class="dc-title">Draws an arc</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.arc-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::arc</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sx</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sy</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ex</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ey</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sd</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ed</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws an arc falling within a specified bounding rectangle on the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.arc-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">sx</span></dt>     <dd>      <p class="para">       Starting x ordinate of bounding rectangle      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">sy</span></dt>     <dd>      <p class="para">       starting y ordinate of bounding rectangle      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">ex</span></dt>     <dd>      <p class="para">       ending x ordinate of bounding rectangle      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">ey</span></dt>     <dd>      <p class="para">       ending y ordinate of bounding rectangle      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">sd</span></dt>     <dd>      <p class="para">       starting degrees of rotation      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">ed</span></dt>     <dd>      <p class="para">       ending degrees of rotation      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.arc-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.arc-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::arc()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">arc</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$startX</span><span style="color: #007700">, </span><span style="color: #9876AA">$startY</span><span style="color: #007700">, </span><span style="color: #9876AA">$endX</span><span style="color: #007700">, </span><span style="color: #9876AA">$endY</span><span style="color: #007700">, </span><span style="color: #9876AA">$startAngle</span><span style="color: #007700">, </span><span style="color: #9876AA">$endAngle</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #FF8000">//Create a ImagickDraw object to draw into.<br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">arc</span><span style="color: #007700">(</span><span style="color: #9876AA">$startX</span><span style="color: #007700">, </span><span style="color: #9876AA">$startY</span><span style="color: #007700">, </span><span style="color: #9876AA">$endX</span><span style="color: #007700">, </span><span style="color: #9876AA">$endY</span><span style="color: #007700">, </span><span style="color: #9876AA">$startAngle</span><span style="color: #007700">, </span><span style="color: #9876AA">$endAngle</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//Create an image object which the draw commands can be rendered into<br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">IMAGE_WIDTH</span><span style="color: #007700">, </span><span style="color: #9876AA">IMAGE_HEIGHT</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//Render the draw commands in the ImagickDraw object <br />    //into the image.<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//Send the image to the browser<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function arc($sx, $sy, $ex, $ey, $sd, $ed) {}

/**
*<div id="imagickdraw.matte" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::matte</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::matte</span> &mdash; <span class="dc-title">Paints on the image&#039;s opacity channel</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.matte-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::matte</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$paintMethod</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Paints on the image&#039;s opacity channel in order to set effected pixels to   transparent, to influence the opacity of pixels.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.matte-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       x coordinate of the matte      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       y coordinate of the matte      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">paintMethod</span></dt>     <dd>      <p class="para">       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.paint" class="link">PAINT</a> constant       (<span>imagick::PAINT_*</span>).      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.matte-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.matte-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::matte()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">matte</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$paintType</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">72</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">matte</span><span style="color: #007700">(</span><span style="color: #9876AA">120</span><span style="color: #007700">, </span><span style="color: #9876AA">120</span><span style="color: #007700">, </span><span style="color: #9876AA">$paintType</span><span style="color: #007700">);    <br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
    public function matte($x, $y, $paintMethod) {}

/**
*<div id="imagickdraw.polygon" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::polygon</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::polygon</span> &mdash; <span class="dc-title">Draws a polygon</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.polygon-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::polygon</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$coordinates</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a polygon using the current stroke, stroke width, and fill color or   texture, using the specified array of coordinates.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.polygon-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">coordinates</span></dt>     <dd>      <p class="para">       multidimensional array like array( array( &#039;x&#039; =&gt; 3, &#039;y&#039; =&gt; 4 ), array( &#039;x&#039; =&gt; 2, &#039;y&#039; =&gt; 6 ) );      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.polygon-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.polygon-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::polygon()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">polygon</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">4</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$points </span><span style="color: #007700">= [<br />        [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">40 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">10 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">],<br />        [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">20 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">20 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">], <br />        [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">70 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">50 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">], <br />        [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">60 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">15 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">],<br />    ];<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">polygon</span><span style="color: #007700">(</span><span style="color: #9876AA">$points</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function polygon(array $coordinates) {}

/**
*<div id="imagickdraw.point" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::point</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::point</span> &mdash; <span class="dc-title">Draws a point</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.point-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::point</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a point using the current stroke color and stroke thickness at the specified coordinates.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.point-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       point&#039;s x coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       point&#039;s y coordinate      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.point-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.point-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::point()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">point</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    for (</span><span style="color: #9876AA">$x </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$x </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">10000</span><span style="color: #007700">; </span><span style="color: #9876AA">$x</span><span style="color: #007700">++) {<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">point</span><span style="color: #007700">(</span><span style="color: #9876AA">rand</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">), </span><span style="color: #9876AA">rand</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">));<br />    }<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function point($x, $y) {}

/**
*<div id="imagickdraw.gettextdecoration" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getTextDecoration</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getTextDecoration</span> &mdash; <span class="dc-title">Returns the text decoration</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.gettextdecoration-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getTextDecoration</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the decoration applied when annotating with text.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.gettextdecoration-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.decoration" class="link">DECORATION</a> constant   (<span>imagick::DECORATION_*</span>), and 0 if no decoration is set.  </p> </div></div>
     * @return int one of the DECORATION_ constants*/
    public function getTextDecoration() {}

/**
*<div id="imagickdraw.gettextencoding" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getTextEncoding</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getTextEncoding</span> &mdash; <span class="dc-title">Returns the code set used for text annotations</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.gettextencoding-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getTextEncoding</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns a string which specifies the code set used for text annotations.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.gettextencoding-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a string specifying the code set   or false if text encoding is not set.  </p> </div></div>
     * @return string a string specifying the code set*/
    public function getTextEncoding() {}

/**
*<div id="imagickdraw.getfontstretch" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getFontStretch</h1>  <p class="verinfo">(PECL imagick 2 &gt;=2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getFontStretch</span> &mdash; <span class="dc-title">Gets the font stretch to use when annotating with text</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getfontstretch-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getFontStretch</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the font stretch to use when annotating with text. Returns a StretchType.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.getfontstretch-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getfontstretch-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
*/
    public function getFontStretch() {}

/**
*<div id="imagickdraw.setfontstretch" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setFontStretch</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setFontStretch</span> &mdash; <span class="dc-title">Sets the font stretch to use when annotating with text</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setfontstretch-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setFontStretch</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$fontStretch</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the font stretch to use when annotating with text. The AnyStretch   enumeration acts as a wild-card &quot;don&#039;t care&quot; option.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setfontstretch-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">fontStretch</span></dt>     <dd>      <p class="para">       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.stretch" class="link">STRETCH</a> constant       (<span>imagick::STRETCH_*</span>).      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setfontstretch-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setfontstretch-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setFontStretch()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setFontStretch</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">36</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$fontStretchTypes </span><span style="color: #007700">= [<br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">STRETCH_ULTRACONDENSED</span><span style="color: #007700">, <br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">STRETCH_CONDENSED</span><span style="color: #007700">, <br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">STRETCH_SEMICONDENSED</span><span style="color: #007700">, <br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">STRETCH_SEMIEXPANDED</span><span style="color: #007700">, <br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">STRETCH_EXPANDED</span><span style="color: #007700">, <br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">STRETCH_EXTRAEXPANDED</span><span style="color: #007700">, <br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">STRETCH_ULTRAEXPANDED</span><span style="color: #007700">, <br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">STRETCH_ANY<br />    </span><span style="color: #007700">];<br /><br />    </span><span style="color: #9876AA">$offset </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">;<br />    foreach (</span><span style="color: #9876AA">$fontStretchTypes </span><span style="color: #007700">as </span><span style="color: #9876AA">$fontStretch</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontStretch</span><span style="color: #007700">(</span><span style="color: #9876AA">$fontStretch</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">75 </span><span style="color: #007700">+ </span><span style="color: #9876AA">$offset</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$offset </span><span style="color: #007700">+= </span><span style="color: #9876AA">50</span><span style="color: #007700">;<br />    }<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setFontStretch($fontStretch) {}

/**
*<div id="imagickdraw.setstrokeantialias" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setStrokeAntialias</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setStrokeAntialias</span> &mdash; <span class="dc-title">Controls whether stroked outlines are antialiased</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setstrokeantialias-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setStrokeAntialias</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$stroke_antialias</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Controls whether stroked outlines are antialiased. Stroked outlines are   antialiased by default.  When antialiasing is disabled stroked pixels are   thresholded to determine if the stroke color or underlying canvas color   should be used.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setstrokeantialias-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stroke_antialias</span></dt>     <dd>      <p class="para">       the antialias setting      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setstrokeantialias-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setstrokeantialias-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setStrokeAntialias()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setStrokeAntialias</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeAntialias</span><span style="color: #007700">(</span><span style="color: #9876AA">false</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">105</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">140</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">185</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeAntialias</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">110</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">115</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">150</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">195</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setStrokeAntialias($stroke_antialias) {}

/**
*<div id="imagickdraw.settextalignment" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setTextAlignment</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setTextAlignment</span> &mdash; <span class="dc-title">Specifies a text alignment</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.settextalignment-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setTextAlignment</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$alignment</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Specifies a text alignment to be applied when annotating with text.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.settextalignment-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">alignment</span></dt>     <dd>      <p class="para">       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.align" class="link">ALIGN</a> constant       (<span>imagick::ALIGN_*</span>).      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.settextalignment-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.settextalignment-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setTextAlignment()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setTextAlignment</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">36</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTextAlignment</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">ALIGN_LEFT</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">75</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTextAlignment</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">ALIGN_CENTER</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">150</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTextAlignment</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">ALIGN_RIGHT</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">225</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setTextAlignment($alignment) {}

/**
*<div id="imagickdraw.settextdecoration" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setTextDecoration</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setTextDecoration</span> &mdash; <span class="dc-title">Specifies a decoration</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.settextdecoration-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setTextDecoration</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$decoration</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Specifies a decoration to be applied when annotating with text.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.settextdecoration-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">decoration</span></dt>     <dd>      <p class="para">       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.decoration" class="link">DECORATION</a> constant       (<span>imagick::DECORATION_*</span>).      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.settextdecoration-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.settextdecoration-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setTextDecoration()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setTextDecoration</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$textDecoration</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">72</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTextDecoration</span><span style="color: #007700">(</span><span style="color: #9876AA">$textDecoration</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">75</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setTextDecoration($decoration) {}

/**
*<div id="imagickdraw.settextundercolor" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setTextUnderColor</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setTextUnderColor</span> &mdash; <span class="dc-title">Specifies the color of a background rectangle</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.settextundercolor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setTextUnderColor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span> <span class="parameter" style="color:#3A95FF">$under_color</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Specifies the color of a background rectangle to place under text annotations.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.settextundercolor-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">under_color</span></dt>     <dd>      <p class="para">       the under color      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.settextundercolor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.settextundercolor-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setTextUnderColor()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setTextUnderColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$textUnderColor</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">72</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">75</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setTextUnderColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$textUnderColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">175</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setTextUnderColor(ImagickPixel $under_color) {}

/**
*<div id="imagickdraw.setviewbox" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setViewbox</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setViewbox</span> &mdash; <span class="dc-title">Sets the overall canvas size</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setviewbox-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setViewbox</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y2</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the overall canvas size to be recorded with the drawing vector data.   Usually this will be specified using the same size as the canvas image.   When the vector data is saved to SVG or MVG formats, the viewbox is use to   specify the size of the canvas image that a viewer will render the vector   data on.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setviewbox-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x1</span></dt>     <dd>      <p class="para">       left x coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y1</span></dt>     <dd>      <p class="para">       left y coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x2</span></dt>     <dd>      <p class="para">       right x coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y2</span></dt>     <dd>      <p class="para">       right y coordinate      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setviewbox-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setviewbox-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setViewBox()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setViewBox</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">72</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//<br />     <br />    Sets the overall canvas size to be recorded with the drawing vector data. Usually this will be specified using the same size as the canvas image. When the vector data is saved to SVG or MVG formats, the viewbox is use to specify the size of the canvas image that a viewer will render the vector data on.<br />    <br />     <br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">circle</span><span style="color: #007700">(</span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setviewbox</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">circle</span><span style="color: #007700">(</span><span style="color: #9876AA">125</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">translate</span><span style="color: #007700">(</span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">125</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">circle</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">125</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setViewbox($x1, $y1, $x2, $y2) {}

/**
*<div id="imagickdraw.affine" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::affine</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::affine</span> &mdash; <span class="dc-title">Adjusts the current affine transformation matrix</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.affine-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::affine</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$affine</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Adjusts the current affine transformation matrix with the specified affine   transformation matrix.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.affine-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">affine</span></dt>     <dd>      <p class="para">       Affine matrix parameters      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.affine-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.affine-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::affine()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">affine</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$PI </span><span style="color: #007700">= </span><span style="color: #9876AA">3.141592653589794</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$angle </span><span style="color: #007700">= </span><span style="color: #9876AA">60 </span><span style="color: #007700">* </span><span style="color: #9876AA">$PI </span><span style="color: #007700">/ </span><span style="color: #9876AA">360</span><span style="color: #007700">;<br /><br />    </span><span style="color: #FF8000">//Scale the drawing co-ordinates.<br />    </span><span style="color: #9876AA">$affineScale </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"sx" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">1.75</span><span style="color: #007700">, </span><span style="color: #DD0000">"sy" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">1.75</span><span style="color: #007700">, </span><span style="color: #DD0000">"rx" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #DD0000">"ry" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #DD0000">"tx" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #DD0000">"ty" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//Shear the drawing co-ordinates.<br />    </span><span style="color: #9876AA">$affineShear </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"sx" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #DD0000">"sy" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #DD0000">"rx" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">sin</span><span style="color: #007700">(</span><span style="color: #9876AA">$angle</span><span style="color: #007700">), </span><span style="color: #DD0000">"ry" </span><span style="color: #007700">=&gt; -</span><span style="color: #9876AA">sin</span><span style="color: #007700">(</span><span style="color: #9876AA">$angle</span><span style="color: #007700">), </span><span style="color: #DD0000">"tx" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #DD0000">"ty" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//Rotate the drawing co-ordinates. The shear affine matrix<br />    //produces incorrectly scaled drawings.<br />    </span><span style="color: #9876AA">$affineRotate </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"sx" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">cos</span><span style="color: #007700">(</span><span style="color: #9876AA">$angle</span><span style="color: #007700">), </span><span style="color: #DD0000">"sy" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">cos</span><span style="color: #007700">(</span><span style="color: #9876AA">$angle</span><span style="color: #007700">), </span><span style="color: #DD0000">"rx" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">sin</span><span style="color: #007700">(</span><span style="color: #9876AA">$angle</span><span style="color: #007700">), </span><span style="color: #DD0000">"ry" </span><span style="color: #007700">=&gt; -</span><span style="color: #9876AA">sin</span><span style="color: #007700">(</span><span style="color: #9876AA">$angle</span><span style="color: #007700">), </span><span style="color: #DD0000">"tx" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #DD0000">"ty" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">,);<br /><br />    </span><span style="color: #FF8000">//Translate (offset) the drawing<br />    </span><span style="color: #9876AA">$affineTranslate </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"sx" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #DD0000">"sy" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #DD0000">"rx" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #DD0000">"ry" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #DD0000">"tx" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">30</span><span style="color: #007700">, </span><span style="color: #DD0000">"ty" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">30</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//The identiy affine matrix<br />    </span><span style="color: #9876AA">$affineIdentity </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"sx" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #DD0000">"sy" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #DD0000">"rx" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #DD0000">"ry" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #DD0000">"tx" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #DD0000">"ty" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$examples </span><span style="color: #007700">= [</span><span style="color: #9876AA">$affineScale</span><span style="color: #007700">, </span><span style="color: #9876AA">$affineShear</span><span style="color: #007700">, </span><span style="color: #9876AA">$affineRotate</span><span style="color: #007700">, </span><span style="color: #9876AA">$affineTranslate</span><span style="color: #007700">, </span><span style="color: #9876AA">$affineIdentity</span><span style="color: #007700">,];<br /><br />    </span><span style="color: #9876AA">$count </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">;<br /><br />    foreach (</span><span style="color: #9876AA">$examples </span><span style="color: #007700">as </span><span style="color: #9876AA">$example</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">push</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">translate</span><span style="color: #007700">((</span><span style="color: #9876AA">$count </span><span style="color: #007700">% </span><span style="color: #9876AA">2</span><span style="color: #007700">) * </span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">$count </span><span style="color: #007700">/ </span><span style="color: #9876AA">2</span><span style="color: #007700">) * </span><span style="color: #9876AA">250</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">translate</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">affine</span><span style="color: #007700">(</span><span style="color: #9876AA">$example</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(-</span><span style="color: #9876AA">50</span><span style="color: #007700">, -</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pop</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$count</span><span style="color: #007700">++;<br />    }<br /><br />    </span><span style="color: #FF8000">//Create an image object which the draw commands can be rendered into<br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">750</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//Render the draw commands in the ImagickDraw object <br />    //into the image.<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//Send the image to the browser<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function affine(array $affine) {}

/**
*<div id="imagickdraw.bezier" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::bezier</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::bezier</span> &mdash; <span class="dc-title">Draws a bezier curve</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.bezier-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::bezier</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$coordinates</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a bezier curve through a set of points on the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.bezier-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">coordinates</span></dt>     <dd>      <p class="para">       Multidimensional array like array( array( &#039;x&#039; =&gt; 1, &#039;y&#039; =&gt; 2 ),        array( &#039;x&#039; =&gt; 3, &#039;y&#039; =&gt; 4 ) )      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.bezier-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.bezier-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::bezier()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">bezier</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$strokeColor </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$fillColor </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$smoothPointsSet </span><span style="color: #007700">= [<br />        [<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">10.0 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">10.0 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">],<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">30.0 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">90.0 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">],<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">25.0 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">10.0 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">],<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">50.0 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">50.0 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">],<br />        ], <br />        [<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">50.0 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">50.0 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">],<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">75.0 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">90.0 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">],<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">70.0 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">10.0 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">],<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">90.0 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">40.0 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">],<br />        ],<br />    ];<br /><br />    foreach (</span><span style="color: #9876AA">$smoothPointsSet </span><span style="color: #007700">as </span><span style="color: #9876AA">$points</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">bezier</span><span style="color: #007700">(</span><span style="color: #9876AA">$points</span><span style="color: #007700">);<br />    }<br /><br />    </span><span style="color: #9876AA">$disjointPoints </span><span style="color: #007700">= [<br />        [<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">10 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">10 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">], <br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">30 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">90 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">], <br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">25 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">10 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">],<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">50 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">50 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">],<br />        ],<br />        [<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">50 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">50 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">], <br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">80 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">50 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">],<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">70 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">10 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">],<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">90 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">40 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">],<br />         ]<br />    ];<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">translate</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">);<br /><br />    foreach (</span><span style="color: #9876AA">$disjointPoints </span><span style="color: #007700">as </span><span style="color: #9876AA">$points</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">bezier</span><span style="color: #007700">(</span><span style="color: #9876AA">$points</span><span style="color: #007700">);<br />    }<br /><br />    </span><span style="color: #FF8000">//Create an image object which the draw commands can be rendered into<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//Render the draw commands in the ImagickDraw object <br />    //into the image.<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//Send the image to the browser<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function bezier(array $coordinates) {}

/**
*<div id="imagickdraw.composite" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::composite</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::composite</span> &mdash; <span class="dc-title">Composites an image onto the current image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.composite-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::composite</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$compose</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$height</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$compositeWand</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Composites an image onto the current image, using the specified   composition operator, specified position, and at the specified size.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.composite-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">compose</span></dt>     <dd>      <p class="para">       composition operator.       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.compositeop" class="link">Composite Operator</a> constant       (<span>imagick::COMPOSITE_*</span>).      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       x coordinate of the top left corner.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       y coordinate of the top left corner.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">       width of the composition image.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">height</span></dt>     <dd>      <p class="para">       height of the composition image.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">compositeWand</span></dt>     <dd>      <p class="para">       the <span class="classname"><a href="https://www.php.net/manual/zh/class.imagick.php" class="classname">Imagick</a></span> object where composition image is taken from.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.composite-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.composite-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::composite()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">composite</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">72</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFont</span><span style="color: #007700">(</span><span style="color: #DD0000">"../fonts/CANDY.TTF"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">140</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">1000</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'white'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setfillopacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">180</span><span style="color: #007700">, </span><span style="color: #DD0000">"Lorem Ipsum!"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//Create an image object which the draw commands can be rendered into<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">1000</span><span style="color: #007700">, </span><span style="color: #9876AA">302</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//Render the draw commands in the ImagickDraw object <br />    //into the image.<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//Send the image to the browser<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function composite($compose, $x, $y, $width, $height, Imagick $compositeWand) {}

/**
*<div id="imagickdraw.color" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::color</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::color</span> &mdash; <span class="dc-title">Draws color on image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.color-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::color</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$paintMethod</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws color on image using the current fill color, starting at specified   position, and using specified paint method.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.color-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       x coordinate of the paint      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       y coordinate of the paint      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">paintMethod</span></dt>     <dd>      <p class="para">       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.paint" class="link">PAINT</a> constant       (<span>imagick::PAINT_*</span>).      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.color-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function color($x, $y, $paintMethod) {}

/**
*<div id="imagickdraw.comment" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::comment</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::comment</span> &mdash; <span class="dc-title">Adds a comment</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.comment-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::comment</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$comment</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Adds a comment to a vector output stream.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.comment-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">comment</span></dt>     <dd>      <p class="para">       The comment string to add to vector output stream      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.comment-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function comment($comment) {}

/**
*<div id="imagickdraw.getclippath" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getClipPath</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getClipPath</span> &mdash; <span class="dc-title">Obtains the current clipping path ID</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getclippath-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getClipPath</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Obtains the current clipping path ID.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getclippath-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a string containing the clip path ID or false if no clip path exists.  </p> </div></div>
     * @return string|false a string containing the clip path ID or false if no clip path exists.*/
    public function getClipPath() {}

/**
*<div id="imagickdraw.getcliprule" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getClipRule</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getClipRule</span> &mdash; <span class="dc-title">Returns the current polygon fill rule</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getcliprule-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getClipRule</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the current polygon fill rule to be used by the clipping path.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getcliprule-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.fillrule" class="link">FILLRULE</a> constant   (<span>imagick::FILLRULE_*</span>).   </p> </div></div>
     * @return int one of the FILLRULE_ constants.*/
    public function getClipRule() {}

/**
*<div id="imagickdraw.getclipunits" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getClipUnits</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getClipUnits</span> &mdash; <span class="dc-title">Returns the interpretation of clip path units</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getclipunits-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getClipUnits</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the interpretation of clip path units.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getclipunits-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an <span class="type" style="color:#EAB766">int</span> on success.  </p> </div></div>
     * @return int an int on success.*/
    public function getClipUnits() {}

/**
*<div id="imagickdraw.getfillcolor" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getFillColor</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getFillColor</span> &mdash; <span class="dc-title">Returns the fill color</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getfillcolor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getFillColor</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the fill color used for drawing filled objects.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getfillcolor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an <span class="classname"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="classname">ImagickPixel</a></span> object.  </p> </div></div>
     * @return ImagickPixel an ImagickPixel object.*/
    public function getFillColor() {}

/**
*<div id="imagickdraw.getfillopacity" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getFillOpacity</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getFillOpacity</span> &mdash; <span class="dc-title">Returns the opacity used when drawing</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getfillopacity-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getFillOpacity</strong></span>(): <span class="type" style="color:#EAB766">float</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the opacity used when drawing using the fill color or fill   texture.  Fully opaque is 1.0.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getfillopacity-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The opacity.   </p> </div></div>
     * @return float The opacity.*/
    public function getFillOpacity() {}

/**
*<div id="imagickdraw.getfillrule" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getFillRule</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getFillRule</span> &mdash; <span class="dc-title">Returns the fill rule</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getfillrule-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getFillRule</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the fill rule used while drawing polygons.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getfillrule-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.fillrule" class="link">FILLRULE</a> constant   (<span>imagick::FILLRULE_*</span>).  </p> </div> </div>
     * @return int a FILLRULE_ constant*/
    public function getFillRule() {}

/**
*<div id="imagickdraw.getgravity" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getGravity</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getGravity</span> &mdash; <span class="dc-title">Returns the text placement gravity</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getgravity-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getGravity</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the text placement gravity used when annotating with text.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getgravity-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.gravity" class="link">GRAVITY</a> constant   (<span>imagick::GRAVITY_*</span>) on success and 0 if no gravity is set.  </p> </div></div>
     * @return int a GRAVITY_ constant on success and 0 if no gravity is set.*/
    public function getGravity() {}

/**
*<div id="imagickdraw.getstrokeantialias" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getStrokeAntialias</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getStrokeAntialias</span> &mdash; <span class="dc-title">Returns the current stroke antialias setting</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getstrokeantialias-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getStrokeAntialias</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the current stroke antialias setting. Stroked outlines are   antialiased by default. When antialiasing is disabled stroked pixels are   thresholded to determine if the stroke color or underlying canvas color   should be used.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getstrokeantialias-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> if antialiasing is on and <strong><span>false</span></strong> if it is off.  </p> </div></div>
     * @return bool <b>TRUE</b> if antialiasing is on and false if it is off.*/
    public function getStrokeAntialias() {}

/**
*<div id="imagickdraw.getstrokecolor" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getStrokeColor</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getStrokeColor</span> &mdash; <span class="dc-title">Returns the color used for stroking object outlines</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getstrokecolor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getStrokeColor</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the color used for stroking object outlines.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.getstrokecolor-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stroke_color</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getstrokecolor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an <span class="classname"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="classname">ImagickPixel</a></span> object which describes the color.  </p> </div></div>
     * @return ImagickPixel an ImagickPixel object which describes the color.*/
    public function getStrokeColor() {}

/**
*<div id="imagickdraw.getstrokedasharray" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getStrokeDashArray</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getStrokeDashArray</span> &mdash; <span class="dc-title">Returns an array representing the pattern of dashes and gaps used to stroke paths</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getstrokedasharray-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getStrokeDashArray</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns an array representing the pattern of dashes and gaps used to   stroke paths.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getstrokedasharray-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an array on success and empty array if not set.  </p> </div></div>
     * @return array an array on success and empty array if not set.*/
    public function getStrokeDashArray() {}

/**
*<div id="imagickdraw.getstrokedashoffset" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getStrokeDashOffset</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getStrokeDashOffset</span> &mdash; <span class="dc-title">Returns the offset into the dash pattern to start the dash</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getstrokedashoffset-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getStrokeDashOffset</strong></span>(): <span class="type" style="color:#EAB766">float</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the offset into the dash pattern to start the dash.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getstrokedashoffset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a float representing the offset and 0 if it&#039;s not set.  </p> </div></div>
     * @return float a float representing the offset and 0 if it's not set.*/
    public function getStrokeDashOffset() {}

/**
*<div id="imagickdraw.getstrokelinecap" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getStrokeLineCap</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getStrokeLineCap</span> &mdash; <span class="dc-title">Returns the shape to be used at the end of open subpaths when they are stroked</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getstrokelinecap-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getStrokeLineCap</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the shape to be used at the end of open subpaths when they are   stroked.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getstrokelinecap-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.linecap" class="link">LINECAP</a> constant   (<span>imagick::LINECAP_*</span>), or 0 if stroke linecap is not set.  </p> </div></div>
     * @return int one of the LINECAP_ constants or 0 if stroke linecap is not set.*/
    public function getStrokeLineCap() {}

/**
*<div id="imagickdraw.getstrokelinejoin" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getStrokeLineJoin</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getStrokeLineJoin</span> &mdash; <span class="dc-title">Returns the shape to be used at the corners of paths when they are stroked</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getstrokelinejoin-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getStrokeLineJoin</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the shape to be used at the corners of paths (or other vector   shapes) when they are stroked.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getstrokelinejoin-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.linejoin" class="link">LINEJOIN</a> constant   (<span>imagick::LINEJOIN_*</span>), or 0 if stroke line join is not set.  </p> </div></div>
     * @return int one of the LINEJOIN_ constants or 0 if stroke line join is not set.*/
    public function getStrokeLineJoin() {}

/**
*<div id="imagickdraw.getstrokemiterlimit" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getStrokeMiterLimit</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getStrokeMiterLimit</span> &mdash; <span class="dc-title">Returns the stroke miter limit</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getstrokemiterlimit-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getStrokeMiterLimit</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the miter limit. When two line segments meet at a sharp angle and   miter joins have been specified for &#039;lineJoin&#039;, it is possible for the   miter to extend far beyond the thickness of the line stroking the path.   The &#039;miterLimit&#039; imposes a limit on the ratio of the miter length to the   &#039;lineWidth&#039;.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getstrokemiterlimit-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an int describing the miter limit   and 0 if no miter limit is set.  </p> </div></div>
     * @return int an int describing the miter limit*/
    public function getStrokeMiterLimit() {}

/**
*<div id="imagickdraw.getstrokeopacity" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getStrokeOpacity</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getStrokeOpacity</span> &mdash; <span class="dc-title">Returns the opacity of stroked object outlines</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getstrokeopacity-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getStrokeOpacity</strong></span>(): <span class="type" style="color:#EAB766">float</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the opacity of stroked object outlines.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getstrokeopacity-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <span class="type" style="color:#EAB766">float</span> describing the opacity.  </p> </div></div>
     * @return float a float describing the opacity.*/
    public function getStrokeOpacity() {}

/**
*<div id="imagickdraw.getstrokewidth" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getStrokeWidth</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getStrokeWidth</span> &mdash; <span class="dc-title">Returns the width of the stroke used to draw object outlines</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getstrokewidth-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getStrokeWidth</strong></span>(): <span class="type" style="color:#EAB766">float</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the width of the stroke used to draw object outlines.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getstrokewidth-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <span class="type" style="color:#EAB766">float</span> describing the stroke width.  </p> </div></div>
     * @return float a float describing the stroke width.*/
    public function getStrokeWidth() {}

/**
*<div id="imagickdraw.gettextalignment" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getTextAlignment</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getTextAlignment</span> &mdash; <span class="dc-title">Returns the text alignment</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.gettextalignment-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getTextAlignment</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the alignment applied when annotating with text.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.gettextalignment-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.align" class="link">ALIGN</a> constant   (<span>imagick::ALIGN_*</span>), and 0 if no align is set.  </p> </div></div>
     * @return int one of the ALIGN_ constants and 0 if no align is set.*/
    public function getTextAlignment() {}

/**
*<div id="imagickdraw.gettextantialias" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getTextAntialias</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getTextAntialias</span> &mdash; <span class="dc-title">Returns the current text antialias setting</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.gettextantialias-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getTextAntialias</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the current text antialias setting, which determines whether text   is antialiased. Text is antialiased by default.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.gettextantialias-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> if text is antialiased and <strong><span>false</span></strong> if not.  </p> </div></div>
     * @return bool <b>TRUE</b> if text is antialiased and false if not.*/
    public function getTextAntialias() {}

/**
*<div id="imagickdraw.getvectorgraphics" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getVectorGraphics</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getVectorGraphics</span> &mdash; <span class="dc-title">Returns a string containing vector graphics</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.getvectorgraphics-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getVectorGraphics</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns a string which specifies the vector graphics generated by any   graphics calls made since the <span class="classname"><a href="https://www.php.net/manual/zh/class.imagickdraw.php" class="classname">ImagickDraw</a></span> object was instantiated.    </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.getvectorgraphics-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a string containing the vector graphics.  </p> </div></div>
     * @return string a string containing the vector graphics.*/
    public function getVectorGraphics() {}

/**
*<div id="imagickdraw.gettextundercolor" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::getTextUnderColor</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::getTextUnderColor</span> &mdash; <span class="dc-title">Returns the text under color</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.gettextundercolor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::getTextUnderColor</strong></span>(): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the color of a background rectangle to place under text annotations.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.gettextundercolor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an <span class="classname"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="classname">ImagickPixel</a></span> object describing the color.  </p> </div></div>
     * @return ImagickPixel an ImagickPixel object describing the color.*/
    public function getTextUnderColor() {}

/**
*<div id="imagickdraw.pathclose" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathClose</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathClose</span> &mdash; <span class="dc-title">Adds a path element to the current path</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathclose-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathClose</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Adds a path element to the current path which closes the current subpath   by drawing a straight line from the current point to the current subpath&#039;s   most recent starting point (usually, the most recent moveto point).  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathclose-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pathClose() {}

/**
*<div id="imagickdraw.pathcurvetoabsolute" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathCurveToAbsolute</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathCurveToAbsolute</span> &mdash; <span class="dc-title">Draws a cubic Bezier curve</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathcurvetoabsolute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathCurveToAbsolute</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a cubic Bezier curve from the current point to (x,y) using (x1,y1)   as the control point at the beginning of the curve and (x2,y2) as the   control point at the end of the curve using absolute coordinates. At the   end of the command, the new current point becomes the final (x,y)   coordinate pair used in the polybezier.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pathcurvetoabsolute-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x1</span></dt>     <dd>      <p class="para">       x coordinate of the first control point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y1</span></dt>     <dd>      <p class="para">       y coordinate of the first control point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x2</span></dt>     <dd>      <p class="para">       x coordinate of the second control point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y2</span></dt>     <dd>      <p class="para">       y coordinate of the first control point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       x coordinate of the curve end      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       y coordinate of the curve end      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathcurvetoabsolute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pathCurveToAbsolute($x1, $y1, $x2, $y2, $x, $y) {}

/**
*<div id="imagickdraw.pathcurvetorelative" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathCurveToRelative</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathCurveToRelative</span> &mdash; <span class="dc-title">Draws a cubic Bezier curve</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathcurvetorelative-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathCurveToRelative</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a cubic Bezier curve from the current point to (x,y) using (x1,y1)   as the control point at the beginning of the curve and (x2,y2) as the   control point at the end of the curve using relative coordinates. At the   end of the command, the new current point becomes the final (x,y)    coordinate pair used in the polybezier.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pathcurvetorelative-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x1</span></dt>     <dd>      <p class="para">       x coordinate of starting control point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y1</span></dt>     <dd>      <p class="para">       y coordinate of starting control point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x2</span></dt>     <dd>      <p class="para">       x coordinate of ending control point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y2</span></dt>     <dd>      <p class="para">       y coordinate of ending control point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       ending x coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       ending y coordinate      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathcurvetorelative-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pathCurveToRelative($x1, $y1, $x2, $y2, $x, $y) {}

/**
*<div id="imagickdraw.pathcurvetoquadraticbezierabsolute" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathCurveToQuadraticBezierAbsolute</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathCurveToQuadraticBezierAbsolute</span> &mdash; <span class="dc-title">Draws a quadratic Bezier curve</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathcurvetoquadraticbezierabsolute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathCurveToQuadraticBezierAbsolute</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a quadratic Bezier curve from the current point to (x,y) using   (x1,y1) as the control point using absolute coordinates. At the end of the   command, the new current point becomes the final (x,y) coordinate pair   used in the polybezier.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pathcurvetoquadraticbezierabsolute-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x1</span></dt>     <dd>      <p class="para">       x coordinate of the control point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y1</span></dt>     <dd>      <p class="para">       y coordinate of the  control point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       x coordinate of the end point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       y coordinate of the end point      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathcurvetoquadraticbezierabsolute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.pathcurvetoquadraticbezierabsolute-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::pathCurveToQuadraticBezierAbsolute()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">pathCurveToQuadraticBezierAbsolute</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">72</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathStart</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathMoveToAbsolute</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">,</span><span style="color: #9876AA">250</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">// This specifies a quadratic bezier curve with the current position as the start<br />    // point, the control point is the first two params, and the end point is the last two params.<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathCurveToQuadraticBezierAbsolute</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">150</span><span style="color: #007700">,</span><span style="color: #9876AA">50</span><span style="color: #007700">, <br />        </span><span style="color: #9876AA">250</span><span style="color: #007700">,</span><span style="color: #9876AA">250<br />    </span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">// This specifies a quadratic bezier curve with the current position as the start<br />    // point, the control point is mirrored from the previous curves control point<br />    // and the end point is defined by the x, y values.<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathCurveToQuadraticBezierSmoothAbsolute</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">450</span><span style="color: #007700">,</span><span style="color: #9876AA">250<br />    </span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">// This specifies a quadratic bezier curve with the current position as the start<br />    // point, the control point is mirrored from the previous curves control point<br />    // and the end point is defined relative from the current position by the x, y values.<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathCurveToQuadraticBezierSmoothRelative</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">200</span><span style="color: #007700">,-</span><span style="color: #9876AA">100<br />    </span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathFinish</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">700</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function pathCurveToQuadraticBezierAbsolute($x1, $y1, $x, $y) {}

/**
*<div id="imagickdraw.pathcurvetoquadraticbezierrelative" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathCurveToQuadraticBezierRelative</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathCurveToQuadraticBezierRelative</span> &mdash; <span class="dc-title">Draws a quadratic Bezier curve</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathcurvetoquadraticbezierrelative-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathCurveToQuadraticBezierRelative</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a quadratic Bezier curve from the current point to (x,y) using   (x1,y1) as the control point using relative coordinates. At the end of the   command, the new current point becomes the final (x,y) coordinate pair   used in the polybezier.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pathcurvetoquadraticbezierrelative-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x1</span></dt>     <dd>      <p class="para">       starting x coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y1</span></dt>     <dd>      <p class="para">       starting y coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       ending x coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       ending y coordinate      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathcurvetoquadraticbezierrelative-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pathCurveToQuadraticBezierRelative($x1, $y1, $x, $y) {}

/**
*<div id="imagickdraw.pathcurvetoquadraticbeziersmoothabsolute" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute</span> &mdash; <span class="dc-title">Draws a quadratic Bezier curve</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathcurvetoquadraticbeziersmoothabsolute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div>    <p class="para rdfs-comment">   Draws a quadratic Bezier curve (using absolute coordinates) from the   current point to (x,y). The control point is assumed to be the reflection   of the control point on the previous command relative to the current point.   (If there is no previous command or if the previous command was not a   DrawPathCurveToQuadraticBezierAbsolute,   DrawPathCurveToQuadraticBezierRelative,   DrawPathCurveToQuadraticBezierSmoothAbsolut or   DrawPathCurveToQuadraticBezierSmoothRelative, assume the control point is   coincident with the current point.). At the end of the command, the new   current point becomes the final (x,y) coordinate pair used in the polybezier.  </p>    <p class="para">   This function cannot be used to continue a cubic Bezier curve smoothly. It can only continue from a quadratic curve smoothly.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pathcurvetoquadraticbeziersmoothabsolute-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       ending x coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       ending y coordinate      </p>     </dd>       </dl>  </span>   </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathcurvetoquadraticbeziersmoothabsolute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.pathcurvetoquadraticbeziersmoothabsolute-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1      <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute()</strong></span> example    </strong></p>    <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #DD0000">"black"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #DD0000">"blue"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">72</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathStart</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathMoveToAbsolute</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">,</span><span style="color: #9876AA">250</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// This specifies a quadratic bezier curve with the current position as the start<br />// point, the control point is the first two params, and the end point is the last two params.<br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathCurveToQuadraticBezierAbsolute</span><span style="color: #007700">(<br />    </span><span style="color: #9876AA">150</span><span style="color: #007700">,</span><span style="color: #9876AA">50</span><span style="color: #007700">, <br />    </span><span style="color: #9876AA">250</span><span style="color: #007700">,</span><span style="color: #9876AA">250<br /></span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// This specifies a quadratic bezier curve with the current position as the start<br />// point, the control point is mirrored from the previous curves control point<br />// and the end point is defined by the x, y values.<br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathCurveToQuadraticBezierSmoothAbsolute</span><span style="color: #007700">(<br />    </span><span style="color: #9876AA">450</span><span style="color: #007700">,</span><span style="color: #9876AA">250<br /></span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// This specifies a quadratic bezier curve with the current position as the start<br />// point, the control point is mirrored from the previous curves control point<br />// and the end point is defined relative from the current position by the x, y values.<br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathCurveToQuadraticBezierSmoothRelative</span><span style="color: #007700">(<br />    </span><span style="color: #9876AA">200</span><span style="color: #007700">,-</span><span style="color: #9876AA">100<br /></span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathFinish</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">700</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function pathCurveToQuadraticBezierSmoothAbsolute($x, $y) {}

/**
*<div id="imagickdraw.pathcurvetoquadraticbeziersmoothrelative" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathCurveToQuadraticBezierSmoothRelative</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathCurveToQuadraticBezierSmoothRelative</span> &mdash; <span class="dc-title">Draws a quadratic Bezier curve</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathcurvetoquadraticbeziersmoothrelative-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathCurveToQuadraticBezierSmoothRelative</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a quadratic Bezier curve (using relative coordinates) from the   current point to (x, y). The control point is assumed to be the reflection   of the control point on the previous command relative to the current point.   (If there is no previous command or if the previous command was not a   DrawPathCurveToQuadraticBezierAbsolute,    DrawPathCurveToQuadraticBezierRelative,    DrawPathCurveToQuadraticBezierSmoothAbsolut or    DrawPathCurveToQuadraticBezierSmoothRelative, assume the control point is   coincident with the current point). At the end of the command, the new   current point becomes the final (x, y) coordinate pair used in the   polybezier.  </p>    <p class="para">   This function cannot be used to continue a cubic Bezier curve smoothly. It can only continue from a quadratic curve smoothly.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pathcurvetoquadraticbeziersmoothrelative-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       ending x coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       ending y coordinate      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathcurvetoquadraticbeziersmoothrelative-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.pathcurvetoquadraticbeziersmoothrelative-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1      <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathCurveToQuadraticBezierSmoothRelative()</strong></span> example    </strong></p>    <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #DD0000">"black"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #DD0000">"blue"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">72</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathStart</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathMoveToAbsolute</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">,</span><span style="color: #9876AA">250</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// This specifies a quadratic bezier curve with the current position as the start<br />// point, the control point is the first two params, and the end point is the last two params.<br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathCurveToQuadraticBezierAbsolute</span><span style="color: #007700">(<br />    </span><span style="color: #9876AA">150</span><span style="color: #007700">,</span><span style="color: #9876AA">50</span><span style="color: #007700">, <br />    </span><span style="color: #9876AA">250</span><span style="color: #007700">,</span><span style="color: #9876AA">250<br /></span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// This specifies a quadratic bezier curve with the current position as the start<br />// point, the control point is mirrored from the previous curves control point<br />// and the end point is defined by the x, y values.<br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathCurveToQuadraticBezierSmoothAbsolute</span><span style="color: #007700">(<br />    </span><span style="color: #9876AA">450</span><span style="color: #007700">,</span><span style="color: #9876AA">250<br /></span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// This specifies a quadratic bezier curve with the current position as the start<br />// point, the control point is mirrored from the previous curves control point<br />// and the end point is defined relative from the current position by the x, y values.<br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathCurveToQuadraticBezierSmoothRelative</span><span style="color: #007700">(<br />    </span><span style="color: #9876AA">200</span><span style="color: #007700">,-</span><span style="color: #9876AA">100<br /></span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathFinish</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">700</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function pathCurveToQuadraticBezierSmoothRelative($x, $y) {}

/**
*<div id="imagickdraw.pathcurvetosmoothabsolute" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathCurveToSmoothAbsolute</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathCurveToSmoothAbsolute</span> &mdash; <span class="dc-title">Draws a cubic Bezier curve</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathcurvetosmoothabsolute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathCurveToSmoothAbsolute</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a cubic Bezier curve from the current point to (x,y) using absolute   coordinates. The first control point is assumed to be the reflection of the   second control point on the previous command relative to the current point.   (If there is no previous command or if the previous command was not an    DrawPathCurveToAbsolute, DrawPathCurveToRelative,    DrawPathCurveToSmoothAbsolute or DrawPathCurveToSmoothRelative, assume the   first control point is coincident with the current point.) (x2,y2) is the   second control point (i.e., the control point at the end of the curve).   At the end of the command, the new current point becomes the final (x,y)   coordinate pair used in the polybezier.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pathcurvetosmoothabsolute-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x2</span></dt>     <dd>      <p class="para">       x coordinate of the second control point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y2</span></dt>     <dd>      <p class="para">       y coordinate of the second control point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       x coordinate of the ending point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       y coordinate of the ending point      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathcurvetosmoothabsolute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pathCurveToSmoothAbsolute($x2, $y2, $x, $y) {}

/**
*<div id="imagickdraw.pathcurvetosmoothrelative" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathCurveToSmoothRelative</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathCurveToSmoothRelative</span> &mdash; <span class="dc-title">Draws a cubic Bezier curve</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathcurvetosmoothrelative-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathCurveToSmoothRelative</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a cubic Bezier curve from the current point to (x,y) using relative   coordinates. The first control point is assumed to be the reflection of   the second control point on the previous command relative to the current   point. (If there is no previous command or if the previous command was not   an DrawPathCurveToAbsolute, DrawPathCurveToRelative,    DrawPathCurveToSmoothAbsolute or DrawPathCurveToSmoothRelative, assume the   first control point is coincident with the current point.) (x2,y2) is the   second control point (i.e., the control point at the end of the curve). At   the end of the command, the new current point becomes the final (x,y)   coordinate pair used in the polybezier.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pathcurvetosmoothrelative-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x2</span></dt>     <dd>      <p class="para">       x coordinate of the second control point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y2</span></dt>     <dd>      <p class="para">       y coordinate of the second control point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       x coordinate of the ending point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       y coordinate of the ending point      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathcurvetosmoothrelative-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pathCurveToSmoothRelative($x2, $y2, $x, $y) {}

/**
*<div id="imagickdraw.pathellipticarcabsolute" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathEllipticArcAbsolute</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathEllipticArcAbsolute</span> &mdash; <span class="dc-title">Draws an elliptical arc</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathellipticarcabsolute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathEllipticArcAbsolute</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$rx</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ry</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x_axis_rotation</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$large_arc_flag</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$sweep_flag</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws an elliptical arc from the current point to (x, y) using absolute   coordinates. The size and orientation of the ellipse are defined by two   radii (rx, ry) and an xAxisRotation, which indicates how the ellipse as   a whole is rotated relative to the current coordinate system. The center   (cx, cy) of the ellipse is calculated automatically to satisfy the   constraints imposed by the other parameters. largeArcFlag and sweepFlag   contribute to the automatic calculations and help determine how the arc   is drawn. If <span class="parameter" style="color:#3A95FF">large_arc_flag</span> is <strong><span>true</span></strong> then draw the larger of the available   arcs. If <span class="parameter" style="color:#3A95FF">sweep_flag</span> is true, then draw the arc matching a clock-wise   rotation.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pathellipticarcabsolute-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">rx</span></dt>     <dd>      <p class="para">       x radius      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">ry</span></dt>     <dd>      <p class="para">       y radius      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x_axis_rotation</span></dt>     <dd>      <p class="para">       x axis rotation      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">large_arc_flag</span></dt>     <dd>      <p class="para">       large arc flag      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">sweep_flag</span></dt>     <dd>      <p class="para">       sweep flag      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       x coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       y coordinate      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathellipticarcabsolute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pathEllipticArcAbsolute($rx, $ry, $x_axis_rotation, $large_arc_flag, $sweep_flag, $x, $y) {}

/**
*<div id="imagickdraw.pathellipticarcrelative" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathEllipticArcRelative</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathEllipticArcRelative</span> &mdash; <span class="dc-title">Draws an elliptical arc</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathellipticarcrelative-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathEllipticArcRelative</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$rx</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$ry</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x_axis_rotation</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$large_arc_flag</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$sweep_flag</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws an elliptical arc from the current point to (x, y) using relative   coordinates. The size and orientation of the ellipse are defined by two   radii (rx, ry) and an xAxisRotation, which indicates how the ellipse as   a whole is rotated relative to the current coordinate system. The center   (cx, cy) of the ellipse is calculated automatically to satisfy the   constraints imposed by the other parameters. largeArcFlag and sweepFlag   contribute to the automatic calculations and help determine how the arc   is drawn. If <span class="parameter" style="color:#3A95FF">large_arc_flag</span> is <strong><span>true</span></strong> then draw the larger of the available   arcs. If <span class="parameter" style="color:#3A95FF">sweep_flag</span> is true, then draw the arc matching a clock-wise   rotation.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pathellipticarcrelative-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">rx</span></dt>     <dd>      <p class="para">       x radius      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">ry</span></dt>     <dd>      <p class="para">       y radius      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x_axis_rotation</span></dt>     <dd>      <p class="para">       x axis rotation      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">large_arc_flag</span></dt>     <dd>      <p class="para">       large arc flag      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">sweep_flag</span></dt>     <dd>      <p class="para">       sweep flag      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       x coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       y coordinate      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathellipticarcrelative-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pathEllipticArcRelative($rx, $ry, $x_axis_rotation, $large_arc_flag, $sweep_flag, $x, $y) {}

/**
*<div id="imagickdraw.pathfinish" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathFinish</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathFinish</span> &mdash; <span class="dc-title">Terminates the current path</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathfinish-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathFinish</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Terminates the current path.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathfinish-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pathFinish() {}

/**
*<div id="imagickdraw.pathlinetoabsolute" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathLineToAbsolute</h1>  <p class="verinfo">(PECL imagick 2)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathLineToAbsolute</span> &mdash; <span class="dc-title">Draws a line path</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathlinetoabsolute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathLineToAbsolute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a line path from the current point to the given coordinate using   absolute coordinates. The coordinate then becomes the new current point.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pathlinetoabsolute-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       starting x coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       ending x coordinate      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathlinetoabsolute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pathLineToAbsolute($x, $y) {}

/**
*<div id="imagickdraw.pathlinetorelative" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathLineToRelative</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathLineToRelative</span> &mdash; <span class="dc-title">Draws a line path</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathlinetorelative-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathLineToRelative</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a line path from the current point to the given coordinate using   relative coordinates. The coordinate then becomes the new current point.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pathlinetorelative-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       starting x coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       starting y coordinate      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathlinetorelative-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pathLineToRelative($x, $y) {}

/**
*<div id="imagickdraw.pathlinetohorizontalabsolute" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathLineToHorizontalAbsolute</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathLineToHorizontalAbsolute</span> &mdash; <span class="dc-title">Draws a horizontal line path</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathlinetohorizontalabsolute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathLineToHorizontalAbsolute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a horizontal line path from the current point to the target point   using absolute coordinates.  The target point then becomes the new   current point.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pathlinetohorizontalabsolute-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       x coordinate      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathlinetohorizontalabsolute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pathLineToHorizontalAbsolute($x) {}

/**
*<div id="imagickdraw.pathlinetohorizontalrelative" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathLineToHorizontalRelative</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathLineToHorizontalRelative</span> &mdash; <span class="dc-title">Draws a horizontal line</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathlinetohorizontalrelative-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathLineToHorizontalRelative</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a horizontal line path from the current point to the target point   using relative coordinates.  The target point then becomes the new   current point.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pathlinetohorizontalrelative-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       x coordinate      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathlinetohorizontalrelative-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pathLineToHorizontalRelative($x) {}

/**
*<div id="imagickdraw.pathlinetoverticalabsolute" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathLineToVerticalAbsolute</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathLineToVerticalAbsolute</span> &mdash; <span class="dc-title">Draws a vertical line</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathlinetoverticalabsolute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathLineToVerticalAbsolute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a vertical line path from the current point to the target point using   absolute coordinates.  The target point then becomes the new current point.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pathlinetoverticalabsolute-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       y coordinate      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathlinetoverticalabsolute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pathLineToVerticalAbsolute($y) {}

/**
*<div id="imagickdraw.pathlinetoverticalrelative" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathLineToVerticalRelative</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathLineToVerticalRelative</span> &mdash; <span class="dc-title">Draws a vertical line path</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathlinetoverticalrelative-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathLineToVerticalRelative</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a vertical line path from the current point to the target point using   relative coordinates.  The target point then becomes the new current point.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pathlinetoverticalrelative-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       y coordinate      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathlinetoverticalrelative-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pathLineToVerticalRelative($y) {}

/**
*<div id="imagickdraw.pathmovetoabsolute" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathMoveToAbsolute</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathMoveToAbsolute</span> &mdash; <span class="dc-title">Starts a new sub-path</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathmovetoabsolute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathMoveToAbsolute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Starts a new sub-path at the given coordinate using absolute coordinates.   The current point then becomes the specified coordinate.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pathmovetoabsolute-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       x coordinate of the starting point      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       y coordinate of the starting point      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathmovetoabsolute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pathMoveToAbsolute($x, $y) {}

/**
*<div id="imagickdraw.pathmovetorelative" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathMoveToRelative</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathMoveToRelative</span> &mdash; <span class="dc-title">Starts a new sub-path</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathmovetorelative-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathMoveToRelative</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Starts a new sub-path at the given coordinate using relative coordinates.   The current point then becomes the specified coordinate.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pathmovetorelative-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       target x coordinate      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       target y coordinate      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathmovetorelative-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pathMoveToRelative($x, $y) {}

/**
*<div id="imagickdraw.pathstart" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pathStart</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pathStart</span> &mdash; <span class="dc-title">Declares the start of a path drawing list</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pathstart-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pathStart</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Declares the start of a path drawing list which is terminated by a matching   DrawPathFinish() command. All other DrawPath commands must be enclosed   between a and a DrawPathFinish() command. This is because path drawing   commands are subordinate commands and they do not function by themselves.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pathstart-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.pathstart-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::pathStart()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">pathStart</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">72</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathStart</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathMoveToAbsolute</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathLineToAbsolute</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathLineToRelative</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathLineToHorizontalRelative</span><span style="color: #007700">(-</span><span style="color: #9876AA">50</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathFinish</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathStart</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathMoveToAbsolute</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathMoveToRelative</span><span style="color: #007700">(</span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathLineToRelative</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathLineToVerticalRelative</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathLineToHorizontalAbsolute</span><span style="color: #007700">(</span><span style="color: #9876AA">350</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathclose</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathFinish</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathStart</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathMoveToAbsolute</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathCurveToAbsolute</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathLineToVerticalAbsolute</span><span style="color: #007700">(</span><span style="color: #9876AA">350</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathFinish</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function pathStart() {}

/**
*<div id="imagickdraw.polyline" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::polyline</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::polyline</span> &mdash; <span class="dc-title">Draws a polyline</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.polyline-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::polyline</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$coordinates</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Draws a polyline using the current stroke, stroke width, and fill color or   texture, using the specified array of coordinates.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.polyline-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">coordinates</span></dt>     <dd>      <p class="para">       array of x and y coordinates: array( array( &#039;x&#039; =&gt; 4, &#039;y&#039; =&gt; 6 ), array( &#039;x&#039; =&gt; 8, &#039;y&#039; =&gt; 10 ) )       </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.polyline-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.polyline-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::polyline()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">polyline</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">5</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$points </span><span style="color: #007700">= [<br />        [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">40 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">10 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">],<br />        [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">20 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">20 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">],<br />        [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">70 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">50 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">],<br />        [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">60 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">15 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">]<br />    ];<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">polyline</span><span style="color: #007700">(</span><span style="color: #9876AA">$points</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function polyline(array $coordinates) {}

/**
*<div id="imagickdraw.popclippath" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::popClipPath</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::popClipPath</span> &mdash; <span class="dc-title">Terminates a clip path definition</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.popclippath-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::popClipPath</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Terminates a clip path definition.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.popclippath-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function popClipPath() {}

/**
*<div id="imagickdraw.popdefs" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::popDefs</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::popDefs</span> &mdash; <span class="dc-title">Terminates a definition list</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.popdefs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::popDefs</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Terminates a definition list.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.popdefs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.popdefs-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::popDefs()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">popDefs</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setstrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">72</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pushDefs</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'white'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">popDefs</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">450</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function popDefs() {}

/**
*<div id="imagickdraw.poppattern" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::popPattern</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::popPattern</span> &mdash; <span class="dc-title">Terminates a pattern definition</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.poppattern-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::popPattern</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Terminates a pattern definition.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.poppattern-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
    public function popPattern() {}

/**
*<div id="imagickdraw.pushclippath" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pushClipPath</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pushClipPath</span> &mdash; <span class="dc-title">Starts a clip path definition</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pushclippath-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pushClipPath</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$clip_mask_id</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Starts a clip path definition which is comprised of any number of drawing   commands and terminated by a <span class="methodname" style="color:#CC7832">{@link ImagickDraw::popClipPath()}</span> command.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pushclippath-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">clip_mask_id</span></dt>     <dd>      <p class="para">       Clip mask Id      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pushclippath-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pushClipPath($clip_mask_id) {}

/**
*<div id="imagickdraw.pushdefs" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pushDefs</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pushDefs</span> &mdash; <span class="dc-title">Indicates that following commands create named elements for early processing</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pushdefs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pushDefs</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Indicates that commands up to a terminating <span class="methodname" style="color:#CC7832">{@link ImagickDraw::popDefs()}</span>   command create named elements (e.g. clip-paths, textures, etc.) which   may safely be processed earlier for the sake of efficiency.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pushdefs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div></div>
     * @return bool No value is returned.*/
    public function pushDefs() {}

/**
*<div id="imagickdraw.pushpattern" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pushPattern</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pushPattern</span> &mdash; <span class="dc-title">Indicates that subsequent commands up to a ImagickDraw::opPattern() command comprise the definition of a named pattern</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pushpattern-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pushPattern</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pattern_id</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$height</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Indicates that subsequent commands up to a DrawPopPattern() command   comprise the definition of a named pattern. The pattern space is assigned   top left corner coordinates, a width and height, and becomes its own   drawing space.  Anything which can be drawn may be used in a pattern   definition. Named patterns may be used as stroke or brush definitions.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.pushpattern-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">pattern_id</span></dt>     <dd>      <p class="para">       the pattern Id      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       x coordinate of the top-left corner      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       y coordinate of the top-left corner      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">       width of the pattern      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">height</span></dt>     <dd>      <p class="para">       height of the pattern      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pushpattern-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.pushpattern-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::pushPattern()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">pushPattern</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pushPattern</span><span style="color: #007700">(</span><span style="color: #DD0000">"MyFirstPattern"</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">);<br />    for (</span><span style="color: #9876AA">$x </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$x </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">50</span><span style="color: #007700">; </span><span style="color: #9876AA">$x </span><span style="color: #007700">+= </span><span style="color: #9876AA">10</span><span style="color: #007700">) {<br />        for (</span><span style="color: #9876AA">$y </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$y </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">50</span><span style="color: #007700">; </span><span style="color: #9876AA">$y </span><span style="color: #007700">+= </span><span style="color: #9876AA">5</span><span style="color: #007700">) {<br />            </span><span style="color: #9876AA">$positionX </span><span style="color: #007700">= </span><span style="color: #9876AA">$x </span><span style="color: #007700">+ ((</span><span style="color: #9876AA">$y </span><span style="color: #007700">/ </span><span style="color: #9876AA">5</span><span style="color: #007700">) % </span><span style="color: #9876AA">5</span><span style="color: #007700">);<br />            </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">$positionX</span><span style="color: #007700">, </span><span style="color: #9876AA">$y</span><span style="color: #007700">, </span><span style="color: #9876AA">$positionX </span><span style="color: #007700">+ </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #9876AA">$y </span><span style="color: #007700">+ </span><span style="color: #9876AA">5</span><span style="color: #007700">);<br />        }<br />    }<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">popPattern</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">push</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillPatternURL</span><span style="color: #007700">(</span><span style="color: #DD0000">'#MyFirstPattern'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'yellow'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pop</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
    public function pushPattern($pattern_id, $x, $y, $width, $height) {}

/**
*<div id="imagickdraw.render" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::render</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::render</span> &mdash; <span class="dc-title">Renders all preceding drawing commands onto the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.render-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::render</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Renders all preceding drawing commands onto the image.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.render-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
    public function render() {}

/**
*<div id="imagickdraw.rotate" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::rotate</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::rotate</span> &mdash; <span class="dc-title">Applies the specified rotation to the current coordinate space</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.rotate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::rotate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$degrees</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Applies the specified rotation to the current coordinate space.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.rotate-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">degrees</span></dt>     <dd>      <p class="para">       degrees to rotate.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.rotate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.rotate-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::rotate()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">rotate</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillModifiedColor</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillModifiedColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rotate</span><span style="color: #007700">(</span><span style="color: #9876AA">15</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function rotate($degrees) {}

/**
*<div id="imagickdraw.scale" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::scale</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::scale</span> &mdash; <span class="dc-title">Adjusts the scaling factor</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.scale-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::scale</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$x</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$y</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Adjusts the scaling factor to apply in the horizontal and vertical   directions to the current coordinate space.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.scale-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">       horizontal factor      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">       vertical factor      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.scale-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.scale-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::scale()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">scale</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillModifiedColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">4</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillModifiedColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">scale</span><span style="color: #007700">(</span><span style="color: #9876AA">1.4</span><span style="color: #007700">, </span><span style="color: #9876AA">1.4</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function scale($x, $y) {}

/**
*<div id="imagickdraw.setclippath" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setClipPath</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setClipPath</span> &mdash; <span class="dc-title">Associates a named clipping path with the image</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setclippath-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setClipPath</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$clip_mask</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Associates a named clipping path with the image.  Only the areas drawn on   by the clipping path will be modified as long as it remains in effect.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setclippath-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">clip_mask</span></dt>     <dd>      <p class="para">       the clipping path name      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setclippath-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setclippath-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setClipPath()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setClipPath</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$clipPathName </span><span style="color: #007700">= </span><span style="color: #DD0000">'testClipPath'</span><span style="color: #007700">;<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pushClipPath</span><span style="color: #007700">(</span><span style="color: #9876AA">$clipPathName</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">popClipPath</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setClipPath</span><span style="color: #007700">(</span><span style="color: #9876AA">$clipPathName</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setClipPath($clip_mask) {}

/**
*<div id="imagickdraw.setcliprule" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setClipRule</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setClipRule</span> &mdash; <span class="dc-title">Set the polygon fill rule to be used by the clipping path</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setcliprule-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setClipRule</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$fill_rule</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Set the polygon fill rule to be used by the clipping path.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setcliprule-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">fill_rule</span></dt>     <dd>      <p class="para">       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.fillrule" class="link">FILLRULE</a> constant       (<span>imagick::FILLRULE_*</span>).      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setcliprule-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setcliprule-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setClipRule()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setClipRule</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #FF8000">//\Imagick::FILLRULE_EVENODD<br />    //\Imagick::FILLRULE_NONZERO<br /><br />    </span><span style="color: #9876AA">$clipPathName </span><span style="color: #007700">= </span><span style="color: #DD0000">'testClipPath'</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pushClipPath</span><span style="color: #007700">(</span><span style="color: #9876AA">$clipPathName</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setClipRule</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">FILLRULE_EVENODD</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">popClipPath</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setClipPath</span><span style="color: #007700">(</span><span style="color: #9876AA">$clipPathName</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setClipRule($fill_rule) {}

/**
*<div id="imagickdraw.setclipunits" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setClipUnits</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setClipUnits</span> &mdash; <span class="dc-title">Sets the interpretation of clip path units</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setclipunits-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setClipUnits</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$clip_units</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the interpretation of clip path units.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setclipunits-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">clip_units</span></dt>     <dd>      <p class="para">       the number of clip units      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setclipunits-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setclipunits-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setClipUnits()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setClipUnits</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$clipPathName </span><span style="color: #007700">= </span><span style="color: #DD0000">'testClipPath'</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setClipUnits</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">RESOLUTION_PIXELSPERINCH</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pushClipPath</span><span style="color: #007700">(</span><span style="color: #9876AA">$clipPathName</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">popClipPath</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setClipPath</span><span style="color: #007700">(</span><span style="color: #9876AA">$clipPathName</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//RESOLUTION_PIXELSPERINCH<br />    //RESOLUTION_PIXELSPERCENTIMETER<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setClipUnits($clip_units) {}

/**
*<div id="imagickdraw.setfillopacity" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setFillOpacity</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setFillOpacity</span> &mdash; <span class="dc-title">Sets the opacity to use when drawing using the fill color or fill texture</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setfillopacity-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setFillOpacity</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fillOpacity</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the opacity to use when drawing using the fill color or fill texture.   Fully opaque is 1.0.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setfillopacity-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">fillOpacity</span></dt>     <dd>      <p class="para">       the fill opacity      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setfillopacity-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setfillopacity-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">ImagickDraw::setFillOpacity()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setFillOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">0.4</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setFillOpacity($fillOpacity) {}

/**
*<div id="imagickdraw.setfillpatternurl" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setFillPatternURL</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setFillPatternURL</span> &mdash; <span class="dc-title">Sets the URL to use as a fill pattern for filling objects</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setfillpatternurl-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setFillPatternURL</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$fill_url</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the URL to use as a fill pattern for filling objects. Only local URLs   (&quot;#identifier&quot;) are supported at this time. These local URLs are normally   created by defining a named fill pattern with DrawPushPattern/DrawPopPattern.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setfillpatternurl-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">fill_url</span></dt>     <dd>      <p class="para">       URL to use to obtain fill pattern.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setfillpatternurl-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
    public function setFillPatternURL($fill_url) {}

/**
*<div id="imagickdraw.setfillrule" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setFillRule</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setFillRule</span> &mdash; <span class="dc-title">Sets the fill rule to use while drawing polygons</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setfillrule-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setFillRule</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$fill_rule</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the fill rule to use while drawing polygons.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setfillrule-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">fill_rule</span></dt>     <dd>      <p class="para">       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.fillrule" class="link">FILLRULE</a> constant       (<span>imagick::FILLRULE_*</span>).      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setfillrule-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setfillrule-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setFillRule()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setFillRule</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$fillRules </span><span style="color: #007700">= [</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">FILLRULE_NONZERO</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">FILLRULE_EVENODD</span><span style="color: #007700">];<br /><br />    </span><span style="color: #9876AA">$points </span><span style="color: #007700">= </span><span style="color: #9876AA">11</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$size </span><span style="color: #007700">= </span><span style="color: #9876AA">150</span><span style="color: #007700">;<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">translate</span><span style="color: #007700">(</span><span style="color: #9876AA">175</span><span style="color: #007700">, </span><span style="color: #9876AA">160</span><span style="color: #007700">);<br /><br />    for (</span><span style="color: #9876AA">$x </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$x </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">2</span><span style="color: #007700">; </span><span style="color: #9876AA">$x</span><span style="color: #007700">++) {<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillRule</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillRules</span><span style="color: #007700">[</span><span style="color: #9876AA">$x</span><span style="color: #007700">]);<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathStart</span><span style="color: #007700">();<br />        for (</span><span style="color: #9876AA">$n </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$n </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">$points </span><span style="color: #007700">* </span><span style="color: #9876AA">2</span><span style="color: #007700">; </span><span style="color: #9876AA">$n</span><span style="color: #007700">++) {<br /><br />            if (</span><span style="color: #9876AA">$n </span><span style="color: #007700">&gt;= </span><span style="color: #9876AA">$points</span><span style="color: #007700">) {<br />                </span><span style="color: #9876AA">$angle </span><span style="color: #007700">= </span><span style="color: #9876AA">fmod</span><span style="color: #007700">(</span><span style="color: #9876AA">$n </span><span style="color: #007700">* </span><span style="color: #9876AA">360 </span><span style="color: #007700">* </span><span style="color: #9876AA">4 </span><span style="color: #007700">/ </span><span style="color: #9876AA">$points</span><span style="color: #007700">, </span><span style="color: #9876AA">360</span><span style="color: #007700">) * </span><span style="color: #9876AA">pi</span><span style="color: #007700">() / </span><span style="color: #9876AA">180</span><span style="color: #007700">;<br />            }<br />            else {<br />                </span><span style="color: #9876AA">$angle </span><span style="color: #007700">= </span><span style="color: #9876AA">fmod</span><span style="color: #007700">(</span><span style="color: #9876AA">$n </span><span style="color: #007700">* </span><span style="color: #9876AA">360 </span><span style="color: #007700">* </span><span style="color: #9876AA">3 </span><span style="color: #007700">/ </span><span style="color: #9876AA">$points</span><span style="color: #007700">, </span><span style="color: #9876AA">360</span><span style="color: #007700">) * </span><span style="color: #9876AA">pi</span><span style="color: #007700">() / </span><span style="color: #9876AA">180</span><span style="color: #007700">;<br />            }<br /><br />            </span><span style="color: #9876AA">$positionX </span><span style="color: #007700">= </span><span style="color: #9876AA">$size </span><span style="color: #007700">* </span><span style="color: #9876AA">sin</span><span style="color: #007700">(</span><span style="color: #9876AA">$angle</span><span style="color: #007700">);<br />            </span><span style="color: #9876AA">$positionY </span><span style="color: #007700">= </span><span style="color: #9876AA">$size </span><span style="color: #007700">* </span><span style="color: #9876AA">cos</span><span style="color: #007700">(</span><span style="color: #9876AA">$angle</span><span style="color: #007700">);<br /><br />            if (</span><span style="color: #9876AA">$n </span><span style="color: #007700">== </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br />                </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathMoveToAbsolute</span><span style="color: #007700">(</span><span style="color: #9876AA">$positionX</span><span style="color: #007700">, </span><span style="color: #9876AA">$positionY</span><span style="color: #007700">);<br />            }<br />            else {<br />                </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathLineToAbsolute</span><span style="color: #007700">(</span><span style="color: #9876AA">$positionX</span><span style="color: #007700">, </span><span style="color: #9876AA">$positionY</span><span style="color: #007700">);<br />            }<br />        }<br /><br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathClose</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pathFinish</span><span style="color: #007700">();<br /><br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">translate</span><span style="color: #007700">(</span><span style="color: #9876AA">325</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    }<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">700</span><span style="color: #007700">, </span><span style="color: #9876AA">320</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setFillRule($fill_rule) {}

/**
*<div id="imagickdraw.setgravity" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setGravity</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setGravity</span> &mdash; <span class="dc-title">Sets the text placement gravity</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setgravity-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setGravity</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$gravity</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the text placement gravity to use when annotating with text.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setgravity-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">gravity</span></dt>     <dd>      <p class="para">       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.gravity" class="link">GRAVITY</a> constant       (<span>imagick::GRAVITY_*</span>).      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setgravity-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setgravity-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setGravity()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setGravity</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">24</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$gravitySettings </span><span style="color: #007700">= array(<br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">GRAVITY_NORTHWEST </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'NorthWest'</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">GRAVITY_NORTH </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'North'</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">GRAVITY_NORTHEAST </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'NorthEast'</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">GRAVITY_WEST </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'West'</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">GRAVITY_CENTER </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'Centre'</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">GRAVITY_SOUTHWEST </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'SouthWest'</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">GRAVITY_SOUTH </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'South'</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">GRAVITY_SOUTHEAST </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'SouthEast'</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">GRAVITY_EAST </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'East'<br />    </span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFont</span><span style="color: #007700">(</span><span style="color: #DD0000">"../fonts/Arial.ttf"</span><span style="color: #007700">);<br /><br />    foreach (</span><span style="color: #9876AA">$gravitySettings </span><span style="color: #007700">as </span><span style="color: #9876AA">$type </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$description</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setGravity</span><span style="color: #007700">(</span><span style="color: #9876AA">$type</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">annotation</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #DD0000">'"' </span><span style="color: #007700">. </span><span style="color: #9876AA">$description </span><span style="color: #007700">. </span><span style="color: #DD0000">'"'</span><span style="color: #007700">);<br />    }<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setGravity($gravity) {}

/**
*<div id="imagickdraw.setstrokepatternurl" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setStrokePatternURL</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setStrokePatternURL</span> &mdash; <span class="dc-title">Sets the pattern used for stroking object outlines</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setstrokepatternurl-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setStrokePatternURL</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$stroke_url</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the pattern used for stroking object outlines.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setstrokepatternurl-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stroke_url</span></dt>     <dd>      <p class="para">       stroke URL      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setstrokepatternurl-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool imagick.imagickdraw.return.success;*/
    public function setStrokePatternURL($stroke_url) {}

/**
*<div id="imagickdraw.setstrokedashoffset" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setStrokeDashOffset</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setStrokeDashOffset</span> &mdash; <span class="dc-title">Specifies the offset into the dash pattern to start the dash</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setstrokedashoffset-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setStrokeDashOffset</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$dash_offset</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Specifies the offset into the dash pattern to start the dash.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setstrokedashoffset-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">dash_offset</span></dt>     <dd>      <p class="para">       dash offset      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setstrokedashoffset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setstrokedashoffset-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setStrokeDashOffset()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setStrokeDashOffset</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">4</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeDashArray</span><span style="color: #007700">([</span><span style="color: #9876AA">20</span><span style="color: #007700">, </span><span style="color: #9876AA">20</span><span style="color: #007700">]);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeDashOffset</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">225</span><span style="color: #007700">, </span><span style="color: #9876AA">175</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//Start the dash effect halfway through the solid portion<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeDashOffset</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">275</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">175</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//Start the dash effect on the space portion<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeDashOffset</span><span style="color: #007700">(</span><span style="color: #9876AA">20</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">225</span><span style="color: #007700">, </span><span style="color: #9876AA">350</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeDashOffset</span><span style="color: #007700">(</span><span style="color: #9876AA">5</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">275</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">350</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setStrokeDashOffset($dash_offset) {}

/**
*<div id="imagickdraw.setstrokelinecap" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setStrokeLineCap</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setStrokeLineCap</span> &mdash; <span class="dc-title">Specifies the shape to be used at the end of open subpaths when they are stroked</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setstrokelinecap-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setStrokeLineCap</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$linecap</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Specifies the shape to be used at the end of open subpaths when they   are stroked.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setstrokelinecap-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">linecap</span></dt>     <dd>      <p class="para">       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.linecap" class="link">LINECAP</a> constant       (<span>imagick::LINECAP_*</span>).      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setstrokelinecap-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setstrokelinecap-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setStrokeLineCap()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setStrokeLineCap</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">25</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$lineTypes </span><span style="color: #007700">= [</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">LINECAP_BUTT</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">LINECAP_ROUND</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">LINECAP_SQUARE</span><span style="color: #007700">,];<br /><br />    </span><span style="color: #9876AA">$offset </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">;<br /><br />    foreach (</span><span style="color: #9876AA">$lineTypes </span><span style="color: #007700">as </span><span style="color: #9876AA">$lineType</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeLineCap</span><span style="color: #007700">(</span><span style="color: #9876AA">$lineType</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">50 </span><span style="color: #007700">+ </span><span style="color: #9876AA">$offset</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">50 </span><span style="color: #007700">+ </span><span style="color: #9876AA">$offset</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$offset </span><span style="color: #007700">+= </span><span style="color: #9876AA">50</span><span style="color: #007700">;<br />    }<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setStrokeLineCap($linecap) {}

/**
*<div id="imagickdraw.setstrokelinejoin" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setStrokeLineJoin</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setStrokeLineJoin</span> &mdash; <span class="dc-title">Specifies the shape to be used at the corners of paths when they are stroked</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setstrokelinejoin-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setStrokeLineJoin</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$linejoin</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Specifies the shape to be used at the corners of paths (or other vector    shapes) when they are stroked.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setstrokelinejoin-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">linejoin</span></dt>     <dd>      <p class="para">       One of the <a href="https://www.php.net/manual/zh/imagick.constants.php#imagick.constants.linejoin" class="link">LINEJOIN</a> constant       (<span>imagick::LINEJOIN_*</span>).      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setstrokelinejoin-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setstrokelinejoin-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setStrokeLineJoin()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setStrokeLineJoin</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">20</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$offset </span><span style="color: #007700">= </span><span style="color: #9876AA">220</span><span style="color: #007700">;<br /><br />    </span><span style="color: #9876AA">$lineJoinStyle </span><span style="color: #007700">= [<br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">LINEJOIN_MITER</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">LINEJOIN_ROUND</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">LINEJOIN_BEVEL</span><span style="color: #007700">,<br />        ];<br /><br />    for (</span><span style="color: #9876AA">$x </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$x </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$lineJoinStyle</span><span style="color: #007700">); </span><span style="color: #9876AA">$x</span><span style="color: #007700">++) {<br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeLineJoin</span><span style="color: #007700">(</span><span style="color: #9876AA">$lineJoinStyle</span><span style="color: #007700">[</span><span style="color: #9876AA">$x</span><span style="color: #007700">]);<br />        </span><span style="color: #9876AA">$points </span><span style="color: #007700">= [<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">40 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">10 </span><span style="color: #007700">* </span><span style="color: #9876AA">5 </span><span style="color: #007700">+ </span><span style="color: #9876AA">$x </span><span style="color: #007700">* </span><span style="color: #9876AA">$offset</span><span style="color: #007700">],<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">20 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">20 </span><span style="color: #007700">* </span><span style="color: #9876AA">5 </span><span style="color: #007700">+ </span><span style="color: #9876AA">$x </span><span style="color: #007700">* </span><span style="color: #9876AA">$offset</span><span style="color: #007700">],<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">70 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">50 </span><span style="color: #007700">* </span><span style="color: #9876AA">5 </span><span style="color: #007700">+ </span><span style="color: #9876AA">$x </span><span style="color: #007700">* </span><span style="color: #9876AA">$offset</span><span style="color: #007700">],<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">40 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">10 </span><span style="color: #007700">* </span><span style="color: #9876AA">5 </span><span style="color: #007700">+ </span><span style="color: #9876AA">$x </span><span style="color: #007700">* </span><span style="color: #9876AA">$offset</span><span style="color: #007700">],<br />        ];<br /><br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">polyline</span><span style="color: #007700">(</span><span style="color: #9876AA">$points</span><span style="color: #007700">);<br />    }<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">700</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setStrokeLineJoin($linejoin) {}

/**
*<div id="imagickdraw.setstrokemiterlimit" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setStrokeMiterLimit</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setStrokeMiterLimit</span> &mdash; <span class="dc-title">Specifies the miter limit</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setstrokemiterlimit-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setStrokeMiterLimit</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$miterlimit</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Specifies the miter limit. When two line segments meet at a sharp angle   and miter joins have been specified for &#039;lineJoin&#039;, it is possible for   the miter to extend far beyond the thickness of the line stroking the    path. The miterLimit&#039; imposes a limit on the ratio of the miter length to   the &#039;lineWidth&#039;.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setstrokemiterlimit-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">miterlimit</span></dt>     <dd>      <p class="para">       the miter limit      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setstrokemiterlimit-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setstrokemiterlimit-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setStrokeMiterLimit()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setStrokeMiterLimit</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">0.6</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$yOffset </span><span style="color: #007700">= </span><span style="color: #9876AA">100</span><span style="color: #007700">;<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeLineJoin</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">LINEJOIN_MITER</span><span style="color: #007700">);<br /><br />    for (</span><span style="color: #9876AA">$y </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$y </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">3</span><span style="color: #007700">; </span><span style="color: #9876AA">$y</span><span style="color: #007700">++) {<br /><br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeMiterLimit</span><span style="color: #007700">(</span><span style="color: #9876AA">40 </span><span style="color: #007700">* </span><span style="color: #9876AA">$y</span><span style="color: #007700">);<br /><br />        </span><span style="color: #9876AA">$points </span><span style="color: #007700">= [<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">22 </span><span style="color: #007700">* </span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">15 </span><span style="color: #007700">* </span><span style="color: #9876AA">4 </span><span style="color: #007700">+ </span><span style="color: #9876AA">$y </span><span style="color: #007700">* </span><span style="color: #9876AA">$yOffset</span><span style="color: #007700">],<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">20 </span><span style="color: #007700">* </span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">20 </span><span style="color: #007700">* </span><span style="color: #9876AA">4 </span><span style="color: #007700">+ </span><span style="color: #9876AA">$y </span><span style="color: #007700">* </span><span style="color: #9876AA">$yOffset</span><span style="color: #007700">],<br />            [</span><span style="color: #DD0000">'x' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">70 </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">'y' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">45 </span><span style="color: #007700">* </span><span style="color: #9876AA">4 </span><span style="color: #007700">+ </span><span style="color: #9876AA">$y </span><span style="color: #007700">* </span><span style="color: #9876AA">$yOffset</span><span style="color: #007700">],<br />        ];<br /><br />        </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">polygon</span><span style="color: #007700">(</span><span style="color: #9876AA">$points</span><span style="color: #007700">);<br />    }<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageType</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">IMGTYPE_PALETTE</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageCompressionQuality</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">stripImage</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setStrokeMiterLimit($miterlimit) {}

/**
*<div id="imagickdraw.setstrokeopacity" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setStrokeOpacity</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setStrokeOpacity</span> &mdash; <span class="dc-title">Specifies the opacity of stroked object outlines</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setstrokeopacity-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setStrokeOpacity</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$stroke_opacity</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Specifies the opacity of stroked object outlines.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setstrokeopacity-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">stroke_opacity</span></dt>     <dd>      <p class="para">       stroke opacity. 1.0 is fully opaque      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setstrokeopacity-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setstrokeopacity-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setStrokeOpacity()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">10</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">80</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">125</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">25</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">150</span><span style="color: #007700">, </span><span style="color: #9876AA">350</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">0.5</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">145</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">325</span><span style="color: #007700">, </span><span style="color: #9876AA">350</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeOpacity</span><span style="color: #007700">(</span><span style="color: #9876AA">0.2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">120</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">165</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">375</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">350</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">550</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool No value is returned.*/
    public function setStrokeOpacity($stroke_opacity) {}

/**
*<div id="imagickdraw.setvectorgraphics" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setVectorGraphics</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setVectorGraphics</span> &mdash; <span class="dc-title">Sets the vector graphics</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setvectorgraphics-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setVectorGraphics</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$xml</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the vector graphics associated with the specified ImagickDraw   object. Use this method with <span class="methodname" style="color:#CC7832">{@link ImagickDraw::getVectorGraphics()}</span> as a method   to persist the vector graphics state.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setvectorgraphics-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">xml</span></dt>     <dd>      <p class="para">       xml containing the vector graphics      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setvectorgraphics-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setvectorgraphics-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setVectorGraphics()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setVectorGraphics</span><span style="color: #007700">() {<br />    </span><span style="color: #FF8000">//Setup a draw object with some drawing in it.<br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #DD0000">"red"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">circle</span><span style="color: #007700">(</span><span style="color: #9876AA">20</span><span style="color: #007700">, </span><span style="color: #9876AA">20</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #DD0000">"blue"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">circle</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">70</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">120</span><span style="color: #007700">, </span><span style="color: #9876AA">80</span><span style="color: #007700">, </span><span style="color: #9876AA">150</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">//Get the drawing as a string<br />    </span><span style="color: #9876AA">$SVG </span><span style="color: #007700">= </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getVectorGraphics</span><span style="color: #007700">();<br />    <br />    </span><span style="color: #FF8000">//$svg is a string, and could be saved anywhere a string can be saved<br /><br />    //Use the saved drawing to generate a new draw object<br />    </span><span style="color: #9876AA">$draw2 </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br />    </span><span style="color: #FF8000">//Apparently the SVG text is missing the root element. <br />    </span><span style="color: #9876AA">$draw2</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setVectorGraphics</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;root&gt;"</span><span style="color: #007700">.</span><span style="color: #9876AA">$SVG</span><span style="color: #007700">.</span><span style="color: #DD0000">"&lt;/root&gt;"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #DD0000">'white'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw2</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
    public function setVectorGraphics($xml) {}

/**
*<div id="imagickdraw.pop" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::pop</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::pop</span> &mdash; <span class="dc-title">Destroys the current ImagickDraw in the stack, and returns to the previously pushed ImagickDraw</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.pop-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::pop</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Destroys the current ImagickDraw in the stack, and returns to the   previously pushed ImagickDraw. Multiple ImagickDraws may exist. It is an   error to attempt to pop more ImagickDraws than have been pushed, and it is   proper form to pop all ImagickDraws which have been pushed.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.pop-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success and false on failure.*/
    public function pop() {}

/**
*<div id="imagickdraw.push" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::push</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::push</span> &mdash; <span class="dc-title">Clones the current ImagickDraw and pushes it to the stack</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.push-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::push</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Clones the current ImagickDraw to create a new ImagickDraw, which is then   added to the ImagickDraw stack. The original drawing ImagickDraw(s) may be   returned to by invoking <span class="methodname" style="color:#CC7832">{@link ImagickDraw::pop()}</span>. The ImagickDraws are stored on a   ImagickDraw stack. For every Pop there must have already been an equivalent   Push.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.push-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.push-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::push()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">push</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillModifiedColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillModifiedColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFontSize</span><span style="color: #007700">(</span><span style="color: #9876AA">72</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">push</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">translate</span><span style="color: #007700">(</span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pop</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
    public function push() {}

/**
*<div id="imagickdraw.setstrokedasharray" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickDraw::setStrokeDashArray</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickDraw::setStrokeDashArray</span> &mdash; <span class="dc-title">Specifies the pattern of dashes and gaps used to stroke paths</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickdraw.setstrokedasharray-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickDraw::setStrokeDashArray</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$dashArray</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Specifies the pattern of dashes and gaps used to stroke paths. The   strokeDashArray represents an array of numbers that specify the lengths of   alternating dashes and gaps in pixels. If an odd number of values is   provided, then the list of values is repeated to yield an even number of   values. To remove an existing dash array, pass a zero number_elements   argument and null dash_array. A typical strokeDashArray_ array might   contain the members 5 3 2.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickdraw.setstrokedasharray-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">dashArray</span></dt>     <dd>      <p class="para">       array of floats      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickdraw.setstrokedasharray-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickdraw.setstrokedasharray-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">ImagickDraw::setStrokeDashArray()</strong></span> example</strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setStrokeDashArray</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeWidth</span><span style="color: #007700">(</span><span style="color: #9876AA">4</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeDashArray</span><span style="color: #007700">([</span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #9876AA">10</span><span style="color: #007700">]);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">225</span><span style="color: #007700">, </span><span style="color: #9876AA">175</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeDashArray</span><span style="color: #007700">([</span><span style="color: #9876AA">20</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #9876AA">20</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">,]);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">275</span><span style="color: #007700">, </span><span style="color: #9876AA">50</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">175</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeDashArray</span><span style="color: #007700">([</span><span style="color: #9876AA">20</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #9876AA">20</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">]);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">225</span><span style="color: #007700">, </span><span style="color: #9876AA">350</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeDashArray</span><span style="color: #007700">([</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #9876AA">8</span><span style="color: #007700">, </span><span style="color: #9876AA">8</span><span style="color: #007700">, </span><span style="color: #9876AA">13</span><span style="color: #007700">, </span><span style="color: #9876AA">13</span><span style="color: #007700">, </span><span style="color: #9876AA">21</span><span style="color: #007700">, </span><span style="color: #9876AA">21</span><span style="color: #007700">, </span><span style="color: #9876AA">34</span><span style="color: #007700">, </span><span style="color: #9876AA">34</span><span style="color: #007700">, </span><span style="color: #9876AA">55</span><span style="color: #007700">, </span><span style="color: #9876AA">55</span><span style="color: #007700">, </span><span style="color: #9876AA">89</span><span style="color: #007700">, </span><span style="color: #9876AA">89</span><span style="color: #007700">, </span><span style="color: #9876AA">144</span><span style="color: #007700">, </span><span style="color: #9876AA">144</span><span style="color: #007700">, </span><span style="color: #9876AA">233</span><span style="color: #007700">, </span><span style="color: #9876AA">233</span><span style="color: #007700">, </span><span style="color: #9876AA">377</span><span style="color: #007700">, </span><span style="color: #9876AA">377</span><span style="color: #007700">, </span><span style="color: #9876AA">610</span><span style="color: #007700">, </span><span style="color: #9876AA">610</span><span style="color: #007700">, </span><span style="color: #9876AA">987</span><span style="color: #007700">, </span><span style="color: #9876AA">987</span><span style="color: #007700">, </span><span style="color: #9876AA">1597</span><span style="color: #007700">, </span><span style="color: #9876AA">1597</span><span style="color: #007700">, </span><span style="color: #9876AA">2584</span><span style="color: #007700">, </span><span style="color: #9876AA">2584</span><span style="color: #007700">, </span><span style="color: #9876AA">4181</span><span style="color: #007700">, </span><span style="color: #9876AA">4181</span><span style="color: #007700">,]);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">275</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">350</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">400</span><span style="color: #007700">, </span><span style="color: #9876AA">$backgroundColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setStrokeDashArray(array $dashArray) {}

    /**
     * Sets the opacity to use when drawing using the fill or stroke color or texture. Fully opaque is 1.0.
     *
     * @param float $opacity
     * @return void
     * @since 3.4.1
     */
    public function setOpacity($opacity) {}

    /**
     * Returns the opacity used when drawing with the fill or stroke color or texture. Fully opaque is 1.0.
     *
     * @return float
     * @since 3.4.1
     */
    #[Pure]
    public function getOpacity() {}

    /**
     * Sets the image font resolution.
     *
     * @param float $x
     * @param float $y
     * @return bool
     * @throws ImagickException on error.
     * @since 3.4.1
     */
    public function setFontResolution($x, $y) {}

    /**
     * Gets the image X and Y resolution.
     *
     * @return array
     * @throws ImagickException on error.
     * @since 3.4.1
     */
    #[Pure]
    public function getFontResolution() {}

    /**
     * Returns the direction that will be used when annotating with text.
     * @return bool
     * @since 3.4.1
     */
    #[Pure]
    public function getTextDirection() {}

    /**
     * Sets the font style to use when annotating with text. The AnyStyle enumeration acts as a wild-card "don't care" option.
     *
     * @param int $direction
     * @return bool
     * @since 3.4.1
     */
    public function setTextDirection($direction) {}

    /**
     * Returns the border color used for drawing bordered objects.
     *
     * @return ImagickPixel
     * @since 3.4.1
     */
    #[Pure]
    public function getBorderColor() {}

    /**
     * Sets the border color to be used for drawing bordered objects.
     * @param ImagickPixel $color
     * @return bool
     * @throws ImagickDrawException on error.
     * @since 3.4.1
     */
    public function setBorderColor(ImagickPixel $color) {}

    /**
     * Obtains the vertical and horizontal resolution.
     *
     * @return string|null
     * @since 3.4.1
     */
    #[Pure]
    public function getDensity() {}

    /**
     * Sets the vertical and horizontal resolution.
     * @param string $density_string
     * @return bool
     * @throws ImagickException on error.
     * @since 3.4.1
     */
    public function setDensity($density_string) {}
}

/**
*<div id="class.imagickpixeliterator" class="reference"> <h1 class="title">The <span class="classname"><a href="https://www.php.net/manual/zh/class.imagickpixeliterator.php" class="classname">ImagickPixelIterator</a></span> class</h1>  <div class="partintro"><p class="verinfo">(PECL imagick 2, PECL imagick 3)</p>  <div class="section" id="imagickpixeliterator.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass"><span class="modifier">class</span> <strong class="classname">ImagickPixelIterator</strong></span>     {</div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixeliterator.clear.php" class="methodname" style="color:#CC7832">clear</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixeliterator.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$wand</span></span>)</div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixeliterator.destroy.php" class="methodname" style="color:#CC7832">destroy</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixeliterator.getcurrentiteratorrow.php" class="methodname" style="color:#CC7832">getCurrentIteratorRow</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixeliterator.getiteratorrow.php" class="methodname" style="color:#CC7832">getIteratorRow</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixeliterator.getnextiteratorrow.php" class="methodname" style="color:#CC7832">getNextIteratorRow</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixeliterator.getpreviousiteratorrow.php" class="methodname" style="color:#CC7832">getPreviousIteratorRow</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixeliterator.newpixeliterator.php" class="methodname" style="color:#CC7832">newPixelIterator</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$wand</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixeliterator.newpixelregioniterator.php" class="methodname" style="color:#CC7832">newPixelRegionIterator</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$wand</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixeliterator.resetiterator.php" class="methodname" style="color:#CC7832">resetIterator</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixeliterator.setiteratorfirstrow.php" class="methodname" style="color:#CC7832">setIteratorFirstRow</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixeliterator.setiteratorlastrow.php" class="methodname" style="color:#CC7832">setIteratorLastRow</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixeliterator.setiteratorrow.php" class="methodname" style="color:#CC7832">setIteratorRow</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$row</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixeliterator.synciterator.php" class="methodname" style="color:#CC7832">syncIterator</a></span>(): <span class="type" style="color:#EAB766">bool</span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link ImagickPixelIterator::clear} — Clear resources associated with a PixelIterator</li><li>{@link ImagickPixelIterator::__construct} — The ImagickPixelIterator constructor</li><li>{@link ImagickPixelIterator::destroy} — Deallocates resources associated with a PixelIterator</li><li>{@link ImagickPixelIterator::getCurrentIteratorRow} — Returns the current row of ImagickPixel objects</li><li>{@link ImagickPixelIterator::getIteratorRow} — Returns the current pixel iterator row</li><li>{@link ImagickPixelIterator::getNextIteratorRow} — Returns the next row of the pixel iterator</li><li>{@link ImagickPixelIterator::getPreviousIteratorRow} — Returns the previous row</li><li>{@link ImagickPixelIterator::newPixelIterator} — Returns a new pixel iterator</li><li>{@link ImagickPixelIterator::newPixelRegionIterator} — Returns a new pixel iterator</li><li>{@link ImagickPixelIterator::resetIterator} — Resets the pixel iterator</li><li>{@link ImagickPixelIterator::setIteratorFirstRow} — Sets the pixel iterator to the first pixel row</li><li>{@link ImagickPixelIterator::setIteratorLastRow} — Sets the pixel iterator to the last pixel row</li><li>{@link ImagickPixelIterator::setIteratorRow} — Set the pixel iterator row</li><li>{@link ImagickPixelIterator::syncIterator} — Syncs the pixel iterator</li></ul></div>
*/
class ImagickPixelIterator implements Iterator
{
    /**
     * (PECL imagick 2.0.0)<br/>
     * The ImagickPixelIterator constructor
     * @link https://php.net/manual/en/imagickpixeliterator.construct.php
     * @param Imagick $wand
     * @throws ImagickPixelIteratorException on error.
     * @throws ImagickException on error.
     */
    public function __construct(Imagick $wand) {}

/**
*<div id="imagickpixeliterator.newpixeliterator" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixelIterator::newPixelIterator</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixelIterator::newPixelIterator</span> &mdash; <span class="dc-title">Returns a new pixel iterator</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixeliterator.newpixeliterator-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixelIterator::newPixelIterator</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$wand</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns a new pixel iterator.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixeliterator.newpixeliterator-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。 Throwing ImagickPixelIteratorException.  </p> </div></div>
     * @return bool <b>TRUE</b> on success. Throwing ImagickPixelIteratorException.*/
    public function newPixelIterator(Imagick $wand) {}

/**
*<div id="imagickpixeliterator.newpixelregioniterator" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixelIterator::newPixelRegionIterator</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixelIterator::newPixelRegionIterator</span> &mdash; <span class="dc-title">Returns a new pixel iterator</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixeliterator.newpixelregioniterator-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixelIterator::newPixelRegionIterator</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagick.php" class="type Imagick" style="color:#EAB766">Imagick</a></span> <span class="parameter" style="color:#3A95FF">$wand</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$x</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$y</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$columns</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$rows</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns a new pixel iterator.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixeliterator.newpixelregioniterator-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">wand</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">x</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">y</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">columns</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">rows</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixeliterator.newpixelregioniterator-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a new ImagickPixelIterator on success; on failure, throws   ImagickPixelIteratorException.  </p> </div></div>
     * @return bool a new ImagickPixelIterator on success; on failure, throws ImagickPixelIteratorException*/
    public function newPixelRegionIterator(Imagick $wand, $x, $y, $columns, $rows) {}

/**
*<div id="imagickpixeliterator.getiteratorrow" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixelIterator::getIteratorRow</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixelIterator::getIteratorRow</span> &mdash; <span class="dc-title">Returns the current pixel iterator row</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixeliterator.getiteratorrow-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixelIterator::getIteratorRow</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the current pixel iterator row.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixeliterator.getiteratorrow-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the integer offset of the row, throwing   ImagickPixelIteratorException on error.  </p> </div></div>
     * @return int the integer offset of the row, throwing ImagickPixelIteratorException on error.*/
    public function getIteratorRow() {}

/**
*<div id="imagickpixeliterator.setiteratorrow" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixelIterator::setIteratorRow</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixelIterator::setIteratorRow</span> &mdash; <span class="dc-title">Set the pixel iterator row</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixeliterator.setiteratorrow-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixelIterator::setIteratorRow</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$row</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Set the pixel iterator row.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixeliterator.setiteratorrow-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">row</span></dt>     <dd>      <p class="para">      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixeliterator.setiteratorrow-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickpixeliterator.setiteratorrow-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">ImagickPixelIterator::setIteratorRow()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setIteratorRow</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imageIterator </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPixelRegionIterator</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">);<br /><br />    for (</span><span style="color: #9876AA">$x </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$x </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">20</span><span style="color: #007700">; </span><span style="color: #9876AA">$x</span><span style="color: #007700">++) {        <br />        </span><span style="color: #9876AA">$imageIterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setIteratorRow</span><span style="color: #007700">(</span><span style="color: #9876AA">$x </span><span style="color: #007700">* </span><span style="color: #9876AA">5</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$pixels </span><span style="color: #007700">= </span><span style="color: #9876AA">$imageIterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getCurrentIteratorRow</span><span style="color: #007700">();<br />        </span><span style="color: #FF8000">// Loop through the pixels in the row (columns) <br />        </span><span style="color: #007700">foreach (</span><span style="color: #9876AA">$pixels </span><span style="color: #007700">as </span><span style="color: #9876AA">$pixel</span><span style="color: #007700">) {<br />            </span><span style="color: #FF8000">//* @var $pixel \ImagickPixel <br />            // Paint every second pixel black<br />            </span><span style="color: #9876AA">$pixel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setColor</span><span style="color: #007700">(</span><span style="color: #DD0000">"rgba(0, 0, 0, 0)"</span><span style="color: #007700">); <br />        }<br /><br />        </span><span style="color: #FF8000">// Sync the iterator, this is important to do on each iteration <br />        </span><span style="color: #9876AA">$imageIterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">syncIterator</span><span style="color: #007700">();<br />    }<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setIteratorRow($row) {}

/**
*<div id="imagickpixeliterator.setiteratorfirstrow" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixelIterator::setIteratorFirstRow</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixelIterator::setIteratorFirstRow</span> &mdash; <span class="dc-title">Sets the pixel iterator to the first pixel row</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixeliterator.setiteratorfirstrow-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixelIterator::setIteratorFirstRow</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the pixel iterator to the first pixel row.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixeliterator.setiteratorfirstrow-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setIteratorFirstRow() {}

/**
*<div id="imagickpixeliterator.setiteratorlastrow" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixelIterator::setIteratorLastRow</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixelIterator::setIteratorLastRow</span> &mdash; <span class="dc-title">Sets the pixel iterator to the last pixel row</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixeliterator.setiteratorlastrow-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixelIterator::setIteratorLastRow</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the pixel iterator to the last pixel row.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixeliterator.setiteratorlastrow-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setIteratorLastRow() {}

/**
*<div id="imagickpixeliterator.getpreviousiteratorrow" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixelIterator::getPreviousIteratorRow</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixelIterator::getPreviousIteratorRow</span> &mdash; <span class="dc-title">Returns the previous row</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixeliterator.getpreviousiteratorrow-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixelIterator::getPreviousIteratorRow</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the previous row as an array of pixel wands from the pixel iterator.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixeliterator.getpreviousiteratorrow-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the previous row as an array of ImagickPixelWand objects from the   ImagickPixelIterator, throwing ImagickPixelIteratorException on error.  </p> </div></div>
     * @return array the previous row as an array of ImagickPixelWand objects from the*/
    public function getPreviousIteratorRow() {}

/**
*<div id="imagickpixeliterator.getcurrentiteratorrow" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixelIterator::getCurrentIteratorRow</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixelIterator::getCurrentIteratorRow</span> &mdash; <span class="dc-title">Returns the current row of ImagickPixel objects</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixeliterator.getcurrentiteratorrow-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixelIterator::getCurrentIteratorRow</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the current row as an array of ImagickPixel objects from the pixel iterator.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixeliterator.getcurrentiteratorrow-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a row as an array of ImagickPixel objects that can themselves be iterated.  </p> </div></div>
     * @return array a row as an array of ImagickPixel objects that can themselves be iterated.*/
    public function getCurrentIteratorRow() {}

/**
*<div id="imagickpixeliterator.getnextiteratorrow" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixelIterator::getNextIteratorRow</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixelIterator::getNextIteratorRow</span> &mdash; <span class="dc-title">Returns the next row of the pixel iterator</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixeliterator.getnextiteratorrow-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixelIterator::getNextIteratorRow</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Returns the next row as an array of pixel wands from the pixel iterator.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixeliterator.getnextiteratorrow-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the next row as an array of ImagickPixel objects, throwing   ImagickPixelIteratorException on error.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickpixeliterator.getnextiteratorrow-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">ImagickPixelIterator::getNextIteratorRow()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">getNextIteratorRow</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imageIterator </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPixelIterator</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$count </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">;<br />    while (</span><span style="color: #9876AA">$pixels </span><span style="color: #007700">= </span><span style="color: #9876AA">$imageIterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getNextIteratorRow</span><span style="color: #007700">()) {<br />        if ((</span><span style="color: #9876AA">$count </span><span style="color: #007700">% </span><span style="color: #9876AA">3</span><span style="color: #007700">) == </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br />            </span><span style="color: #FF8000">// Loop through the pixels in the row (columns) <br />            </span><span style="color: #007700">foreach (</span><span style="color: #9876AA">$pixels </span><span style="color: #007700">as </span><span style="color: #9876AA">$column </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$pixel</span><span style="color: #007700">) { <br />                </span><span style="color: #FF8000">//* @var $pixel \ImagickPixel <br />                </span><span style="color: #007700">if (</span><span style="color: #9876AA">$column </span><span style="color: #007700">% </span><span style="color: #9876AA">2</span><span style="color: #007700">) {<br />                    </span><span style="color: #FF8000">// Paint every second pixel black<br />                    </span><span style="color: #9876AA">$pixel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setColor</span><span style="color: #007700">(</span><span style="color: #DD0000">"rgba(0, 0, 0, 0)"</span><span style="color: #007700">);<br />                }<br />            }<br />            </span><span style="color: #FF8000">// Sync the iterator, this is important to do on each iteration <br />            </span><span style="color: #9876AA">$imageIterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">syncIterator</span><span style="color: #007700">(); <br />        }<br /><br />        </span><span style="color: #9876AA">$count </span><span style="color: #007700">+= </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br />    }<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return array the next row as an array of ImagickPixel objects, throwing*/
    public function getNextIteratorRow() {}

/**
*<div id="imagickpixeliterator.resetiterator" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixelIterator::resetIterator</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixelIterator::resetIterator</span> &mdash; <span class="dc-title">Resets the pixel iterator</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixeliterator.resetiterator-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixelIterator::resetIterator</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Resets the pixel iterator.  Use it in conjunction with   ImagickPixelIterator::getNextIteratorRow() to iterate over all the pixels   in a pixel container.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixeliterator.resetiterator-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickpixeliterator.resetiterator-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">ImagickPixelIterator::resetIterator()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">resetIterator</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br /><br />    </span><span style="color: #9876AA">$imageIterator </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPixelIterator</span><span style="color: #007700">();<br /><br />    </span><span style="color: #FF8000">// Loop trough pixel rows <br />    </span><span style="color: #007700">foreach (</span><span style="color: #9876AA">$imageIterator </span><span style="color: #007700">as </span><span style="color: #9876AA">$pixels</span><span style="color: #007700">) {<br />        </span><span style="color: #FF8000">// Loop through the pixels in the row (columns) <br />        </span><span style="color: #007700">foreach (</span><span style="color: #9876AA">$pixels </span><span style="color: #007700">as </span><span style="color: #9876AA">$column </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$pixel</span><span style="color: #007700">) {<br />            </span><span style="color: #FF8000">//* @var $pixel \ImagickPixel <br />            </span><span style="color: #007700">if (</span><span style="color: #9876AA">$column </span><span style="color: #007700">% </span><span style="color: #9876AA">2</span><span style="color: #007700">) {<br /><br />                </span><span style="color: #FF8000">// Make every second pixel 25% red<br />                </span><span style="color: #9876AA">$pixel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setColorValue</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_RED</span><span style="color: #007700">, </span><span style="color: #9876AA">64</span><span style="color: #007700">); <br />            }<br />        }<br />        </span><span style="color: #FF8000">// Sync the iterator, this is important to do on each iteration <br />        </span><span style="color: #9876AA">$imageIterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">syncIterator</span><span style="color: #007700">();<br />    }<br /><br />    </span><span style="color: #9876AA">$imageIterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">resetiterator</span><span style="color: #007700">();<br /><br />    </span><span style="color: #FF8000">// Loop trough pixel rows <br />    </span><span style="color: #007700">foreach (</span><span style="color: #9876AA">$imageIterator </span><span style="color: #007700">as </span><span style="color: #9876AA">$pixels</span><span style="color: #007700">) {<br />        </span><span style="color: #FF8000">// Loop through the pixels in the row (columns) <br />        </span><span style="color: #007700">foreach (</span><span style="color: #9876AA">$pixels </span><span style="color: #007700">as </span><span style="color: #9876AA">$column </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$pixel</span><span style="color: #007700">) {<br />            </span><span style="color: #FF8000">//* @var $pixel \ImagickPixel <br />            </span><span style="color: #007700">if (</span><span style="color: #9876AA">$column </span><span style="color: #007700">% </span><span style="color: #9876AA">3</span><span style="color: #007700">) {<br />                </span><span style="color: #9876AA">$pixel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setColorValue</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_BLUE</span><span style="color: #007700">, </span><span style="color: #9876AA">64</span><span style="color: #007700">); </span><span style="color: #FF8000">// Make every second pixel a little blue<br />                //$pixel-&gt;setColor("rgba(0, 0, 128, 0)"); // Paint every second pixel black<br />            </span><span style="color: #007700">}<br />        }<br />        </span><span style="color: #9876AA">$imageIterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">syncIterator</span><span style="color: #007700">(); </span><span style="color: #FF8000">// Sync the iterator, this is important to do on each iteration <br />    </span><span style="color: #007700">}<br /><br />    </span><span style="color: #9876AA">$imageIterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function resetIterator() {}

/**
*<div id="imagickpixeliterator.synciterator" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixelIterator::syncIterator</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixelIterator::syncIterator</span> &mdash; <span class="dc-title">Syncs the pixel iterator</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixeliterator.synciterator-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixelIterator::syncIterator</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Syncs the pixel iterator.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixeliterator.synciterator-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function syncIterator() {}

/**
*<div id="imagickpixeliterator.destroy" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixelIterator::destroy</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixelIterator::destroy</span> &mdash; <span class="dc-title">Deallocates resources associated with a PixelIterator</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixeliterator.destroy-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixelIterator::destroy</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Deallocates resources associated with a PixelIterator.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixeliterator.destroy-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function destroy() {}

/**
*<div id="imagickpixeliterator.clear" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixelIterator::clear</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixelIterator::clear</span> &mdash; <span class="dc-title">Clear resources associated with a PixelIterator</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixeliterator.clear-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixelIterator::clear</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Clear resources associated with a PixelIterator.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixeliterator.clear-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickpixeliterator.clear-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">ImagickPixelIterator::clear()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">clear</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br /><br />    </span><span style="color: #9876AA">$imageIterator </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getPixelRegionIterator</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">250</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">// Loop through pixel rows <br />    </span><span style="color: #007700">foreach (</span><span style="color: #9876AA">$imageIterator </span><span style="color: #007700">as </span><span style="color: #9876AA">$pixels</span><span style="color: #007700">) { <br />        </span><span style="color: #FF8000">//* @var $pixel \ImagickPixel <br />        // Loop through the pixels in the row (columns) <br />        </span><span style="color: #007700">foreach (</span><span style="color: #9876AA">$pixels </span><span style="color: #007700">as </span><span style="color: #9876AA">$column </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$pixel</span><span style="color: #007700">) { <br />            if (</span><span style="color: #9876AA">$column </span><span style="color: #007700">% </span><span style="color: #9876AA">2</span><span style="color: #007700">) {<br />                </span><span style="color: #FF8000">// Paint every second pixel black<br />                </span><span style="color: #9876AA">$pixel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setColor</span><span style="color: #007700">(</span><span style="color: #DD0000">"rgba(0, 0, 0, 0)"</span><span style="color: #007700">); <br />            }<br />        }<br />        </span><span style="color: #FF8000">// Sync the iterator, this is important to do on each iteration <br />        </span><span style="color: #9876AA">$imageIterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">syncIterator</span><span style="color: #007700">();<br />    }<br /><br />    </span><span style="color: #9876AA">$imageIterator</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clear</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function clear() {}

    /**
     * @param Imagick $Imagick
     * @throws ImagickPixelIteratorException on error.
     * @throws ImagickException on error.
     */
    public static function getpixeliterator(Imagick $Imagick) {}

    /**
     * @param Imagick $Imagick
     * @param $x
     * @param $y
     * @param $columns
     * @param $rows
     * @throws ImagickPixelIteratorException on error.
     * @throws ImagickException on error.
     */
    public static function getpixelregioniterator(Imagick $Imagick, $x, $y, $columns, $rows) {}

    /**
     * @throws ImagickPixelIteratorException on error.
     */
    public function key() {}

    /**
     * @throws ImagickPixelIteratorException on error.
     */
    public function next() {}

    /**
     * @throws ImagickPixelIteratorException on error.
     */
    public function rewind() {}

    /**
     * @throws ImagickPixelIteratorException on error.
     */
    public function current() {}

    /**
     * @throws ImagickPixelIteratorException on error.
     */
    public function valid() {}
}

/**
*<div id="class.imagickpixel" class="reference"> <h1 class="title">The <span class="classname"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="classname">ImagickPixel</a></span> class</h1>  <div class="partintro"><p class="verinfo">(PECL imagick 2, PECL imagick 3)</p>  <div class="section" id="imagickpixel.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass"><span class="modifier">class</span> <strong class="classname">ImagickPixel</strong></span>     {</div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.clear.php" class="methodname" style="color:#CC7832">clear</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$color</span><span class="initializer"> = ?</span></span>)</div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.destroy.php" class="methodname" style="color:#CC7832">destroy</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.getcolor.php" class="methodname" style="color:#CC7832">getColor</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$normalized</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.getcolorasstring.php" class="methodname" style="color:#CC7832">getColorAsString</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.getcolorcount.php" class="methodname" style="color:#CC7832">getColorCount</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.getcolorquantum.php" class="methodname" style="color:#CC7832">getColorQuantum</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.getcolorvalue.php" class="methodname" style="color:#CC7832">getColorValue</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$color</span></span>): <span class="type" style="color:#EAB766">float</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.getcolorvaluequantum.php" class="methodname" style="color:#CC7832">getColorValueQuantum</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$color</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">float</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.gethsl.php" class="methodname" style="color:#CC7832">getHSL</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.getindex.php" class="methodname" style="color:#CC7832">getIndex</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.ispixelsimilar.php" class="methodname" style="color:#CC7832">isPixelSimilar</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span> <span class="parameter" style="color:#3A95FF">$color</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.ispixelsimilarquantum.php" class="methodname" style="color:#CC7832">isPixelSimilarQuantum</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$color</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$fuzz</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.issimilar.php" class="methodname" style="color:#CC7832">isSimilar</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span> <span class="parameter" style="color:#3A95FF">$color</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.setcolor.php" class="methodname" style="color:#CC7832">setColor</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$color</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.setcolorcount.php" class="methodname" style="color:#CC7832">setcolorcount</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$colorCount</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.setcolorvalue.php" class="methodname" style="color:#CC7832">setColorValue</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$color</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.setcolorvaluequantum.php" class="methodname" style="color:#CC7832">setColorValueQuantum</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$color</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">float</span></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.sethsl.php" class="methodname" style="color:#CC7832">setHSL</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$hue</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$saturation</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$luminosity</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickpixel.setindex.php" class="methodname" style="color:#CC7832">setIndex</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$index</span></span>): <span class="type" style="color:#EAB766">bool</span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link ImagickPixel::clear} — Clears resources associated with this object</li><li>{@link ImagickPixel::__construct} — The ImagickPixel constructor</li><li>{@link ImagickPixel::destroy} — Deallocates resources associated with this object</li><li>{@link ImagickPixel::getColor} — Returns the color</li><li>{@link ImagickPixel::getColorAsString} — Returns the color as a string</li><li>{@link ImagickPixel::getColorCount} — Returns the color count associated with this color</li><li>{@link ImagickPixel::getColorQuantum} — Returns the color of the pixel in an array as Quantum values</li><li>{@link ImagickPixel::getColorValue} — Gets the normalized value of the provided color channel</li><li>{@link ImagickPixel::getColorValueQuantum} — Gets the quantum value of a color in the ImagickPixel</li><li>{@link ImagickPixel::getHSL} — Returns the normalized HSL color of the ImagickPixel object</li><li>{@link ImagickPixel::getIndex} — Gets the colormap index of the pixel wand</li><li>{@link ImagickPixel::isPixelSimilar} — Check the distance between this color and another</li><li>{@link ImagickPixel::isPixelSimilarQuantum} — Returns whether two colors differ by less than the specified distance</li><li>{@link ImagickPixel::isSimilar} — Check the distance between this color and another</li><li>{@link ImagickPixel::setColor} — Sets the color</li><li>{@link ImagickPixel::setColorCount} — Sets the color count associated with this color</li><li>{@link ImagickPixel::setColorValue} — Sets the normalized value of one of the channels</li><li>{@link ImagickPixel::setColorValueQuantum} — Sets the quantum value of a color element of the ImagickPixel</li><li>{@link ImagickPixel::setHSL} — Sets the normalized HSL color</li><li>{@link ImagickPixel::setIndex} — Sets the colormap index of the pixel wand</li></ul></div>
*/
class ImagickPixel
{
/**
*<div id="imagickpixel.gethsl" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::getHSL</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixel::getHSL</span> &mdash; <span class="dc-title">Returns the normalized HSL color of the ImagickPixel object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.gethsl-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::getHSL</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns the normalized HSL color described by the ImagickPixel object,   with each of the three values as floating point numbers between 0.0   and 1.0.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixel.gethsl-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.gethsl-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the HSL value in an array with the keys &quot;hue&quot;,   &quot;saturation&quot;, and &quot;luminosity&quot;. Throws ImagickPixelException on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickpixel.gethsl-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Basic <span class="function"><strong style="color:#CC7832">Imagick::getHSL()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$color </span><span style="color: #007700">= new </span><span style="color: #9876AA">ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">'rgb(90%, 10%, 10%)'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$colorInfo </span><span style="color: #007700">= </span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getHSL</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$colorInfo</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [hue] =&gt; 0<br>    [saturation] =&gt; 0.80001220740379<br>    [luminosity] =&gt; 0.50000762951095<br>)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-imagickpixel.gethsl-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    Available with ImageMagick library version 6.2.9 and higher.   </p>  </p></blockquote> </div></div>
     * @return float[] the HSL value in an array with the keys "hue",*/
    public function getHSL() {}

/**
*<div id="imagickpixel.sethsl" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::setHSL</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixel::setHSL</span> &mdash; <span class="dc-title">Sets the normalized HSL color</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.sethsl-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::setHSL</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$hue</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$saturation</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$luminosity</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the color described by the ImagickPixel object using normalized   values for hue, saturation and luminosity.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixel.sethsl-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">hue</span></dt>     <dd>      <p class="para">       The normalized value for hue, described as a fractional arc       (between 0 and 1) of the hue circle, where the zero value is       red.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">saturation</span></dt>     <dd>      <p class="para">       The normalized value for saturation, with 1 as full saturation.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">luminosity</span></dt>     <dd>      <p class="para">       The normalized value for luminosity, on a scale from black at       0 to white at 1, with the full HS value at 0.5 luminosity.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.sethsl-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickpixel.sethsl-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Use <span class="function"><strong style="color:#CC7832">ImagickPixel::setHSL()</strong></span> to modify a color</strong></p>    <div class="example-contents">        <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//Create an almost pure red color<br /></span><span style="color: #9876AA">$color </span><span style="color: #007700">= new </span><span style="color: #9876AA">ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">'rgb(90%, 10%, 10%)'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//Get it's HSL values<br /></span><span style="color: #9876AA">$colorInfo </span><span style="color: #007700">= </span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getHSL</span><span style="color: #007700">();<br /><br /></span><span style="color: #FF8000">//Rotate the hue by 180 degrees<br /></span><span style="color: #9876AA">$newHue </span><span style="color: #007700">= </span><span style="color: #9876AA">$colorInfo</span><span style="color: #007700">[</span><span style="color: #DD0000">'hue'</span><span style="color: #007700">] + </span><span style="color: #9876AA">0.5</span><span style="color: #007700">;<br />if (</span><span style="color: #9876AA">$newHue </span><span style="color: #007700">&gt; </span><span style="color: #9876AA">1</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$newHue </span><span style="color: #007700">= </span><span style="color: #9876AA">$newHue </span><span style="color: #007700">- </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #FF8000">//Set the ImagickPixel to the new color<br /></span><span style="color: #9876AA">$colorInfo </span><span style="color: #007700">= </span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setHSL</span><span style="color: #007700">(</span><span style="color: #9876AA">$newHue</span><span style="color: #007700">, </span><span style="color: #9876AA">$colorInfo</span><span style="color: #007700">[</span><span style="color: #DD0000">'saturation'</span><span style="color: #007700">], </span><span style="color: #9876AA">$colorInfo</span><span style="color: #007700">[</span><span style="color: #DD0000">'luminosity'</span><span style="color: #007700">]);<br /><br /></span><span style="color: #FF8000">//Check that the new color is blue/green<br /></span><span style="color: #9876AA">$colorInfo </span><span style="color: #007700">= </span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getcolor</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$colorInfo</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [r] =&gt; 26<br>    [g] =&gt; 230<br>    [b] =&gt; 230<br>    [a] =&gt; 255<br>)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-imagickpixel.sethsl-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    Available with ImageMagick library version 6.2.9 and higher.   </p>  </p></blockquote> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setHSL($hue, $saturation, $luminosity) {}

/**
*<div id="imagickpixel.getcolorvaluequantum" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::getColorValueQuantum</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixel::getColorValueQuantum</span> &mdash; <span class="dc-title">Gets the quantum value of a color in the ImagickPixel</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.getcolorvaluequantum-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::getColorValueQuantum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$color</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">float</span></span></div>  <p class="para rdfs-comment">   Gets the quantum value of a color in the ImagickPixel. Return value is a float if ImageMagick was compiled with HDRI, otherwise an integer.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixel.getcolorvaluequantum-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.getcolorvaluequantum-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The quantum value of the color element. Float if ImageMagick was compiled with HDRI, otherwise an int.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickpixel.getcolorvaluequantum-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">ImagickPixel::getColorValueQuantum()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        $color </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">'rgb(128, 5, 255)'</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$colorRed </span><span style="color: #007700">= </span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorValueQuantum</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_RED</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$colorGreen </span><span style="color: #007700">= </span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorValueQuantum</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_GREEN</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$colorBlue </span><span style="color: #007700">= </span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorValueQuantum</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_BLUE</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$colorAlpha </span><span style="color: #007700">= </span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorValueQuantum</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_ALPHA</span><span style="color: #007700">);<br /><br />        </span><span style="color: #9876AA">printf</span><span style="color: #007700">(<br />            </span><span style="color: #DD0000">"Red: %s Green: %s  Blue %s Alpha: %s"</span><span style="color: #007700">,<br />            </span><span style="color: #9876AA">$colorRed</span><span style="color: #007700">,<br />            </span><span style="color: #9876AA">$colorGreen</span><span style="color: #007700">,<br />            </span><span style="color: #9876AA">$colorBlue</span><span style="color: #007700">,<br />            </span><span style="color: #9876AA">$colorAlpha<br />        </span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
*/
    public function getColorValueQuantum() {}

/**
*<div id="imagickpixel.setcolorvaluequantum" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::setColorValueQuantum</h1>  <p class="verinfo">(PECL imagick 2 &gt;=2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixel::setColorValueQuantum</span> &mdash; <span class="dc-title">Sets the quantum value of a color element of the ImagickPixel</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.setcolorvaluequantum-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::setColorValueQuantum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$color</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">float</span></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the quantum value of a color element of the ImagickPixel.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixel.setcolorvaluequantum-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">color</span></dt>    <dd>     <span>      Which color element to set e.g. \Imagick::COLOR_GREEN.     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd>     <p class="para">      The quantum value to set the color element to. This should be a float if ImageMagick was compiled with HDRI otherwise an int in the range 0 to Imagick::getQuantum().     </p>    </dd>        </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.setcolorvaluequantum-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickpixel.setcolorvaluequantum-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">ImagickPixel::setColorValueQuantum()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setColorValueQuantum</span><span style="color: #007700">() {<br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$quantumRange </span><span style="color: #007700">= </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getQuantumRange</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$color </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">'blue'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setcolorValueQuantum</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_RED</span><span style="color: #007700">, </span><span style="color: #9876AA">128 </span><span style="color: #007700">* </span><span style="color: #9876AA">$quantumRange</span><span style="color: #007700">[</span><span style="color: #DD0000">'quantumRangeLong'</span><span style="color: #007700">] / </span><span style="color: #9876AA">256</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setstrokewidth</span><span style="color: #007700">(</span><span style="color: #9876AA">1.0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$color</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$color</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #DD0000">"SteelBlue2"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
*/
    public function setColorValueQuantum($color_value) {}

/**
*<div id="imagickpixel.getindex" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::getIndex</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixel::getIndex</span> &mdash; <span class="dc-title">Gets the colormap index of the pixel wand</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.getindex-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::getIndex</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Gets the colormap index of the pixel wand.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixel.getindex-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.getindex-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
*/
    public function getIndex() {}

/**
*<div id="imagickpixel.setindex" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::setIndex</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.3.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixel::setIndex</span> &mdash; <span class="dc-title">Sets the colormap index of the pixel wand</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.setindex-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::setIndex</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$index</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the colormap index of the pixel wand.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixel.setindex-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">index</span></dt>    <dd>     <span>           </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.setindex-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
*/
    public function setIndex($index) {}

    /**
     * (PECL imagick 2.0.0)<br/>
     * The ImagickPixel constructor
     * @link https://php.net/manual/en/imagickpixel.construct.php
     * @param string $color [optional] <p>
     * The optional color string to use as the initial value of this object.
     * </p>
     * @throws ImagickPixelException on failure
     */
    public function __construct($color = null) {}

/**
*<div id="imagickpixel.setcolor" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::setColor</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixel::setColor</span> &mdash; <span class="dc-title">Sets the color</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.setcolor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::setColor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$color</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Sets the color described by the ImagickPixel object, with a string   (e.g. &quot;blue&quot;, &quot;#0000ff&quot;, &quot;rgb(0,0,255)&quot;, &quot;cmyk(100,100,100,10)&quot;, etc.).  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixel.setcolor-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">color</span></dt>     <dd>      <p class="para">       The color definition to use in order to initialise the       ImagickPixel object.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.setcolor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Returns <strong><span>true</span></strong> if the specified color was set, <strong><span>false</span></strong> otherwise.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickpixel.setcolor-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">ImagickPixel::setColor()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">setColor</span><span style="color: #007700">() {<br />    </span><span style="color: #9876AA">$draw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$strokeColor </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">'green'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$fillColor </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'rgba(100%, 75%, 0%, 1.0)'</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setstrokewidth</span><span style="color: #007700">(</span><span style="color: #9876AA">3.0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$strokeColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$fillColor</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$draw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">200</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">, </span><span style="color: #9876AA">300</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newImage</span><span style="color: #007700">(</span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #9876AA">500</span><span style="color: #007700">, </span><span style="color: #DD0000">"SteelBlue2"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">"png"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$draw</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$image</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> if the specified color was set, <b>FALSE</b> otherwise.*/
    public function setColor($color) {}

/**
*<div id="imagickpixel.setcolorvalue" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::setColorValue</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixel::setColorValue</span> &mdash; <span class="dc-title">Sets the normalized value of one of the channels</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.setcolorvalue-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::setColorValue</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$color</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the value of the specified channel of this object to the provided   value, which should be between 0 and 1. This function can be used to   provide an opacity channel to an ImagickPixel object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixel.setcolorvalue-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">color</span></dt>     <dd>      <p class="para">       One of the Imagick color constants e.g. \Imagick::COLOR_GREEN or \Imagick::COLOR_ALPHA.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       The value to set this channel to, ranging from 0 to 1.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.setcolorvalue-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickpixel.setcolorvalue-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Basic <span class="function"><strong style="color:#CC7832">Imagick::setColorValue()</strong></span> usage</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$color  </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">'firebrick'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setColorValue</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_ALPHA</span><span style="color: #007700">, </span><span style="color: #9876AA">0.5</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getcolor</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [r] =&gt; 0.69803921568627<br>    [g] =&gt; 0.13333333333333<br>    [b] =&gt; 0.13333333333333<br>    [a] =&gt; 0.50000762951095<br>)<br></span></div>    </div>   </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function setColorValue($color, $value) {}

/**
*<div id="imagickpixel.getcolorvalue" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::getColorValue</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixel::getColorValue</span> &mdash; <span class="dc-title">Gets the normalized value of the provided color channel</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.getcolorvalue-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::getColorValue</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$color</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   Retrieves the value of the color channel specified, as a floating-point   number between 0 and 1.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixel.getcolorvalue-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">color</span></dt>     <dd>      <p class="para">       The color to get the value of, specified as one of the Imagick color       constants. This can be one of the RGB colors, CMYK colors, alpha and       opacity e.g (Imagick::COLOR_BLUE, Imagick::COLOR_MAGENTA).      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.getcolorvalue-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The value of the channel, as a normalized floating-point number, throwing   ImagickPixelException on error.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickpixel.getcolorvalue-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Basic <span class="function"><strong style="color:#CC7832">Imagick::getColorValue()</strong></span> usage</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />    <br />$color </span><span style="color: #007700">= new </span><span style="color: #9876AA">ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">'rgba(90%, 20%, 20%, 0.75)'</span><span style="color: #007700">);<br /><br />echo </span><span style="color: #DD0000">"Alpha value is "</span><span style="color: #007700">.</span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorValue</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_ALPHA</span><span style="color: #007700">).</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">""</span><span style="color: #007700">.</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">"Red value is "</span><span style="color: #007700">.</span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorValue</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_RED</span><span style="color: #007700">).</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">"Green value is "</span><span style="color: #007700">.</span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorValue</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_GREEN</span><span style="color: #007700">).</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">"Blue value is "</span><span style="color: #007700">.</span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorValue</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_BLUE</span><span style="color: #007700">).</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">""</span><span style="color: #007700">.</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">"Cyan value is "</span><span style="color: #007700">.</span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorValue</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_CYAN</span><span style="color: #007700">).</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">"Magenta value is "</span><span style="color: #007700">.</span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorValue</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_MAGENTA</span><span style="color: #007700">).</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">"Yellow value is "</span><span style="color: #007700">.</span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorValue</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_YELLOW</span><span style="color: #007700">).</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo </span><span style="color: #DD0000">"Black value is "</span><span style="color: #007700">.</span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorValue</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_BLACK</span><span style="color: #007700">).</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Alpha value is 0.74999618524453<br><br>Red value is 0.90000762951095<br>Green value is 0.2<br>Blue value is 0.2<br><br>Cyan value is 0.90000762951095<br>Magenta value is 0.2<br>Yellow value is 0.2<br>Black value is 0<br></span></div>    </div>   </div>  </span> </div></div>
     * @return float The value of the channel, as a normalized floating-point number, throwing*/
    public function getColorValue($color) {}

/**
*<div id="imagickpixel.clear" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::clear</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixel::clear</span> &mdash; <span class="dc-title">Clears resources associated with this object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.clear-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::clear</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Clears the ImagickPixel object, leaving it in a fresh state. This also   unsets any color associated with the object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.clear-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function clear() {}

/**
*<div id="imagickpixel.destroy" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::destroy</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixel::destroy</span> &mdash; <span class="dc-title">Deallocates resources associated with this object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.destroy-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::destroy</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Deallocates any resources used by the ImagickPixel object, and unsets any   associated color. The object should not be used after the destroy function   has been called.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.destroy-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function destroy() {}

/**
*<div id="imagickpixel.issimilar" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::isSimilar</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixel::isSimilar</span> &mdash; <span class="dc-title">Check the distance between this color and another</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.issimilar-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::isSimilar</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span> <span class="parameter" style="color:#3A95FF">$color</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div>  <p class="para">   Checks the distance between the color described by this ImagickPixel   object and that of the provided object, by plotting their RGB values   on the color cube. If the distance between the two points is less than   the fuzz value given, the colors are similar.   Deprecated in favour of {@link ImagickPixel::isPixelSimilar()}.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixel.issimilar-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">color</span></dt>     <dd>      <p class="para">       The ImagickPixel object to compare this object against.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">fuzz</span></dt>     <dd>      <p class="para">       The maximum distance within which to consider these colors as similar.       The theoretical maximum for this value is the square root of three       (1.732).      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.issimilar-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickpixel.issimilar-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">ImagickPixel::isSimilar()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />        </span><span style="color: #FF8000">// The tests below are written with the maximum distance expressed as 255<br />        // so we need to scale them by the square root of 3 - the diagonal length<br />        // of a unit cube.<br />        </span><span style="color: #9876AA">$root3 </span><span style="color: #007700">= </span><span style="color: #9876AA">1.732050807568877</span><span style="color: #007700">;<br /><br />        </span><span style="color: #9876AA">$tests </span><span style="color: #007700">= array(<br />            [</span><span style="color: #DD0000">'rgb(245, 0, 0)'</span><span style="color: #007700">,      </span><span style="color: #DD0000">'rgb(255, 0, 0)'</span><span style="color: #007700">,   </span><span style="color: #9876AA">9 </span><span style="color: #007700">/ </span><span style="color: #9876AA">$root3</span><span style="color: #007700">,         </span><span style="color: #9876AA">false</span><span style="color: #007700">,],<br />            [</span><span style="color: #DD0000">'rgb(245, 0, 0)'</span><span style="color: #007700">,      </span><span style="color: #DD0000">'rgb(255, 0, 0)'</span><span style="color: #007700">,  </span><span style="color: #9876AA">10 </span><span style="color: #007700">/ </span><span style="color: #9876AA">$root3</span><span style="color: #007700">,         </span><span style="color: #9876AA">true</span><span style="color: #007700">,],<br />            [</span><span style="color: #DD0000">'rgb(0, 0, 0)'</span><span style="color: #007700">,        </span><span style="color: #DD0000">'rgb(7, 7, 0)'</span><span style="color: #007700">,     </span><span style="color: #9876AA">9 </span><span style="color: #007700">/ </span><span style="color: #9876AA">$root3</span><span style="color: #007700">,         </span><span style="color: #9876AA">false</span><span style="color: #007700">,],<br />            [</span><span style="color: #DD0000">'rgb(0, 0, 0)'</span><span style="color: #007700">,        </span><span style="color: #DD0000">'rgb(7, 7, 0)'</span><span style="color: #007700">,    </span><span style="color: #9876AA">10 </span><span style="color: #007700">/ </span><span style="color: #9876AA">$root3</span><span style="color: #007700">,         </span><span style="color: #9876AA">true</span><span style="color: #007700">,],<br />            [</span><span style="color: #DD0000">'rgba(0, 0, 0, 1)'</span><span style="color: #007700">,    </span><span style="color: #DD0000">'rgba(7, 7, 0, 1)'</span><span style="color: #007700">, </span><span style="color: #9876AA">9 </span><span style="color: #007700">/ </span><span style="color: #9876AA">$root3</span><span style="color: #007700">,         </span><span style="color: #9876AA">false</span><span style="color: #007700">,],<br />            [</span><span style="color: #DD0000">'rgba(0, 0, 0, 1)'</span><span style="color: #007700">,    </span><span style="color: #DD0000">'rgba(7, 7, 0, 1)'</span><span style="color: #007700">,    </span><span style="color: #9876AA">10 </span><span style="color: #007700">/ </span><span style="color: #9876AA">$root3</span><span style="color: #007700">,     </span><span style="color: #9876AA">true</span><span style="color: #007700">,],<br />            [</span><span style="color: #DD0000">'rgb(128, 128, 128)'</span><span style="color: #007700">,  </span><span style="color: #DD0000">'rgb(128, 128, 120)'</span><span style="color: #007700">,   </span><span style="color: #9876AA">7 </span><span style="color: #007700">/ </span><span style="color: #9876AA">$root3</span><span style="color: #007700">,     </span><span style="color: #9876AA">false</span><span style="color: #007700">,],<br />            [</span><span style="color: #DD0000">'rgb(128, 128, 128)'</span><span style="color: #007700">,  </span><span style="color: #DD0000">'rgb(128, 128, 120)'</span><span style="color: #007700">,   </span><span style="color: #9876AA">8 </span><span style="color: #007700">/ </span><span style="color: #9876AA">$root3</span><span style="color: #007700">,     </span><span style="color: #9876AA">true</span><span style="color: #007700">,],<br />            [</span><span style="color: #DD0000">'rgb(0, 0, 0)'</span><span style="color: #007700">,        </span><span style="color: #DD0000">'rgb(255, 255, 255)'</span><span style="color: #007700">,   </span><span style="color: #9876AA">254.9</span><span style="color: #007700">,          </span><span style="color: #9876AA">false</span><span style="color: #007700">,],<br />            [</span><span style="color: #DD0000">'rgb(0, 0, 0)'</span><span style="color: #007700">,        </span><span style="color: #DD0000">'rgb(255, 255, 255)'</span><span style="color: #007700">,   </span><span style="color: #9876AA">255</span><span style="color: #007700">,            </span><span style="color: #9876AA">true</span><span style="color: #007700">,],<br />            [</span><span style="color: #DD0000">'rgb(255, 0, 0)'</span><span style="color: #007700">,      </span><span style="color: #DD0000">'rgb(0, 255, 255)'</span><span style="color: #007700">,     </span><span style="color: #9876AA">254.9</span><span style="color: #007700">,          </span><span style="color: #9876AA">false</span><span style="color: #007700">,],<br />            [</span><span style="color: #DD0000">'rgb(255, 0, 0)'</span><span style="color: #007700">,      </span><span style="color: #DD0000">'rgb(0, 255, 255)'</span><span style="color: #007700">,     </span><span style="color: #9876AA">255</span><span style="color: #007700">,            </span><span style="color: #9876AA">true</span><span style="color: #007700">,],<br />            [</span><span style="color: #DD0000">'black'</span><span style="color: #007700">,               </span><span style="color: #DD0000">'rgba(0, 0, 0)'</span><span style="color: #007700">,        </span><span style="color: #9876AA">0.0</span><span style="color: #007700">,            </span><span style="color: #9876AA">true</span><span style="color: #007700">],<br />            [</span><span style="color: #DD0000">'black'</span><span style="color: #007700">,               </span><span style="color: #DD0000">'rgba(10, 0, 0, 1.0)'</span><span style="color: #007700">,  </span><span style="color: #9876AA">10.0 </span><span style="color: #007700">/ </span><span style="color: #9876AA">$root3</span><span style="color: #007700">,  </span><span style="color: #9876AA">true</span><span style="color: #007700">],);<br /><br />        </span><span style="color: #9876AA">$output </span><span style="color: #007700">= </span><span style="color: #DD0000">"&lt;table width='100%' class='infoTable'&gt;&lt;thead&gt;<br />                &lt;tr&gt;<br />                &lt;th&gt;<br />                Color 1<br />                &lt;/th&gt;<br />                &lt;th&gt;<br />                Color 2<br />                &lt;/th&gt;<br />                &lt;th&gt;<br />                    Test distance * 255<br />                &lt;/th&gt;<br />                &lt;th&gt;<br />                    Is within distance<br />                &lt;/th&gt;<br />                &lt;/tr&gt;<br />        &lt;/thead&gt;"</span><span style="color: #007700">;<br /><br />        </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;tbody&gt;"</span><span style="color: #007700">;<br /><br />        foreach (</span><span style="color: #9876AA">$tests </span><span style="color: #007700">as </span><span style="color: #9876AA">$testInfo</span><span style="color: #007700">) {<br />            </span><span style="color: #9876AA">$color1 </span><span style="color: #007700">= </span><span style="color: #9876AA">$testInfo</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">];<br />            </span><span style="color: #9876AA">$color2 </span><span style="color: #007700">= </span><span style="color: #9876AA">$testInfo</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">];<br />            </span><span style="color: #9876AA">$distance </span><span style="color: #007700">= </span><span style="color: #9876AA">$testInfo</span><span style="color: #007700">[</span><span style="color: #9876AA">2</span><span style="color: #007700">];<br />            </span><span style="color: #9876AA">$expectation </span><span style="color: #007700">= </span><span style="color: #9876AA">$testInfo</span><span style="color: #007700">[</span><span style="color: #9876AA">3</span><span style="color: #007700">];<br />            </span><span style="color: #9876AA">$testDistance </span><span style="color: #007700">= (</span><span style="color: #9876AA">$distance </span><span style="color: #007700">/ </span><span style="color: #9876AA">255.0</span><span style="color: #007700">);<br /><br />            </span><span style="color: #9876AA">$color1Pixel </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #9876AA">$color1</span><span style="color: #007700">);<br />            </span><span style="color: #9876AA">$color2Pixel </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #9876AA">$color2</span><span style="color: #007700">);<br /><br />            </span><span style="color: #9876AA">$isSimilar </span><span style="color: #007700">= </span><span style="color: #9876AA">$color1Pixel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">isPixelSimilar</span><span style="color: #007700">(</span><span style="color: #9876AA">$color2Pixel</span><span style="color: #007700">, </span><span style="color: #9876AA">$testDistance</span><span style="color: #007700">);<br /><br /><br />            if (</span><span style="color: #9876AA">$isSimilar </span><span style="color: #007700">!== </span><span style="color: #9876AA">$expectation</span><span style="color: #007700">) {<br />                echo </span><span style="color: #DD0000">"Test distance failed. Color [</span><span style="color: #9876AA">$color1</span><span style="color: #DD0000">] compared to color [</span><span style="color: #9876AA">$color2</span><span style="color: #DD0000">] is not within distance </span><span style="color: #9876AA">$testDistance</span><span style="color: #DD0000"> FAILED."</span><span style="color: #007700">.</span><span style="color: #9876AA">NL</span><span style="color: #007700">;<br />            }<br /><br />            </span><span style="color: #9876AA">$layout </span><span style="color: #007700">= </span><span style="color: #DD0000">"&lt;tr&gt;<br />                &lt;td&gt;%s&lt;/td&gt;<br />                &lt;td&gt;%s&lt;/td&gt;<br />                &lt;td&gt;%s&lt;/td&gt;<br />                &lt;td style='text-align: center;'&gt;%s&lt;/td&gt;<br />            &lt;/tr&gt;"</span><span style="color: #007700">;<br />            <br />            </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #9876AA">sprintf</span><span style="color: #007700">(<br />                </span><span style="color: #9876AA">$layout</span><span style="color: #007700">,<br />                </span><span style="color: #9876AA">$color1</span><span style="color: #007700">,<br />                </span><span style="color: #9876AA">$color2</span><span style="color: #007700">,<br />                </span><span style="color: #9876AA">$distance</span><span style="color: #007700">,<br />                </span><span style="color: #9876AA">$isSimilar </span><span style="color: #007700">? </span><span style="color: #DD0000">'yes' </span><span style="color: #007700">: </span><span style="color: #DD0000">'no'<br />            </span><span style="color: #007700">);<br />        }<br /><br />        </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;/tbody&gt;&lt;/table&gt;"</span><span style="color: #007700">;<br />        <br />        return </span><span style="color: #9876AA">$output</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function isSimilar(ImagickPixel $color, $fuzz) {}

/**
*<div id="imagickpixel.ispixelsimilar" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::isPixelSimilar</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">ImagickPixel::isPixelSimilar</span> &mdash; <span class="dc-title">Check the distance between this color and another</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.ispixelsimilar-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::isPixelSimilar</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickpixel.php" class="type ImagickPixel" style="color:#EAB766">ImagickPixel</a></span> <span class="parameter" style="color:#3A95FF">$color</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$fuzz</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Checks the distance between the color described by this ImagickPixel   object and that of the provided object, by plotting their RGB values   on the color cube. If the distance between the two points is less than   the fuzz value given, the colors are similar.   This method replaces {@link ImagickPixel::isSimilar()}   and correctly normalises the fuzz value to ImageMagick QuantumRange.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixel.ispixelsimilar-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">color</span></dt>     <dd>      <p class="para">       The ImagickPixel object to compare this object against.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">fuzz</span></dt>     <dd>      <p class="para">       The maximum distance within which to consider these colors as similar.       The theoretical maximum for this value is the square root of three       (1.732).      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.ispixelsimilar-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
     * @return bool <b>TRUE</b> on success.*/
    public function isPixelSimilar(ImagickPixel $color, $fuzz) {}

/**
*<div id="imagickpixel.getcolor" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::getColor</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixel::getColor</span> &mdash; <span class="dc-title">Returns the color</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.getcolor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::getColor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$normalized</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns the color described by the ImagickPixel object, as an array. If the color has an   opacity channel set, this is provided as a fourth value in the list.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixel.getcolor-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">normalized</span></dt>     <dd>      <p class="para">       Normalize the color values. Possible values are <span>0</span>,       <span>1</span> or <span>2</span>.      </p>      <table class="doctable table">       <caption><strong>        List of possible values for <span class="parameter" style="color:#3A95FF">normalized</span>       </strong></caption>               <thead>         <tr>          <th><span class="parameter" style="color:#3A95FF">normalized</span></th>          <th>Description</th>         </tr>        </thead>        <tbody class="tbody">         <tr>          <td>           <strong><span>0</span></strong>          </td>          <td>           The RGB values are returned as <span class="type" style="color:#EAB766">int</span>s in the range <span>0</span>           to <span>255</span> (inclusive.)           The alpha value is returned as <span class="type" style="color:#EAB766">int</span> and is either <span>0</span>           or <span>1</span>.          </td>         </tr>         <tr>          <td>           <strong><span>1</span></strong>          </td>          <td>           The RGBA values are returned as <span class="type" style="color:#EAB766">float</span>s in the range <span>0</span>           to <span>1</span> (inclusive.)          </td>         </tr>         <tr>          <td>           <strong><span>2</span></strong>          </td>          <td>           The RGBA values are returned as <span class="type" style="color:#EAB766">int</span>s in the range <span>0</span>           to <span>255</span> (inclusive.)          </td>         </tr>        </tbody>             </table>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.getcolor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An array of channel values. Throws ImagickPixelException on error.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickpixel.getcolor-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Basic <span class="function"><strong style="color:#CC7832">Imagick::getColor()</strong></span> usage</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//Create an ImagickPixel with the predefined color 'brown'<br /></span><span style="color: #9876AA">$color </span><span style="color: #007700">= new </span><span style="color: #9876AA">ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">'brown'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//Set the color to have an alpha of 25%<br /></span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setColorValue</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_ALPHA</span><span style="color: #007700">, </span><span style="color: #9876AA">64 </span><span style="color: #007700">/ </span><span style="color: #9876AA">256.0</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$colorInfo </span><span style="color: #007700">= </span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColor</span><span style="color: #007700">();<br /><br />echo </span><span style="color: #DD0000">"Standard values"</span><span style="color: #007700">.</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$colorInfo</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$colorInfo </span><span style="color: #007700">= </span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColor</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br />echo </span><span style="color: #DD0000">"Normalized values:"</span><span style="color: #007700">.</span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$colorInfo</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;">    <div class="cdata"><span>Standard values<br>Array<br>(<br>    [r] =&gt; 165<br>    [g] =&gt; 42<br>    [b] =&gt; 42<br>    [a] =&gt; 0<br>)<br>Normalized values:<br>Array<br>(<br>    [r] =&gt; 0.64705882352941<br>    [g] =&gt; 0.16470588235294<br>    [b] =&gt; 0.16470588235294<br>    [a] =&gt; 0.25000381475547<br>)<br>    </span></div>    </div>   </div>  </span> </div></div>
     * @return array An array of channel values, each normalized if <b>TRUE</b> is given as param. Throws*/
    public function getColor($normalized = 0) {}

/**
*<div id="imagickpixel.getcolorasstring" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::getColorAsString</h1>  <p class="verinfo">(PECL imagick 2 &gt;= 2.1.0, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixel::getColorAsString</span> &mdash; <span class="dc-title">Returns the color as a string</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.getcolorasstring-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::getColorAsString</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Returns the color of the ImagickPixel object as a string.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixel.getcolorasstring-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.getcolorasstring-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the color of the ImagickPixel object as a string.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickpixel.getcolorasstring-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 Basic <span class="function"><strong style="color:#CC7832">Imagick::getColorAsString()</strong></span> usage</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">//Create an ImagickPixel with the predefined color 'brown'<br /></span><span style="color: #9876AA">$color </span><span style="color: #007700">= new </span><span style="color: #9876AA">ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">'brown'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setColorValue</span><span style="color: #007700">(</span><span style="color: #9876AA">Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COLOR_ALPHA</span><span style="color: #007700">, </span><span style="color: #9876AA">64 </span><span style="color: #007700">/ </span><span style="color: #9876AA">256.0</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$colorInfo </span><span style="color: #007700">= </span><span style="color: #9876AA">$color</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorAsString</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$colorInfo</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>rgb(165,42,42)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-imagickpixel.getcolorasstring-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <strong>Alpha not returned</strong><br />   <p class="para">      This function does not return the alpha value of the color in the string.   </p>  </p></blockquote> </div></div>
     * @return string the color of the ImagickPixel object as a string.*/
    public function getColorAsString() {}

/**
*<div id="imagickpixel.getcolorcount" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::getColorCount</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixel::getColorCount</span> &mdash; <span class="dc-title">Returns the color count associated with this color</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.getcolorcount-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::getColorCount</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the color count associated with this color.  </p>  <p class="para">The color count is the number of pixels in the image that have the same color as this ImagickPixel.  </p>  <p class="para">   ImagickPixel::getColorCount appears to only work for ImagickPixel objects created through Imagick::getImageHistogram()  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixel.getcolorcount-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.getcolorcount-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the color count as an integer on success, throws  ImagickPixelException on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickpixel.getcolorcount-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">      <p><strong>示例 #1 ImagickPixel <span class="function"><strong style="color:#CC7832">getColorCount()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />    $imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(</span><span style="color: #9876AA">640</span><span style="color: #007700">, </span><span style="color: #9876AA">480</span><span style="color: #007700">, </span><span style="color: #DD0000">"magick:logo"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$histogramElements </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageHistogram</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$lastColor </span><span style="color: #007700">= </span><span style="color: #9876AA">array_pop</span><span style="color: #007700">(</span><span style="color: #9876AA">$histogramElements</span><span style="color: #007700">);<br />    echo </span><span style="color: #DD0000">"Last pixel color count is: "</span><span style="color: #007700">.</span><span style="color: #9876AA">$lastColor</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getColorCount</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>        <div class="example-contents"><p>The output for this will be similar to:    </p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Last pixel color count is: 256244<br></span></div>    </div>    </div>  </span></div></div>
     * @return int the color count as an integer on success, throws*/
    public function getColorCount() {}

/**
*<div id="imagickpixel.setcolorcount" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::setColorCount</h1>  <p class="verinfo">(PECL imagick 2, PECL imagick 3)</p><p class="refpurpose"><span class="refname">ImagickPixel::setColorCount</span> &mdash; <span class="dc-title">Sets the color count associated with this color</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.setcolorcount-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::setcolorcount</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$colorCount</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Sets the color count associated with this color.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixel.setcolorcount-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">colorCount</span></dt>    <dd>     <span>           </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.setcolorcount-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>。  </p> </div></div>
*/
    public function setColorCount($colorCount) {}

/**
*<div id="imagickpixel.ispixelsimilarquantum" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::isPixelSimilarQuantum</h1>  <p class="verinfo">(PECL imagick 3 &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">ImagickPixel::isPixelSimilarQuantum</span> &mdash; <span class="dc-title">Returns whether two colors differ by less than the specified distance</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.ispixelsimilarquantum-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::isPixelSimilarQuantum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$color</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$fuzz</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Returns true if the distance between two colors is less than the specified distance.   The fuzz value should be in the range 0-QuantumRange.   The maximum value represents the longest possible distance in the colorspace.   e.g. from RGB(0, 0, 0) to RGB(255, 255, 255) for the RGB colorspace  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixel.ispixelsimilarquantum-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">color</span></dt>    <dd>     <span>           </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">fuzz</span></dt>    <dd>     <p class="para">           </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.ispixelsimilarquantum-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div></div>
     * @return bool*/
    public function isPixelSimilarQuantum($color, $fuzz) {}

/**
*<div id="imagickpixel.getcolorquantum" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickPixel::getColorQuantum</h1>  <p class="verinfo">(No version information available, might only be in Git)</p><p class="refpurpose"><span class="refname">ImagickPixel::getColorQuantum</span> &mdash; <span class="dc-title">Returns the color of the pixel in an array as Quantum values</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickpixel.getcolorquantum-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickPixel::getColorQuantum</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns the color of the pixel in an array as Quantum values. If ImageMagick was compiled   as HDRI these will be floats, otherwise they will be integers.  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickpixel.getcolorquantum-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickpixel.getcolorquantum-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an array with keys <span>&quot;r&quot;</span>, <span>&quot;g&quot;</span>,   <span>&quot;b&quot;</span>, <span>&quot;a&quot;</span>.  </p> </div></div>
     * @return mixed The quantum value of the color element. Float if ImageMagick was compiled with HDRI, otherwise an int.*/
    public function getColorQuantum() {}

    /**
     * Sets the color count associated with this color from another ImagickPixel object.
     *
     * @param ImagickPixel $srcPixel
     * @return bool
     * @throws ImagickPixelException on failure
     * @since 3.4.1
     */
    public function setColorFromPixel(ImagickPixel $srcPixel) {}
}
// End of imagick v.3.2.0RC1

// Start of Imagick v3.3.0RC1

/**
*<div id="class.imagickkernel" class="reference"> <h1 class="title">The ImagickKernel class</h1>  <div class="partintro"><p class="verinfo">(PECL imagick &gt;= 3.3.0)</p>  <div class="section" id="imagickkernel.intro">   <h2 class="title">简介</h2>   <p class="para">   </p>  </div>  <div class="section" id="imagickkernel.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">ImagickKernel</strong>     </span>     {</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickkernel.addkernel.php" class="methodname" style="color:#CC7832">addKernel</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickkernel.php" class="type ImagickKernel" style="color:#EAB766">ImagickKernel</a></span> <span class="parameter" style="color:#3A95FF">$ImagickKernel</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickkernel.addunitykernel.php" class="methodname" style="color:#CC7832">addUnityKernel</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$scale</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickkernel.frombuiltin.php" class="methodname" style="color:#CC7832">fromBuiltin</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$kernelType</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$kernelString</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickkernel.php" class="type ImagickKernel" style="color:#EAB766">ImagickKernel</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickkernel.frommatrix.php" class="methodname" style="color:#CC7832">fromMatrix</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$matrix</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$origin</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickkernel.php" class="type ImagickKernel" style="color:#EAB766">ImagickKernel</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickkernel.getmatrix.php" class="methodname" style="color:#CC7832">getMatrix</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickkernel.scale.php" class="methodname" style="color:#CC7832">scale</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$scale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$normalizeFlag</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/imagickkernel.separate.php" class="methodname" style="color:#CC7832">separate</a></span>(): <span class="type" style="color:#EAB766">array</span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link ImagickKernel::addKernel} — Attach another kernel to a kernel list</li><li>{@link ImagickKernel::addUnityKernel} — Adds a Unity Kernel to the kernel list</li><li>{@link ImagickKernel::fromBuiltIn} — Create a kernel from a builtin in kernel</li><li>{@link ImagickKernel::fromMatrix} — Create a kernel from a 2d matrix of values</li><li>{@link ImagickKernel::getMatrix} — Get the 2d matrix of values used in this kernel</li><li>{@link ImagickKernel::scale} — Scales a kernel list by the given amount</li><li>{@link ImagickKernel::separate} — Separates a linked set of kernels and returns an array of ImagickKernels</li></ul></div>
*/
class ImagickKernel
{
/**
*<div id="imagickkernel.addkernel" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickKernel::addKernel</h1>  <p class="verinfo">(PECL imagick &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">ImagickKernel::addKernel</span> &mdash; <span class="dc-title">Attach another kernel to a kernel list</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickkernel.addkernel-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickKernel::addKernel</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickkernel.php" class="type ImagickKernel" style="color:#EAB766">ImagickKernel</a></span> <span class="parameter" style="color:#3A95FF">$ImagickKernel</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   Attach another kernel to this kernel to allow them to both be applied in a single morphology or filter function. Returns the new combined kernel.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickkernel.addkernel-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ImagickKernel</span></dt>    <dd>     <span>           </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickkernel.addkernel-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickkernel.addkernel-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">ImagickKernel::addKernel()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">addKernel</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$matrix1 </span><span style="color: #007700">= [<br />        [-</span><span style="color: #9876AA">1</span><span style="color: #007700">, -</span><span style="color: #9876AA">1</span><span style="color: #007700">, -</span><span style="color: #9876AA">1</span><span style="color: #007700">],<br />        [ </span><span style="color: #9876AA">0</span><span style="color: #007700">,  </span><span style="color: #9876AA">0</span><span style="color: #007700">,  </span><span style="color: #9876AA">0</span><span style="color: #007700">],<br />        [ </span><span style="color: #9876AA">1</span><span style="color: #007700">,  </span><span style="color: #9876AA">1</span><span style="color: #007700">,  </span><span style="color: #9876AA">1</span><span style="color: #007700">],<br />    ];<br /><br />    </span><span style="color: #9876AA">$matrix2 </span><span style="color: #007700">= [<br />        [-</span><span style="color: #9876AA">1</span><span style="color: #007700">,  </span><span style="color: #9876AA">0</span><span style="color: #007700">,  </span><span style="color: #9876AA">1</span><span style="color: #007700">],<br />        [-</span><span style="color: #9876AA">1</span><span style="color: #007700">,  </span><span style="color: #9876AA">0</span><span style="color: #007700">,  </span><span style="color: #9876AA">1</span><span style="color: #007700">],<br />        [-</span><span style="color: #9876AA">1</span><span style="color: #007700">,  </span><span style="color: #9876AA">0</span><span style="color: #007700">,  </span><span style="color: #9876AA">1</span><span style="color: #007700">],<br />    ];<br /><br />    </span><span style="color: #9876AA">$kernel1 </span><span style="color: #007700">= </span><span style="color: #9876AA">ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromMatrix</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$kernel2 </span><span style="color: #007700">= </span><span style="color: #9876AA">ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromMatrix</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$kernel1</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addKernel</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernel2</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">filter</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernel1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return void*/
    public function addKernel(ImagickKernel $imagickKernel) {}

/**
*<div id="imagickkernel.addunitykernel" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickKernel::addUnityKernel</h1>  <p class="verinfo">(PECL imagick &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">ImagickKernel::addUnityKernel</span> &mdash; <span class="dc-title">Adds a Unity Kernel to the kernel list</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickkernel.addunitykernel-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickKernel::addUnityKernel</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$scale</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   Adds a given amount of the &#039;Unity&#039; Convolution Kernel to the given pre-scaled   and normalized Kernel. This in effect adds that amount of the original image   into the resulting convolution kernel. The resulting effect is to convert the   defined kernels into blended soft-blurs, unsharp kernels or into sharpening kernels.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickkernel.addunitykernel-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickkernel.addunitykernel-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickkernel.addunitykernel-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">ImagickKernel::addUnityKernel()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /><br /><br />    </span><span style="color: #007700">function </span><span style="color: #9876AA">renderKernelTable</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$output </span><span style="color: #007700">= </span><span style="color: #DD0000">"&lt;table class='infoTable'&gt;"</span><span style="color: #007700">;<br />    <br />        foreach (</span><span style="color: #9876AA">$matrix </span><span style="color: #007700">as </span><span style="color: #9876AA">$row</span><span style="color: #007700">) {<br />            </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;tr&gt;"</span><span style="color: #007700">;<br />            foreach (</span><span style="color: #9876AA">$row </span><span style="color: #007700">as </span><span style="color: #9876AA">$cell</span><span style="color: #007700">) {<br />                </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;td style='text-align:left'&gt;"</span><span style="color: #007700">;<br />                if (</span><span style="color: #9876AA">$cell </span><span style="color: #007700">=== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br />                    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"false"</span><span style="color: #007700">;<br />                }<br />                else {<br />                    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">$cell</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">);<br />                }<br />                </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;/td&gt;"</span><span style="color: #007700">;<br />            }<br />            </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;/tr&gt;"</span><span style="color: #007700">;<br />        }<br />    <br />        </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;/table&gt;"</span><span style="color: #007700">;<br />    <br />        return </span><span style="color: #9876AA">$output</span><span style="color: #007700">;<br />    }<br /><br />    </span><span style="color: #9876AA">$matrix </span><span style="color: #007700">= [<br />        [-</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, -</span><span style="color: #9876AA">1</span><span style="color: #007700">],<br />        [ </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">4</span><span style="color: #007700">,  </span><span style="color: #9876AA">0</span><span style="color: #007700">],<br />        [-</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, -</span><span style="color: #9876AA">1</span><span style="color: #007700">],<br />    ];<br /><br />    </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromMatrix</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">scale</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">NORMALIZE_KERNEL_VALUE</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">= </span><span style="color: #DD0000">"Before adding unity kernel: &lt;br/&gt;"</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #9876AA">renderKernelTable</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMatrix</span><span style="color: #007700">());<br />    </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addUnityKernel</span><span style="color: #007700">(</span><span style="color: #9876AA">0.5</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"After adding unity kernel: &lt;br/&gt;"</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #9876AA">renderKernelTable</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMatrix</span><span style="color: #007700">());<br />    <br />    <br />    </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">scale</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">NORMALIZE_KERNEL_VALUE</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"After renormalizing kernel: &lt;br/&gt;"</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #9876AA">renderKernelTable</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMatrix</span><span style="color: #007700">());<br /><br />    echo </span><span style="color: #9876AA">$output</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>    <div class="example" id="">      <p><strong>示例 #2  <span class="function"><strong style="color:#CC7832">ImagickKernel::addUnityKernel()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">addUnityKernel</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">) {<br /><br />    </span><span style="color: #9876AA">$matrix </span><span style="color: #007700">= [<br />        [-</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, -</span><span style="color: #9876AA">1</span><span style="color: #007700">],<br />        [ </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">4</span><span style="color: #007700">,  </span><span style="color: #9876AA">0</span><span style="color: #007700">],<br />        [-</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, -</span><span style="color: #9876AA">1</span><span style="color: #007700">],<br />    ];<br /><br />    </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromMatrix</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">scale</span><span style="color: #007700">(</span><span style="color: #9876AA">4</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">NORMALIZE_KERNEL_VALUE</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">addUnityKernel</span><span style="color: #007700">(</span><span style="color: #9876AA">0.5</span><span style="color: #007700">);<br /><br /><br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">(</span><span style="color: #9876AA">realpath</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagePath</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">filter</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/jpg"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br /><br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return void*/
    public function addUnityKernel() {}

/**
*<div id="imagickkernel.frombuiltin" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickKernel::fromBuiltIn</h1>  <p class="verinfo">(PECL imagick &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">ImagickKernel::fromBuiltIn</span> &mdash; <span class="dc-title">Create a kernel from a builtin in kernel</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickkernel.frombuiltin-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>ImagickKernel::fromBuiltin</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$kernelType</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$kernelString</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickkernel.php" class="type ImagickKernel" style="color:#EAB766">ImagickKernel</a></span></div>  <p class="para rdfs-comment">   Create a kernel from a builtin in kernel. See http://www.imagemagick.org/Usage/morphology/#kernel for examples. Currently the &#039;rotation&#039; symbols are not supported. Example:   $diamondKernel = ImagickKernel::fromBuiltIn(\Imagick::KERNEL_DIAMOND, &quot;2&quot;);  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickkernel.frombuiltin-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">kerneltype</span></dt>    <dd>     <span>      The type of kernel to build e.g. \Imagick::KERNEL_DIAMOND     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">kernelString</span></dt>    <dd>     <p class="para">      A string that describes the parameters e.g. &quot;4,2.5&quot;     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickkernel.frombuiltin-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickkernel.frombuiltin-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">ImagickKernel::fromBuiltin()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /><br /></span><span style="color: #007700">function </span><span style="color: #9876AA">renderKernel</span><span style="color: #007700">(</span><span style="color: #9876AA">ImagickKernel $imagickKernel</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$matrix </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagickKernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMatrix</span><span style="color: #007700">();<br />    <br />    </span><span style="color: #9876AA">$imageMargin </span><span style="color: #007700">= </span><span style="color: #9876AA">20</span><span style="color: #007700">;<br />    <br />    </span><span style="color: #9876AA">$tileSize </span><span style="color: #007700">= </span><span style="color: #9876AA">20</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$tileSpace </span><span style="color: #007700">= </span><span style="color: #9876AA">4</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$shadowSigma </span><span style="color: #007700">= </span><span style="color: #9876AA">4</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$shadowDropX </span><span style="color: #007700">= </span><span style="color: #9876AA">20</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$shadowDropY </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">;<br /><br />    </span><span style="color: #9876AA">$radius </span><span style="color: #007700">= (</span><span style="color: #9876AA">$tileSize </span><span style="color: #007700">/ </span><span style="color: #9876AA">2</span><span style="color: #007700">) * </span><span style="color: #9876AA">0.9</span><span style="color: #007700">;<br />    <br />    </span><span style="color: #9876AA">$rows </span><span style="color: #007700">= </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$columns </span><span style="color: #007700">= </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br /> <br />    </span><span style="color: #9876AA">$imagickDraw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'#afafaf'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'none'</span><span style="color: #007700">);<br />    <br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">translate</span><span style="color: #007700">(</span><span style="color: #9876AA">$imageMargin</span><span style="color: #007700">, </span><span style="color: #9876AA">$imageMargin</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">push</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">ksort</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix</span><span style="color: #007700">);<br />    <br />    foreach (</span><span style="color: #9876AA">$matrix </span><span style="color: #007700">as </span><span style="color: #9876AA">$row</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">ksort</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">push</span><span style="color: #007700">();<br />        foreach (</span><span style="color: #9876AA">$row </span><span style="color: #007700">as </span><span style="color: #9876AA">$cell</span><span style="color: #007700">) {<br />            if (</span><span style="color: #9876AA">$cell </span><span style="color: #007700">!== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br />                </span><span style="color: #9876AA">$color </span><span style="color: #007700">= </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">255 </span><span style="color: #007700">* </span><span style="color: #9876AA">$cell</span><span style="color: #007700">);<br />                </span><span style="color: #9876AA">$colorString </span><span style="color: #007700">= </span><span style="color: #9876AA">sprintf</span><span style="color: #007700">(</span><span style="color: #DD0000">"rgb(%f, %f, %f)"</span><span style="color: #007700">, </span><span style="color: #9876AA">$color</span><span style="color: #007700">, </span><span style="color: #9876AA">$color</span><span style="color: #007700">, </span><span style="color: #9876AA">$color</span><span style="color: #007700">);<br />                </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$colorString</span><span style="color: #007700">);<br />                </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">$tileSize</span><span style="color: #007700">, </span><span style="color: #9876AA">$tileSize</span><span style="color: #007700">);<br />            }<br />            </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">translate</span><span style="color: #007700">((</span><span style="color: #9876AA">$tileSize </span><span style="color: #007700">+ </span><span style="color: #9876AA">$tileSpace</span><span style="color: #007700">), </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />        }<br />        </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pop</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">translate</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, (</span><span style="color: #9876AA">$tileSize </span><span style="color: #007700">+ </span><span style="color: #9876AA">$tileSpace</span><span style="color: #007700">));<br />    }<br /><br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pop</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$width </span><span style="color: #007700">= (</span><span style="color: #9876AA">$columns </span><span style="color: #007700">* </span><span style="color: #9876AA">$tileSize</span><span style="color: #007700">) + ((</span><span style="color: #9876AA">$columns </span><span style="color: #007700">- </span><span style="color: #9876AA">1</span><span style="color: #007700">) * </span><span style="color: #9876AA">$tileSpace</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$height </span><span style="color: #007700">= (</span><span style="color: #9876AA">$rows </span><span style="color: #007700">* </span><span style="color: #9876AA">$tileSize</span><span style="color: #007700">) + ((</span><span style="color: #9876AA">$rows </span><span style="color: #007700">- </span><span style="color: #9876AA">1</span><span style="color: #007700">) * </span><span style="color: #9876AA">$tileSpace</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">push</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">translate</span><span style="color: #007700">(</span><span style="color: #9876AA">$width</span><span style="color: #007700">/</span><span style="color: #9876AA">2 </span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">/</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'rgba(0, 0, 0, 0)'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'white'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">circle</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">$radius </span><span style="color: #007700">- </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'black'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">circle</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pop</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$canvasWidth </span><span style="color: #007700">= </span><span style="color: #9876AA">$width </span><span style="color: #007700">+ (</span><span style="color: #9876AA">2 </span><span style="color: #007700">* </span><span style="color: #9876AA">$imageMargin</span><span style="color: #007700">); <br />    </span><span style="color: #9876AA">$canvasHeight </span><span style="color: #007700">= </span><span style="color: #9876AA">$height </span><span style="color: #007700">+ (</span><span style="color: #9876AA">2 </span><span style="color: #007700">* </span><span style="color: #9876AA">$imageMargin</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">$canvasWidth</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">$canvasHeight</span><span style="color: #007700">,<br />        </span><span style="color: #DD0000">'canvas:none'<br />    </span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">);<br /> <br />    </span><span style="color: #FF8000">// create drop shadow on it's own layer <br />    </span><span style="color: #9876AA">$canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clone</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageBackgroundColor</span><span style="color: #007700">(new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">'rgb(0, 0, 0)'</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">shadowImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">$shadowSigma</span><span style="color: #007700">, </span><span style="color: #9876AA">$shadowDropX</span><span style="color: #007700">, </span><span style="color: #9876AA">$shadowDropY</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImagePage</span><span style="color: #007700">(</span><span style="color: #9876AA">$canvasWidth</span><span style="color: #007700">, </span><span style="color: #9876AA">$canvasHeight</span><span style="color: #007700">, -</span><span style="color: #9876AA">5</span><span style="color: #007700">, -</span><span style="color: #9876AA">5</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">cropImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$canvasWidth</span><span style="color: #007700">, </span><span style="color: #9876AA">$canvasHeight</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    <br />    </span><span style="color: #FF8000">// composite original text_layer onto shadow_layer <br />    </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">compositeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernel</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COMPOSITE_OVER</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br /><br />    return </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">;<br />}<br /><br /><br />function </span><span style="color: #9876AA">createFromBuiltin</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernelType</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernelFirstTerm</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernelSecondTerm</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernelThirdTerm</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$string </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br /><br />    if (</span><span style="color: #9876AA">$kernelFirstTerm </span><span style="color: #007700">!= </span><span style="color: #9876AA">false </span><span style="color: #007700">&amp;&amp; </span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">trim</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernelFirstTerm</span><span style="color: #007700">)) != </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$string </span><span style="color: #007700">.= </span><span style="color: #9876AA">$kernelFirstTerm</span><span style="color: #007700">;<br /><br />        if (</span><span style="color: #9876AA">$kernelSecondTerm </span><span style="color: #007700">!= </span><span style="color: #9876AA">false </span><span style="color: #007700">&amp;&amp; </span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">trim</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernelSecondTerm</span><span style="color: #007700">)) != </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br />            </span><span style="color: #9876AA">$string </span><span style="color: #007700">.= </span><span style="color: #DD0000">','</span><span style="color: #007700">.</span><span style="color: #9876AA">$kernelSecondTerm</span><span style="color: #007700">;<br />            if (</span><span style="color: #9876AA">$kernelThirdTerm </span><span style="color: #007700">!= </span><span style="color: #9876AA">false </span><span style="color: #007700">&amp;&amp; </span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">trim</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernelThirdTerm</span><span style="color: #007700">)) != </span><span style="color: #9876AA">0</span><span style="color: #007700">) {<br />                </span><span style="color: #9876AA">$string </span><span style="color: #007700">.= </span><span style="color: #DD0000">','</span><span style="color: #007700">.</span><span style="color: #9876AA">$kernelThirdTerm</span><span style="color: #007700">;<br />            }<br />        }<br />    }<br /><br />    </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">$kernelType</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">$string<br />    </span><span style="color: #007700">);<br /><br />    return </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">;<br />}<br />    <br />function </span><span style="color: #9876AA">fromBuiltin</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernelType</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernelFirstTerm</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernelSecondTerm</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernelThirdTerm</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$diamondKernel </span><span style="color: #007700">= </span><span style="color: #9876AA">createFromBuiltin</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernelType</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernelFirstTerm</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernelSecondTerm</span><span style="color: #007700">, </span><span style="color: #9876AA">$kernelThirdTerm</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= </span><span style="color: #9876AA">renderKernel</span><span style="color: #007700">(</span><span style="color: #9876AA">$diamondKernel</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">fromBuiltin</span><span style="color: #007700">(</span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_DIAMOND</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">);<br /><br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return ImagickKernel*/
    public static function fromBuiltin($kernelType, $kernelString) {}

/**
*<div id="imagickkernel.frommatrix" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickKernel::fromMatrix</h1>  <p class="verinfo">(PECL imagick &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">ImagickKernel::fromMatrix</span> &mdash; <span class="dc-title">Create a kernel from a 2d matrix of values</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickkernel.frommatrix-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>ImagickKernel::fromMatrix</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$matrix</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$origin</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.imagickkernel.php" class="type ImagickKernel" style="color:#EAB766">ImagickKernel</a></span></div>  <p class="para rdfs-comment">   Create a kernel from an 2d matrix of values. Each value should either be a float   (if the element should be used) or &#039;false&#039; if the element should be skipped. For   matrices that are odd sizes in both dimensions the origin pixel will default   to the centre of the kernel. For all other kernel sizes the origin pixel must be specified.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickkernel.frommatrix-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">array</span></dt>    <dd>     <span>      A matrix (i.e. 2d array) of values that define the kernel. Each element should be either a float value, or FALSE if that element shouldn&#039;t be used by the kernel.     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">array</span></dt>    <dd>     <p class="para">      Which element of the kernel should be used as the origin pixel. e.g. For a 3x3 matrix specifying the origin as [2, 2] would specify that the bottom right element should be the origin pixel.     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickkernel.frommatrix-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The generated ImagickKernel.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickkernel.frommatrix-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">ImagickKernel::fromMatrix()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">function </span><span style="color: #9876AA">renderKernel</span><span style="color: #007700">(</span><span style="color: #9876AA">ImagickKernel $imagickKernel</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$matrix </span><span style="color: #007700">= </span><span style="color: #9876AA">$imagickKernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMatrix</span><span style="color: #007700">();<br />    <br />    </span><span style="color: #9876AA">$imageMargin </span><span style="color: #007700">= </span><span style="color: #9876AA">20</span><span style="color: #007700">;<br />    <br />    </span><span style="color: #9876AA">$tileSize </span><span style="color: #007700">= </span><span style="color: #9876AA">20</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$tileSpace </span><span style="color: #007700">= </span><span style="color: #9876AA">4</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$shadowSigma </span><span style="color: #007700">= </span><span style="color: #9876AA">4</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$shadowDropX </span><span style="color: #007700">= </span><span style="color: #9876AA">20</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$shadowDropY </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">;<br /><br />    </span><span style="color: #9876AA">$radius </span><span style="color: #007700">= (</span><span style="color: #9876AA">$tileSize </span><span style="color: #007700">/ </span><span style="color: #9876AA">2</span><span style="color: #007700">) * </span><span style="color: #9876AA">0.9</span><span style="color: #007700">;<br />    <br />    </span><span style="color: #9876AA">$rows </span><span style="color: #007700">= </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$columns </span><span style="color: #007700">= </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br /> <br />    </span><span style="color: #9876AA">$imagickDraw </span><span style="color: #007700">= new </span><span style="color: #9876AA">\ImagickDraw</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'#afafaf'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'none'</span><span style="color: #007700">);<br />    <br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">translate</span><span style="color: #007700">(</span><span style="color: #9876AA">$imageMargin</span><span style="color: #007700">, </span><span style="color: #9876AA">$imageMargin</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">push</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">ksort</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix</span><span style="color: #007700">);<br />    <br />    foreach (</span><span style="color: #9876AA">$matrix </span><span style="color: #007700">as </span><span style="color: #9876AA">$row</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">ksort</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">push</span><span style="color: #007700">();<br />        foreach (</span><span style="color: #9876AA">$row </span><span style="color: #007700">as </span><span style="color: #9876AA">$cell</span><span style="color: #007700">) {<br />            if (</span><span style="color: #9876AA">$cell </span><span style="color: #007700">!== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br />                </span><span style="color: #9876AA">$color </span><span style="color: #007700">= </span><span style="color: #9876AA">intval</span><span style="color: #007700">(</span><span style="color: #9876AA">255 </span><span style="color: #007700">* </span><span style="color: #9876AA">$cell</span><span style="color: #007700">);<br />                </span><span style="color: #9876AA">$colorString </span><span style="color: #007700">= </span><span style="color: #9876AA">sprintf</span><span style="color: #007700">(</span><span style="color: #DD0000">"rgb(%f, %f, %f)"</span><span style="color: #007700">, </span><span style="color: #9876AA">$color</span><span style="color: #007700">, </span><span style="color: #9876AA">$color</span><span style="color: #007700">, </span><span style="color: #9876AA">$color</span><span style="color: #007700">);<br />                </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #9876AA">$colorString</span><span style="color: #007700">);<br />                </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">rectangle</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">$tileSize</span><span style="color: #007700">, </span><span style="color: #9876AA">$tileSize</span><span style="color: #007700">);<br />            }<br />            </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">translate</span><span style="color: #007700">((</span><span style="color: #9876AA">$tileSize </span><span style="color: #007700">+ </span><span style="color: #9876AA">$tileSpace</span><span style="color: #007700">), </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />        }<br />        </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pop</span><span style="color: #007700">();<br />        </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">translate</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, (</span><span style="color: #9876AA">$tileSize </span><span style="color: #007700">+ </span><span style="color: #9876AA">$tileSpace</span><span style="color: #007700">));<br />    }<br /><br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pop</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$width </span><span style="color: #007700">= (</span><span style="color: #9876AA">$columns </span><span style="color: #007700">* </span><span style="color: #9876AA">$tileSize</span><span style="color: #007700">) + ((</span><span style="color: #9876AA">$columns </span><span style="color: #007700">- </span><span style="color: #9876AA">1</span><span style="color: #007700">) * </span><span style="color: #9876AA">$tileSpace</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$height </span><span style="color: #007700">= (</span><span style="color: #9876AA">$rows </span><span style="color: #007700">* </span><span style="color: #9876AA">$tileSize</span><span style="color: #007700">) + ((</span><span style="color: #9876AA">$rows </span><span style="color: #007700">- </span><span style="color: #9876AA">1</span><span style="color: #007700">) * </span><span style="color: #9876AA">$tileSpace</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">push</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">translate</span><span style="color: #007700">(</span><span style="color: #9876AA">$width</span><span style="color: #007700">/</span><span style="color: #9876AA">2 </span><span style="color: #007700">, </span><span style="color: #9876AA">$height</span><span style="color: #007700">/</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setFillColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'rgba(0, 0, 0, 0)'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'white'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">circle</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">$radius </span><span style="color: #007700">- </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setStrokeColor</span><span style="color: #007700">(</span><span style="color: #DD0000">'black'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">circle</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">$radius</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">pop</span><span style="color: #007700">();<br /><br />    </span><span style="color: #9876AA">$canvasWidth </span><span style="color: #007700">= </span><span style="color: #9876AA">$width </span><span style="color: #007700">+ (</span><span style="color: #9876AA">2 </span><span style="color: #007700">* </span><span style="color: #9876AA">$imageMargin</span><span style="color: #007700">); <br />    </span><span style="color: #9876AA">$canvasHeight </span><span style="color: #007700">= </span><span style="color: #9876AA">$height </span><span style="color: #007700">+ (</span><span style="color: #9876AA">2 </span><span style="color: #007700">* </span><span style="color: #9876AA">$imageMargin</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= new </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">newPseudoImage</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">$canvasWidth</span><span style="color: #007700">,<br />        </span><span style="color: #9876AA">$canvasHeight</span><span style="color: #007700">,<br />        </span><span style="color: #DD0000">'canvas:none'<br />    </span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">drawImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$imagickDraw</span><span style="color: #007700">);<br /> <br />    </span><span style="color: #FF8000">// create drop shadow on it's own layer <br />    </span><span style="color: #9876AA">$canvas </span><span style="color: #007700">= </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">clone</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageBackgroundColor</span><span style="color: #007700">(new </span><span style="color: #9876AA">\ImagickPixel</span><span style="color: #007700">(</span><span style="color: #DD0000">'rgb(0, 0, 0)'</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">shadowImage</span><span style="color: #007700">(</span><span style="color: #9876AA">100</span><span style="color: #007700">, </span><span style="color: #9876AA">$shadowSigma</span><span style="color: #007700">, </span><span style="color: #9876AA">$shadowDropX</span><span style="color: #007700">, </span><span style="color: #9876AA">$shadowDropY</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImagePage</span><span style="color: #007700">(</span><span style="color: #9876AA">$canvasWidth</span><span style="color: #007700">, </span><span style="color: #9876AA">$canvasHeight</span><span style="color: #007700">, -</span><span style="color: #9876AA">5</span><span style="color: #007700">, -</span><span style="color: #9876AA">5</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">cropImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$canvasWidth</span><span style="color: #007700">, </span><span style="color: #9876AA">$canvasHeight</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    <br />    </span><span style="color: #FF8000">// composite original text_layer onto shadow_layer <br />    </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">compositeImage</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernel</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">COMPOSITE_OVER</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setImageFormat</span><span style="color: #007700">(</span><span style="color: #DD0000">'png'</span><span style="color: #007700">);<br /><br />    return </span><span style="color: #9876AA">$canvas</span><span style="color: #007700">;<br />}<br /><br />function </span><span style="color: #9876AA">createFromMatrix</span><span style="color: #007700">() {<br />    </span><span style="color: #9876AA">$matrix </span><span style="color: #007700">= [<br />        [</span><span style="color: #9876AA">0.5</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0.2</span><span style="color: #007700">],<br />        [</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">],<br />        [</span><span style="color: #9876AA">0.9</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">],<br />    ];<br /><br />    </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromMatrix</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix</span><span style="color: #007700">);<br /><br />    return </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">;<br />}<br />    <br />function </span><span style="color: #9876AA">fromMatrix</span><span style="color: #007700">() {<br />    </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">createFromMatrix</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$imagick </span><span style="color: #007700">= </span><span style="color: #9876AA">renderKernel</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernel</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: image/png"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$imagick</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getImageBlob</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return ImagickKernel*/
    public static function fromMatrix($matrix, $origin) {}

/**
*<div id="imagickkernel.getmatrix" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickKernel::getMatrix</h1>  <p class="verinfo">(PECL imagick &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">ImagickKernel::getMatrix</span> &mdash; <span class="dc-title">Get the 2d matrix of values used in this kernel</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickkernel.getmatrix-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickKernel::getMatrix</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Get the 2d matrix of values used in this kernel. The elements are either   float for elements that are used or &#039;false&#039; if the element should be skipped.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickkernel.getmatrix-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickkernel.getmatrix-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A matrix (2d array) of the values that represent the kernel.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickkernel.getmatrix-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">ImagickKernel::getMatrix()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /><br /></span><span style="color: #007700">function </span><span style="color: #9876AA">renderKernelTable</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">= </span><span style="color: #DD0000">"&lt;table class='infoTable'&gt;"</span><span style="color: #007700">;<br /><br />    foreach (</span><span style="color: #9876AA">$matrix </span><span style="color: #007700">as </span><span style="color: #9876AA">$row</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;tr&gt;"</span><span style="color: #007700">;<br />        foreach (</span><span style="color: #9876AA">$row </span><span style="color: #007700">as </span><span style="color: #9876AA">$cell</span><span style="color: #007700">) {<br />            </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;td style='text-align:left'&gt;"</span><span style="color: #007700">;<br />            if (</span><span style="color: #9876AA">$cell </span><span style="color: #007700">=== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br />                </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"false"</span><span style="color: #007700">;<br />            }<br />            else {<br />                </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">$cell</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">);<br />            }<br />            </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;/td&gt;"</span><span style="color: #007700">;<br />        }<br />        </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;/tr&gt;"</span><span style="color: #007700">;<br />    }<br /><br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;/table&gt;"</span><span style="color: #007700">;<br /><br />    return </span><span style="color: #9876AA">$output</span><span style="color: #007700">;<br />}<br /><br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">= </span><span style="color: #DD0000">"The built-in kernel name 'ring' with parameters of '2,3.5':&lt;br/&gt;"</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromBuiltIn</span><span style="color: #007700">(<br />        </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">KERNEL_RING</span><span style="color: #007700">,<br />        </span><span style="color: #DD0000">"2,3.5"<br />    </span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$matrix </span><span style="color: #007700">= </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMatrix</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #9876AA">renderKernelTable</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix</span><span style="color: #007700">);<br /><br />    echo </span><span style="color: #9876AA">$output</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return array A matrix (2d array) of the values that represent the kernel.*/
    public function getMatrix() {}

/**
*<div id="imagickkernel.scale" class="refentry"> <div class="refnamediv">  <h1 class="refname">ImagickKernel::scale</h1>  <p class="verinfo">(PECL imagick &gt;= 3.3.0)</p><p class="refpurpose"><span class="refname">ImagickKernel::scale</span> &mdash; <span class="dc-title">Scales a kernel list by the given amount</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-imagickkernel.scale-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>ImagickKernel::scale</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$scale</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$normalizeFlag</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   Scales the given kernel list by the given amount, with or without   normalization of the sum of the kernel values (as per given flags).   The exact behaviour of this function depends on the normalization type being used   please see http://www.imagemagick.org/api/morphology.php#ScaleKernelInfo for details.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-imagickkernel.scale-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">scale</span></dt>     <dd>      <p class="para">      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">normalizeFlag</span></dt>     <dd>      <p class="para">       <ul class="simplelist">        <li class="member">Imagick::NORMALIZE_KERNEL_NONE</li>        <li class="member">Imagick::NORMALIZE_KERNEL_VALUE</li>        <li class="member">Imagick::NORMALIZE_KERNEL_CORRELATE</li>        <li class="member">Imagick::NORMALIZE_KERNEL_PERCENT</li>       </ul>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-imagickkernel.scale-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">     </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-imagickkernel.scale-examples">  <h3 class="title">示例</h3>  <span>    <div class="example" id="">      <p><strong>示例 #1  <span class="function"><strong style="color:#CC7832">ImagickKernel::scale()</strong></span></strong></p>      <div class="example-contents">      <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /><br />    </span><span style="color: #007700">function </span><span style="color: #9876AA">renderKernelTable</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$output </span><span style="color: #007700">= </span><span style="color: #DD0000">"&lt;table class='infoTable'&gt;"</span><span style="color: #007700">;<br />    <br />        foreach (</span><span style="color: #9876AA">$matrix </span><span style="color: #007700">as </span><span style="color: #9876AA">$row</span><span style="color: #007700">) {<br />            </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;tr&gt;"</span><span style="color: #007700">;<br />            foreach (</span><span style="color: #9876AA">$row </span><span style="color: #007700">as </span><span style="color: #9876AA">$cell</span><span style="color: #007700">) {<br />                </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;td style='text-align:left'&gt;"</span><span style="color: #007700">;<br />                if (</span><span style="color: #9876AA">$cell </span><span style="color: #007700">=== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br />                    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"false"</span><span style="color: #007700">;<br />                }<br />                else {<br />                    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #9876AA">round</span><span style="color: #007700">(</span><span style="color: #9876AA">$cell</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">);<br />                }<br />                </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;/td&gt;"</span><span style="color: #007700">;<br />            }<br />            </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;/tr&gt;"</span><span style="color: #007700">;<br />        }<br />    <br />        </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"&lt;/table&gt;"</span><span style="color: #007700">;<br />    <br />        return </span><span style="color: #9876AA">$output</span><span style="color: #007700">;<br />    }<br /><br /><br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">= </span><span style="color: #DD0000">""</span><span style="color: #007700">;<br />    <br />    </span><span style="color: #9876AA">$matrix </span><span style="color: #007700">= [<br />        [-</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, -</span><span style="color: #9876AA">1</span><span style="color: #007700">],<br />        [ </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">4</span><span style="color: #007700">,  </span><span style="color: #9876AA">0</span><span style="color: #007700">],<br />        [-</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, -</span><span style="color: #9876AA">1</span><span style="color: #007700">],<br />    ];<br /><br />    </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromMatrix</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$kernelClone </span><span style="color: #007700">= clone </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">;<br /><br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"Start kernel&lt;br/&gt;"</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #9876AA">renderKernelTable</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMatrix</span><span style="color: #007700">());<br />    <br />    <br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"Scaling with NORMALIZE_KERNEL_VALUE. The  &lt;br/&gt;"</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">scale</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">NORMALIZE_KERNEL_VALUE</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #9876AA">renderKernelTable</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMatrix</span><span style="color: #007700">());<br /><br /><br />    </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= clone </span><span style="color: #9876AA">$kernelClone</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"Scaling by percent&lt;br/&gt;"</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">scale</span><span style="color: #007700">(</span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">NORMALIZE_KERNEL_PERCENT</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #9876AA">renderKernelTable</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMatrix</span><span style="color: #007700">());<br />    <br />    </span><span style="color: #9876AA">$matrix2 </span><span style="color: #007700">= [<br />        [-</span><span style="color: #9876AA">1</span><span style="color: #007700">, -</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">],<br />        [ -</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">,  </span><span style="color: #9876AA">1</span><span style="color: #007700">],<br />        [</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">],<br />    ];<br />    <br />    </span><span style="color: #9876AA">$kernel </span><span style="color: #007700">= </span><span style="color: #9876AA">\ImagickKernel</span><span style="color: #007700">::</span><span style="color: #9876AA">fromMatrix</span><span style="color: #007700">(</span><span style="color: #9876AA">$matrix2</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #DD0000">"Scaling by correlate&lt;br/&gt;"</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">scale</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">\Imagick</span><span style="color: #007700">::</span><span style="color: #9876AA">NORMALIZE_KERNEL_CORRELATE</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$output </span><span style="color: #007700">.= </span><span style="color: #9876AA">renderKernelTable</span><span style="color: #007700">(</span><span style="color: #9876AA">$kernel</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getMatrix</span><span style="color: #007700">());<br /><br />    return </span><span style="color: #9876AA">$output</span><span style="color: #007700">; <br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>      </div>    </div>  </span> </div></div>
     * @return void*/
    public function scale() {}

    /**
     * Separates a linked set of kernels and returns an array of ImagickKernels.
     * @link https://php.net/manual/en/imagickkernel.separate.php
     * @return void
     * @throws ImagickKernelException on error
     * @since 3.3.0
     */
    public function seperate() {}
}
