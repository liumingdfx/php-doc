<?php

// Start of xmlrpc v.0.51

/**
*<div id="function.xmlrpc-encode" class="refentry"> <div class="refnamediv">  <h1 class="refname">xmlrpc_encode</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">xmlrpc_encode</span> &mdash; <span class="dc-title">为 PHP 值生成 XML</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xmlrpc-encode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xmlrpc_encode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数是<em>实验性</em>的。此函数的表象，包括名称及其相关文档都可能在未来的PHP 发布版本中未通知就被修改。使用本函数风险自担。</p></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div></div>
 * @return string*/
function xmlrpc_encode($value) {}

/**
*<div id="function.xmlrpc-decode" class="refentry"> <div class="refnamediv">  <h1 class="refname">xmlrpc_decode</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">xmlrpc_decode</span> &mdash; <span class="dc-title">将 XML 解码为原生 PHP 类型</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xmlrpc-decode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xmlrpc_decode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$xml</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = &quot;iso-8859-1&quot;</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数是<em>实验性</em>的。此函数的表象，包括名称及其相关文档都可能在未来的PHP 发布版本中未通知就被修改。使用本函数风险自担。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xmlrpc-decode-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">xml</span></dt>     <dd>      <p class="para">       XMLRPC 方法返回的 XML 响应。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para">       iconv 支持的输入编码。      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xmlrpc-decode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   根据 XMLRPC 方法的响应返回数组、整数、字符串或布尔值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.xmlrpc-decode-examples">  <h3 class="title">示例</h3>  <span>   参阅 <span class="function">{@link xmlrpc_encode_request()}</span> 示例。  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.xmlrpc-decode-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link xmlrpc_encode_request()} - 为方法请求生成 XML</span></li>    <li class="member"><span class="function">{@link xmlrpc_is_fault()} - Determines if an array value represents an XMLRPC fault</span></li>   </ul>  </span> </div></div>
 * @return mixed either an array, or an integer, or a string, or a boolean according*/
function xmlrpc_decode($xml, $encoding = "iso-8859-1") {}

/**
*<div id="function.xmlrpc-decode-request" class="refentry"> <div class="refnamediv">  <h1 class="refname">xmlrpc_decode_request</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">xmlrpc_decode_request</span> &mdash; <span class="dc-title">将 XML 解码为原生 PHP 类型</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xmlrpc-decode-request-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xmlrpc_decode_request</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$xml</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">&$method</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数是<em>实验性</em>的。此函数的表象，包括名称及其相关文档都可能在未来的PHP 发布版本中未通知就被修改。使用本函数风险自担。</p></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div></div>
 * @return mixed*/
function xmlrpc_decode_request($xml, &$method, $encoding = null) {}

/**
*<div id="function.xmlrpc-encode-request" class="refentry"> <div class="refnamediv">  <h1 class="refname">xmlrpc_encode_request</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">xmlrpc_encode_request</span> &mdash; <span class="dc-title">为方法请求生成 XML</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xmlrpc-encode-request-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xmlrpc_encode_request</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$method</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$params</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$output_options</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数是<em>实验性</em>的。此函数的表象，包括名称及其相关文档都可能在未来的PHP 发布版本中未通知就被修改。使用本函数风险自担。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xmlrpc-encode-request-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">method</span></dt>     <dd>      <p class="para">       要调用的方法名。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">params</span></dt>     <dd>      <p class="para">       与方法签名兼容的方法参数。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">output_options</span></dt>     <dd>      <p class="para">       指定输出选项的数组可能包含（强调默认值）：       <ul class="itemizedlist">        <li class="listitem"><p class="para">output_type: php, <em>xml</em></p></li>        <li class="listitem"><p class="para">verbosity: no_white_space, newlines_only, <em>pretty</em></p></li>        <li class="listitem"><p class="para">escaping: cdata, <em>non-ascii, non-print, markup</em>          (may be a string with one value or an array with multiple values)</p></li>        <li class="listitem"><p class="para">version: simple, <em>xmlrpc</em>, soap 1.1, auto</p></li>        <li class="listitem"><p class="para">encoding: <em>iso-8859-1</em>, other character set supported by iconv</p></li>       </ul>      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xmlrpc-encode-request-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回包含请求的 XML 表示形式的字符串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.xmlrpc-encode-request-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 XMLRPC 客户端函数示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$request </span><span style="color: #007700">= </span><span style="color: #9876AA">xmlrpc_encode_request</span><span style="color: #007700">(</span><span style="color: #DD0000">"method"</span><span style="color: #007700">, array(</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">$context </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_context_create</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'http' </span><span style="color: #007700">=&gt; array(<br />    </span><span style="color: #DD0000">'method' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"POST"</span><span style="color: #007700">,<br />    </span><span style="color: #DD0000">'header' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">"Content-Type: text/xml"</span><span style="color: #007700">,<br />    </span><span style="color: #DD0000">'content' </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">$request<br /></span><span style="color: #007700">)));<br /></span><span style="color: #9876AA">$file </span><span style="color: #007700">= </span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://www.example.com/xmlrpc"</span><span style="color: #007700">, </span><span style="color: #9876AA">false</span><span style="color: #007700">, </span><span style="color: #9876AA">$context</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$response </span><span style="color: #007700">= </span><span style="color: #9876AA">xmlrpc_decode</span><span style="color: #007700">(</span><span style="color: #9876AA">$file</span><span style="color: #007700">);<br />if (</span><span style="color: #9876AA">$response </span><span style="color: #007700">&amp;&amp; </span><span style="color: #9876AA">xmlrpc_is_fault</span><span style="color: #007700">(</span><span style="color: #9876AA">$response</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">trigger_error</span><span style="color: #007700">(</span><span style="color: #DD0000">"xmlrpc: </span><span style="color: #9876AA">$response</span><span style="color: #007700">[</span><span style="color: #9876AA">faultString</span><span style="color: #007700">]</span><span style="color: #DD0000"> (</span><span style="color: #9876AA">$response</span><span style="color: #007700">[</span><span style="color: #9876AA">faultCode</span><span style="color: #007700">]</span><span style="color: #DD0000">)"</span><span style="color: #007700">);<br />} else {<br />    </span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$response</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.xmlrpc-encode-request-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link stream_context_create()} - 创建资源流上下文</span></li>    <li class="member"><span class="function">{@link file_get_contents()} - 将整个文件读入一个字符串</span></li>    <li class="member"><span class="function">{@link xmlrpc_decode()} - 将 XML 解码为原生 PHP 类型</span></li>   </ul>  </span> </div></div>
 * @return string a string containing the XML representation of the request.*/
function xmlrpc_encode_request($method, $params, ?array $output_options = null) {}

/**
*<div id="function.xmlrpc-get-type" class="refentry"> <div class="refnamediv">  <h1 class="refname">xmlrpc_get_type</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">xmlrpc_get_type</span> &mdash; <span class="dc-title">获取 PHP 值的 xmlrpc 类型</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xmlrpc-get-type-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xmlrpc_get_type</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数是<em>实验性</em>的。此函数的表象，包括名称及其相关文档都可能在未来的PHP 发布版本中未通知就被修改。使用本函数风险自担。</p></div>  <p class="para">   该函数对于 base64 与日期时间字符串特别有用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xmlrpc-get-type-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       PHP 值      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xmlrpc-get-type-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 XML-RPC 类型。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.xmlrpc-get-type-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 XML-RPC 类型示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">xmlrpc_get_type</span><span style="color: #007700">(</span><span style="color: #9876AA">null</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">; </span><span style="color: #FF8000">// base64<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">xmlrpc_get_type</span><span style="color: #007700">(</span><span style="color: #9876AA">false</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">; </span><span style="color: #FF8000">// boolean<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">xmlrpc_get_type</span><span style="color: #007700">(</span><span style="color: #9876AA">1</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">; </span><span style="color: #FF8000">// int<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">xmlrpc_get_type</span><span style="color: #007700">(</span><span style="color: #9876AA">1.0</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">; </span><span style="color: #FF8000">// double<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">xmlrpc_get_type</span><span style="color: #007700">(</span><span style="color: #DD0000">""</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">; </span><span style="color: #FF8000">// string<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">xmlrpc_get_type</span><span style="color: #007700">(array()) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">; </span><span style="color: #FF8000">// array<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">xmlrpc_get_type</span><span style="color: #007700">(new </span><span style="color: #9876AA">stdClass</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">; </span><span style="color: #FF8000">// array<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">xmlrpc_get_type</span><span style="color: #007700">(</span><span style="color: #9876AA">STDIN</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">; </span><span style="color: #FF8000">// int<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.xmlrpc-get-type-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link xmlrpc_set_type()} - 为 PHP 字符串值设置 xmlrpc 类型，base64 或 datetime</span></li>   </ul>  </span> </div></div>
 * @return string the XML-RPC type.*/
function xmlrpc_get_type($value) {}

/**
*<div id="function.xmlrpc-set-type" class="refentry"> <div class="refnamediv">  <h1 class="refname">xmlrpc_set_type</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">xmlrpc_set_type</span> &mdash; <span class="dc-title">为 PHP 字符串值设置 xmlrpc 类型，base64 或 datetime</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xmlrpc-set-type-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xmlrpc_set_type</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">&$value</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$type</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   为 PHP 字符串值设置 xmlrpc 类型，base64 或 datetime。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数是<em>实验性</em>的。此函数的表象，包括名称及其相关文档都可能在未来的PHP 发布版本中未通知就被修改。使用本函数风险自担。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xmlrpc-set-type-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       设置类型的值      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">type</span></dt>     <dd>      <p class="para">       &#039;base64&#039; 或 &#039;datetime&#039;      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xmlrpc-set-type-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。   如果成功，<span class="parameter" style="color:#3A95FF">value</span> 将转换为对象。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.xmlrpc-set-type-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   使用 XMLRPC 不支持的类型会发出 E_WARNING。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.xmlrpc-set-type-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">xmlrpc_set_type()</strong></span> 示例</strong></p>    <div class="example-contents"><p>    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$params </span><span style="color: #007700">= </span><span style="color: #9876AA">date</span><span style="color: #007700">(</span><span style="color: #DD0000">"Ymd\TH:i:s"</span><span style="color: #007700">, </span><span style="color: #9876AA">time</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">xmlrpc_set_type</span><span style="color: #007700">(</span><span style="color: #9876AA">$params</span><span style="color: #007700">, </span><span style="color: #DD0000">'datetime'</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">xmlrpc_encode</span><span style="color: #007700">(</span><span style="color: #9876AA">$params</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;params&gt;<br>&lt;param&gt;<br> &lt;value&gt;<br>  &lt;dateTime.iso8601&gt;20090322T23:43:03&lt;/dateTime.iso8601&gt;<br> &lt;/value&gt;<br>&lt;/param&gt;<br>&lt;/params&gt;<br></span></div>    </div>   </div>  </span> </div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function xmlrpc_set_type(&$value, $type) {}

/**
*<div id="function.xmlrpc-is-fault" class="refentry"> <div class="refnamediv">  <h1 class="refname">xmlrpc_is_fault</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">xmlrpc_is_fault</span> &mdash; <span class="dc-title">Determines if an array value represents an XMLRPC fault</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xmlrpc-is-fault-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xmlrpc_is_fault</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$arg</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数是<em>实验性</em>的。此函数的表象，包括名称及其相关文档都可能在未来的PHP 发布版本中未通知就被修改。使用本函数风险自担。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xmlrpc-is-fault-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">arg</span></dt>     <dd>      <p class="para">       Array returned by <span class="function">{@link xmlrpc_decode()}</span>.      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xmlrpc-is-fault-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> if the argument means fault, <strong><span>false</span></strong> otherwise. Fault   description is available in <span>$arg[&quot;faultString&quot;]</span>, fault   code is in <span>$arg[&quot;faultCode&quot;]</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.xmlrpc-is-fault-examples">  <h3 class="title">示例</h3>  <span>   See example by <span class="function">{@link xmlrpc_encode_request()}</span>.  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.xmlrpc-is-fault-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link xmlrpc_decode()} - 将 XML 解码为原生 PHP 类型</span></li>   </ul>  </span> </div></div>
 * @return bool <b>TRUE</b> if the argument means fault, <b>FALSE</b> otherwise. Fault*/
function xmlrpc_is_fault(array $arg) {}

/**
*<div id="function.xmlrpc-server-create" class="refentry"> <div class="refnamediv">  <h1 class="refname">xmlrpc_server_create</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">xmlrpc_server_create</span> &mdash; <span class="dc-title">创建 xmlrpc 服务器</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xmlrpc-server-create-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xmlrpc_server_create</strong></span>(): <span class="type" style="color:#EAB766">resource</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数是<em>实验性</em>的。此函数的表象，包括名称及其相关文档都可能在未来的PHP 发布版本中未通知就被修改。使用本函数风险自担。</p></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div></div>
 * @return resource*/
function xmlrpc_server_create() {}

/**
*<div id="function.xmlrpc-server-destroy" class="refentry"> <div class="refnamediv">  <h1 class="refname">xmlrpc_server_destroy</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">xmlrpc_server_destroy</span> &mdash; <span class="dc-title">销毁服务端资源</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xmlrpc-server-destroy-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xmlrpc_server_destroy</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$server</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数是<em>实验性</em>的。此函数的表象，包括名称及其相关文档都可能在未来的PHP 发布版本中未通知就被修改。使用本函数风险自担。</p></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div></div>
 * @return int*/
function xmlrpc_server_destroy($server) {}

/**
*<div id="function.xmlrpc-server-register-method" class="refentry"> <div class="refnamediv">  <h1 class="refname">xmlrpc_server_register_method</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">xmlrpc_server_register_method</span> &mdash; <span class="dc-title">注册 PHP 函数搭到资源用于匹配 method_name</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xmlrpc-server-register-method-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xmlrpc_server_register_method</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$server</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$method_name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$function</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数是<em>实验性</em>的。此函数的表象，包括名称及其相关文档都可能在未来的PHP 发布版本中未通知就被修改。使用本函数风险自担。</p></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div></div>
 * @return bool*/
function xmlrpc_server_register_method($server, $method_name, $function) {}

/**
*<div id="function.xmlrpc-server-call-method" class="refentry"> <div class="refnamediv">  <h1 class="refname">xmlrpc_server_call_method</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">xmlrpc_server_call_method</span> &mdash; <span class="dc-title">解析 XML 请求和调用方法</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xmlrpc-server-call-method-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xmlrpc_server_call_method</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$server</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$xml</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$user_data</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$output_options</span><span class="initializer"> = ?</span></span><br>): <span class="type" style="color:#EAB766">string</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数是<em>实验性</em>的。此函数的表象，包括名称及其相关文档都可能在未来的PHP 发布版本中未通知就被修改。使用本函数风险自担。</p></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div></div>
 * @return string*/
function xmlrpc_server_call_method($server, $xml, $user_data, ?array $output_options = null) {}

/**
*<div id="function.xmlrpc-parse-method-descriptions" class="refentry"> <div class="refnamediv">  <h1 class="refname">xmlrpc_parse_method_descriptions</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">xmlrpc_parse_method_descriptions</span> &mdash; <span class="dc-title">将 XML 解码为方法描述列表</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xmlrpc-parse-method-descriptions-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xmlrpc_parse_method_descriptions</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$xml</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数是<em>实验性</em>的。此函数的表象，包括名称及其相关文档都可能在未来的PHP 发布版本中未通知就被修改。使用本函数风险自担。</p></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div></div>
 * @return array*/
function xmlrpc_parse_method_descriptions($xml) {}

/**
*<div id="function.xmlrpc-server-add-introspection-data" class="refentry"> <div class="refnamediv">  <h1 class="refname">xmlrpc_server_add_introspection_data</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">xmlrpc_server_add_introspection_data</span> &mdash; <span class="dc-title">添加自我描述文档</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xmlrpc-server-add-introspection-data-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xmlrpc_server_add_introspection_data</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$server</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$desc</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数是<em>实验性</em>的。此函数的表象，包括名称及其相关文档都可能在未来的PHP 发布版本中未通知就被修改。使用本函数风险自担。</p></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div></div>
 * @return int*/
function xmlrpc_server_add_introspection_data($server, array $desc) {}

/**
*<div id="function.xmlrpc-server-register-introspection-callback" class="refentry"> <div class="refnamediv">  <h1 class="refname">xmlrpc_server_register_introspection_callback</h1>  <p class="verinfo">(PHP 4 &gt;= 4.1.0, PHP 5, PHP 7)</p><p class="refpurpose"><span class="refname">xmlrpc_server_register_introspection_callback</span> &mdash; <span class="dc-title">注册 PHP 函数来生成文档</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xmlrpc-server-register-introspection-callback-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xmlrpc_server_register_introspection_callback</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$server</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$function</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">此函数是<em>实验性</em>的。此函数的表象，包括名称及其相关文档都可能在未来的PHP 发布版本中未通知就被修改。使用本函数风险自担。</p></div>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div></div>
 * @return bool*/
function xmlrpc_server_register_introspection_callback($server, $function) {}

// End of xmlrpc v.0.51
