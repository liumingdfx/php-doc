<?php

// Start of mbstring v.

use JetBrains\PhpStorm\ArrayShape;
use JetBrains\PhpStorm\Deprecated;
use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
use JetBrains\PhpStorm\Internal\PhpStormStubsElementAvailable;
use JetBrains\PhpStorm\Pure;

/**
*<div id="function.mb-convert-case" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_convert_case</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_convert_case</span> &mdash; <span class="dc-title">对字符串进行大小写转换</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-convert-case-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_convert_case</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$mode</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   对一个 <span class="type" style="color:#EAB766">string</span> 进行大小写转换，转换模式由 <span class="parameter" style="color:#3A95FF">mode</span> 指定。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-convert-case-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       要被转换的 <span class="type" style="color:#EAB766">string</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">mode</span></dt>     <dd>      <p class="para">       转换的模式。它可以是       <strong><span>MB_CASE_UPPER</span></strong>、<strong><span>MB_CASE_LOWER</span></strong>、<strong><span>MB_CASE_TITLE</span></strong>、<strong><span>MB_CASE_FOLD</span></strong>、<strong><span>MB_CASE_UPPER_SIMPLE</span></strong>、<strong><span>MB_CASE_LOWER_SIMPLE</span></strong>、<strong><span>MB_CASE_TITLE_SIMPLE</span></strong>、<strong><span>MB_CASE_FOLD_SIMPLE</span></strong>       的其中一个。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-convert-case-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   按 <span class="parameter" style="color:#3A95FF">mode</span> 指定的模式转换 <span class="parameter" style="color:#3A95FF">string</span> 大小写后的版本。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-convert-case-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>7.3.0</td>       <td>        添加对 <strong><span>MB_CASE_FOLD</span></strong>、<strong><span>MB_CASE_UPPER_SIMPLE</span></strong>、<strong><span>MB_CASE_LOWER_SIMPLE</span></strong>、<strong><span>MB_CASE_TITLE_SIMPLE</span></strong> 和        <strong><span>MB_CASE_FOLD_SIMPLE</span></strong> 作为 <span class="parameter" style="color:#3A95FF">mode</span> 的支持。       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-convert-case-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_convert_case()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$str </span><span style="color: #007700">= </span><span style="color: #DD0000">"mary had a Little lamb and she loved it so"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$str </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_convert_case</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #9876AA">MB_CASE_UPPER</span><span style="color: #007700">, </span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$str</span><span style="color: #007700">; </span><span style="color: #FF8000">// 输出 MARY HAD A LITTLE LAMB AND SHE LOVED IT SO<br /></span><span style="color: #9876AA">$str </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_convert_case</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #9876AA">MB_CASE_TITLE</span><span style="color: #007700">, </span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$str</span><span style="color: #007700">; </span><span style="color: #FF8000">// 输出 Mary Had A Little Lamb And She Loved It So<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 非拉丁 UTF-8 文本的 <span class="function"><strong style="color:#CC7832">mb_convert_case()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$str </span><span style="color: #007700">= </span><span style="color: #DD0000">"Τάχιστη αλώπηξ βαφής ψημένη γη, δρασκελίζει υπέρ νωθρού κυνός"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$str </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_convert_case</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #9876AA">MB_CASE_UPPER</span><span style="color: #007700">, </span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$str</span><span style="color: #007700">; </span><span style="color: #FF8000">// 输出 ΤΆΧΙΣΤΗ ΑΛΏΠΗΞ ΒΑΦΉΣ ΨΗΜΈΝΗ ΓΗ, ΔΡΑΣΚΕΛΊΖΕΙ ΥΠΈΡ ΝΩΘΡΟΎ ΚΥΝΌΣ<br /></span><span style="color: #9876AA">$str </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_convert_case</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #9876AA">MB_CASE_TITLE</span><span style="color: #007700">, </span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$str</span><span style="color: #007700">; </span><span style="color: #FF8000">// 输出 Τάχιστη Αλώπηξ Βαφήσ Ψημένη Γη, Δρασκελίζει Υπέρ Νωθρού Κυνόσ<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-convert-case-notes">  <h3 class="title">注释</h3>  <p class="para">   和类似 <span class="function">{@link strtolower()}</span>、<span class="function">{@link strtoupper()}</span> 的标准大小写转换函数相比，大小写转换的执行根据   Unicode 字符属性的基础。因此函数的行为不受语言环境（locale）设置的影响，能够转换任意具有“字母”属性的字符，例如元音变音A（Ä）。  </p>  <p class="para">   更多关于 Unicode 属性的信息，请查看 <a href="http://www.unicode.org/reports/tr21/" class="link external">&raquo;&nbsp;http://www.unicode.org/reports/tr21/</a>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-convert-case-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_strtolower()} - 使字符串小写</span></li>    <li class="member"><span class="function">{@link mb_strtoupper()} - 使字符串大写</span></li>    <li class="member"><span class="function">{@link strtolower()} - 将字符串转化为小写</span></li>    <li class="member"><span class="function">{@link strtoupper()} - 将字符串转化为大写</span></li>    <li class="member"><span class="function">{@link ucfirst()} - 将字符串的首字母转换为大写</span></li>    <li class="member"><span class="function">{@link ucwords()} - 将字符串中每个单词的首字母转换为大写</span></li>   </ul>  </span> </div></div>
 * @return string A case folded version of string converted in the*/
function mb_convert_case(string $string, int $mode, ?string $encoding): string {}

/**
*<div id="function.mb-strtoupper" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_strtoupper</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_strtoupper</span> &mdash; <span class="dc-title">使字符串大写</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-strtoupper-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_strtoupper</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">    将所有的字母字符转化成大写并返回 <span class="parameter" style="color:#3A95FF">string</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-strtoupper-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       要大写的 <span class="type" style="color:#EAB766">string</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-strtoupper-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="parameter" style="color:#3A95FF">string</span> 里所有的字母都转换成大写的。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-strtoupper-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_strtoupper()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$str </span><span style="color: #007700">= </span><span style="color: #DD0000">"Mary Had A Little Lamb and She LOVED It So"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$str </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_strtoupper</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$str</span><span style="color: #007700">; </span><span style="color: #FF8000">// Prints MARY HAD A LITTLE LAMB AND SHE LOVED IT SO<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 非拉丁 UTF-8 文本的 <span class="function"><strong style="color:#CC7832">mb_strtoupper()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$str </span><span style="color: #007700">= </span><span style="color: #DD0000">"Τάχιστη αλώπηξ βαφής ψημένη γη, δρασκελίζει υπέρ νωθρού κυνός"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$str </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_strtoupper</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$str</span><span style="color: #007700">; </span><span style="color: #FF8000">// 打印了 ΤΆΧΙΣΤΗ ΑΛΏΠΗΞ ΒΑΦΉΣ ΨΗΜΈΝΗ ΓΗ, ΔΡΑΣΚΕΛΊΖΕΙ ΥΠΈΡ ΝΩΘΡΟΎ ΚΥΝΌΣ<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-strtoupper-notes">  <h3 class="title">注释</h3>  <p class="para">   和 <span class="function">{@link strtoupper()}</span> 不同的是，“字母”是通过 Unicode 字符属性来确定的。   因此这个函数不会受语言环境（locale）设置影响，能够转化任何具有“字母”属性的字符，例如 a 变音符号（ä）。  </p>  <p class="para">   更多 Unicode 属性的信息，请参见 <a href="http://www.unicode.org/reports/tr21/" class="link external">&raquo;&nbsp;http://www.unicode.org/reports/tr21/</a>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-strtoupper-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_strtolower()} - 使字符串小写</span></li>    <li class="member"><span class="function">{@link mb_convert_case()} - 对字符串进行大小写转换</span></li>    <li class="member"><span class="function">{@link strtoupper()} - 将字符串转化为大写</span></li>   </ul>  </span> </div></div>
 * @return string str with all alphabetic characters converted to uppercase.*/
function mb_strtoupper(string $string, ?string $encoding): string {}

/**
*<div id="function.mb-strtolower" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_strtolower</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_strtolower</span> &mdash; <span class="dc-title">使字符串小写</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-strtolower-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_strtolower</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   返回所有字母字符转换成小写的 <span class="parameter" style="color:#3A95FF">string</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-strtolower-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       要被小写的 <span class="type" style="color:#EAB766">string</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-strtolower-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   所有字母字符已被转换成小写的 <span class="parameter" style="color:#3A95FF">string</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-strtolower-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_strtolower()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$str </span><span style="color: #007700">= </span><span style="color: #DD0000">"Mary Had A Little Lamb and She LOVED It So"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$str </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_strtolower</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$str</span><span style="color: #007700">; </span><span style="color: #FF8000">// 输出： mary had a little lamb and she loved it so<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 非拉丁 UTF-8 文本的 <span class="function"><strong style="color:#CC7832">mb_strtolower()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$str </span><span style="color: #007700">= </span><span style="color: #DD0000">"Τάχιστη αλώπηξ βαφής ψημένη γη, δρασκελίζει υπέρ νωθρού κυνός"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$str </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_strtolower</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$str</span><span style="color: #007700">; </span><span style="color: #FF8000">// 输出 τάχιστη αλώπηξ βαφής ψημένη γη, δρασκελίζει υπέρ νωθρού κυνός<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-strtolower-notes">  <h3 class="title">注释</h3>  <p class="para">   和 <span class="function">{@link strtolower()}</span> 不同的是，“字母”字符的检测是根据字符的 Unicode   属性。因此函数的行为不会受语言设置的影响，能偶转换任意具有“字母”属性的字符，例如元音变音 A（ä）。  </p>  <p class="para">   更多关于 Unicode 属性的信息，请参见 <a href="http://www.unicode.org/reports/tr21/" class="link external">&raquo;&nbsp;http://www.unicode.org/reports/tr21/</a>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-strtolower-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_strtoupper()} - 使字符串大写</span></li>    <li class="member"><span class="function">{@link mb_convert_case()} - 对字符串进行大小写转换</span></li>    <li class="member"><span class="function">{@link strtolower()} - 将字符串转化为小写</span></li>   </ul>  </span> </div></div>
 * @return string str with all alphabetic characters converted to lowercase.*/
function mb_strtolower(string $string, ?string $encoding): string {}

/**
*<div id="function.mb-language" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_language</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_language</span> &mdash; <span class="dc-title">设置/获取当前的语言</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-language-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_language</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$language</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">bool</span></span></div>  <p class="para rdfs-comment">   设置/获取当前的语言。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-language-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">language</span></dt>     <dd>      <p class="para">       用于编码邮件信息。下表列出了有效的语言。       <span class="function">{@link mb_send_mail()}</span> 使用了该设置来对邮件进行编码。      </p>      <table class="doctable informaltable">               <thead>         <tr>          <th>语言</th>          <th>字符</th>          <th>编码</th>          <th>别名</th>         </tr>        </thead>        <tbody class="tbody">         <tr>          <td>German/de</td>          <td>ISO-8859-15</td>          <td>Quoted-Printable</td>          <td>Deutsch</td>         </tr>         <tr>          <td>English/en</td>          <td>ISO-8859-1</td>          <td>Quoted-Printable</td>          <td class="empty">&nbsp;</td>         </tr>         <tr>          <td>Armenian/hy</td>          <td>ArmSCII-8</td>          <td>Quoted-Printable</td>          <td class="empty">&nbsp;</td>         </tr>         <tr>          <td>Japanese/ja</td>          <td>ISO-2022-JP</td>          <td>BASE64</td>          <td class="empty">&nbsp;</td>         </tr>         <tr>          <td>Korean/ko</td>          <td>ISO-2022-KR</td>          <td>BASE64</td>          <td class="empty">&nbsp;</td>         </tr>         <tr>          <td>neutral</td>          <td>UTF-8</td>          <td>BASE64</td>          <td class="empty">&nbsp;</td>         </tr>         <tr>          <td>Russian/ru</td>          <td>KOI8-R</td>          <td>Quoted-Printable</td>          <td class="empty">&nbsp;</td>         </tr>         <tr>          <td>Turkish/tr</td>          <td>ISO-8859-9</td>          <td>Quoted-Printable</td>          <td class="empty">&nbsp;</td>         </tr>         <tr>          <td>Ukrainian/ua</td>          <td>KOI8-U</td>          <td>Quoted-Printable</td>          <td class="empty">&nbsp;</td>         </tr>         <tr>          <td>uni</td>          <td>UTF-8</td>          <td>BASE64</td>          <td>universal</td>         </tr>         <tr>          <td>简体中文/zh-cn</td>          <td>HZ</td>          <td>BASE64</td>          <td class="empty">&nbsp;</td>         </tr>         <tr>          <td>繁体中文/zh-tw</td>          <td>BIG-5</td>          <td>BASE64</td>          <td class="empty">&nbsp;</td>         </tr>        </tbody>             </table>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-language-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果设置了 <span class="parameter" style="color:#3A95FF">language</span>，并且 <span class="parameter" style="color:#3A95FF">language</span> 是有效的，它将返回 <strong><span>true</span></strong>。否则将返回 <strong><span>false</span></strong>。   当省略了 <span class="parameter" style="color:#3A95FF">language</span> 或为 <strong><span>null</span></strong> 时，将返回语言名称的 <span class="type" style="color:#EAB766">string</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-language-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">language</span> 现在可为 null。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-language-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_send_mail()} - 发送编码过的邮件</span></li>   </ul>  </span> </div></div>
 * @return bool|string If language is set and*/
function mb_language(?string $language): string|bool {}

/**
*<div id="function.mb-internal-encoding" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_internal_encoding</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_internal_encoding</span> &mdash; <span class="dc-title">设置/获取内部字符编码</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-internal-encoding-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_internal_encoding</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">bool</span></span></div>  <p class="para rdfs-comment">   设置/获取内部字符编码  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-internal-encoding-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">encoding</span> 字符编码名称使用于 HTTP 输入字符编码转换、HTTP 输出字符编码转换、mbstring       模块系列函数字符编码转换的默认编码。内部编码与多字节正则表达式的编码完全不同。      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-internal-encoding-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果设置了 <span class="parameter" style="color:#3A95FF">encoding</span>，则成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。   在这种情况下，多字节正则表达式的字符编码不会改变。   如果省略了 <span class="parameter" style="color:#3A95FF">encoding</span>，则返回当前的字符编码名称。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.mb-internal-encoding-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   从 PHP 8.0.0 起，如果 <span class="parameter" style="color:#3A95FF">encoding</span> 的值是无效编码，则会抛出 <span class="classname"><a href="https://www.php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span>。在 PHP 8.0.0 之前，会发出 <strong><span>E_WARNING</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-internal-encoding-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>     <tr>      <td>8.0.0</td>      <td>       如果 <span class="parameter" style="color:#3A95FF">encoding</span> 是无效编码，现在抛出 <span class="classname"><a href="https://www.php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span>。以前发出的是 <strong><span>E_WARNING</span></strong>。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-internal-encoding-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_internal_encoding()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 设置内部字符编码为 UTF-8 <br /></span><span style="color: #9876AA">mb_internal_encoding</span><span style="color: #007700">(</span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 显示当前的内部字符编码<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">mb_internal_encoding</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-internal-encoding-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_http_input()} - 检测 HTTP 输入字符编码</span></li>    <li class="member"><span class="function">{@link mb_http_output()} - 设置/获取 HTTP 输出字符编码</span></li>    <li class="member"><span class="function">{@link mb_detect_order()} - 设置/获取 字符编码的检测顺序</span></li>    <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>   </ul>  </span> </div></div>
 * @return bool|string If encoding is set, then*/
function mb_internal_encoding(?string $encoding): string|bool {}

/**
*<div id="function.mb-http-input" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_http_input</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_http_input</span> &mdash; <span class="dc-title">检测 HTTP 输入字符编码</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-http-input-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_http_input</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="simpara">   检测 HTTP 输入字符的编码。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-http-input-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">type</span></dt>     <dd>      <p class="para">       设置的字符串指定了输入类型。       <span>&quot;G&quot;</span> 是 GET，<span>&quot;P&quot;</span> 是 POST，<span>&quot;C&quot;</span> 是 COOKIE，<span>&quot;S&quot;</span>       是 string，<span>&quot;L&quot;</span> 是 list，以及 <span>&quot;I&quot;</span> 是整个列表（将会返回 <span class="type" style="color:#EAB766">array</span>）。       如果省略了 type，它将返回最后处理的一种输入类型。      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-http-input-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   每个 <span class="parameter" style="color:#3A95FF">type</span> 的字符编码名称，如果 <span class="parameter" style="color:#3A95FF">type</span> 是   <span>&quot;I&quot;</span> 时为字符编码名称数组。   如果 <span class="function"><strong style="color:#CC7832">mb_http_input()</strong></span> 没有处理过任何指定的 HTTP 输入，它将返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-http-input-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">type</span> 现在可为 null。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-http-input-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>    <li class="member"><span class="function">{@link mb_http_output()} - 设置/获取 HTTP 输出字符编码</span></li>    <li class="member"><span class="function">{@link mb_detect_order()} - 设置/获取 字符编码的检测顺序</span></li>   </ul>  </span> </div></div>
 * @return array|false|string The character encoding name, as per the type.*/
function mb_http_input(?string $type): array|string|false {}

/**
*<div id="function.mb-http-output" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_http_output</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_http_output</span> &mdash; <span class="dc-title">设置/获取 HTTP 输出字符编码</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-http-output-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_http_output</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">bool</span></span></div>  <p class="para rdfs-comment">   设置/获取 HTTP 输出字符编码。此函数被调用之后输出的内容会被转换成 <span class="parameter" style="color:#3A95FF">encoding</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-http-output-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para">       如果设置了 <span class="parameter" style="color:#3A95FF">encoding</span>，<span class="function"><strong style="color:#CC7832">mb_http_output()</strong></span> 设置 HTTP 输出字符编码为 <span class="parameter" style="color:#3A95FF">encoding</span>。      </p>      <p class="para">       如果省略了 <span class="parameter" style="color:#3A95FF">encoding</span>，<span class="function"><strong style="color:#CC7832">mb_http_output()</strong></span> 返回当前的 HTTP 输出字符编码。      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-http-output-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果省略了 <span class="parameter" style="color:#3A95FF">encoding</span>，<span class="function"><strong style="color:#CC7832">mb_http_output()</strong></span> 返回当前的 HTTP 输出字符编码。   否则成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-http-output-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-http-output-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>    <li class="member"><span class="function">{@link mb_http_input()} - 检测 HTTP 输入字符编码</span></li>    <li class="member"><span class="function">{@link mb_detect_order()} - 设置/获取 字符编码的检测顺序</span></li>   </ul>  </span> </div></div>
 * @return bool|string If encoding is omitted,*/
function mb_http_output(?string $encoding): string|bool {}

/**
*<div id="function.mb-detect-order" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_detect_order</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_detect_order</span> &mdash; <span class="dc-title">设置/获取 字符编码的检测顺序</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-detect-order-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_detect_order</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">null</span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766">bool</span></span></div>  <p class="para rdfs-comment">   为编码列表 <span class="parameter" style="color:#3A95FF">encoding</span> 设置自动检测字符编码的顺序。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-detect-order-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">encoding</span> 是一个 <span class="type" style="color:#EAB766">array</span> 或者逗号分隔的字符编码列表。       参见<a href="https://www.php.net/manual/zh/mbstring.supported-encodings.php" class="link">支持的编码</a>。      </p>      <p class="para">       如果省略 <span class="parameter" style="color:#3A95FF">encoding</span> 或为 <strong><span>null</span></strong>，它将返回当前字符编码检测顺序的数组。      </p>      <p class="para">       该设置会影响 <span class="function">{@link mb_detect_encoding()}</span> 和 <span class="function">{@link mb_send_mail()}</span>。      </p>      <p class="para">       <span>mbstring</span> 当前实现了以下编码检测筛选器。       如有以下编码列表的无效字节序列，编码的检测将会失败。      </p>      <span class="simpara">       <span>UTF-8</span>, <span>UTF-7</span>,       <span>ASCII</span>,       <span>EUC-JP</span>,<span>SJIS</span>,       <span>eucJP-win</span>, <span>SJIS-win</span>,       <span>JIS</span>, <span>ISO-2022-JP</span>       </span>      <p class="para">       对于 <span>ISO-8859-*</span>，<span>mbstring</span>       总是检测为 <span>ISO-8859-*</span>。      </p>      <p class="para">       对于 <span>UTF-16</span>、<span>UTF-32</span>、       <span>UCS2</span> 和 <span>UCS4</span>，编码检测总是会失败。      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-detect-order-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   设置编码检测顺序时候，成功时返回 <strong><span>true</span></strong>，识别时候返回  <strong><span>false</span></strong>。  </p>  <p class="para">   在获取编码检测顺序的时候，会返回排序过的编码数组。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-detect-order-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-detect-order-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_detect_order()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 为检测顺序设置枚举列表 <br /></span><span style="color: #9876AA">mb_detect_order</span><span style="color: #007700">(</span><span style="color: #DD0000">"eucjp-win,sjis-win,UTF-8"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 通过数组设置检测顺序 <br /></span><span style="color: #9876AA">$ary</span><span style="color: #007700">[] = </span><span style="color: #DD0000">"ASCII"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$ary</span><span style="color: #007700">[] = </span><span style="color: #DD0000">"JIS"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$ary</span><span style="color: #007700">[] = </span><span style="color: #DD0000">"EUC-JP"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">mb_detect_order</span><span style="color: #007700">(</span><span style="color: #9876AA">$ary</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 显示当前的检测顺序 <br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">implode</span><span style="color: #007700">(</span><span style="color: #DD0000">", "</span><span style="color: #007700">, </span><span style="color: #9876AA">mb_detect_order</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>      <p class="para">       <div class="example" id="">        <p><strong>示例 #2 案例展示了无效的检测顺序</strong></p>        <div class="example-contents"><div class="cdata"><span>; 总是检测为 ISO-8859-1<br>detect_order = ISO-8859-1, UTF-8<br><br>; 总是检测为 UTF-8，由于 ASCII/UTF-7 的值对  UTF-8 是有效的<br>detect_order = UTF-8, ASCII, UTF-7<br></span></div>        </div>       </div>      </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-detect-order-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>    <li class="member"><span class="function">{@link mb_http_input()} - 检测 HTTP 输入字符编码</span></li>    <li class="member"><span class="function">{@link mb_http_output()} - 设置/获取 HTTP 输出字符编码</span></li>    <li class="member"><span class="function">{@link mb_send_mail()} - 发送编码过的邮件</span></li>   </ul>  </span> </div></div>
 * @return bool|string[] When setting the encoding detection order,*/
function mb_detect_order(array|string|null $encoding = null): array|bool {}

/**
*<div id="function.mb-substitute-character" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_substitute_character</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_substitute_character</span> &mdash; <span class="dc-title">设置/获取替代字符</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-substitute-character-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_substitute_character</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">null</span></span> <span class="parameter" style="color:#3A95FF">$substitute_character</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">bool</span></span></div>  <p class="para rdfs-comment">   当输入字符的编码是无效的，或者字符代码不存在于输出的字符编码中时，可以为其指定一个替代字符。   无效字符可以被替换为 <span>&quot;none&quot;</span>（不输出）、<span class="type" style="color:#EAB766">string</span> 或者 <span class="type" style="color:#EAB766">int</span> 值（Unicode 字符代码的值）。  </p>  <p class="para">   该设置会影响 <span class="function">{@link mb_convert_encoding()}</span>、   <span class="function">{@link mb_convert_variables()}</span>、   <span class="function">{@link mb_output_handler()}</span>   和 <span class="function">{@link mb_send_mail()}</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-substitute-character-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">substitute_character</span></dt>     <dd>      <p class="para">       指定 Unicode 值为一个 <span class="type" style="color:#EAB766">int</span>，或者是以下 <span class="type" style="color:#EAB766">string</span> 中的一个：       <ul class="itemizedlist">        <li class="listitem">         <span class="simpara">          <span>&quot;none&quot;</span>：不输出         </span>        </li>        <li class="listitem">         <span class="simpara">          <span>&quot;long&quot;</span>：输出字符代码的值（比如：<span>U+3000</span>、<span>JIS+7E7E</span>）         </span>        </li>        <li class="listitem">         <span class="simpara">          <span>&quot;entity&quot;</span>：输出字符的实体（比如：<span>&amp;#x200;</span>）         </span>        </li>       </ul>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-substitute-character-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果设置了 <span class="parameter" style="color:#3A95FF">substitute_character</span>，在成功时返回 <strong><span>true</span></strong>，失败时返回 <strong><span>false</span></strong>。   如果没有设置 <span class="parameter" style="color:#3A95FF">substitute_character</span>，它将返回当前设置。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-substitute-character-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       不再支持将空字符串传递给 <span class="parameter" style="color:#3A95FF">substitute_character</span>；应该传递 <span>&quot;none&quot;</span>。      </td>     </tr>     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-substitute-character-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_substitute_character()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 设置为 Unicode U+3013 (GETA MARK) <br /></span><span style="color: #9876AA">mb_substitute_character</span><span style="color: #007700">(</span><span style="color: #9876AA">0x3013</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 设置十六进制格式 <br /></span><span style="color: #9876AA">mb_substitute_character</span><span style="color: #007700">(</span><span style="color: #DD0000">"long"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 显示当前设置 <br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">mb_substitute_character</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
 * @return bool|int|string If substchar is set, it returns true for success,*/
function mb_substitute_character(string|int|null $substitute_character = null): string|int|bool {}

/**
*<div id="function.mb-parse-str" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_parse_str</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_parse_str</span> &mdash; <span class="dc-title">解析 GET/POST/COOKIE 数据并设置全局变量</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-parse-str-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_parse_str</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">&$result</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   解析 GET/POST/COOKIE 数据并设置全局变量。   由于 PHP 不提供原始 POST/COOKIE 数据，目前它仅能够用于 GET 数据。   它解析了 URL 编码过的数据，检测其编码，并转换编码为内部编码，然后设置其值为 <span class="type" style="color:#EAB766">array</span> 的 <span class="parameter" style="color:#3A95FF">result</span> 或者全局变量。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-parse-str-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       URL 编码过的数据。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">result</span></dt>     <dd>      <p class="para">       一个 <span class="type" style="color:#EAB766">array</span>，包含解码过的、编码转换后的值。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-parse-str-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-parse-str-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>第二个参数不再可选。</td>     </tr>     <tr>      <td>7.2.0</td>      <td>弃用在没有第二个参数的时候调用 <span class="function"><strong style="color:#CC7832">mb_parse_str()</strong></span>。</td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-parse-str-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_detect_order()} - 设置/获取 字符编码的检测顺序</span></li>    <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function mb_parse_str(string $string, &$result): bool {}

/**
*<div id="function.mb-parse-str" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_parse_str</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_parse_str</span> &mdash; <span class="dc-title">解析 GET/POST/COOKIE 数据并设置全局变量</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-parse-str-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_parse_str</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">&$result</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   解析 GET/POST/COOKIE 数据并设置全局变量。   由于 PHP 不提供原始 POST/COOKIE 数据，目前它仅能够用于 GET 数据。   它解析了 URL 编码过的数据，检测其编码，并转换编码为内部编码，然后设置其值为 <span class="type" style="color:#EAB766">array</span> 的 <span class="parameter" style="color:#3A95FF">result</span> 或者全局变量。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-parse-str-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       URL 编码过的数据。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">result</span></dt>     <dd>      <p class="para">       一个 <span class="type" style="color:#EAB766">array</span>，包含解码过的、编码转换后的值。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-parse-str-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-parse-str-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>第二个参数不再可选。</td>     </tr>     <tr>      <td>7.2.0</td>      <td>弃用在没有第二个参数的时候调用 <span class="function"><strong style="color:#CC7832">mb_parse_str()</strong></span>。</td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-parse-str-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_detect_order()} - 设置/获取 字符编码的检测顺序</span></li>    <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function mb_parse_str(string $string, &$result): bool {}

/**
*<div id="function.mb-output-handler" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_output_handler</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_output_handler</span> &mdash; <span class="dc-title">在输出缓冲中转换字符编码的回调函数</span></p>  </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-output-handler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_output_handler</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$status</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">mb_output_handler()</strong></span> 是一个   <span class="function">{@link ob_start()}</span> 回调函数。    <span class="function"><strong style="color:#CC7832">mb_output_handler()</strong></span> 将输出缓冲中的字符从内部字符编码转换为 HTTP 输出的字符编码。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-output-handler-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       输出缓冲的内容。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">status</span></dt>     <dd>      <p class="para">       输出缓冲的状态。      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-output-handler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   转换后的 <span class="type" style="color:#EAB766">string</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-output-handler-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_output_handler()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />mb_http_output</span><span style="color: #007700">(</span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">ob_start</span><span style="color: #007700">(</span><span style="color: #DD0000">"mb_output_handler"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-output-handler-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    如果你想要输出二进制数据，比如图片，必须在任何二进制数据发送到客户端之前使用 <span class="function">{@link header()}</span> 来设置 Content-Type: 头。（例如 header(&quot;Content-Type: image/png&quot;)）。    如果 Content-Type: 头已发送，输出字符编码的转换将不会执行。   </p>   <p class="para">    注意，如果发送了 &#039;Content-Type: text//&#039;，则内容被认为是文本，将发生转换。   </p>  </p></blockquote> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-output-handler-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link ob_start()} - 打开输出控制缓冲</span></li>   </ul>  </span> </div></div>
 * @return string The converted string.*/
function mb_output_handler(string $string, int $status): string {}

/**
*<div id="function.mb-preferred-mime-name" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_preferred_mime_name</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_preferred_mime_name</span> &mdash; <span class="dc-title">获取 MIME 字符串</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-preferred-mime-name-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_preferred_mime_name</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$encoding</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   获取指定编码的 MIME 字符 <span class="type" style="color:#EAB766">string</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-preferred-mime-name-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para">       要检查的字符串。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-preferred-mime-name-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   字符编码 <span class="parameter" style="color:#3A95FF">encoding</span> 的 MIME <span>charset</span>   <span class="type" style="color:#EAB766">string</span>，如果指定 <span class="parameter" style="color:#3A95FF">encoding</span> 没有首选字符集，则为 <strong><span>false</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-preferred-mime-name-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_preferred_mime_name()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$outputenc </span><span style="color: #007700">= </span><span style="color: #DD0000">"sjis-win"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">mb_http_output</span><span style="color: #007700">(</span><span style="color: #9876AA">$outputenc</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">ob_start</span><span style="color: #007700">(</span><span style="color: #DD0000">"mb_output_handler"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: text/html; charset=" </span><span style="color: #007700">. </span><span style="color: #9876AA">mb_preferred_mime_name</span><span style="color: #007700">(</span><span style="color: #9876AA">$outputenc</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
 * @return string|false The MIME charset string for character encoding*/
function mb_preferred_mime_name(string $encoding): string|false {}

/**
*<div id="function.mb-strlen" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_strlen</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_strlen</span> &mdash; <span class="dc-title">获取字符串的长度</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-strlen-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_strlen</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   获取一个 <span class="type" style="color:#EAB766">string</span> 的长度。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-strlen-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       要检查长度的 <span class="type" style="color:#EAB766">string</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-strlen-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回具有 <span class="parameter" style="color:#3A95FF">encoding</span> 编码的 <span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">string</span> 包含的字符数。   多字节的字符被计为 1。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.mb-strlen-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如果 encoding 未知，则会生成 <strong><span>E_WARNING</span></strong> 级别的错误。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-strlen-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-strlen-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>    <li class="member"><span class="function">{@link grapheme_strlen()} - Get string length in grapheme units</span></li>    <li class="member"><span class="function">{@link iconv_strlen()} - 返回字符串的字符数统计</span></li>    <li class="member"><span class="function">{@link strlen()} - 获取字符串长度</span></li>   </ul>  </span> </div></div>
 * @return int|false the number of characters in*/
function mb_strlen(string $string, #[LanguageLevelTypeAware(['8.0' => 'string|null'], default: 'string')] $encoding) {}

/**
*<div id="function.mb-strpos" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_strpos</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_strpos</span> &mdash; <span class="dc-title">查找字符串在另一个字符串中首次出现的位置</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-strpos-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_strpos</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$haystack</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$needle</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   查找 <span class="type" style="color:#EAB766">string</span> 在一个 <span class="type" style="color:#EAB766">string</span> 中首次出现的位置。  </p>  <p class="para">   基于字符数执行一个多字节安全的 <span class="function">{@link strpos()}</span> 操作。   第一个字符的位置是 0，第二个字符的位置是 1，以此类推。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-strpos-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">haystack</span></dt>     <dd>      <p class="para">       要被检查的 <span class="type" style="color:#EAB766">string</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">needle</span></dt>     <dd>      <p class="para">       在 <span class="parameter" style="color:#3A95FF">haystack</span> 中查找这个字符串。       和 <span class="function">{@link strpos()}</span> 不同的是，数字的值不会被当做字符的顺序值。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       搜索位置的偏移。如果没有提供该参数，将会使用 0。负数的 offset 会从字符串尾部开始统计。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-strpos-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 <span class="type" style="color:#EAB766">string</span> 的 <span class="parameter" style="color:#3A95FF">haystack</span> 中 <span class="parameter" style="color:#3A95FF">needle</span> 首次出现位置的数值。   如果没有找到 <span class="parameter" style="color:#3A95FF">needle</span>，它将返回 <strong><span>false</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-strpos-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.0.0</td> <td>  现在 <span class="parameter" style="color:#3A95FF">needle</span> 接受空字符串。 </td></tr>     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>     <tr>      <td>7.1.0</td>      <td>       支持负数的 <span class="parameter" style="color:#3A95FF">offset</span>。      </td>     </tr>    </tbody>     </table> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-strpos-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>    <li class="member"><span class="function">{@link strpos()} - 查找字符串首次出现的位置</span></li>   </ul>  </span> </div></div>
 * @return int<0,max>|false the numeric position of*/
function mb_strpos(string $haystack, string $needle, int $offset = 0, ?string $encoding): int|false {}

/**
*<div id="function.mb-strrpos" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_strrpos</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_strrpos</span> &mdash; <span class="dc-title">查找字符串在一个字符串中最后出现的位置</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-strrpos-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_strrpos</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$haystack</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$needle</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   基于字符数执行一个多字节安全的 <span class="function">{@link strrpos()}</span> 操作。   <span class="parameter" style="color:#3A95FF">needle</span> 的位置是从 <span class="parameter" style="color:#3A95FF">haystack</span> 的开始进行统计的。   第一个字符的位置是 0，第二个字符的位置是 1。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-strrpos-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">haystack</span></dt>     <dd>      <p class="para">       查找 <span class="parameter" style="color:#3A95FF">needle</span> 在这个 <span class="type" style="color:#EAB766">string</span> 中最后出现的位置。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">needle</span></dt>     <dd>      <p class="para">        在 <span class="parameter" style="color:#3A95FF">haystack</span> 中查找这个 <span class="type" style="color:#EAB766">string</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <span class="simpara">       可以用于指定 <span class="type" style="color:#EAB766">string</span> 里从任意字符数开始进行搜索。       负数的值将导致搜索会终止于指向 <span class="type" style="color:#EAB766">string</span> 末尾的任意点。      </span>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-strrpos-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 <span class="type" style="color:#EAB766">string</span> 的 <span class="parameter" style="color:#3A95FF">haystack</span> 中，<span class="parameter" style="color:#3A95FF">needle</span> 最后出现位置的数值。   如果没有找到 <span class="parameter" style="color:#3A95FF">needle</span>，它将返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-strrpos-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.0.0</td> <td>  现在 <span class="parameter" style="color:#3A95FF">needle</span> 接受空字符串。 </td></tr>     <tr>      <td>8.0.0</td>      <td>       已经删除将 <span class="parameter" style="color:#3A95FF">encoding</span> 作为第三个参数而不是偏移量传递。      </td>     </tr>     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-strrpos-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_strpos()} - 查找字符串在另一个字符串中首次出现的位置</span></li>    <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>    <li class="member"><span class="function">{@link strrpos()} - 计算指定字符串在目标字符串中最后一次出现的位置</span></li>   </ul>  </span> </div></div>
 * @return int|false the numeric position of*/
function mb_strrpos(string $haystack, string $needle, int $offset = 0, ?string $encoding): int|false {}

/**
*<div id="function.mb-stripos" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_stripos</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_stripos</span> &mdash; <span class="dc-title">大小写不敏感地查找字符串在另一个字符串中首次出现的位置</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-stripos-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_stripos</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$haystack</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$needle</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">mb_stripos()</strong></span> 返回 <span class="parameter" style="color:#3A95FF">needle</span> 在字符串 <span class="parameter" style="color:#3A95FF">haystack</span> 中首次出现位置的数值。   和 <span class="function">{@link mb_strpos()}</span> 不同的是，<span class="function"><strong style="color:#CC7832">mb_stripos()</strong></span> 是大小写不敏感的。   如果 <span class="parameter" style="color:#3A95FF">needle</span> 没找到，它将返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-stripos-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">haystack</span></dt>     <dd>      <p class="para">       在这个字符串中查找获取 <span class="parameter" style="color:#3A95FF">needle</span> 首次出现的位置      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">needle</span></dt>     <dd>      <p class="para">       在 <span class="parameter" style="color:#3A95FF">haystack</span> 中查找这个字符串      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">haystack</span> 里开始搜索的位置。如果是负数，就从字符串的尾部开始统计。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para">       使用的字符编码名称。       如果省略了它，将使用内部字符编码。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-stripos-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回字符串 <span class="parameter" style="color:#3A95FF">haystack</span> 中 <span class="parameter" style="color:#3A95FF">needle</span> 首次出现位置的数值。   如果没有找到 <span class="parameter" style="color:#3A95FF">needle</span>，它将返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-stripos-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.0.0</td> <td>  现在 <span class="parameter" style="color:#3A95FF">needle</span> 接受空字符串。 </td></tr>     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>     <tr>      <td>7.1.0</td>      <td>       支持 <span class="parameter" style="color:#3A95FF">offset</span> 使用负数。      </td>     </tr>    </tbody>     </table> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-stripos-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link stripos()} - 查找字符串首次出现的位置（不区分大小写）</span></li>    <li class="member"><span class="function">{@link strpos()} - 查找字符串首次出现的位置</span></li>    <li class="member"><span class="function">{@link mb_strpos()} - 查找字符串在另一个字符串中首次出现的位置</span></li>   </ul>  </span> </div></div>
 * @return int|false Return the numeric position of the first occurrence of*/
function mb_stripos(string $haystack, string $needle, int $offset = 0, ?string $encoding): int|false {}

/**
*<div id="function.mb-strripos" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_strripos</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_strripos</span> &mdash; <span class="dc-title">大小写不敏感地在字符串中查找一个字符串最后出现的位置</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-strripos-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_strripos</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$haystack</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$needle</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span><span class="initializer"> = 0</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">mb_strripos()</strong></span> 基于字符数执行一个多字节安全的 <span class="function">{@link strripos()}</span> 操作。   <span class="parameter" style="color:#3A95FF">needle</span> 的位置是从 <span class="parameter" style="color:#3A95FF">haystack</span> 的开始进行统计的。   第一个字符的位置是 0，第二个字符的位置是 1。   和 <span class="function">{@link mb_strrpos()}</span> 不同的是，<span class="function"><strong style="color:#CC7832">mb_strripos()</strong></span> 是大小写不敏感的。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-strripos-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">haystack</span></dt>     <dd>      <p class="para">       查找 <span class="parameter" style="color:#3A95FF">needle</span> 在这个字符串中最后出现的位置。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">needle</span></dt>     <dd>      <p class="para">       在 <span class="parameter" style="color:#3A95FF">haystack</span> 中查找这个字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       在 <span class="parameter" style="color:#3A95FF">haystack</span> 中开始搜索的位置。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para">       使用的字符编码名称。如果省略了，则将使用内部编码。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-strripos-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回字符串 <span class="parameter" style="color:#3A95FF">haystack</span> 中 <span class="parameter" style="color:#3A95FF">needle</span> 最后出现位置的数值。   如果没有找到 <span class="parameter" style="color:#3A95FF">needle</span>，它将返回 <strong><span>false</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-strripos-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.0.0</td> <td>  现在 <span class="parameter" style="color:#3A95FF">needle</span> 接受空字符串。 </td></tr>     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-strripos-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link strripos()} - 计算指定字符串在目标字符串中最后一次出现的位置（不区分大小写）</span></li>    <li class="member"><span class="function">{@link strrpos()} - 计算指定字符串在目标字符串中最后一次出现的位置</span></li>    <li class="member"><span class="function">{@link mb_strrpos()} - 查找字符串在一个字符串中最后出现的位置</span></li>   </ul>  </span> </div></div>
 * @return int|false Return the numeric position of*/
function mb_strripos(string $haystack, string $needle, int $offset = 0, ?string $encoding): int|false {}

/**
*<div id="function.mb-strstr" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_strstr</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_strstr</span> &mdash; <span class="dc-title">查找字符串在另一个字符串里的首次出现</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-strstr-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_strstr</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$haystack</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$needle</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$before_needle</span><span class="initializer"> = <strong><span>false</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">mb_strstr()</strong></span> 查找了 <span class="parameter" style="color:#3A95FF">needle</span> 在 <span class="parameter" style="color:#3A95FF">haystack</span> 中首次的出现并返回 <span class="parameter" style="color:#3A95FF">haystack</span> 的一部分。   如果 <span class="parameter" style="color:#3A95FF">needle</span> 没有找到，它将返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-strstr-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">haystack</span></dt>     <dd>      <p class="para">       要获取 <span class="parameter" style="color:#3A95FF">needle</span> 首次出现的字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">needle</span></dt>     <dd>      <p class="para">       在 <span class="parameter" style="color:#3A95FF">haystack</span> 中查找这个字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">before_needle</span></dt>     <dd>      <p class="para">       决定这个函数返回 <span class="parameter" style="color:#3A95FF">haystack</span> 的哪一部分。       如果设置为 <strong><span>true</span></strong>，它返回 <span class="parameter" style="color:#3A95FF">haystack</span> 中从开始到 <span class="parameter" style="color:#3A95FF">needle</span> 出现位置的所有字符（不包括 needle）。       如果设置为 <strong><span>false</span></strong>，它返回 <span class="parameter" style="color:#3A95FF">haystack</span> 中 <span class="parameter" style="color:#3A95FF">needle</span> 出现位置到最后的所有字符（包括了 needle）。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para">       要使用的字符编码名称。       如果省略该参数，将使用内部字符编码。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-strstr-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 <span class="parameter" style="color:#3A95FF">haystack</span> 的一部分，或者 <span class="parameter" style="color:#3A95FF">needle</span> 没找到则返回 <strong><span>false</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-strstr-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.0.0</td> <td>  现在 <span class="parameter" style="color:#3A95FF">needle</span> 接受空字符串。 </td></tr>     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-strstr-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link stristr()} - strstr 函数的忽略大小写版本</span></li>    <li class="member"><span class="function">{@link strstr()} - 查找字符串的首次出现</span></li>    <li class="member"><span class="function">{@link mb_stristr()} - 大小写不敏感地查找字符串在另一个字符串里的首次出现</span></li>   </ul>  </span> </div></div>
 * @return string|false the portion of haystack,*/
function mb_strstr(string $haystack, string $needle, bool $before_needle = false, ?string $encoding): string|false {}

/**
*<div id="function.mb-strrchr" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_strrchr</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_strrchr</span> &mdash; <span class="dc-title">查找指定字符在另一个字符串中最后一次的出现</span></p> </div><br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-strrchr-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_strrchr</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$haystack</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$needle</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$before_needle</span><span class="initializer"> = <strong><span>false</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">mb_strrchr()</strong></span> 查找了 <span class="parameter" style="color:#3A95FF">needle</span> 在 <span class="parameter" style="color:#3A95FF">haystack</span> 中最后一次出现的位置，并返回 <span class="parameter" style="color:#3A95FF">haystack</span> 的部分。   如果没有找到 <span class="parameter" style="color:#3A95FF">needle</span>，它将返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-strrchr-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">haystack</span></dt>     <dd>      <p class="para">       在该字符串中查找 <span class="parameter" style="color:#3A95FF">needle</span> 最后出现的位置      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">needle</span></dt>     <dd>      <p class="para">       在 <span class="parameter" style="color:#3A95FF">haystack</span> 中查找这个字符串      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">before_needle</span></dt>     <dd>      <p class="para">       决定这个函数返回 <span class="parameter" style="color:#3A95FF">haystack</span> 的哪一部分。       如果设置为 <strong><span>true</span></strong>，它将返回的字符是从 <span class="parameter" style="color:#3A95FF">haystack</span> 的开始到 <span class="parameter" style="color:#3A95FF">needle</span> 最后出现的位置。        如果设置为 <strong><span>false</span></strong>，它将返回的字符是从 <span class="parameter" style="color:#3A95FF">needle</span> 最后出现的位置到 <span class="parameter" style="color:#3A95FF">haystack</span> 的末尾。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para">       使用的字符编码名称。如果省略了，则将使用内部编码。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-strrchr-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 <span class="parameter" style="color:#3A95FF">haystack</span> 的一部分。   或者在没有找到 <span class="parameter" style="color:#3A95FF">needle</span> 时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-strrchr-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.0.0</td> <td>  现在 <span class="parameter" style="color:#3A95FF">needle</span> 接受空字符串。 </td></tr>     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-strrchr-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link strrchr()} - 查找指定字符在字符串中的最后一次出现</span></li>    <li class="member"><span class="function">{@link mb_strstr()} - 查找字符串在另一个字符串里的首次出现</span></li>    <li class="member"><span class="function">{@link mb_strrichr()} - 大小写不敏感地查找指定字符在另一个字符串中最后一次的出现</span></li>   </ul>  </span> </div></div>
 * @return string|false the portion of haystack.*/
function mb_strrchr(string $haystack, string $needle, bool $before_needle = false, ?string $encoding): string|false {}

/**
*<div id="function.mb-stristr" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_stristr</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_stristr</span> &mdash; <span class="dc-title">大小写不敏感地查找字符串在另一个字符串里的首次出现</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-stristr-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_stristr</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$haystack</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$needle</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$before_needle</span><span class="initializer"> = <strong><span>false</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   <span class="function">{@link mb_strstr()}</span> 查找了 <span class="parameter" style="color:#3A95FF">needle</span> 在 <span class="parameter" style="color:#3A95FF">haystack</span> 中首次的出现并返回 <span class="parameter" style="color:#3A95FF">haystack</span> 的一部分。   和 <span class="function">{@link mb_strstr()}</span> 不同的是，<span class="function"><strong style="color:#CC7832">mb_stristr()</strong></span> 是大小写不敏感的。   如果 <span class="parameter" style="color:#3A95FF">needle</span> 没有找到，它将返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-stristr-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">haystack</span></dt>     <dd>      <p class="para">       要获取 <span class="parameter" style="color:#3A95FF">needle</span> 首次出现的字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">needle</span></dt>     <dd>      <p class="para">       在 <span class="parameter" style="color:#3A95FF">haystack</span> 中查找这个字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">before_needle</span></dt>     <dd>      <p class="para">       决定这个函数返回 <span class="parameter" style="color:#3A95FF">haystack</span> 的哪一部分。       如果设置为 <strong><span>true</span></strong>，它返回 <span class="parameter" style="color:#3A95FF">haystack</span> 中从开始到 <span class="parameter" style="color:#3A95FF">needle</span> 出现位置的所有字符（不包括 needle）。       如果设置为 <strong><span>false</span></strong>，它返回 <span class="parameter" style="color:#3A95FF">haystack</span> 中 <span class="parameter" style="color:#3A95FF">needle</span> 出现位置到最后的所有字符（包括了 needle）。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para">       要使用的字符编码名称。       如果省略该参数，将使用内部字符编码。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-stristr-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 <span class="parameter" style="color:#3A95FF">haystack</span> 的一部分，或者 <span class="parameter" style="color:#3A95FF">needle</span> 没找到则返回 <strong><span>false</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-stristr-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.0.0</td> <td>  现在 <span class="parameter" style="color:#3A95FF">needle</span> 接受空字符串。 </td></tr>     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-stristr-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link stristr()} - strstr 函数的忽略大小写版本</span></li>    <li class="member"><span class="function">{@link strstr()} - 查找字符串的首次出现</span></li>    <li class="member"><span class="function">{@link mb_strstr()} - 查找字符串在另一个字符串里的首次出现</span></li>   </ul>  </span> </div></div>
 * @return string|false the portion of haystack,*/
function mb_stristr(string $haystack, string $needle, bool $before_needle = false, ?string $encoding): string|false {}

/**
*<div id="function.mb-strrichr" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_strrichr</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_strrichr</span> &mdash; <span class="dc-title">大小写不敏感地查找指定字符在另一个字符串中最后一次的出现</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-strrichr-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_strrichr</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$haystack</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$needle</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$before_needle</span><span class="initializer"> = <strong><span>false</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">mb_strrichr()</strong></span> 大小写不敏感地查找指定 <span class="parameter" style="color:#3A95FF">needle</span> 在 <span class="parameter" style="color:#3A95FF">haystack</span> 中最后一次的出现，并返回 <span class="parameter" style="color:#3A95FF">haystack</span> 的一部分。   和 <span class="function">{@link mb_strrchr()}</span> 不同的是，<span class="function"><strong style="color:#CC7832">mb_strrichr()</strong></span> 是大小写不敏感的。   如果 <span class="parameter" style="color:#3A95FF">needle</span> 没有找到，它将返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-strrichr-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">haystack</span></dt>     <dd>      <p class="para">       在该字符串中查找 <span class="parameter" style="color:#3A95FF">needle</span> 的最后出现位置      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">needle</span></dt>     <dd>      <p class="para">       在 <span class="parameter" style="color:#3A95FF">needle</span> 中查找该字符串      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">before_needle</span></dt>     <dd>      <p class="para">       决定这个函数返回 <span class="parameter" style="color:#3A95FF">haystack</span> 的哪一部分。       如果设置为 <strong><span>true</span></strong>，它将返回的字符是从 <span class="parameter" style="color:#3A95FF">haystack</span> 的开始到 <span class="parameter" style="color:#3A95FF">needle</span> 最后出现的位置。        如果设置为 <strong><span>false</span></strong>，它将返回的字符是从 <span class="parameter" style="color:#3A95FF">needle</span> 最后出现的位置到 <span class="parameter" style="color:#3A95FF">haystack</span> 的末尾。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para">       使用的字符编码名称。如果省略了，则将使用内部编码。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-strrichr-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 <span class="parameter" style="color:#3A95FF">haystack</span> 的一部分。   或者在没有找到 <span class="parameter" style="color:#3A95FF">needle</span> 时返回 <strong><span>false</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-strrichr-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.0.0</td> <td>  现在 <span class="parameter" style="color:#3A95FF">needle</span> 接受空字符串。 </td></tr>     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-strrichr-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_stristr()} - 大小写不敏感地查找字符串在另一个字符串里的首次出现</span></li>    <li class="member"><span class="function">{@link mb_strrchr()} - 查找指定字符在另一个字符串中最后一次的出现</span></li>   </ul>  </span> </div></div>
 * @return string|false the portion of haystack.*/
function mb_strrichr(string $haystack, string $needle, bool $before_needle = false, ?string $encoding): string|false {}

/**
*<div id="function.mb-substr-count" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_substr_count</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_substr_count</span> &mdash; <span class="dc-title">统计字符串出现的次数</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-substr-count-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_substr_count</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$haystack</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$needle</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   统计子字符串 <span class="parameter" style="color:#3A95FF">needle</span> 出现在<span class="type" style="color:#EAB766"><span class="type 字符串" style="color:#EAB766">字符串</span></span> <span class="parameter" style="color:#3A95FF">haystack</span> 中的次数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-substr-count-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">haystack</span></dt>     <dd>      <p class="para">       要检查的<span class="type" style="color:#EAB766"><span class="type 字符串" style="color:#EAB766">字符串</span></span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">needle</span></dt>     <dd>      <p class="para">       待查找的<span class="type" style="color:#EAB766"><span class="type 字符串" style="color:#EAB766">字符串</span></span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-substr-count-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   子字符串 <span class="parameter" style="color:#3A95FF">needle</span> 出现在 <span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">haystack</span> 中的次数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-substr-count-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-substr-count-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_substr_count()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">mb_substr_count</span><span style="color: #007700">(</span><span style="color: #DD0000">"This is a test"</span><span style="color: #007700">, </span><span style="color: #DD0000">"is"</span><span style="color: #007700">); </span><span style="color: #FF8000">// 输出 2<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-substr-count-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_strpos()} - 查找字符串在另一个字符串中首次出现的位置</span></li>    <li class="member"><span class="function">{@link mb_substr()} - 获取部分字符串</span></li>    <li class="member"><span class="function">{@link substr_count()} - 计算字串出现的次数</span></li>   </ul>  </span> </div></div>
 * @return int The number of times the*/
function mb_substr_count(string $haystack, string $needle, ?string $encoding): int {}

/**
*<div id="function.mb-substr" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_substr</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_substr</span> &mdash; <span class="dc-title">获取部分字符串</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-substr-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_substr</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$start</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$length</span><span class="initializer"> = <strong><span>null</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   根据字符数执行一个多字节安全的 <span class="function">{@link substr()}</span> 操作。   位置是从 <span class="parameter" style="color:#3A95FF">string</span> 的开始位置进行计数。   第一个字符的位置是 0。第二个字符的位置是 1，以此类推。   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-substr-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       从该 <span class="type" style="color:#EAB766">string</span> 中提取子字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">start</span></dt>     <dd>      <p class="para">        如果 <span class="parameter" style="color:#3A95FF">start</span> 不是负数，返回的字符串会从 <span class="parameter" style="color:#3A95FF">string</span> 第 <span class="parameter" style="color:#3A95FF">start</span> 的位置开始，从 0 开始计数。举个例子，字符串 &#039;<span>abcdef</span>&#039;，位置 <span>0</span> 的字符是 &#039;<span>a</span>&#039;，位置 <span>2</span> 的字符是       &#039;<span>c</span>&#039;，以此类推。      </p>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">start</span> 是负数，返回的字符串是从 <span class="parameter" style="color:#3A95FF">string</span> 末尾处第 <span class="parameter" style="color:#3A95FF">start</span> 个字符开始的。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">string</span> 中要使用的最大字符数。如果省略了此参数或者传入了 <span>NULL</span>，则会提取到字符串的尾部。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-substr-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="function"><strong style="color:#CC7832">mb_substr()</strong></span> 函数根据 <span class="parameter" style="color:#3A95FF">start</span> 和 <span class="parameter" style="color:#3A95FF">length</span> 参数返回 <span class="parameter" style="color:#3A95FF">string</span> 中指定的部分。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-substr-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-substr-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_strcut()} - 获取字符的一部分</span></li>    <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>   </ul>  </span> </div></div>
 * @return string mb_substr returns the portion of*/
function mb_substr(string $string, int $start, ?int $length, ?string $encoding): string {}

/**
*<div id="function.mb-strcut" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_strcut</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_strcut</span> &mdash; <span class="dc-title">获取字符的一部分</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-strcut-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_strcut</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$start</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$length</span><span class="initializer"> = <strong><span>null</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">mb_strcut()</strong></span> 和 <span class="function">{@link mb_substr()}</span> 类似，都是从字符串中提取子字符串，但是按字节数来执行，而不是字符个数。   如果截断位置位于多字节字符两个字节的中间，将于该字符的第一个字节开始执行。   这也是和 <span class="function">{@link substr()}</span> 函数的不同之处，后者简单地将字符串在字节之间截断，这将导致一个畸形的字节序列。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-strcut-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       要截断的 <span class="type" style="color:#EAB766">string</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">start</span></dt>     <dd>      <p class="para">        如果 <span class="parameter" style="color:#3A95FF">start</span> 不是负数，返回的字符串会从 <span class="parameter" style="color:#3A95FF">string</span> 的第 <span class="parameter" style="color:#3A95FF">start</span> <em>字节</em>位置开始，从 0 开始计数。举个例子，字符串 &#039;<span>abcdef</span>&#039;，字节位置 <span>0</span> 的字符是 &#039;<span>a</span>&#039;，字节位置 <span>2</span> 的字符是       &#039;<span>c</span>&#039;，以此类推。      </p>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">start</span> 是负数，返回的字符串是从 <span class="parameter" style="color:#3A95FF">string</span> 末尾倒数第 <span class="parameter" style="color:#3A95FF">start</span>       个字节开始的。但是，如果负 <span class="parameter" style="color:#3A95FF">start</span> 大于字符串的长度，则返回的部分将从 <span class="parameter" style="color:#3A95FF">string</span> 的开头开始。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">       <em>字节</em>长度。如果省略或传递 <span>NULL</span>，则将所有字节提取到字符串的末尾。      </p>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">length</span> 为负数，则返回的字符串将在从 <span class="parameter" style="color:#3A95FF">string</span> 末尾倒数的第 <span class="parameter" style="color:#3A95FF">length</span>       个字节处结束。但是，如果负 <span class="parameter" style="color:#3A95FF">length</span> 大于 <span class="parameter" style="color:#3A95FF">start</span> 位置之后的字符数，则返回空字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-strcut-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="function"><strong style="color:#CC7832">mb_strcut()</strong></span> 根据 <span class="parameter" style="color:#3A95FF">start</span> 和 <span class="parameter" style="color:#3A95FF">length</span> 参数返回 <span class="parameter" style="color:#3A95FF">string</span> 的一部分。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-strcut-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-strcut-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_substr()} - 获取部分字符串</span></li>    <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>   </ul>  </span> </div></div>
 * @return string mb_strcut returns the portion of*/
function mb_strcut(string $string, int $start, ?int $length, ?string $encoding): string {}

/**
*<div id="function.mb-strwidth" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_strwidth</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_strwidth</span> &mdash; <span class="dc-title">返回字符串的宽度</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-strwidth-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_strwidth</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   返回 <span class="type" style="color:#EAB766">string</span> 类型 <span class="parameter" style="color:#3A95FF">string</span> 的宽度，其中半角字符计为 <span>1</span>，全角字符计为   <span>2</span>。有关东亚字符宽度的详细信息，请参见 <a href="http://www.unicode.org/reports/tr11/" class="link external">&raquo;&nbsp;http://www.unicode.org/reports/tr11/</a>。  </p>  <p class="para">   全角字符是：   <span>U+1100</span>-<span>U+115F</span>,   <span>U+11A3</span>-<span>U+11A7</span>,   <span>U+11FA</span>-<span>U+11FF</span>,   <span>U+2329</span>-<span>U+232A</span>,   <span>U+2E80</span>-<span>U+2E99</span>,   <span>U+2E9B</span>-<span>U+2EF3</span>,   <span>U+2F00</span>-<span>U+2FD5</span>,   <span>U+2FF0</span>-<span>U+2FFB</span>,   <span>U+3000</span>-<span>U+303E</span>,   <span>U+3041</span>-<span>U+3096</span>,   <span>U+3099</span>-<span>U+30FF</span>,   <span>U+3105</span>-<span>U+312D</span>,   <span>U+3131</span>-<span>U+318E</span>,   <span>U+3190</span>-<span>U+31BA</span>,   <span>U+31C0</span>-<span>U+31E3</span>,   <span>U+31F0</span>-<span>U+321E</span>,   <span>U+3220</span>-<span>U+3247</span>,   <span>U+3250</span>-<span>U+32FE</span>,   <span>U+3300</span>-<span>U+4DBF</span>,   <span>U+4E00</span>-<span>U+A48C</span>,   <span>U+A490</span>-<span>U+A4C6</span>,   <span>U+A960</span>-<span>U+A97C</span>,   <span>U+AC00</span>-<span>U+D7A3</span>,   <span>U+D7B0</span>-<span>U+D7C6</span>,   <span>U+D7CB</span>-<span>U+D7FB</span>,   <span>U+F900</span>-<span>U+FAFF</span>,   <span>U+FE10</span>-<span>U+FE19</span>,   <span>U+FE30</span>-<span>U+FE52</span>,   <span>U+FE54</span>-<span>U+FE66</span>,   <span>U+FE68</span>-<span>U+FE6B</span>,   <span>U+FF01</span>-<span>U+FF60</span>,   <span>U+FFE0</span>-<span>U+FFE6</span>,   <span>U+1B000</span>-<span>U+1B001</span>,   <span>U+1F200</span>-<span>U+1F202</span>,   <span>U+1F210</span>-<span>U+1F23A</span>,   <span>U+1F240</span>-<span>U+1F248</span>,   <span>U+1F250</span>-<span>U+1F251</span>,   <span>U+20000</span>-<span>U+2FFFD</span>,   <span>U+30000</span>-<span>U+3FFFD</span>。   其它所有字符都是半角字符。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-strwidth-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       待解码的 <span class="type" style="color:#EAB766">string</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-strwidth-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">string</span> 的宽度。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-strwidth-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-strwidth-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_strwidth()</strong></span> 示例</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(<br />    </span><span style="color: #9876AA">mb_strwidth</span><span style="color: #007700">(</span><span style="color: #DD0000">'a'</span><span style="color: #007700">),       </span><span style="color: #FF8000">// 拉丁文小写字母 A<br />    </span><span style="color: #9876AA">mb_strwidth</span><span style="color: #007700">(</span><span style="color: #DD0000">"\u{ff41}"</span><span style="color: #007700">) </span><span style="color: #FF8000">// 全角拉丁文小写字母 A<br /></span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>int(1)<br>int(2)<br></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-strwidth-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_strimwidth()} - 获取按指定宽度截断的字符串</span></li>    <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>   </ul>  </span> </div></div>
 * @return int The width of string str.*/
function mb_strwidth(string $string, ?string $encoding): int {}

/**
*<div id="function.mb-strimwidth" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_strimwidth</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_strimwidth</span> &mdash; <span class="dc-title">获取按指定宽度截断的字符串</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-strimwidth-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_strimwidth</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$start</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$width</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$trim_marker</span><span class="initializer"> = &quot;&quot;</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   将 <span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">string</span> 截断到指定 <span class="parameter" style="color:#3A95FF">width</span>。其中半角字符计为   <span>1</span>，全角字符计为 <span>2</span>。有关东亚字符宽度的详细信息，请参阅 <a href="http://www.unicode.org/reports/tr11/" class="link external">&raquo;&nbsp;http://www.unicode.org/reports/tr11/</a>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-strimwidth-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       要截断的 <span class="type" style="color:#EAB766">string</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">start</span></dt>     <dd>      <p class="para">       开始位置的偏移。从这些字符数开始的截取字符串。（默认是 0 个字符）       如果 start 是负数，就是字符串结尾处的字符数。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">width</span></dt>     <dd>      <p class="para">       所需修剪的宽度。如果指定负宽度，则从字符串末尾开始计数。       <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:         <p class="para">         从 PHP 8.3.0 起，传递负宽度已被弃用。        </p>       </p></blockquote>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">trim_marker</span></dt>     <dd>      <p class="para">       当字符串被截断的时候，将此字符串添加到截断后的末尾。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-strimwidth-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   截断后的 <span class="type" style="color:#EAB766">string</span>。如果设置了 <span class="parameter" style="color:#3A95FF">trim_marker</span>，还将结尾处的字符替换为   <span class="parameter" style="color:#3A95FF">trim_marker</span> ，并符合 <span class="parameter" style="color:#3A95FF">width</span> 的宽度。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-strimwidth-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       将负的 <span class="parameter" style="color:#3A95FF">width</span> 传递给       <span class="function"><strong style="color:#CC7832">mb_strimwidth()</strong></span> 现已废弃。      </td>     </tr>     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>     <tr>      <td>7.1.0</td>      <td>       支持负数的 <span class="parameter" style="color:#3A95FF">start</span> 和 <span class="parameter" style="color:#3A95FF">width</span>。      </td>     </tr>    </tbody>     </table> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-strimwidth-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_strimwidth()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">mb_strimwidth</span><span style="color: #007700">(</span><span style="color: #DD0000">"Hello World"</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #DD0000">"..."</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">// 输出 Hello W...<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-strimwidth-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_strwidth()} - 返回字符串的宽度</span></li>    <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>   </ul>  </span> </div></div>
 * @return string The truncated string. If trimmarker is set,*/
function mb_strimwidth(string $string, int $start, int $width, string $trim_marker = '', ?string $encoding): string {}

/**
*<div id="function.mb-convert-encoding" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_convert_encoding</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_convert_encoding</span> &mdash; <span class="dc-title">转换字符串，从一个字符编码到另一个字符编码</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-convert-encoding-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_convert_encoding</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766">string</span></span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$to_encoding</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">null</span></span> <span class="parameter" style="color:#3A95FF">$from_encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   转换 <span class="type" style="color:#EAB766">string</span> 从 <span class="parameter" style="color:#3A95FF">from_encoding</span> 或当前内部编码转换到 <span class="parameter" style="color:#3A95FF">to_encoding</span>。   当参数 <span class="parameter" style="color:#3A95FF">string</span> 是 <span class="type" style="color:#EAB766">array</span> 时，将递归转换它所有的 <span class="type" style="color:#EAB766">string</span> 值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-convert-encoding-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       要转换的 <span class="type" style="color:#EAB766">string</span> 或 <span class="type" style="color:#EAB766">array</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">to_encoding</span></dt>     <dd>      <p class="para">       所需的结果编码。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">from_encoding</span></dt>     <dd>      <p class="para">       当前用于解释 <span class="parameter" style="color:#3A95FF">string</span> 的编码。可以将多个编码指定为 <span class="type" style="color:#EAB766">array</span>       或逗号分隔列表，在这种情况下，将使用与 <span class="function">{@link mb_detect_encoding()}</span> 相同的算法来猜测正确的编码。      </p>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">from_encoding</span> 被省略或为 <strong><span>null</span></strong>，则将使用 <a href="https://www.php.net/manual/zh/mbstring.configuration.php#ini.mbstring.internal-encoding" class="link">mbstring.internal_encoding       设置</a>，否则使用 <a href="https://www.php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset 设置</a>。      </p>      <p class="para">       有关 <span class="parameter" style="color:#3A95FF">to_encoding</span> 和 <span class="parameter" style="color:#3A95FF">from_encoding</span> 的有效值，请参阅<a href="https://www.php.net/manual/zh/mbstring.supported-encodings.php" class="link">支持的编码</a>。      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-convert-encoding-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   编码后的 <span class="type" style="color:#EAB766">string</span>。   成功时返回编码后的 <span class="type" style="color:#EAB766">string</span> 或 <span class="type" style="color:#EAB766">array</span>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.mb-convert-encoding-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   当 <span class="parameter" style="color:#3A95FF">to_encoding</span> 或 <span class="parameter" style="color:#3A95FF">from_encoding</span> 为无效的编码时，   PHP 8.0.0 起将抛出 <span class="classname"><a href="https://www.php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span>；   而在 PHP 8.0.0 之前的版本里，会产生一个 <strong><span>E_WARNING</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-convert-encoding-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       现在，当 <span class="parameter" style="color:#3A95FF">to_encoding</span> 为无效编码时，       <span class="function"><strong style="color:#CC7832">mb_convert_encoding()</strong></span> 会抛出 <span class="classname"><a href="https://www.php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       现在，当 <span class="parameter" style="color:#3A95FF">from_encoding</span> 为无效编码时，       <span class="function"><strong style="color:#CC7832">mb_convert_encoding()</strong></span> 会抛出 <span class="classname"><a href="https://www.php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       现在 <span class="parameter" style="color:#3A95FF">from_encoding</span> 可以传入 null。      </td>     </tr>     <tr>      <td>7.2.0</td>      <td>       现在该函数的 <span class="parameter" style="color:#3A95FF">string</span> 参数同时能接受 <span class="type" style="color:#EAB766">array</span> 类型。       在此之前，仅支持 <span class="type" style="color:#EAB766">string</span>。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-convert-encoding-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_convert_encoding()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 转换内部编码为 SJIS <br /></span><span style="color: #9876AA">$str </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_convert_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #DD0000">"SJIS"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 将 EUC-JP 转换成 UTF-7 <br /></span><span style="color: #9876AA">$str </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_convert_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #DD0000">"UTF-7"</span><span style="color: #007700">, </span><span style="color: #DD0000">"EUC-JP"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 从 JIS, eucjp-win, sjis-win 中自动检测编码，并转换 str 到 UCS-2LE <br /></span><span style="color: #9876AA">$str </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_convert_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #DD0000">"UCS-2LE"</span><span style="color: #007700">, </span><span style="color: #DD0000">"JIS, eucjp-win, sjis-win"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 如果 mbstring.language 是 "Japanese"，"auto" 扩展成 "ASCII,JIS,UTF-8,EUC-JP,SJIS" <br /></span><span style="color: #9876AA">$str </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_convert_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #DD0000">"EUC-JP"</span><span style="color: #007700">, </span><span style="color: #DD0000">"auto"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-convert-encoding-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_detect_order()} - 设置/获取 字符编码的检测顺序</span></li>    <li class="member"><span class="methodname" style="color:#CC7832">{@link UConverter::transcode()} - Convert a string from one character encoding to another</span></li>    <li class="member"><span class="function">{@link iconv()} - 将字符串从一个字符编码转换到另一个字符编码</span></li>   </ul>  </span> </div> </div>
 * @return array|string|false The encoded string.*/
function mb_convert_encoding(array|string $string, string $to_encoding, array|string|null $from_encoding = null): array|string|false {}

/**
*<div id="function.mb-detect-encoding" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_detect_encoding</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_detect_encoding</span> &mdash; <span class="dc-title">检测字符的编码</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-detect-encoding-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_detect_encoding</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">null</span></span> <span class="parameter" style="color:#3A95FF">$encodings</span><span class="initializer"> = <strong><span>null</span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$strict</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   从有序的候选列表中检测 <span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">string</span> 最可能的字符编码。  </p>  <p class="para">   对预期（intended）字符编码的自动检测不可能永远完全可靠；没有额外的信息，就类似于在没有密钥的情况下解码已编码的字符串。最好使用与数据一起存储或传输的字符编码表示，例如“Content-Type” HTTP 头。  </p>  <p class="para">   此函数适用于多字节编码，但并非所有字节顺序都构成有效字符串。如果输入字符串包含这样的顺序，则将会拒绝该编码，并检查下一个编码。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-detect-encoding-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       要检测的 <span class="type" style="color:#EAB766">string</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encodings</span></dt>     <dd>      <p class="para">       按顺序尝试的字符编码列表。该列表可以指定为字符串数组，或以逗号分隔的单个字符串。      </p>      <p class="para">       如果省略 <span class="parameter" style="color:#3A95FF">encodings</span> 被或为 <strong><span>null</span></strong>，则将使用当前的 detect_order（使用       <a href="https://www.php.net/manual/zh/mbstring.configuration.php#ini.mbstring.detect-order" class="link">mbstring.detect_order</a> 配置选项或       <span class="function">{@link mb_detect_order()}</span> 函数设置）。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">strict</span></dt>     <dd>      <p class="para">       控制 <span class="parameter" style="color:#3A95FF">string</span> 在列出的所有 <span class="parameter" style="color:#3A95FF">encodings</span> 中无效时的行为。如果       <span class="parameter" style="color:#3A95FF">strict</span> 设置为 <strong><span>false</span></strong>，将返回最接近的匹配编码；如果 <span class="parameter" style="color:#3A95FF">strict</span>       设置为 <strong><span>true</span></strong>，将返回 <strong><span>false</span></strong>。      </p>      <p class="para">       可以使用 <a href="https://www.php.net/manual/zh/mbstring.configuration.php#ini.mbstring.strict-detection" class="link">mbstring.strict_detection</a> 配置选项设置 <span class="parameter" style="color:#3A95FF">strict</span> 的默认值。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-detect-encoding-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   检测到的字符编码，如果字符串在任何列出的编码中均无效，则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-detect-encoding-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_detect_encoding()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 使用当前的 detect_order 来检测字符编码<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">mb_detect_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// "auto" 将根据 mbstring.language 来扩展<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">mb_detect_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #DD0000">"auto"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 通过以逗号分隔的列表指定“encodings”参数<br /></span><span style="color: #007700">echo </span><span style="color: #9876AA">mb_detect_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #DD0000">"JIS, eucjp-win, sjis-win"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// 使用数组指定“encodings”参数<br /></span><span style="color: #9876AA">$encodings </span><span style="color: #007700">= [<br />  </span><span style="color: #DD0000">"ASCII"</span><span style="color: #007700">,<br />  </span><span style="color: #DD0000">"JIS"</span><span style="color: #007700">,<br />  </span><span style="color: #DD0000">"EUC-JP"<br /></span><span style="color: #007700">];<br />echo </span><span style="color: #9876AA">mb_detect_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #9876AA">$encodings</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 <span class="parameter" style="color:#3A95FF">strict</span> 参数的影响</strong></p>    <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 'áéóú' 在 ISO-8859-1 中的编码<br /></span><span style="color: #9876AA">$str </span><span style="color: #007700">= </span><span style="color: #DD0000">"\xE1\xE9\xF3\xFA"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// 该字符串不是有效的 ASCII 或 UTF-8，但 UTF-8 被认为是更接近的匹配<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_detect_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, [</span><span style="color: #DD0000">'ASCII'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">], </span><span style="color: #9876AA">false</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_detect_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, [</span><span style="color: #DD0000">'ASCII'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">], </span><span style="color: #9876AA">true</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">// 如果找到有效编码，则严格参数不会更改结果<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_detect_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, [</span><span style="color: #DD0000">'ASCII'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">, </span><span style="color: #DD0000">'ISO-8859-1'</span><span style="color: #007700">], </span><span style="color: #9876AA">false</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_detect_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, [</span><span style="color: #DD0000">'ASCII'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">, </span><span style="color: #DD0000">'ISO-8859-1'</span><span style="color: #007700">], </span><span style="color: #9876AA">true</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>string(5) &quot;UTF-8&quot;<br>bool(false)<br>string(10) &quot;ISO-8859-1&quot;<br>string(10) &quot;ISO-8859-1&quot;<br></span></div>    </div>   </div>  </p>  <p class="para">   在某些情况下，相同的字节顺序可能会在多种字符编码中形成有效的字符串，并且无法知道其意图是哪种解释。例如，在众多字符编码中，字节序列“\xC4\xA2”可能是：  </p>  <p class="para">   <ul class="simplelist">    <li class="member">     &quot;Ä¢&quot; (U+00C4 LATIN CAPITAL LETTER A WITH DIAERESIS followed by U+00A2 CENT SIGN)     encoded in any of ISO-8859-1, ISO-8859-15, or Windows-1252    </li>    <li class="member">     &quot;ФЂ&quot; (U+0424 CYRILLIC CAPITAL LETTER EF followed by U+0402 CYRILLIC CAPITAL LETTER     DJE) encoded in ISO-8859-5    </li>    <li class="member">     &quot;Ģ&quot; (U+0122 LATIN CAPITAL LETTER G WITH CEDILLA) encoded in UTF-8    </li>   </ul>  </p>  <p class="para">   <div class="example" id="">    <p><strong>示例 #3 匹配多个编码时顺序的影响</strong></p>    <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$str </span><span style="color: #007700">= </span><span style="color: #DD0000">"\xC4\xA2"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">// 该字符串在所有三种编码中均有效，因此将返回列出的第一个<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_detect_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, [</span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">, </span><span style="color: #DD0000">'ISO-8859-1'</span><span style="color: #007700">, </span><span style="color: #DD0000">'ISO-8859-5'</span><span style="color: #007700">]));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_detect_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, [</span><span style="color: #DD0000">'ISO-8859-1'</span><span style="color: #007700">, </span><span style="color: #DD0000">'ISO-8859-5'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">]));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_detect_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, [</span><span style="color: #DD0000">'ISO-8859-5'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">, </span><span style="color: #DD0000">'ISO-8859-1'</span><span style="color: #007700">]));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>string(5) &quot;UTF-8&quot;<br>string(10) &quot;ISO-8859-1&quot;<br>string(10) &quot;ISO-8859-5&quot;<br></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-detect-encoding-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_detect_order()} - 设置/获取 字符编码的检测顺序</span></li>   </ul>  </span> </div></div>
 * @return string|false The detected character encoding or false if the encoding cannot be*/
function mb_detect_encoding(string $string, array|string|null $encodings = null, bool $strict = false): string|false {}

/**
*<div id="function.mb-list-encodings" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_list_encodings</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_list_encodings</span> &mdash; <span class="dc-title">返回所有支持编码的数组</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-list-encodings-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_list_encodings</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   返回所有支持编码的数组。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-list-encodings-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-list-encodings-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个数字索引数组。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.mb-list-encodings-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   该函数不会触发任何错误。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-list-encodings-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_list_encodings()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_list_encodings</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [0] =&gt; pass<br>    [1] =&gt; auto<br>    [2] =&gt; wchar<br>    [3] =&gt; byte2be<br>    [4] =&gt; byte2le<br>    [5] =&gt; byte4be<br>    [6] =&gt; byte4le<br>    [7] =&gt; BASE64<br>    [8] =&gt; UUENCODE<br>    [9] =&gt; HTML-ENTITIES<br>    [10] =&gt; Quoted-Printable<br>    [11] =&gt; 7bit<br>    [12] =&gt; 8bit<br>    [13] =&gt; UCS-4<br>    [14] =&gt; UCS-4BE<br>    [15] =&gt; UCS-4LE<br>    [16] =&gt; UCS-2<br>    [17] =&gt; UCS-2BE<br>    [18] =&gt; UCS-2LE<br>    [19] =&gt; UTF-32<br>    [20] =&gt; UTF-32BE<br>    [21] =&gt; UTF-32LE<br>    [22] =&gt; UTF-16<br>    [23] =&gt; UTF-16BE<br>    [24] =&gt; UTF-16LE<br>    [25] =&gt; UTF-8<br>    [26] =&gt; UTF-7<br>    [27] =&gt; UTF7-IMAP<br>    [28] =&gt; ASCII<br>    [29] =&gt; EUC-JP<br>    [30] =&gt; SJIS<br>    [31] =&gt; eucJP-win<br>    [32] =&gt; SJIS-win<br>    [33] =&gt; JIS<br>    [34] =&gt; ISO-2022-JP<br>    [35] =&gt; Windows-1252<br>    [36] =&gt; ISO-8859-1<br>    [37] =&gt; ISO-8859-2<br>    [38] =&gt; ISO-8859-3<br>    [39] =&gt; ISO-8859-4<br>    [40] =&gt; ISO-8859-5<br>    [41] =&gt; ISO-8859-6<br>    [42] =&gt; ISO-8859-7<br>    [43] =&gt; ISO-8859-8<br>    [44] =&gt; ISO-8859-9<br>    [45] =&gt; ISO-8859-10<br>    [46] =&gt; ISO-8859-13<br>    [47] =&gt; ISO-8859-14<br>    [48] =&gt; ISO-8859-15<br>    [49] =&gt; EUC-CN<br>    [50] =&gt; CP936<br>    [51] =&gt; HZ<br>    [52] =&gt; EUC-TW<br>    [53] =&gt; BIG-5<br>    [54] =&gt; EUC-KR<br>    [55] =&gt; UHC<br>    [56] =&gt; ISO-2022-KR<br>    [57] =&gt; Windows-1251<br>    [58] =&gt; CP866<br>    [59] =&gt; KOI8-R<br>)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-list-encodings-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="function">{@link mb_encoding_aliases()} - Get aliases of a known encoding type</span></li>  </ul> </div></div>
 * @return string[] a numerically indexed array.*/
function mb_list_encodings(): array {}

/**
*<div id="function.mb-encoding-aliases" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_encoding_aliases</h1>  <p class="verinfo">(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_encoding_aliases</span> &mdash; <span class="dc-title">Get aliases of a known encoding type</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-encoding-aliases-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_encoding_aliases</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$encoding</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Returns an array of aliases for a known <span class="parameter" style="color:#3A95FF">encoding</span> type.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-encoding-aliases-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>    <dd>     <span>      The encoding type being checked, for aliases.     </span>    </dd>     </dl> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-encoding-aliases-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a numerically indexed array of encoding aliases.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.mb-encoding-aliases-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   Throws a <span class="classname"><a href="https://www.php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span> if   <span class="parameter" style="color:#3A95FF">encoding</span> is unknown.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-encoding-aliases-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       If the <span class="parameter" style="color:#3A95FF">encoding</span> is unknown, a <span class="classname"><a href="https://www.php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span>       is now thrown; previously an <strong><span>E_WARNING</span></strong> was emitted,       and the function returned <strong><span>false</span></strong>.      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-encoding-aliases-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_encoding_aliases()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$encoding        </span><span style="color: #007700">= </span><span style="color: #DD0000">'ASCII'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$known_encodings </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_list_encodings</span><span style="color: #007700">();<br /><br />if (</span><span style="color: #9876AA">in_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$encoding</span><span style="color: #007700">, </span><span style="color: #9876AA">$known_encodings</span><span style="color: #007700">)) {<br /><br />    </span><span style="color: #9876AA">$aliases </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_encoding_aliases</span><span style="color: #007700">(</span><span style="color: #9876AA">$encoding</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$aliases</span><span style="color: #007700">);<br /><br />} else {<br /><br />    echo </span><span style="color: #DD0000">"Unknown (</span><span style="color: #9876AA">$encoding</span><span style="color: #DD0000">) encoding.\n"</span><span style="color: #007700">;<br /><br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [0] =&gt; ANSI_X3.4-1968<br>    [1] =&gt; iso-ir-6<br>    [2] =&gt; ANSI_X3.4-1986<br>    [3] =&gt; ISO_646.irv:1991<br>    [4] =&gt; US-ASCII<br>    [5] =&gt; ISO646-US<br>    [6] =&gt; us<br>    [7] =&gt; IBM367<br>    [8] =&gt; cp367<br>    [9] =&gt; csASCII<br>)<br></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-encoding-aliases-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_list_encodings()} - 返回所有支持编码的数组</span></li>   </ul>  </span> </div></div>
 * @return string[]|false a numerically indexed array of encoding aliases on success, or FALSE on failure*/
function mb_encoding_aliases(string $encoding) {}

/**
*<div id="function.mb-convert-kana" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_convert_kana</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_convert_kana</span> &mdash; <span class="dc-title">Convert &quot;kana&quot; one from another (&quot;zen-kaku&quot;, &quot;han-kaku&quot; and more)</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-convert-kana-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_convert_kana</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$mode</span><span class="initializer"> = &quot;KV&quot;</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Performs a &quot;han-kaku&quot; - &quot;zen-kaku&quot; conversion for <span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">string</span>.    This function is only useful for Japanese.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-convert-kana-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       The <span class="type" style="color:#EAB766">string</span> being converted.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">mode</span></dt>     <dd>      <p class="para">       The conversion option.      </p>      <p class="para">       Specify with a combination of following options.       <table class="doctable table">        <caption><strong>Applicable Conversion Options</strong></caption>                 <thead>          <tr>           <th>Option</th>           <th>Meaning</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td><span>r</span></td>           <td>            Convert &quot;zen-kaku&quot; alphabets to &quot;han-kaku&quot;           </td>          </tr>          <tr>           <td><span>R</span></td>           <td>            Convert &quot;han-kaku&quot; alphabets to &quot;zen-kaku&quot;           </td>          </tr>          <tr>           <td><span>n</span></td>           <td>            Convert &quot;zen-kaku&quot; numbers to &quot;han-kaku&quot;           </td>          </tr>          <tr>           <td><span>N</span></td>           <td>            Convert &quot;han-kaku&quot; numbers to &quot;zen-kaku&quot;           </td>          </tr>          <tr>           <td><span>a</span></td>           <td>            Convert &quot;zen-kaku&quot; alphabets and numbers to &quot;han-kaku&quot;           </td>          </tr>          <tr>           <td><span>A</span></td>           <td>            Convert &quot;han-kaku&quot; alphabets and numbers to &quot;zen-kaku&quot;            (Characters included in &quot;a&quot;, &quot;A&quot; options are            U+0021 - U+007E excluding U+0022, U+0027, U+005C, U+007E)           </td>          </tr>          <tr>           <td><span>s</span></td>           <td>            Convert &quot;zen-kaku&quot; space to &quot;han-kaku&quot; (U+3000 -&gt; U+0020)           </td>          </tr>          <tr>           <td><span>S</span></td>           <td>            Convert &quot;han-kaku&quot; space to &quot;zen-kaku&quot; (U+0020 -&gt; U+3000)           </td>          </tr>          <tr>           <td><span>k</span></td>           <td>            Convert &quot;zen-kaku kata-kana&quot; to &quot;han-kaku kata-kana&quot;           </td>          </tr>          <tr>           <td><span>K</span></td>           <td>            Convert &quot;han-kaku kata-kana&quot; to &quot;zen-kaku kata-kana&quot;           </td>          </tr>          <tr>           <td><span>h</span></td>           <td>            Convert &quot;zen-kaku hira-gana&quot; to &quot;han-kaku kata-kana&quot;           </td>          </tr>          <tr>           <td><span>H</span></td>           <td>            Convert &quot;han-kaku kata-kana&quot; to &quot;zen-kaku hira-gana&quot;           </td>          </tr>          <tr>           <td><span>c</span></td>           <td>           Convert &quot;zen-kaku kata-kana&quot; to &quot;zen-kaku hira-gana&quot;           </td>          </tr>          <tr>           <td><span>C</span></td>           <td>            Convert &quot;zen-kaku hira-gana&quot; to &quot;zen-kaku kata-kana&quot;           </td>          </tr>          <tr>           <td><span>V</span></td>           <td>            Collapse voiced sound notation and convert them into a character. Use with &quot;K&quot;,&quot;H&quot;           </td>          </tr>         </tbody>               </table>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-convert-kana-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The converted <span class="type" style="color:#EAB766">string</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.mb-convert-kana-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   Throws a <span class="classname"><a href="https://www.php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span> if the combination of   different <span class="parameter" style="color:#3A95FF">mode</span>s is invalid.   For example <span>&quot;sS&quot;</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-convert-kana-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.2.0</td>       <td>        A <span class="classname"><a href="https://www.php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span> is now thrown if the        combination of different <span class="parameter" style="color:#3A95FF">mode</span>s is invalid.       </td>     </tr>     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-convert-kana-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_convert_kana()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Convert all "kana" to "zen-kaku" "kata-kana" <br /></span><span style="color: #9876AA">$str </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_convert_kana</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #DD0000">"KVC"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Convert "han-kaku" "kata-kana" to "zen-kaku" "kata-kana" <br />   and "zen-kaku" alphanumeric to "han-kaku" <br /></span><span style="color: #9876AA">$str </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_convert_kana</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #DD0000">"KVa"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
 * @return string The converted string.*/
function mb_convert_kana(string $string, string $mode = 'KV', ?string $encoding): string {}

/**
*<div id="function.mb-encode-mimeheader" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_encode_mimeheader</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_encode_mimeheader</span> &mdash; <span class="dc-title">为 MIME 头编码字符串</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-encode-mimeheader-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_encode_mimeheader</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$charset</span><span class="initializer"> = <strong><span>null</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$transfer_encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$newline</span><span class="initializer"> = &quot;\r\n&quot;</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$indent</span><span class="initializer"> = 0</span></span><br>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   按 MIME 头编码方案将指定的<span class="type" style="color:#EAB766"><span class="type 字符串" style="color:#EAB766">字符串</span></span> <span class="parameter" style="color:#3A95FF">string</span> 进行编码。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-encode-mimeheader-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       要编码的 <span class="type" style="color:#EAB766">string</span>。       它的编码应该和 <span class="function">{@link mb_internal_encoding()}</span> 一样。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">charset</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">charset</span> 指定了 <span class="parameter" style="color:#3A95FF">str</span> 的字符集名。       其默认值由当前的 NLS 设置（<span>mbstring.language</span>）来确定。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">transfer_encoding</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">transfer_encoding</span> 指定了 MIME 的编码方案。       它可以是 <span>&quot;B&quot;</span>（Base64）也可以是 <span>&quot;Q&quot;</span>（Quoted-Printable）。       如果未设置，将回退为 <span>&quot;B&quot;</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">newline</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">newline</span> 指定了 EOL（行尾）标记，使 <span class="function"><strong style="color:#CC7832">mb_encode_mimeheader()</strong></span> 执行了一个换行（<a href="http://www.faqs.org/rfcs/rfc2822" class="link external">&raquo;&nbsp;RFC</a> 文档中规定，超过长度的一行将换成多行，当前该长度硬式编码为 74 个字符）。       如果没有设定，则回退为 <span>&quot;\r\n&quot;</span> (CRLF)。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">indent</span></dt>     <dd>      <p class="para">       首行缩进（header 里 <span class="parameter" style="color:#3A95FF">string</span> 前的字符数目）。      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-encode-mimeheader-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   转换后的<span class="type" style="color:#EAB766"><span class="type 字符串" style="color:#EAB766">字符串</span></span>版本以 ASCII 形式表达。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-encode-mimeheader-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">charset</span> 和 <span class="parameter" style="color:#3A95FF">transfer_encoding</span>       现在可以为空。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-encode-mimeheader-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_encode_mimeheader()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$name </span><span style="color: #007700">= </span><span style="color: #DD0000">"太郎"</span><span style="color: #007700">; </span><span style="color: #FF8000">// kanji<br /></span><span style="color: #9876AA">$mbox </span><span style="color: #007700">= </span><span style="color: #DD0000">"kru"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$doma </span><span style="color: #007700">= </span><span style="color: #DD0000">"gtinn.mon"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$addr </span><span style="color: #007700">= </span><span style="color: #DD0000">'"' </span><span style="color: #007700">. </span><span style="color: #9876AA">addcslashes</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_encode_mimeheader</span><span style="color: #007700">(</span><span style="color: #9876AA">$name</span><span style="color: #007700">, </span><span style="color: #DD0000">"UTF-7"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Q"</span><span style="color: #007700">), </span><span style="color: #DD0000">'"'</span><span style="color: #007700">) . </span><span style="color: #DD0000">'" &lt;' </span><span style="color: #007700">. </span><span style="color: #9876AA">$mbox </span><span style="color: #007700">. </span><span style="color: #DD0000">"@" </span><span style="color: #007700">. </span><span style="color: #9876AA">$doma </span><span style="color: #007700">. </span><span style="color: #DD0000">"&gt;"</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">$addr</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;">     <div class="cdata"><span>&quot;=?UTF-7?Q?+WSqQzg-?=&quot; &lt;kru@gtinn.mon&gt;<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-encode-mimeheader-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    这个函数没有设计成据更高级上下文的中断点来换行（单词边界等）。    这个特性将导致意外的空格可能会让原始字符串看上去很乱。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-encode-mimeheader-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_decode_mimeheader()} - 解码 MIME 头字段中的字符串</span></li>   </ul>  </span> </div></div>
 * @return string A converted version of the string represented in ASCII.*/
function mb_encode_mimeheader(string $string, ?string $charset, ?string $transfer_encoding, string $newline = "\r\n", int $indent = 0): string {}

/**
*<div id="function.mb-decode-mimeheader" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_decode_mimeheader</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_decode_mimeheader</span> &mdash; <span class="dc-title">解码 MIME 头字段中的字符串</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-decode-mimeheader-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_decode_mimeheader</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   解码 MIME 头中编码过的 <span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">string</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-decode-mimeheader-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       要解码的 <span class="type" style="color:#EAB766">string</span>。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-decode-mimeheader-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   以内部（internal）字符编码解码的 <span class="type" style="color:#EAB766">string</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-decode-mimeheader-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_encode_mimeheader()} - 为 MIME 头编码字符串</span></li>   </ul>  </span> </div></div>
 * @return string The decoded string in internal character encoding.*/
function mb_decode_mimeheader(string $string): string {}

/**
*<div id="function.mb-convert-variables" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_convert_variables</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_convert_variables</span> &mdash; <span class="dc-title">转换一个或多个变量的字符编码</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-convert-variables-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_convert_variables</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$to_encoding</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766">string</span></span> <span class="parameter" style="color:#3A95FF">$from_encoding</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">&$var</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">&...$vars</span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   将变量 <span class="parameter" style="color:#3A95FF">var</span> 和 <span class="parameter" style="color:#3A95FF">vars</span> 的编码从 <span class="parameter" style="color:#3A95FF">from_encoding</span> 转换成编码 <span class="parameter" style="color:#3A95FF">to_encoding</span>。  </p>  <p class="para">   <span class="function"><strong style="color:#CC7832">mb_convert_variables()</strong></span> 会拼接变量数组或对象中的字符串来检测编码，因为短字符串的检测往往会失败。因此，不能在一个数组或对象中混合使用编码。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-convert-variables-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">to_encoding</span></dt>     <dd>      <p class="para">       将 <span class="type" style="color:#EAB766">string</span> 转换成这个编码。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">from_encoding</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">from_encoding</span> 可以指定为一个 <span class="type" style="color:#EAB766">array</span> 或者逗号分隔的 <span class="type" style="color:#EAB766">string</span>，它将尝试根据 <span class="parameter" style="color:#3A95FF">from-coding</span> 来检测编码。       当省略了 <span class="parameter" style="color:#3A95FF">from_encoding</span>，将使用 <span>detect_order</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">var</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">var</span> 是要转换的变量的引用。       参数可以接受 String、Array 和 Object 的类型。       <span class="function"><strong style="color:#CC7832">mb_convert_variables()</strong></span> 假设所有的参数都具有同样的编码。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">vars</span></dt>     <dd>      <p class="para">       额外的 <span class="parameter" style="color:#3A95FF">var</span>。      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-convert-variables-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回转换前的字符编码，失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-convert-variables-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_convert_variables()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// 转换变量 $post1、$post2 编码为内部（internal）编码 <br /></span><span style="color: #9876AA">$interenc </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_internal_encoding</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$inputenc </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_convert_variables</span><span style="color: #007700">(</span><span style="color: #9876AA">$interenc</span><span style="color: #007700">, </span><span style="color: #DD0000">"ASCII,UTF-8,SJIS-win"</span><span style="color: #007700">, </span><span style="color: #9876AA">$post1</span><span style="color: #007700">, </span><span style="color: #9876AA">$post2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
 * @return string|false The character encoding before conversion for success,*/
function mb_convert_variables(
    string $to_encoding,
    array|string $from_encoding,
    #[PhpStormStubsElementAvailable(from: '5.3', to: '7.4')] &$vars,
    #[PhpStormStubsElementAvailable(from: '8.0')] mixed &$var,
    mixed &...$vars
): string|false {}

/**
*<div id="function.mb-encode-numericentity" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_encode_numericentity</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_encode_numericentity</span> &mdash; <span class="dc-title">Encode character to HTML numeric string reference</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-encode-numericentity-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_encode_numericentity</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$map</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$hex</span><span class="initializer"> = <strong><span>false</span></strong></span></span><br>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Converts   specified character codes in <span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">string</span>   from character code to HTML numeric character reference.      </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-encode-numericentity-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       The <span class="type" style="color:#EAB766">string</span> being encoded.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">map</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">map</span> is array specifies code area to       convert.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">hex</span></dt>     <dd>      <p class="para">       Whether the returned entity reference should be in hexadecimal notation       (otherwise it is in decimal notation).      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-encode-numericentity-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The converted <span class="type" style="color:#EAB766">string</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-encode-numericentity-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-encode-numericentity-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="parameter" style="color:#3A95FF">map</span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$convmap </span><span style="color: #007700">= array (<br /> </span><span style="color: #9876AA">int start_code1</span><span style="color: #007700">, </span><span style="color: #9876AA">int end_code1</span><span style="color: #007700">, </span><span style="color: #9876AA">int offset1</span><span style="color: #007700">, </span><span style="color: #9876AA">int mask1</span><span style="color: #007700">,<br /> </span><span style="color: #9876AA">int start_code2</span><span style="color: #007700">, </span><span style="color: #9876AA">int end_code2</span><span style="color: #007700">, </span><span style="color: #9876AA">int offset2</span><span style="color: #007700">, </span><span style="color: #9876AA">int mask2</span><span style="color: #007700">,<br /> ........<br /> </span><span style="color: #9876AA">int start_codeN</span><span style="color: #007700">, </span><span style="color: #9876AA">int end_codeN</span><span style="color: #007700">, </span><span style="color: #9876AA">int offsetN</span><span style="color: #007700">, </span><span style="color: #9876AA">int maskN </span><span style="color: #007700">);<br /></span><span style="color: #FF8000">// Specify Unicode value for start_codeN and end_codeN<br />// Add offsetN to value and take bit-wise 'AND' with maskN, then<br />// it converts value to numeric string reference.<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 <span class="function"><strong style="color:#CC7832">mb_encode_numericentity()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Convert Left side of ISO-8859-1 to HTML numeric character reference <br /></span><span style="color: #9876AA">$convmap </span><span style="color: #007700">= array(</span><span style="color: #9876AA">0x80</span><span style="color: #007700">, </span><span style="color: #9876AA">0xff</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0xff</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$str </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_encode_numericentity</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #9876AA">$convmap</span><span style="color: #007700">, </span><span style="color: #DD0000">"ISO-8859-1"</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Convert user defined SJIS-win code in block 95-104 to numeric<br />   string reference <br /></span><span style="color: #9876AA">$convmap </span><span style="color: #007700">= array(<br />       </span><span style="color: #9876AA">0xe000</span><span style="color: #007700">, </span><span style="color: #9876AA">0xe03e</span><span style="color: #007700">, </span><span style="color: #9876AA">0x1040</span><span style="color: #007700">, </span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,<br />       </span><span style="color: #9876AA">0xe03f</span><span style="color: #007700">, </span><span style="color: #9876AA">0xe0bb</span><span style="color: #007700">, </span><span style="color: #9876AA">0x1041</span><span style="color: #007700">, </span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,<br />       </span><span style="color: #9876AA">0xe0bc</span><span style="color: #007700">, </span><span style="color: #9876AA">0xe0fa</span><span style="color: #007700">, </span><span style="color: #9876AA">0x1084</span><span style="color: #007700">, </span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,<br />       </span><span style="color: #9876AA">0xe0fb</span><span style="color: #007700">, </span><span style="color: #9876AA">0xe177</span><span style="color: #007700">, </span><span style="color: #9876AA">0x1085</span><span style="color: #007700">, </span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,<br />       </span><span style="color: #9876AA">0xe178</span><span style="color: #007700">, </span><span style="color: #9876AA">0xe1b6</span><span style="color: #007700">, </span><span style="color: #9876AA">0x10c8</span><span style="color: #007700">, </span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,<br />       </span><span style="color: #9876AA">0xe1b7</span><span style="color: #007700">, </span><span style="color: #9876AA">0xe233</span><span style="color: #007700">, </span><span style="color: #9876AA">0x10c9</span><span style="color: #007700">, </span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,<br />       </span><span style="color: #9876AA">0xe234</span><span style="color: #007700">, </span><span style="color: #9876AA">0xe272</span><span style="color: #007700">, </span><span style="color: #9876AA">0x110c</span><span style="color: #007700">, </span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,<br />       </span><span style="color: #9876AA">0xe273</span><span style="color: #007700">, </span><span style="color: #9876AA">0xe2ef</span><span style="color: #007700">, </span><span style="color: #9876AA">0x110d</span><span style="color: #007700">, </span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,<br />       </span><span style="color: #9876AA">0xe2f0</span><span style="color: #007700">, </span><span style="color: #9876AA">0xe32e</span><span style="color: #007700">, </span><span style="color: #9876AA">0x1150</span><span style="color: #007700">, </span><span style="color: #9876AA">0xffff</span><span style="color: #007700">,<br />       </span><span style="color: #9876AA">0xe32f</span><span style="color: #007700">, </span><span style="color: #9876AA">0xe3ab</span><span style="color: #007700">, </span><span style="color: #9876AA">0x1151</span><span style="color: #007700">, </span><span style="color: #9876AA">0xffff </span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$str </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_encode_numericentity</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #9876AA">$convmap</span><span style="color: #007700">, </span><span style="color: #DD0000">"sjis-win"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-encode-numericentity-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_decode_numericentity()} - 根据 HTML 数字字符串解码成字符</span></li>   </ul>  </span> </div></div>
 * @return string The converted string.*/
function mb_encode_numericentity(string $string, array $map, ?string $encoding = null, bool $hex = false): string {}

/**
*<div id="function.mb-decode-numericentity" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_decode_numericentity</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_decode_numericentity</span> &mdash; <span class="dc-title">根据 HTML 数字字符串解码成字符</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-decode-numericentity-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_decode_numericentity</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$map</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   将 <span class="type" style="color:#EAB766">string</span> 的数字字符串引用按指定的字符块转换成 <span class="parameter" style="color:#3A95FF">string</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-decode-numericentity-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       要解码的 <span class="type" style="color:#EAB766">string</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">map</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">map</span> 是 <span class="type" style="color:#EAB766">array</span>，指定了要转换的代码区域。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">is_hex</span></dt>     <dd>      <p class="para">       不使用此参数。      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-decode-numericentity-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   转换后的 <span class="type" style="color:#EAB766">string</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-decode-numericentity-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-decode-numericentity-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="parameter" style="color:#3A95FF">map</span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$convmap </span><span style="color: #007700">= array (<br />   </span><span style="color: #9876AA">int start_code1</span><span style="color: #007700">, </span><span style="color: #9876AA">int end_code1</span><span style="color: #007700">, </span><span style="color: #9876AA">int offset1</span><span style="color: #007700">, </span><span style="color: #9876AA">int mask1</span><span style="color: #007700">,<br />   </span><span style="color: #9876AA">int start_code2</span><span style="color: #007700">, </span><span style="color: #9876AA">int end_code2</span><span style="color: #007700">, </span><span style="color: #9876AA">int offset2</span><span style="color: #007700">, </span><span style="color: #9876AA">int mask2</span><span style="color: #007700">,<br />   ........<br />   </span><span style="color: #9876AA">int start_codeN</span><span style="color: #007700">, </span><span style="color: #9876AA">int end_codeN</span><span style="color: #007700">, </span><span style="color: #9876AA">int offsetN</span><span style="color: #007700">, </span><span style="color: #9876AA">int maskN </span><span style="color: #007700">);<br /></span><span style="color: #FF8000">// Specify Unicode value for start_codeN and end_codeN<br />// Add offsetN to value and take bit-wise 'AND' with maskN, <br />// then convert value to numeric string reference.<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 <span class="parameter" style="color:#3A95FF">map</span> 示例，转义 JavaScript 字符串</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">escape_javascript_string</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">) {<br />  </span><span style="color: #9876AA">$map </span><span style="color: #007700">= [<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #FF8000">// 49<br />          </span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #FF8000">// 99<br />          </span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">0</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #FF8000">// 149<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #FF8000">// 199<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #FF8000">// 249<br />          </span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #FF8000">// 255<br />          </span><span style="color: #007700">];<br />  </span><span style="color: #FF8000">// Char encoding is UTF-8<br />  </span><span style="color: #9876AA">$mblen </span><span style="color: #007700">= </span><span style="color: #9876AA">mb_strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">);<br />  </span><span style="color: #9876AA">$utf32 </span><span style="color: #007700">= </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_convert_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$str</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-32'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">));<br />  for (</span><span style="color: #9876AA">$i</span><span style="color: #007700">=</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">$encoded</span><span style="color: #007700">=</span><span style="color: #DD0000">''</span><span style="color: #007700">; </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">$mblen</span><span style="color: #007700">; </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br />      </span><span style="color: #9876AA">$u </span><span style="color: #007700">= </span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$utf32</span><span style="color: #007700">, </span><span style="color: #9876AA">$i</span><span style="color: #007700">*</span><span style="color: #9876AA">8</span><span style="color: #007700">, </span><span style="color: #9876AA">8</span><span style="color: #007700">);<br />      </span><span style="color: #9876AA">$v </span><span style="color: #007700">= </span><span style="color: #9876AA">base_convert</span><span style="color: #007700">(</span><span style="color: #9876AA">$u</span><span style="color: #007700">, </span><span style="color: #9876AA">16</span><span style="color: #007700">, </span><span style="color: #9876AA">10</span><span style="color: #007700">);<br />      if (</span><span style="color: #9876AA">$v </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">256 </span><span style="color: #007700">&amp;&amp; </span><span style="color: #9876AA">$map</span><span style="color: #007700">[</span><span style="color: #9876AA">$v</span><span style="color: #007700">]) {<br />        </span><span style="color: #9876AA">$encoded </span><span style="color: #007700">.= </span><span style="color: #DD0000">'\\x'</span><span style="color: #007700">.</span><span style="color: #9876AA">substr</span><span style="color: #007700">(</span><span style="color: #9876AA">$u</span><span style="color: #007700">, </span><span style="color: #9876AA">6</span><span style="color: #007700">,</span><span style="color: #9876AA">2</span><span style="color: #007700">);<br />      } else if (</span><span style="color: #9876AA">$v </span><span style="color: #007700">== </span><span style="color: #9876AA">2028</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$encoded </span><span style="color: #007700">.= </span><span style="color: #DD0000">'\\u2028'</span><span style="color: #007700">;<br />      } else if (</span><span style="color: #9876AA">$v </span><span style="color: #007700">== </span><span style="color: #9876AA">2029</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$encoded </span><span style="color: #007700">.= </span><span style="color: #DD0000">'\\u2029'</span><span style="color: #007700">;<br />      } else {<br />        </span><span style="color: #9876AA">$encoded </span><span style="color: #007700">.= </span><span style="color: #9876AA">mb_convert_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">hex2bin</span><span style="color: #007700">(</span><span style="color: #9876AA">$u</span><span style="color: #007700">), </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-32'</span><span style="color: #007700">);<br />      }<br />   }<br />   return </span><span style="color: #9876AA">$encoded</span><span style="color: #007700">;<br />}<br /> <br /></span><span style="color: #FF8000">// Test data<br /></span><span style="color: #9876AA">$convmap </span><span style="color: #007700">= [ </span><span style="color: #9876AA">0x0</span><span style="color: #007700">, </span><span style="color: #9876AA">0xffff</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">0xffff </span><span style="color: #007700">];<br /></span><span style="color: #9876AA">$msg </span><span style="color: #007700">= </span><span style="color: #DD0000">''</span><span style="color: #007700">;<br />for (</span><span style="color: #9876AA">$i</span><span style="color: #007700">=</span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">1000</span><span style="color: #007700">; </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br />  </span><span style="color: #FF8000">// chr() cannot generate correct UTF-8 data larger value than 128, use mb_decode_numericentity().<br />  </span><span style="color: #9876AA">$msg </span><span style="color: #007700">.= </span><span style="color: #9876AA">mb_decode_numericentity</span><span style="color: #007700">(</span><span style="color: #DD0000">'&amp;#'</span><span style="color: #007700">.</span><span style="color: #9876AA">$i</span><span style="color: #007700">.</span><span style="color: #DD0000">';'</span><span style="color: #007700">, </span><span style="color: #9876AA">$convmap</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">);<br />}<br /> <br /></span><span style="color: #FF8000">// var_dump($msg);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">escape_javascript_string</span><span style="color: #007700">(</span><span style="color: #9876AA">$msg</span><span style="color: #007700">));</span></span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-decode-numericentity-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_encode_numericentity()} - Encode character to HTML numeric string reference</span></li>   </ul>  </span> </div></div>
 * @return string|false|null The converted string.*/
function mb_decode_numericentity(string $string, array $map, ?string $encoding = null, #[PhpStormStubsElementAvailable(from: '7.2', to: '7.4')] $is_hex = false) {}

/**
*<div id="function.mb-send-mail" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_send_mail</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.6, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_send_mail</span> &mdash; <span class="dc-title">发送编码过的邮件</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-send-mail-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_send_mail</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$to</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$subject</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$message</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766">string</span></span> <span class="parameter" style="color:#3A95FF">$additional_headers</span><span class="initializer"> = []</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$additional_params</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    发送邮件。邮件头和内容根据 <span class="function">{@link mb_language()}</span> 设置来转换编码。   这是 <span class="function">{@link mail()}</span> 的一个包装器函数，所以详情参见 <span class="function">{@link mail()}</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-send-mail-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">to</span></dt>     <dd>      <p class="para">       被发送到该邮件地址。可通过逗号分隔地址的 <span class="parameter" style="color:#3A95FF">to</span> 来指定多个收件人。       该参数不会被自动编码。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">subject</span></dt>     <dd>      <p class="para">       邮件标题。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">message</span></dt>     <dd>      <p class="para">       邮件消息。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">additional_headers</span>（可选）</dt>     <dd>      <p class="para">       要插入到电子邮件标头末尾的 <span class="type" style="color:#EAB766">string</span> 或 <span class="type" style="color:#EAB766">array</span>。      </p>      <p class="para">       这通常用于添加额外的标头（发件人、抄送和密件抄送）。多个额外的标头应该用 CRLF（\r\n）分隔。验证参数不会被攻击者注入不需要的标头。      </p>      <p class="para">       如果传递 <span class="type" style="color:#EAB766">array</span>，则其键是标头名称，其值是相应的标头值。      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        发送邮件时，邮件<em>必须</em>包含 <span>From</span> 标头。这可以使用        <span class="parameter" style="color:#3A95FF">additional_headers</span> 参数设置，或者可以在 <var class="filename">php.ini</var> 中设置默认值。       </p>       <p class="para">        如果不这样做，将导致类似于 <span>Warning: mail(): &quot;sendmail_from&quot; not        set in php.ini or custom &quot;From:&quot; header missing</span> 的错误消息。<span>From</span> 标头还设置了 Windows 下的 <span>Return-Path</span>。       </p>      </p></blockquote>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        如果未收到消息，请尝试仅使用 LF（\n）。一些 Unix 邮件传输代理（最著名的是 <a href="http://cr.yp.to/qmail.html" class="link external">&raquo;&nbsp;qmail</a>）自动将 LF 替换为 CRLF（如果使用        CRLF，这会导致两个 CR）。这应该是最后的手段，因为它不符合 <a href="http://www.faqs.org/rfcs/rfc2822" class="link external">&raquo;&nbsp;RFC 2822</a>。       </p>      </p></blockquote>     </dd>             <dt><span class="parameter" style="color:#3A95FF">additional_params</span></dt>     <dd>      <p class="para">       <span class="parameter" style="color:#3A95FF">additional_params</span> 是一个 MTA 命令行参数。在使用       sendmail 时对设置正确的返回路径头很有帮助。      </p>      <p class="para">       该参数由 <span class="function">{@link escapeshellcmd()}</span> 内部转义以防止命令执行。<span class="function">{@link escapeshellcmd()}</span> 阻止命令执行，但允许添加额外的参数。出于安全原因，应该验证此参数。      </p>      <p class="para">       Since <span class="function">{@link escapeshellcmd()}</span> is applied automatically, some characters       that are allowed as email addresses by internet RFCs cannot be used. Programs       that are required to use these characters <span class="function">{@link mail()}</span> cannot be used.      </p>      <p class="para">       Web 服务器运行的用户应作为受信任的用户添加到 sendmail 配置中，以防止在使用此方法设置信封发件人（-f）时将“X-Warning”标头添加到邮件中。对于       sendmail 用户，此文件为 <var class="filename">/etc/mail/trusted-users</var>。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-send-mail-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-send-mail-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">additional_params</span> 现在可为 null。      </td>     </tr>      <tr>       <td>7.2.0</td>       <td>        <span class="parameter" style="color:#3A95FF">additional_headers</span> 参数现在也接受 <span class="type" style="color:#EAB766">array</span>。       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-send-mail-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mail()} - 发送邮件</span></li>    <li class="member"><span class="function">{@link mb_encode_mimeheader()} - 为 MIME 头编码字符串</span></li>    <li class="member"><span class="function">{@link mb_language()} - 设置/获取当前的语言</span></li>   </ul>  </span> </div></div>
 * @return bool true on success or false on failure.*/
function mb_send_mail(string $to, string $subject, string $message, array|string $additional_headers = [], ?string $additional_params): bool {}

/**
 * Get internal settings of mbstring
 * @link https://php.net/manual/en/function.mb-get-info.php
 * @param string $type [optional] <p>
 * If type isn't specified or is specified to
 * "all", an array having the elements "internal_encoding",
 * "http_output", "http_input", "func_overload", "mail_charset",
 * "mail_header_encoding", "mail_body_encoding" will be returned.
 * </p>
 * <p>
 * If type is specified as "http_output",
 * "http_input", "internal_encoding", "func_overload",
 * the specified setting parameter will be returned.
 * </p>
 * @return array|string|int|false An array of type information if type
 * is not specified, otherwise a specific type.
 */
#[Pure]
#[ArrayShape([
    'internal_encoding' => 'string',
    'http_input' => 'string',
    'http_output' => 'string',
    'http_output_conv_mimetypes' => 'string',
    'mail_charset' => 'string',
    'mail_header_encoding' => 'string',
    'mail_body_encoding' => 'string',
    'illegal_chars' => 'string',
    'encoding_translation' => 'string',
    'language' => 'string',
    'detect_order' => 'string',
    'substitute_character' => 'string',
    'strict_detection' => 'string',
])]
/**
*<div id="function.mb-get-info" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_get_info</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_get_info</span> &mdash; <span class="dc-title">获取 mbstring 的内部设置</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-get-info-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_get_info</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = &quot;all&quot;</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="simpara">   <span class="function"><strong style="color:#CC7832">mb_get_info()</strong></span> 返回 mbstring 参数的内部设定。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-get-info-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">type</span></dt>     <dd>      <p class="para">       如果没有设定 <span class="parameter" style="color:#3A95FF">type</span> 或者将其设定为 <span>&quot;all&quot;</span> 将会返回以下内容       <span>&quot;internal_encoding&quot;</span>, <span>&quot;http_input&quot;</span>,       <span>&quot;http_output&quot;</span>, <span>&quot;http_output_conv_mimetypes&quot;</span>,       <span>&quot;mail_charset&quot;</span>, <span>&quot;mail_header_encoding&quot;</span>,       <span>&quot;mail_body_encoding&quot;</span>, <span>&quot;illegal_chars&quot;</span>,       <span>&quot;encoding_translation&quot;</span>, <span>&quot;language&quot;</span>,       <span>&quot;detect_order&quot;</span>, <span>&quot;substitute_character&quot;</span>       和 <span>&quot;strict_detection&quot;</span>。      </p>      <p class="para">       如果 <span class="parameter" style="color:#3A95FF">type</span> 设定为类似       <span>&quot;internal_encoding&quot;</span>, <span>&quot;http_input&quot;</span>,       <span>&quot;http_output&quot;</span>, <span>&quot;http_output_conv_mimetypes&quot;</span>,       <span>&quot;mail_charset&quot;</span>, <span>&quot;mail_header_encoding&quot;</span>,       <span>&quot;mail_body_encoding&quot;</span>, <span>&quot;illegal_chars&quot;</span>,       <span>&quot;encoding_translation&quot;</span>, <span>&quot;language&quot;</span>,       <span>&quot;detect_order&quot;</span>, <span>&quot;substitute_character&quot;</span>       或 <span>&quot;strict_detection&quot;</span>，将返回该参数的设置。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-get-info-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果没有指定 <span class="parameter" style="color:#3A95FF">type</span> 将返回类型信息的数组，否则将返回指定   <span class="parameter" style="color:#3A95FF">type</span> 的信息。    或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-get-info-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       参数 <span class="parameter" style="color:#3A95FF">type</span> 中的 <span>&quot;func_overload&quot;</span>       和 <span>&quot;func_overload_list&quot;</span> 不再被支持。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-get-info-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>    <li class="member"><span class="function">{@link mb_http_output()} - 设置/获取 HTTP 输出字符编码</span></li>   </ul>  </span> </div></div>
*/
function mb_get_info(string $type = 'all'): array|string|int|false {}

/**
*<div id="function.mb-check-encoding" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_check_encoding</h1>  <p class="verinfo">(PHP 4 &gt;= 4.4.3, PHP 5 &gt;= 5.1.3, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_check_encoding</span> &mdash; <span class="dc-title">检查字符串在指定的编码里是否有效</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-check-encoding-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_check_encoding</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">null</span></span> <span class="parameter" style="color:#3A95FF">$value</span><span class="initializer"> = <strong><span>null</span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   检查指定字节流在指定编码中是否有效。如果 <span class="parameter" style="color:#3A95FF">value</span> 是 <span class="type" style="color:#EAB766">array</span> 类型，则递归验证所有键和值。它能有效避免所谓的“无效编码攻击（Invalid Encoding Attack）”。  </p>  <p class="para">  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-check-encoding-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       要检查的字节流或 <span class="type" style="color:#EAB766">array</span>。如果省略了这个参数，此函数会检查所有来自最初请求所有的输入。      </p>      <div class="warning"><strong class="warning">警告</strong>        <p class="para">         自 PHP 8.1.0 起，禁止省略此参数或传递 <strong><span>null</span></strong>。        </p>      </div>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para">       期望的编码。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-check-encoding-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-check-encoding-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.1.0</td>      <td>       弃用使用 <strong><span>null</span></strong> 作为 <span class="parameter" style="color:#3A95FF">value</span> 或不带参数调用此函数。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">value</span> 和 <span class="parameter" style="color:#3A95FF">encoding</span> 现在可以为 null。      </td>     </tr>     <tr>      <td>7.2.0</td>      <td>       此函数现在也接受 <span class="type" style="color:#EAB766">array</span> 作为 <span class="parameter" style="color:#3A95FF">value</span>。之前仅支持 <span class="type" style="color:#EAB766">string</span>。      </td>     </tr>    </tbody>     </table> </div></div>
 * @return bool true on success or false on failure.*/
function mb_check_encoding(array|string|null $value = null, ?string $encoding): bool {}

/**
*<div id="function.mb-regex-encoding" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_regex_encoding</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_regex_encoding</span> &mdash; <span class="dc-title">Set/Get character encoding for multibyte regex</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-regex-encoding-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_regex_encoding</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">bool</span></span></div>  <p class="para rdfs-comment">   Set/Get character encoding for a multibyte regex.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-regex-encoding-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-regex-encoding-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   If <span class="parameter" style="color:#3A95FF">encoding</span> is set, then    成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。    In this case, the internal character encoding is NOT changed.   If <span class="parameter" style="color:#3A95FF">encoding</span> is omitted, then    the current character encoding name for a multibyte regex is returned.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-regex-encoding-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-regex-encoding-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>    <li class="member"><span class="function">{@link mb_ereg()} - Regular expression match with multibyte support</span></li>   </ul>  </span> </div></div>
 * @return bool|string If encoding is set, then Returns TRUE on success*/
function mb_regex_encoding(?string $encoding): string|bool {}

/**
*<div id="function.mb-regex-set-options" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_regex_set_options</h1>  <p class="verinfo">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_regex_set_options</span> &mdash; <span class="dc-title">Set/Get the default options for mbregex functions</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-regex-set-options-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_regex_set_options</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="simpara">   Sets the default options described by <span class="parameter" style="color:#3A95FF">options</span>    for multibyte regex functions.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-regex-set-options-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       The options to set. This is a string where each        character is an option. To set a mode, the mode        character must be the last one set, however there        can only be set one mode but multiple options.      </p>      <table class="doctable table">       <caption><strong>Regex options</strong></caption>               <thead>         <tr>          <th>Option</th>          <th>Meaning</th>          <th>更新日志</th>         </tr>        </thead>        <tbody class="tbody">         <tr>          <td>i</td>          <td>Ambiguity match on</td>          <td class="empty">&nbsp;</td>         </tr>         <tr>          <td>x</td>          <td>Enables extended pattern form</td>          <td class="empty">&nbsp;</td>         </tr>         <tr>          <td>m</td>          <td><span>&#039;.&#039;</span> matches with newlines</td>          <td class="empty">&nbsp;</td>         </tr>         <tr>          <td>s</td>          <td><span>&#039;^&#039;</span> -&gt; <span>&#039;\A&#039;</span>, <span>&#039;$&#039;</span> -&gt; <span>&#039;\Z&#039;</span></td>          <td class="empty">&nbsp;</td>         </tr>         <tr>          <td>p</td>          <td>Same as both the <span>m</span> and <span>s</span> options</td>          <td class="empty">&nbsp;</td>         </tr>         <tr>          <td>l</td>          <td>Finds longest matches</td>          <td class="empty">&nbsp;</td>         </tr>         <tr>          <td>n</td>          <td>Ignores empty matches</td>          <td class="empty">&nbsp;</td>         </tr>         <tr>          <td>e</td>          <td><span class="function">{@link eval()}</span> resulting code</td>          <td>Deprecated as of PHP 7.1.0 and removed as of PHP 8.0.0</td>         </tr>        </tbody>             </table>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        The <span>&quot;e&quot;</span> option has no effect when set through <span class="function"><strong style="color:#CC7832">mb_regex_set_options()</strong></span>.        Use it with <span class="function">{@link mb_ereg_replace()}</span> or <span class="function">{@link mb_eregi_replace()}</span>.       </p>      </p></blockquote>      <table class="doctable table">       <caption><strong>Regex syntax modes (only one may be set)</strong></caption>               <thead>         <tr>          <th>Mode</th>          <th>Meaning</th>         </tr>        </thead>        <tbody class="tbody">         <tr>          <td>j</td>          <td>Java (Sun java.util.regex)</td>         </tr>         <tr>          <td>u</td>          <td>GNU regex</td>         </tr>         <tr>          <td>g</td>          <td>grep</td>         </tr>         <tr>          <td>c</td>          <td>Emacs</td>         </tr>         <tr>          <td>r</td>          <td>Ruby</td>         </tr>         <tr>          <td>z</td>          <td>Perl</td>         </tr>         <tr>          <td>b</td>          <td>POSIX Basic regex</td>         </tr>         <tr>          <td>d</td>          <td>POSIX Extended regex</td>         </tr>        </tbody>             </table>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-regex-set-options-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The previous options. If <span class="parameter" style="color:#3A95FF">options</span> is omitted or <strong><span>null</span></strong>,    it returns the <span class="type" style="color:#EAB766">string</span> that describes the current options.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-regex-set-options-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       If the parameter <span class="parameter" style="color:#3A95FF">options</span> is given and not <strong><span>null</span></strong>, the <em>previous</em>       options are returned. Formerly, the <em>current</em> options have been returned.      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">options</span> is nullable now.      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       The <span>&quot;e&quot;</span> option now throws a <span class="classname"><a href="https://www.php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span>.      </td>     </tr>     <tr>      <td>7.1.0</td>      <td>       The <span>&quot;e&quot;</span> option now emits an <strong><span>E_DEPRECATED</span></strong>.      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-regex-set-options-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_split()} - 使用正则表达式分割多字节字符串</span></li>    <li class="member"><span class="function">{@link mb_ereg()} - Regular expression match with multibyte support</span></li>    <li class="member"><span class="function">{@link mb_eregi()} - Regular expression match ignoring case with multibyte support</span></li>   </ul>  </span> </div></div>
 * @return string The previous options. If options is omitted,*/
function mb_regex_set_options(?string $options): string {}

/**
*<div id="function.mb-ereg" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_ereg</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_ereg</span> &mdash; <span class="dc-title">Regular expression match with multibyte support</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-ereg-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_ereg</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pattern</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">&$matches</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="simpara">   Executes the regular expression match with multibyte support.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-ereg-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       The search pattern.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       The search <span class="type" style="color:#EAB766">string</span>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">matches</span></dt>     <dd>      <p class="para">       If matches are found for parenthesized substrings of       <span class="parameter" style="color:#3A95FF">pattern</span> and the function is called with the       third argument <span class="parameter" style="color:#3A95FF">matches</span>, the matches will be stored       in the elements of the array <span class="parameter" style="color:#3A95FF">matches</span>.       If no matches are found, <span class="parameter" style="color:#3A95FF">matches</span> is set to an empty       array.      </p>      <p class="para">       <var class="varname">$matches[1]</var> will contain the substring which starts at       the first left parenthesis; <var class="varname">$matches[2]</var> will contain       the substring starting at the second, and so on.       <var class="varname">$matches[0]</var> will contain a copy of the complete string       matched.      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns whether <span class="parameter" style="color:#3A95FF">pattern</span> matches <span class="parameter" style="color:#3A95FF">string</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-ereg-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       This function returns <strong><span>true</span></strong> on success now. Previously, it returned the byte length       of the matched string if a match for <span class="parameter" style="color:#3A95FF">pattern</span> was found in       <span class="parameter" style="color:#3A95FF">string</span> and <span class="parameter" style="color:#3A95FF">matches</span> was passed.       If the optional parameter <span class="parameter" style="color:#3A95FF">matches</span> was not passed or       the length of the matched string was <span>0</span>, this function returned <span>1</span>.      </td>     </tr>     <tr>      <td>7.1.0</td>      <td>       <span class="function"><strong style="color:#CC7832">mb_ereg()</strong></span> will now set <span class="parameter" style="color:#3A95FF">matches</span> to       an empty <span class="type" style="color:#EAB766">array</span>, if nothing matched. Formerly,       <span class="parameter" style="color:#3A95FF">matches</span> was not modified in that case.      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-ereg-notes">  <h3 class="title">注释</h3>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span>指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-ereg-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>    <li class="member"><span class="function">{@link mb_eregi()} - Regular expression match ignoring case with multibyte support</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function mb_ereg(string $pattern, string $string, &$matches): bool {}

/**
*<div id="function.mb-eregi" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_eregi</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_eregi</span> &mdash; <span class="dc-title">Regular expression match ignoring case with multibyte support</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-eregi-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_eregi</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pattern</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">&$matches</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="simpara">   Executes the case insensitive regular expression match with multibyte support.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-eregi-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       The regular expression pattern.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       The <span class="type" style="color:#EAB766">string</span> being searched.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">matches</span></dt>     <dd>      <p class="para">       If matches are found for parenthesized substrings of       <span class="parameter" style="color:#3A95FF">pattern</span> and the function is called with the       third argument <span class="parameter" style="color:#3A95FF">matches</span>, the matches will be stored       in the elements of the array <span class="parameter" style="color:#3A95FF">matches</span>.       If no matches are found, <span class="parameter" style="color:#3A95FF">matches</span> is set to an empty       array.      </p>      <p class="para">       <var class="varname">$matches[1]</var> will contain the substring which starts at       the first left parenthesis; <var class="varname">$matches[2]</var> will contain       the substring starting at the second, and so on.       <var class="varname">$matches[0]</var> will contain a copy of the complete string       matched.      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-eregi-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns whether <span class="parameter" style="color:#3A95FF">pattern</span> matches <span class="parameter" style="color:#3A95FF">string</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-eregi-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       This function returns <strong><span>true</span></strong> on success now. Previously, it returned the byte length       of the matched string if a match for <span class="parameter" style="color:#3A95FF">pattern</span> was found in       <span class="parameter" style="color:#3A95FF">string</span> and <span class="parameter" style="color:#3A95FF">matches</span> was passed.       If the optional parameter <span class="parameter" style="color:#3A95FF">matches</span> was not passed or       the length of the matched string was <span>0</span>, this function returned <span>1</span>.      </td>     </tr>     <tr>      <td>7.1.0</td>      <td>       <span class="function"><strong style="color:#CC7832">mb_eregi()</strong></span> will now set <span class="parameter" style="color:#3A95FF">matches</span> to       an empty <span class="type" style="color:#EAB766">array</span>, if nothing matched. Formerly,       <span class="parameter" style="color:#3A95FF">matches</span> was not modified in that case.      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-eregi-notes">  <h3 class="title">注释</h3>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span>指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-eregi-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>    <li class="member"><span class="function">{@link mb_ereg()} - Regular expression match with multibyte support</span></li>   </ul>  </span> </div></div>
 * @return bool|int*/
function mb_eregi(string $pattern, string $string, &$matches): bool {}

/**
*<div id="function.mb-ereg-replace" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_ereg_replace</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_ereg_replace</span> &mdash; <span class="dc-title">Replace regular expression with multibyte support</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-ereg-replace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_ereg_replace</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pattern</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$replacement</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span>|<span class="type" style="color:#EAB766">null</span></span></div>  <p class="simpara">   Scans <span class="parameter" style="color:#3A95FF">string</span> for matches to   <span class="parameter" style="color:#3A95FF">pattern</span>, then replaces the matched text   with <span class="parameter" style="color:#3A95FF">replacement</span>    </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-ereg-replace-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       The regular expression pattern.      </p>      <p class="para">       Multibyte characters may be used in <span class="parameter" style="color:#3A95FF">pattern</span>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">replacement</span></dt>     <dd>      <p class="para">       The replacement text.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       The <span class="type" style="color:#EAB766">string</span> being checked.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <span class="simpara">       The search option. See <span class="function">{@link mb_regex_set_options()}</span> for explanation.      </span>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-replace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The resultant <span class="type" style="color:#EAB766">string</span> on success, or <strong><span>false</span></strong> on error.   If <span class="parameter" style="color:#3A95FF">string</span> is not valid for the current encoding, <strong><span>null</span></strong>   is returned.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-ereg-replace-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        <span class="parameter" style="color:#3A95FF">options</span> is nullable now.       </td>      </tr>      <tr>       <td>7.1.0</td>       <td>        The function checks whether <span class="parameter" style="color:#3A95FF">string</span> is valid for the        current encoding.       </td>      </tr>      <tr>       <td>7.1.0</td>       <td>        The <span>e</span> modifier has been deprecated.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-ereg-replace-notes">  <h3 class="title">注释</h3>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span>指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote>  <div class="warning"><strong class="warning">警告</strong><p class="para">处理非信任的输入时从不使用<span>e</span> 修饰符，就不会转码（即调用 <span class="function">{@link preg_replace()}</span>）。不注意这些会很可能会导致应用程序引发远程代码执行的漏洞。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-ereg-replace-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>    <li class="member"><span class="function">{@link mb_eregi_replace()} - Replace regular expression with multibyte support ignoring case</span></li>   </ul>  </span> </div></div>
 * @return string|false|null The resultant string on success, or false on error.*/
function mb_ereg_replace(string $pattern, string $replacement, string $string, ?string $options = null): string|false|null {}

/**
*<div id="function.mb-ereg-replace-callback" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_ereg_replace_callback</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.1, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_ereg_replace_callback</span> &mdash; <span class="dc-title">Perform a regular expression search and replace with multibyte support using a callback  </span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-ereg-replace-callback-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_ereg_replace_callback</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pattern</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$callback</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span>|<span class="type" style="color:#EAB766">null</span></span></div>  <p class="para rdfs-comment">   Scans <span class="parameter" style="color:#3A95FF">string</span> for matches to   <span class="parameter" style="color:#3A95FF">pattern</span>, then replaces the matched text   with the output of <span class="parameter" style="color:#3A95FF">callback</span> function.    </p>  <p class="para">    The behavior of this function is almost identical to <span class="function">{@link mb_ereg_replace()}</span>,     except for the fact that instead of    <span class="parameter" style="color:#3A95FF">replacement</span> parameter, one should specify a    <span class="parameter" style="color:#3A95FF">callback</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-ereg-replace-callback-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       The regular expression pattern.      </p>      <p class="para">       Multibyte characters may be used in <span class="parameter" style="color:#3A95FF">pattern</span>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">callback</span></dt>     <dd>      <p class="para">        A callback that will be called and passed an array of matched elements        in the  <span class="parameter" style="color:#3A95FF">string</span> string. The callback should       return the replacement string.      </p>      <p class="para">        You&#039;ll often need the <span class="parameter" style="color:#3A95FF">callback</span> function        for a <span class="function"><strong style="color:#CC7832">mb_ereg_replace_callback()</strong></span> in just one place.        In this case you can use an        <a href="https://www.php.net/manual/zh/functions.anonymous.php" class="link">anonymous function</a> to        declare the callback within the call to        <span class="function"><strong style="color:#CC7832">mb_ereg_replace_callback()</strong></span>. By doing it this way        you have all information for the call in one place and do not        clutter the function namespace with a callback function&#039;s name        not used anywhere else.              </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       The <span class="type" style="color:#EAB766">string</span> being checked.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       The search option. See <span class="function">{@link mb_regex_set_options()}</span> for explanation.      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-replace-callback-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The resultant <span class="type" style="color:#EAB766">string</span> on success, or <strong><span>false</span></strong> on error.   If <span class="parameter" style="color:#3A95FF">string</span> is not valid for the current encoding, <strong><span>null</span></strong>   is returned.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-ereg-replace-callback-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        <span class="parameter" style="color:#3A95FF">options</span> is nullable now.       </td>      </tr>      <tr>       <td>7.1.0</td>       <td>        The function checks whether <span class="parameter" style="color:#3A95FF">string</span> is valid for the        current encoding.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-ereg-replace-callback-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_ereg_replace_callback()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// this text was used in 2002<br />// we want to get this up to date for 2003<br /></span><span style="color: #9876AA">$text </span><span style="color: #007700">= </span><span style="color: #DD0000">"April fools day is 04/01/2002\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$text</span><span style="color: #007700">.= </span><span style="color: #DD0000">"Last christmas was 12/24/2001\n"</span><span style="color: #007700">;<br /></span><span style="color: #FF8000">// the callback function<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">next_year</span><span style="color: #007700">(</span><span style="color: #9876AA">$matches</span><span style="color: #007700">)<br />{<br />  </span><span style="color: #FF8000">// as usual: $matches[0] is the complete match<br />  // $matches[1] the match for the first subpattern<br />  // enclosed in '(...)' and so on<br />  </span><span style="color: #007700">return </span><span style="color: #9876AA">$matches</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">].(</span><span style="color: #9876AA">$matches</span><span style="color: #007700">[</span><span style="color: #9876AA">2</span><span style="color: #007700">]+</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />}<br />echo </span><span style="color: #9876AA">mb_ereg_replace_callback</span><span style="color: #007700">(<br />            </span><span style="color: #DD0000">"(\d{2}/\d{2}/)(\d{4})"</span><span style="color: #007700">,<br />            </span><span style="color: #DD0000">"next_year"</span><span style="color: #007700">,<br />            </span><span style="color: #9876AA">$text</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>April fools day is 04/01/2003<br>Last christmas was 12/24/2002<br></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="">    <p><strong>示例 #2 <span class="function"><strong style="color:#CC7832">mb_ereg_replace_callback()</strong></span> using anonymous function</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// this text was used in 2002<br />// we want to get this up to date for 2003<br /></span><span style="color: #9876AA">$text </span><span style="color: #007700">= </span><span style="color: #DD0000">"April fools day is 04/01/2002\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$text</span><span style="color: #007700">.= </span><span style="color: #DD0000">"Last christmas was 12/24/2001\n"</span><span style="color: #007700">;<br /><br />echo </span><span style="color: #9876AA">mb_ereg_replace_callback</span><span style="color: #007700">(<br />            </span><span style="color: #DD0000">"(\d{2}/\d{2}/)(\d{4})"</span><span style="color: #007700">,<br />            function (</span><span style="color: #9876AA">$matches</span><span style="color: #007700">) {<br />               return </span><span style="color: #9876AA">$matches</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">].(</span><span style="color: #9876AA">$matches</span><span style="color: #007700">[</span><span style="color: #9876AA">2</span><span style="color: #007700">]+</span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />            },<br />            </span><span style="color: #9876AA">$text</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-ereg-replace-callback-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span>指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-ereg-replace-callback-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>    <li class="member"><span class="function">{@link mb_ereg_replace()} - Replace regular expression with multibyte support</span></li>    <li class="member"><a href="https://www.php.net/manual/zh/functions.anonymous.php" class="link">Anonymous functions</a></li>   </ul>  </span> </div></div>
 * @return string|false|null <p>*/
function mb_ereg_replace_callback(string $pattern, callable $callback, string $string, ?string $options = null): string|false|null {}

/**
*<div id="function.mb-eregi-replace" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_eregi_replace</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_eregi_replace</span> &mdash; <span class="dc-title">Replace regular expression with multibyte support ignoring case</span></p>      </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-eregi-replace-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_eregi_replace</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pattern</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$replacement</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span>|<span class="type" style="color:#EAB766">null</span></span></div>  <p class="simpara">   Scans <span class="parameter" style="color:#3A95FF">string</span> for matches to   <span class="parameter" style="color:#3A95FF">pattern</span>, then replaces the matched text   with <span class="parameter" style="color:#3A95FF">replacement</span>.   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-eregi-replace-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       The regular expression pattern.  Multibyte characters may be used. The case will be ignored.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">replacement</span></dt>     <dd>      <p class="para">       The replacement text.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       The searched <span class="type" style="color:#EAB766">string</span>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <span class="simpara">       The search option. See <span class="function">{@link mb_regex_set_options()}</span> for explanation.      </span>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-eregi-replace-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The resultant <span class="type" style="color:#EAB766">string</span> or <strong><span>false</span></strong> on error.    If <span class="parameter" style="color:#3A95FF">string</span> is not valid for the current encoding, <strong><span>null</span></strong>   is returned.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-eregi-replace-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        <span class="parameter" style="color:#3A95FF">options</span> is nullable now.       </td>      </tr>      <tr>       <td>7.1.0</td>       <td>        The function checks whether <span class="parameter" style="color:#3A95FF">string</span> is valid for the        current encoding.       </td>      </tr>      <tr>       <td>7.1.0</td>       <td>        The <span>e</span> modifier has been deprecated.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-eregi-replace-notes">  <h3 class="title">注释</h3>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span>指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote>  <div class="warning"><strong class="warning">警告</strong><p class="para">处理非信任的输入时从不使用<span>e</span> 修饰符，就不会转码（即调用 <span class="function">{@link preg_replace()}</span>）。不注意这些会很可能会导致应用程序引发远程代码执行的漏洞。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-eregi-replace-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>    <li class="member"><span class="function">{@link mb_ereg_replace()} - Replace regular expression with multibyte support</span></li>   </ul>  </span> </div></div>
 * @return string|false|null The resultant string or false on error.*/
function mb_eregi_replace(
    string $pattern,
    string $replacement,
    string $string,
    #[PhpStormStubsElementAvailable(from: '7.0')] ?string $options = null
): string|false|null {}

/**
*<div id="function.mb-split" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_split</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_split</span> &mdash; <span class="dc-title">使用正则表达式分割多字节字符串</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-split-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_split</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pattern</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$limit</span><span class="initializer"> = -1</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="simpara">   使用正则表达式 <span class="parameter" style="color:#3A95FF">pattern</span> 分割多字节 <span class="parameter" style="color:#3A95FF">string</span> 并返回结果 <span class="type" style="color:#EAB766">array</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-split-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       正则表达式。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       待分割的 <span class="type" style="color:#EAB766">string</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">limit</span></dt>     <dd>      <span class="simpara">       如果指定了可选参数 <span class="parameter" style="color:#3A95FF">limit</span>，将最多分割为 <span class="parameter" style="color:#3A95FF">limit</span> 个元素。      </span>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-split-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   结果为 <span class="type" style="color:#EAB766">array</span>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-split-notes">  <h3 class="title">注释</h3>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">Thecharacter encoding specified by <span class="function">{@link mb_regex_encoding()}</span>will be used as the character encoding for this function by default.</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-split-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>    <li class="member"><span class="function">{@link mb_ereg()} - Regular expression match with multibyte support</span></li>   </ul>  </span> </div></div>
 * @return string[]|false The result as an array.*/
function mb_split(string $pattern, string $string, int $limit = -1): array|false {}

/**
*<div id="function.mb-ereg-match" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_ereg_match</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_ereg_match</span> &mdash; <span class="dc-title">Regular expression match for multibyte string</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-ereg-match-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_ereg_match</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pattern</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   A regular expression match for a multibyte string   <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:     <span class="simpara">     <span class="parameter" style="color:#3A95FF">pattern</span> is only matched at the beginning of     <span class="parameter" style="color:#3A95FF">string</span>.    </span>   </p></blockquote>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-ereg-match-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       The regular expression pattern.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       The <span class="type" style="color:#EAB766">string</span> being evaluated.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       The search option. See <span class="function">{@link mb_regex_set_options()}</span> for explanation.      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-match-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   Returns <strong><span>true</span></strong> if   <span class="parameter" style="color:#3A95FF">string</span> matches the regular expression   <span class="parameter" style="color:#3A95FF">pattern</span>, <strong><span>false</span></strong> if not.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-ereg-match-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">options</span> is nullable now.      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-ereg-match-notes">  <h3 class="title">注释</h3>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span>指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-ereg-match-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>    <li class="member"><span class="function">{@link mb_ereg()} - Regular expression match with multibyte support</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function mb_ereg_match(string $pattern, string $string, ?string $options): bool {}

/**
*<div id="function.mb-ereg-search" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_ereg_search</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_ereg_search</span> &mdash; <span class="dc-title">Multibyte regular expression match for predefined multibyte string</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-ereg-search-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_ereg_search</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$pattern</span><span class="initializer"> = <strong><span>null</span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Performs a multibyte regular expression match for a predefined multibyte string.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-ereg-search-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       The search pattern.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       The search option. See <span class="function">{@link mb_regex_set_options()}</span> for explanation.      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-search-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   <span class="function"><strong style="color:#CC7832">mb_ereg_search()</strong></span> returns <strong><span>true</span></strong> if the   multibyte string matches with the regular expression, or <strong><span>false</span></strong>   otherwise. The <span class="type" style="color:#EAB766">string</span> for matching is set by    <span class="function">{@link mb_ereg_search_init()}</span>. If   <span class="parameter" style="color:#3A95FF">pattern</span> is not specified, the previous one   is used.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-ereg-search-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        <span class="parameter" style="color:#3A95FF">pattern</span> and <span class="parameter" style="color:#3A95FF">options</span> are nullable now.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-ereg-search-notes">  <h3 class="title">注释</h3>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span>指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-ereg-search-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>    <li class="member"><span class="function">{@link mb_ereg_search_init()} - Setup string and regular expression for a multibyte regular expression match</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function mb_ereg_search(?string $pattern, ?string $options): bool {}

/**
*<div id="function.mb-ereg-search-pos" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_ereg_search_pos</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_ereg_search_pos</span> &mdash; <span class="dc-title">Returns position and length of a matched part of the multibyte regular expression for a predefined multibyte string</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-ereg-search-pos-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_ereg_search_pos</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$pattern</span><span class="initializer"> = <strong><span>null</span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   Returns position and length of a matched part of the multibyte regular expression    for a predefined multibyte string  </p>  <p class="para">   The string for match is specified by   <span class="function">{@link mb_ereg_search_init()}</span>. If it is not specified,   the previous one will be used.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-ereg-search-pos-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       The search pattern.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       The search option. See <span class="function">{@link mb_regex_set_options()}</span> for explanation.      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-search-pos-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   An <span class="type" style="color:#EAB766">array</span> containing two elements. The first element is the   offset, in bytes, where the match begins relative to the start of the   search string, and the second element is the length in bytes of the match.  </p>  <p class="simpara">   If an error occurs, <strong><span>false</span></strong> is returned.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-ereg-search-pos-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        <span class="parameter" style="color:#3A95FF">pattern</span> and <span class="parameter" style="color:#3A95FF">options</span> are nullable now.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-ereg-search-pos-notes">  <h3 class="title">注释</h3>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span>指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-ereg-search-pos-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>    <li class="member"><span class="function">{@link mb_ereg_search_init()} - Setup string and regular expression for a multibyte regular expression match</span></li>   </ul>  </span> </div></div>
 * @return int[]|false An array containing two elements. The first*/
function mb_ereg_search_pos(?string $pattern, ?string $options): array|false {}

/**
*<div id="function.mb-ereg-search-regs" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_ereg_search_regs</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_ereg_search_regs</span> &mdash; <span class="dc-title">Returns the matched part of a multibyte regular expression</span></p> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-ereg-search-regs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_ereg_search_regs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$pattern</span><span class="initializer"> = <strong><span>null</span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   Returns the matched part of a multibyte regular expression.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-ereg-search-regs-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       The search pattern.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       The search option. See <span class="function">{@link mb_regex_set_options()}</span> for explanation.      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-search-regs-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   <span class="function"><strong style="color:#CC7832">mb_ereg_search_regs()</strong></span> executes the multibyte   regular expression match, and if there are some matched part, it   returns an <span class="type" style="color:#EAB766">array</span> including substring of matched part as first   element, the first grouped part with brackets as second element,   the second grouped part as third element, and so on.    It returns <strong><span>false</span></strong> on error.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-ereg-search-regs-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        <span class="parameter" style="color:#3A95FF">pattern</span> and <span class="parameter" style="color:#3A95FF">options</span> are nullable now.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-ereg-search-regs-notes">  <h3 class="title">注释</h3>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span>指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-ereg-search-regs-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>    <li class="member"><span class="function">{@link mb_ereg_search_init()} - Setup string and regular expression for a multibyte regular expression match</span></li>   </ul>  </span> </div></div>
 * @return string[]|false mb_ereg_search_regs() executes the multibyte*/
function mb_ereg_search_regs(?string $pattern, ?string $options): array|false {}

/**
*<div id="function.mb-ereg-search-init" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_ereg_search_init</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_ereg_search_init</span> &mdash; <span class="dc-title">Setup string and regular expression for a multibyte regular expression match</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-ereg-search-init-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_ereg_search_init</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$pattern</span><span class="initializer"> = <strong><span>null</span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$options</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">mb_ereg_search_init()</strong></span> sets   <span class="parameter" style="color:#3A95FF">string</span> and <span class="parameter" style="color:#3A95FF">pattern</span>   for a multibyte regular expression. These values are used for   <span class="function">{@link mb_ereg_search()}</span>,   <span class="function">{@link mb_ereg_search_pos()}</span>, and   <span class="function">{@link mb_ereg_search_regs()}</span>.   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-ereg-search-init-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       The search string.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">pattern</span></dt>     <dd>      <p class="para">       The search pattern.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">options</span></dt>     <dd>      <p class="para">       The search option. See <span class="function">{@link mb_regex_set_options()}</span> for explanation.      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-search-init-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-ereg-search-init-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.0.0</td>       <td>        <span class="parameter" style="color:#3A95FF">pattern</span> and <span class="parameter" style="color:#3A95FF">options</span> are nullable now.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-ereg-search-init-notes">  <h3 class="title">注释</h3>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span>指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-ereg-search-init-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>    <li class="member"><span class="function">{@link mb_ereg_search_regs()} - Returns the matched part of a multibyte regular expression</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function mb_ereg_search_init(string $string, ?string $pattern, ?string $options): bool {}

/**
*<div id="function.mb-ereg-search-getregs" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_ereg_search_getregs</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_ereg_search_getregs</span> &mdash; <span class="dc-title">Retrieve the result from the last multibyte regular expression match</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-ereg-search-getregs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_ereg_search_getregs</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">array</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="simpara">   Retrieve the result from the last multibyte regular expression match  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-ereg-search-getregs-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-search-getregs-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   An <span class="type" style="color:#EAB766">array</span>   including the sub-string of matched part by last   <span class="function">{@link mb_ereg_search()}</span>,   <span class="function">{@link mb_ereg_search_pos()}</span>,   <span class="function">{@link mb_ereg_search_regs()}</span>. If there are some   matches, the first element will have the matched sub-string, the   second element will have the first part grouped with brackets,    the third element will have the second part grouped with   brackets, and so on. It returns <strong><span>false</span></strong> on error.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-ereg-search-getregs-notes">  <h3 class="title">注释</h3>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span>指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-ereg-search-getregs-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>    <li class="member"><span class="function">{@link mb_ereg_search_init()} - Setup string and regular expression for a multibyte regular expression match</span></li>   </ul>  </span> </div></div>
 * @return string[]|false An array including the sub-string of matched*/
function mb_ereg_search_getregs(): array|false {}

/**
*<div id="function.mb-ereg-search-getpos" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_ereg_search_getpos</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_ereg_search_getpos</span> &mdash; <span class="dc-title">Returns start point for next regular expression match</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-ereg-search-getpos-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_ereg_search_getpos</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="simpara">   Returns the start point for the next regular expression match.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-ereg-search-getpos-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-search-getpos-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   <span class="function"><strong style="color:#CC7832">mb_ereg_search_getpos()</strong></span> returns   the point to start regular expression match for   <span class="function">{@link mb_ereg_search()}</span>,   <span class="function">{@link mb_ereg_search_pos()}</span>,   <span class="function">{@link mb_ereg_search_regs()}</span>. The position is   represented by bytes from the head of string.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-ereg-search-getpos-notes">  <h3 class="title">注释</h3>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span>指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-ereg-search-getpos-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>    <li class="member"><span class="function">{@link mb_ereg_search_setpos()} - Set start point of next regular expression match</span></li>   </ul>  </span> </div></div>
 * @return int*/
function mb_ereg_search_getpos(): int {}

/**
*<div id="function.mb-ereg-search-setpos" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_ereg_search_setpos</h1>  <p class="verinfo">(PHP 4 &gt;= 4.2.0, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">mb_ereg_search_setpos</span> &mdash; <span class="dc-title">Set start point of next regular expression match</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-ereg-search-setpos-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_ereg_search_setpos</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="simpara">   <span class="function"><strong style="color:#CC7832">mb_ereg_search_setpos()</strong></span> sets the starting   point of a match for <span class="function">{@link mb_ereg_search()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-ereg-search-setpos-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>     <dd>      <p class="para">       The position to set. If it is negative, it counts from the end of the string.      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-ereg-search-setpos-returnvalues">  <h3 class="title">返回值</h3>  <p class="simpara">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-ereg-search-setpos-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>7.1.0</td>      <td>       Support for negative <span class="parameter" style="color:#3A95FF">offset</span>s has been added.      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.mb-ereg-search-setpos-notes">  <h3 class="title">注释</h3>    <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para"><span class="function">{@link mb_regex_encoding()}</span>指定的内部编码或字符编码将会当作此函数用的字符编码。</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-ereg-search-setpos-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_regex_encoding()} - Set/Get character encoding for multibyte regex</span></li>    <li class="member"><span class="function">{@link mb_ereg_search_init()} - Setup string and regular expression for a multibyte regular expression match</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function mb_ereg_search_setpos(int $offset): bool {}

/**
 * @param $encoding [optional]
 * @see mb_regex_encoding
 * @removed 8.0
 */
#[Deprecated(replacement: "mb_regex_encoding(%parametersList%)", since: "7.3")]
function mbregex_encoding($encoding) {}

/**
 * @param string $pattern
 * @param string $string
 * @param array &$registers [optional]
 * @see mb_ereg
 * @removed 8.0
 */
#[Deprecated(replacement: 'mb_ereg(%parametersList%)', since: '7.3')]
function mbereg(string $pattern, string $string, array &$registers) {}

/**
 * @param string $pattern
 * @param string $string
 * @param array &$registers [optional]
 * @see mb_eregi
 * @removed 8.0
 */
#[Deprecated(replacement: "mb_eregi(%parametersList%)", since: "7.3")]
function mberegi(string $pattern, string $string, array &$registers) {}

/**
 * @param $pattern
 * @param $replacement
 * @param $string
 * @param $option [optional]
 * @see mb_ereg_replace
 * @removed 8.0
 */
#[Deprecated(replacement: 'mb_ereg_replace(%parametersList%)', since: '7.3')]
function mbereg_replace($pattern, $replacement, $string, $option) {}

/**
 * @param $pattern
 * @param $replacement
 * @param $string
 * @param string $option
 * @return string
 * @see mb_eregi_replace
 * @removed 8.0
 */
#[Deprecated(replacement: "mb_eregi_replace(%parametersList%)", since: "7.3")]
function mberegi_replace(
    $pattern,
    $replacement,
    $string,
    #[PhpStormStubsElementAvailable(from: '7.0')] string $option = "msri"
): string {}

/**
 * @param $pattern
 * @param $string
 * @param $limit [optional]
 * @see mb_split
 * @removed 8.0
 */
#[Deprecated(replacement: 'mb_split(%parametersList%)', since: '7.3')]
function mbsplit($pattern, $string, $limit) {}

/**
 * @param $pattern
 * @param $string
 * @param $option [optional]
 * @see mb_ereg_match
 * @removed 8.0
 */
#[Deprecated(replacement: "mb_ereg_match(%parametersList%)", since: "7.3")]
function mbereg_match($pattern, $string, $option) {}

/**
 * @param $pattern [optional]
 * @param $option [optional]
 * @see mb_ereg_search
 * @removed 8.0
 */
#[Deprecated("use mb_ereg_search instead", replacement: "mb_ereg_search(%parametersList%)", since: "7.3")]
function mbereg_search($pattern, $option) {}

/**
 * @param $pattern [optional]
 * @param $option [optional]
 * @see mb_ereg_search_pos
 * @removed 8.0
 */
#[Deprecated(replacement: "mb_ereg_search_pos(%parametersList%)", since: "7.3")]
function mbereg_search_pos($pattern, $option) {}

/**
 * @param $pattern [optional]
 * @param $option [optional]
 * @see mb_ereg_search_regs
 * @removed 8.0
 */
#[Deprecated(replacement: 'mb_ereg_search_regs(%parametersList%)', since: '7.3')]
function mbereg_search_regs($pattern, $option) {}

/**
 * @param $string
 * @param $pattern [optional]
 * @param $option [optional]
 * @see mb_ereg_search_init
 * @removed 8.0
 */
#[Deprecated(replacement: "mb_ereg_search_init(%parametersList%)", since: "7.3")]
function mbereg_search_init($string, $pattern, $option) {}

/**
 * @see mb_ereg_search_getregs
 * @removed 8.0
 */
#[Deprecated(replacement: 'mb_ereg_search_getregs(%parametersList%)', since: '7.3')]
function mbereg_search_getregs() {}

/**
 * @see mb_ereg_search_getpos
 * @removed 8.0
 */
#[Deprecated(replacement: "mb_ereg_search_getpos()", since: "7.3")]
function mbereg_search_getpos() {}

/**
*<div id="function.mb-chr" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_chr</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">mb_chr</span> &mdash; <span class="dc-title">按 Unicode 码位值返回字符</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-chr-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_chr</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$codepoint</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   返回一个含有由 Unicode 码位值所指定的字符的字符串，以指定的编码进行编码。  </p>  <p class="para">   此函数与 <span class="function">{@link mb_ord()}</span> 互补。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-chr-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">codepoint</span></dt>    <dd>     <span>      一个 Unicode 码位值，例如 <span>128024</span> 是 <em>U+1F418 ELEPHANT</em>     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>    <dd>     <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-chr-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果可以用所指定的编码表示，则返回含有所请求的字符的字符串， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-chr-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-chr-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 Testing different code points</strong></p>   <div class="example-contents">    <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$values </span><span style="color: #007700">= [</span><span style="color: #9876AA">65</span><span style="color: #007700">, </span><span style="color: #9876AA">63</span><span style="color: #007700">, </span><span style="color: #9876AA">0x20AC</span><span style="color: #007700">, </span><span style="color: #9876AA">128024</span><span style="color: #007700">];<br />foreach (</span><span style="color: #9876AA">$values </span><span style="color: #007700">as </span><span style="color: #9876AA">$value</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_chr</span><span style="color: #007700">(</span><span style="color: #9876AA">$value</span><span style="color: #007700">, </span><span style="color: #DD0000">'UTF-8'</span><span style="color: #007700">));<br />    </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_chr</span><span style="color: #007700">(</span><span style="color: #9876AA">$value</span><span style="color: #007700">, </span><span style="color: #DD0000">'ISO-8859-1'</span><span style="color: #007700">));<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>   <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;">    <div class="cdata"><span>string(1) &quot;A&quot;<br>string(1) &quot;A&quot;<br>string(1) &quot;?&quot;<br>string(1) &quot;?&quot;<br>string(3) &quot;€&quot;<br>bool(false)<br>string(4) &quot;🐘&quot;<br>bool(false)<br></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-chr-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>    <li class="member"><span class="function">{@link mb_ord()} - 获取字符的 Unicode 码位值</span></li>    <li class="member"><span class="function">{@link IntlChar::ord()} - Return Unicode code point value of character</span></li>    <li class="member"><span class="function">{@link chr()} - 从数字生成单字节字符串</span></li>   </ul>  </span> </div></div>
 * @return string|false specific character or FALSE on failure.*/
function mb_chr(int $codepoint, ?string $encoding): string|false {}

/**
*<div id="function.mb-ord" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_ord</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">mb_ord</span> &mdash; <span class="dc-title">获取字符的 Unicode 码位值</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-ord-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_ord</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   返回所给定的字符的 Unicode 码位值。  </p>  <p class="para">   此函数与 <span class="function">{@link mb_chr()}</span> 互补。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-ord-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">string</span></dt>    <dd>     <span>      一个字符串。     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>    <dd>     <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-ord-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span>string</span> 第一个字符的 Unicode 码位值， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-ord-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-ord-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <div class="example-contents">     <div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"A"</span><span style="color: #007700">, </span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"🐘"</span><span style="color: #007700">, </span><span style="color: #DD0000">"UTF-8"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"\x80"</span><span style="color: #007700">, </span><span style="color: #DD0000">"ISO-8859-1"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_ord</span><span style="color: #007700">(</span><span style="color: #DD0000">"\x80"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Windows-1252"</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><br />int(65)<br />int(128024)<br />int(128)<br />int(8364)<br />    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-ord-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link mb_internal_encoding()} - 设置/获取内部字符编码</span></li>    <li class="member"><span class="function">{@link mb_chr()} - 按 Unicode 码位值返回字符</span></li>    <li class="member"><span class="function">{@link IntlChar::ord()} - Return Unicode code point value of character</span></li>    <li class="member"><span class="function">{@link ord()} - 转换字符串第一个字节为 0-255 之间的值</span></li>   </ul>  </span> </div></div>
 * @return int|false code point of character or FALSE on failure.*/
function mb_ord(string $string, ?string $encoding): int|false {}

/**
*<div id="function.mb-scrub" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_scrub</h1>  <p class="verinfo">(PHP 7 &gt;= 7.2.0, PHP 8)</p><p class="refpurpose"><span class="refname">mb_scrub</span> &mdash; <span class="dc-title">Replace ill-formed byte sequences with the substitute character</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-scrub-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_scrub</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Perform a character set conversion from the specified encoding, or the default encoding if no   encoding was specified, to the same encoding. This has the effect of replacing any invalid   byte sequences with the substitute character.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-scrub-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">string</span></dt>    <dd>     <span>      The input string.     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>    <dd>     <p class="para">      The encoding used to interpret <span class="parameter" style="color:#3A95FF">string</span>.      If it is omitted or <strong><span>null</span></strong>, the      <a href="https://www.php.net/manual/zh/mbstring.configuration.php#ini.mbstring.internal-encoding" class="link">mbstring.internal_encoding setting</a>      will be used if set, otherwise the <a href="https://www.php.net/manual/zh/ini.core.php#ini.default-charset" class="link">default_charset setting</a>      will be used.     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-scrub-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The <span class="type" style="color:#EAB766">string</span> result with invalid byte sequences replaced.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-scrub-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>    </tbody>     </table> </div></div>
 * @return string|false*/
function mb_scrub(string $string, ?string $encoding): false|string {}

/**
 * @param $position
 * @see mb_ereg_search_setpos
 */
#[Deprecated(replacement: "mb_ereg_search_setpos(%parametersList%)", since: "7.3")]
#[Pure]
function mbereg_search_setpos($position) {}

/**
*<div id="function.mb-str-split" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_str_split</h1>  <p class="verinfo">(PHP 7 &gt;= 7.4.0, PHP 8)</p><p class="refpurpose"><span class="refname">mb_str_split</span> &mdash; <span class="dc-title">指定多字节字符串，返回其字符数组</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-str-split-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_str_split</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$length</span><span class="initializer"> = 1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   此函数将返回一个字符串数组，这是一个支持字符变长编码以及 1、2、4 字节字符定长编码版本的 <span class="function">{@link str_split()}</span>。   如果指定了 <span class="parameter" style="color:#3A95FF">length</span> 参数，则将字符串按指定的字符长度（而不是字节长度）拆分为块。   可以选择指定 <span class="parameter" style="color:#3A95FF">encoding</span> 参数，这样是很好的做法。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-str-split-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       要拆分为单个字符或块的字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">        如果指定，则返回的数组中的每个元素将会由多个字符而不是单个字符组成。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>      <p class="para">        一个字符串，用于指定一种受支持的编码。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-str-split-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="function"><strong style="color:#CC7832">mb_str_split()</strong></span> 返回字符串数组。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.mb-str-split-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>  <td>8.0.0</td>  <td>   现在 <span class="parameter" style="color:#3A95FF">encoding</span> 可以为 null。  </td> </tr>     <tr>      <td>8.0.0</td>      <td>       此函数在失败时不再返回 <strong><span>false</span></strong>。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.mb-str-split-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link str_split()} - 将字符串转换为数组</span></li>   </ul>  </span> </div></div>
 * @return string[]|false*/
function mb_str_split(string $string, int $length = 1, ?string $encoding) {}

/**
*<div id="function.mb-str-pad" class="refentry"> <div class="refnamediv">  <h1 class="refname">mb_str_pad</h1>  <p class="verinfo">(PHP 8 &gt;= PHP 8.3.0)</p><p class="refpurpose"><span class="refname">mb_str_pad</span> &mdash; <span class="dc-title">Pad a multibyte string to a certain length with another multibyte string</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.mb-str-pad-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>mb_str_pad</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$string</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$length</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$pad_string</span><span class="initializer"> = &quot; &quot;</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$pad_type</span><span class="initializer"> = <strong><span>STR_PAD_RIGHT</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   This function returns the <span class="parameter" style="color:#3A95FF">string</span>   padded on the left, the right, or both sides to the specified   padding length, where the length is measured in Unicode codepoints. If the optional argument   <span class="parameter" style="color:#3A95FF">pad_string</span> is not supplied, the   <span class="parameter" style="color:#3A95FF">string</span> is padded with spaces, otherwise it   is padded with characters from <span class="parameter" style="color:#3A95FF">pad_string</span>   up to the limit.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.mb-str-pad-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">string</span></dt>     <dd>      <p class="para">       The input string.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">length</span></dt>     <dd>      <p class="para">       If the value of <span class="parameter" style="color:#3A95FF">length</span> is negative,       less than, or equal to the length of the input string, no padding       takes place, and <span class="parameter" style="color:#3A95FF">string</span> will be returned.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">pad_string</span></dt>     <dd>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        The <span class="parameter" style="color:#3A95FF">pad_string</span> may be truncated if the        required number of padding characters can&#039;t be evenly divided by the        <span class="parameter" style="color:#3A95FF">pad_string</span>&#039;s length.       </p>      </p></blockquote>     </dd>             <dt><span class="parameter" style="color:#3A95FF">pad_type</span></dt>     <dd>      <p class="para">       Optional argument <span class="parameter" style="color:#3A95FF">pad_type</span> can be       <strong><span>STR_PAD_RIGHT</span></strong>, <strong><span>STR_PAD_LEFT</span></strong>,       or <strong><span>STR_PAD_BOTH</span></strong>.       By default <strong><span>STR_PAD_RIGHT</span></strong>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para"><span class="parameter" style="color:#3A95FF">encoding</span>参数为字符编码。如果省略或是 <strong><span>null</span></strong>，则使用内部字符编码。</p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.mb-str-pad-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the padded string.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.mb-str-pad-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">mb_str_pad()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_str_pad</span><span style="color: #007700">(</span><span style="color: #DD0000">'▶▶'</span><span style="color: #007700">, </span><span style="color: #9876AA">6</span><span style="color: #007700">, </span><span style="color: #DD0000">'❤❓❇'</span><span style="color: #007700">, </span><span style="color: #9876AA">STR_PAD_RIGHT</span><span style="color: #007700">)); </span><span style="color: #FF8000">// string(18) "▶▶❤❓❇❤"<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_str_pad</span><span style="color: #007700">(</span><span style="color: #DD0000">'▶▶'</span><span style="color: #007700">, </span><span style="color: #9876AA">6</span><span style="color: #007700">, </span><span style="color: #DD0000">'❤❓❇'</span><span style="color: #007700">, </span><span style="color: #9876AA">STR_PAD_LEFT</span><span style="color: #007700">));  </span><span style="color: #FF8000">// string(18) "❤❓❇❤▶▶"<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_str_pad</span><span style="color: #007700">(</span><span style="color: #DD0000">'▶▶'</span><span style="color: #007700">, </span><span style="color: #9876AA">6</span><span style="color: #007700">, </span><span style="color: #DD0000">'❤❓❇'</span><span style="color: #007700">, </span><span style="color: #9876AA">STR_PAD_BOTH</span><span style="color: #007700">));  </span><span style="color: #FF8000">// string(18) "❤❓▶▶❤❓"<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">mb_str_pad</span><span style="color: #007700">(</span><span style="color: #DD0000">"🎉"</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #DD0000">"祝"</span><span style="color: #007700">, </span><span style="color: #9876AA">STR_PAD_LEFT</span><span style="color: #007700">));   </span><span style="color: #FF8000">// string(10) "祝祝🎉"<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
*/
function mb_str_pad(string $string, int $length, string $pad_string = " ", int $pad_type = STR_PAD_RIGHT, ?string $encoding = null): string {}

/**
*      自 PHP 8.0.0 起已删除。     
*/
define('MB_OVERLOAD_MAIL', 1);
/**
*      自 PHP 8.0.0 起已删除。     
*/
define('MB_OVERLOAD_STRING', 2);
/**
*      自 PHP 8.0.0 起已删除。     
*/
define('MB_OVERLOAD_REGEX', 4);
/**
*      Performs a full upper-case folding.      This may change the length of the string.      This is the mode used by mb_strtoupper().     
*/
define('MB_CASE_UPPER', 0);
/**
*      Performs a full lower-case folding.      This may change the length of the string.      This is the mode used by mb_strtolower().     
*/
define('MB_CASE_LOWER', 1);
/**
*      Performs a full title-case conversion based on the Cased and CaseIgnorable      derived Unicode properties.      In particular this improves handling of quotes and apostrophes.      This may change the length of the string.     
*/
define('MB_CASE_TITLE', 2);
/**
*      Performs a full case fold conversion which removes case distinctions      present in the string.      This is used for caseless matching.      This may change the length of the string.      Available since PHP 7.3.     
*/
define('MB_CASE_FOLD', 3);
/**
*      Performs simple upper-case fold conversion.      This does not change the length of the string.      Available as of PHP 7.3.     
*/
define('MB_CASE_UPPER_SIMPLE', 4);
/**
*      Performs a simple lower-case fold conversion.      This does not change the length of the string.      Available as of PHP 7.3.     
*/
define('MB_CASE_LOWER_SIMPLE', 5);
/**
*      Performs simple title-case fold conversion.      This does not change the length of the string.      Available as of PHP 7.3.     
*/
define('MB_CASE_TITLE_SIMPLE', 6);
/**
*      Performs a simple case fold conversion which removes case distinctions      present in the string.      This is used for caseless matching.      This does not change the length of the string.      Used by case-insensitive operations internally by the MBString extension.      Available as of PHP 7.3.     
*/
define('MB_CASE_FOLD_SIMPLE', 7);

/**
*      Oniguruma 版本，例如 <code class="literal">6.9.4</code>。自 PHP 7.4 起可用。     
*/
define('MB_ONIGURUMA_VERSION', '6.9.8');

// End of mbstring v.
