<?php

// Start of Fann v.1

/**
*<div id="class.fannconnection" class="reference"> <h1 class="title">FANNConnection 类</h1>  <div class="partintro"><p class="verinfo">(No version information available, might only be in Git)</p>  <div class="section" id="fannconnection.intro">   <h2 class="title">简介</h2>   <p class="para">    <span class="classname"><strong class="classname">FANNConnection</strong></span> 被用于神经网络的连接。    该类的对象一般在 <span class="function">{@link fann_get_connection_array()}</span> 和 <span class="function">{@link fann_set_weight_array()}</span> 中被使用。   </p>  </div>  <div class="section" id="fannconnection.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">FANNConnection</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.fannconnection.php#fannconnection.props.from-neuron">$<var class="varname">from_neuron</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.fannconnection.php#fannconnection.props.to-neuron">$<var class="varname">to_neuron</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.fannconnection.php#fannconnection.props.weight">$<var class="varname">weight</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/fannconnection.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$from_neuron</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$to_neuron</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$weight</span></span>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/fannconnection.getfromneuron.php" class="methodname" style="color:#CC7832">getFromNeuron</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/fannconnection.gettoneuron.php" class="methodname" style="color:#CC7832">getToNeuron</a></span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/fannconnection.getweight.php" class="methodname" style="color:#CC7832">getWeight</a></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/fannconnection.setweight.php" class="methodname" style="color:#CC7832">setWeight</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$weight</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>   }</div>  </div>  <div class="section" id="fannconnection.props">   <h2 class="title">属性</h2>   <dl>         <dt id="fannconnection.props.from-neuron"><var class="varname">from_neuron</var></dt>     <dd>      <p class="para">开始连接的神经元。</p>     </dd>             <dt id="fannconnection.props.to-neuron"><var class="varname">to_neuron</var></dt>     <dd>      <p class="para">结束连接的神经元。</p>     </dd>             <dt id="fannconnection.props.weight"><var class="varname">weight</var></dt>     <dd>      <p class="para">连接的权重。</p>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link FANNConnection::__construct} — 连接构造器</li><li>{@link FANNConnection::getFromNeuron} — 返回开始连接的神经元</li><li>{@link FANNConnection::getToNeuron} — 返回终止神经元的位置</li><li>{@link FANNConnection::getWeight} — 返回连接权重。</li><li>{@link FANNConnection::setWeight} — 设置连接权重。</li></ul></div>
*/
class FANNConnection
{
    /**
     * @var float
     */
    public $weight;

    /**
     * @var int
     */
    public $to_neuron;

    /**
     * @var int
     */
    public $from_neuron;

    /**
     * The connection constructor
     *
     * @param int $from_neuron
     * @param int $to_neuron
     * @param float $weight
     */
    public function __construct($from_neuron, $to_neuron, $weight) {}

/**
*<div id="fannconnection.getfromneuron" class="refentry"> <div class="refnamediv">  <h1 class="refname">FANNConnection::getFromNeuron</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">FANNConnection::getFromNeuron</span> &mdash; <span class="dc-title">返回开始连接的神经元</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-fannconnection.getfromneuron-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>FANNConnection::getFromNeuron</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   返回开始连接的神经元。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-fannconnection.getfromneuron-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-fannconnection.getfromneuron-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   开始连接的神经元。  </p> </div></div>
     * @return int The postions of starting neuron.*/
    public function getFromNeuron() {}

/**
*<div id="fannconnection.gettoneuron" class="refentry"> <div class="refnamediv">  <h1 class="refname">FANNConnection::getToNeuron</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">FANNConnection::getToNeuron</span> &mdash; <span class="dc-title">返回终止神经元的位置</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-fannconnection.gettoneuron-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>FANNConnection::getToNeuron</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   返回终止神经元的位置。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-fannconnection.gettoneuron-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-fannconnection.gettoneuron-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   终止神经元的位置。  </p> </div></div>
     * @return int The postions of terminating neuron.*/
    public function getToNeuron() {}

/**
*<div id="fannconnection.getweight" class="refentry"> <div class="refnamediv">  <h1 class="refname">FANNConnection::getWeight</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">FANNConnection::getWeight</span> &mdash; <span class="dc-title">返回连接权重。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-fannconnection.getweight-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>FANNConnection::getWeight</strong></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   返回连接权重。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-fannconnection.getweight-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-fannconnection.getweight-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   连接权重。  </p> </div></div>
     * @return void The connection weight.*/
    public function getWeight() {}

/**
*<div id="fannconnection.setweight" class="refentry"> <div class="refnamediv">  <h1 class="refname">FANNConnection::setWeight</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">FANNConnection::setWeight</span> &mdash; <span class="dc-title">设置连接权重。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-fannconnection.setweight-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>FANNConnection::setWeight</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$weight</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   设置连接权重。  </p>  <p class="para">    该方法不同于 <span class="function">{@link fann_set_weight()}</span> 方法. 该方法不会网络中的权重值。只有当调用了 <span class="function">{@link fann_set_weight_array()}</span> 方法后网络中的权重值才会更改。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-fannconnection.setweight-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">weight</span></dt>     <dd>      <p class="para">       连接权重。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-fannconnection.setweight-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">无返回值。</p> </div></div>
     * @return bool*/
    public function setWeight($weight) {}
}

/**
*<div id="function.fann-cascadetrain-on-data" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_cascadetrain_on_data</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_cascadetrain_on_data</span> &mdash; <span class="dc-title">在整个数据集上训练，使用一段时间的 Cascade2 训练算法。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-cascadetrain-on-data-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_cascadetrain_on_data</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$data</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$max_neurons</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$neurons_between_reports</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$desired_error</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   级联输出改变小数是一个0到1之间的数字，表示在输出连接的训练中，为了使训练不停滞的情况下，经过 <span class="function">{@link fann_get_cascade_output_stagnation_epochs()}</span> 次迭代的后，<span class="function">{@link fann_get_MSE()}</span> 将会改变多大。如果训练停滞了，训练的输出连接将会结束，新的候选神经元将会准备好。  </p>  <p class="para">   该训练使用由 fann_set_cascade_ 前缀设置的参数，但它也采用了另一种训练算法，即内部训练算法。该训练算法要么是 <span class="function">{@link fann_set_training_algorithm()}</span> 设置的 <strong><span>FANN_TRAIN_RPROP</span></strong> 算法，要么是 <strong><span>FANN_TRAIN_QUICKPROP</span></strong>，这些算法设置的参数同样也会影响到级联训练。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-cascadetrain-on-data-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">data</span></dt>    <dd>     <p class="para">神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">max_neurons</span></dt>    <dd>     <p class="para">     被添加入神经网络中最大的神经元数。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">neurons_between_reports</span></dt>    <dd>     <p class="para">      打印状态报告之间的神经元数。0表示没有报告会被打印。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">desired_error</span></dt>    <dd>     <p class="para">      预期的 <span class="function">{@link fann_get_MSE()}</span> 或 <span class="function">{@link fann_get_bit_fail()}</span>,      取决于 <span class="function">{@link fann_set_train_stop_function()}</span> 选择的停止函数     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-cascadetrain-on-data-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-cascadetrain-on-data-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_train_on_data()} - 在整个数据集上训练一段时间。</span></li>    <li class="member"><span class="function">{@link fann_cascadetrain_on_file()} - 读取文件并在整个数据集上训练，使用 Cascade2 训练算法训练一段时间</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_cascadetrain_on_data($ann, $data, $max_neurons, $neurons_between_reports, $desired_error) {}

/**
*<div id="function.fann-cascadetrain-on-file" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_cascadetrain_on_file</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_cascadetrain_on_file</span> &mdash; <span class="dc-title">读取文件并在整个数据集上训练，使用 Cascade2 训练算法训练一段时间</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-cascadetrain-on-file-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_cascadetrain_on_file</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$max_neurons</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$neurons_between_reports</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$desired_error</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   和 <span class="function">{@link fann_cascadetrain_on_data()}</span> 函数做一样的工作，但是该函数是直接从文件读取训练数据的。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-cascadetrain-on-file-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>    <dd>     <p class="para">      包含训练数据的文件。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">max_neurons</span></dt>    <dd>     <p class="para">      添加到神经网络的最大神经元数。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">neurons_between_reports</span></dt>    <dd>     <p class="para">      打印状态报告之间的神经元数量。0值表示没有报告打印。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">desired_error</span></dt>    <dd>     <p class="para">      期望的 <span class="function">{@link fann_get_MSE()}</span> 值或者 <span class="function">{@link fann_get_bit_fail()}</span> 值，      取决于 <span class="function">{@link fann_set_train_stop_function()}</span> 函数选择的停止函数。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-cascadetrain-on-file-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-cascadetrain-on-file-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_train_on_data()} - 在整个数据集上训练一段时间。</span></li>    <li class="member"><span class="function">{@link fann_cascadetrain_on_data()} - 在整个数据集上训练，使用一段时间的 Cascade2 训练算法。</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_cascadetrain_on_file($ann, $filename, $max_neurons, $neurons_between_reports, $desired_error) {}

/**
*<div id="function.fann-clear-scaling-params" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_clear_scaling_params</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_clear_scaling_params</span> &mdash; <span class="dc-title">清除缩放参数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-clear-scaling-params-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_clear_scaling_params</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   清除缩放参数  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-clear-scaling-params-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-clear-scaling-params-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div></div>
 * @return bool*/
function fann_clear_scaling_params($ann) {}

/**
*<div id="function.fann-copy" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_copy</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_copy</span> &mdash; <span class="dc-title">创建一个 fann 结构体的副本。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-copy-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_copy</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   创建一个 fann 结构体的副本。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-copy-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-copy-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回神经网络资源的副本，失败则返回<strong><span>false</span></strong>   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fann-copy-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">This function is only available if the fann extension has been build against libfann &gt;= 2.2.</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-copy-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_test()} - 使用一组输入和一组期望的输出来测试。</span></li>   </ul>  </span> </div></div>
 * @return resource|false Returns a copy of neural network resource on success, or false on error*/
function fann_copy($ann) {}

/**
*<div id="function.fann-create-from-file" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_create_from_file</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_create_from_file</span> &mdash; <span class="dc-title">从配置文件中构建一个反向传播神经网络。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-create-from-file-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_create_from_file</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$configuration_file</span></span>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   从一个由 <span class="function">{@link fann_save()}</span> 函数保存的配置文件中构建一个反向传播神经网络。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-create-from-file-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">configuration_file</span></dt>    <dd>     <span>      配置文件的路径。     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-create-from-file-returnvalues">  <h3 class="title">返回值</h3>  <p class="para"> 成功时返回神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>，发生错误返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-create-from-file-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_save()} - 将整个网络保存至配置文件。</span></li>   </ul>  </span> </div></div>
 * @return resource|false*/
function fann_create_from_file($configuration_file) {}

/**
*<div id="function.fann-create-shortcut-array" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_create_shortcut_array</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_create_shortcut_array</span> &mdash; <span class="dc-title">创建一个含快捷连接而非全连接的标准反向传播神经网络。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-create-shortcut-array-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_create_shortcut_array</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num_layers</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$layers</span></span>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   使用包含各层大小的数组创建一个含快捷连接而非全连接的标准反向传播神经网络。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-create-shortcut-array-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">num_layers</span></dt>    <dd>     <span>      网络层数的总数，包含输入输出层。     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">layers</span></dt>    <dd>     <p class="para">      一个包含各层大小的数组。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-create-shortcut-array-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回一个神经网络的资源，错误则返回 <strong><span>false</span></strong>   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-create-shortcut-array-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_create_shortcut()} - 创建一个含快捷连接而非全连接的标准反向传播神经网络。</span></li>    <li class="member"><span class="function">{@link fann_create_sparse()} - 创建一个标准的反向传播神经网络，该网络不是全连接。</span></li>    <li class="member"><span class="function">{@link fann_create_standard()} - 创建标准的全连接反向传播神经网络。</span></li>   </ul>  </span> </div></div>
 * @return resource|false Returns a neural network resource on success, or false on error.*/
function fann_create_shortcut_array($num_layers, $layers) {}

/**
*<div id="function.fann-create-shortcut" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_create_shortcut</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_create_shortcut</span> &mdash; <span class="dc-title">创建一个含快捷连接而非全连接的标准反向传播神经网络。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-create-shortcut-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_create_shortcut</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num_layers</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num_neurons1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num_neurons2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">...$num_neuronsN</span></span><br>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   创建一个含快捷连接而非全连接标准反向传播神经网络。  </p>  <p class="para">   快捷连接是可以跳过网络层次的连接。一个包含快捷连接的全连接网络，表示在之后的网络层里所有的神经元都是互相连接的。包括输出层直接连接到输出层的连接。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-create-shortcut-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">num_layers</span></dt>    <dd>     <span>      包括输入输出层在内的网络层的层数。。     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">num_neurons1</span></dt>    <dd>     <p class="para">      第一层神经元的数量。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">num_neurons2</span></dt>    <dd>     <p class="para">      第二层神经元的数量。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">num_neuronsN</span></dt>    <dd>     <p class="para">      其它层神经元的数量。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-create-shortcut-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回神经网络的资源，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-create-shortcut-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_create_shortcut_array()} - 创建一个含快捷连接而非全连接的标准反向传播神经网络。</span></li>    <li class="member"><span class="function">{@link fann_create_sparse()} - 创建一个标准的反向传播神经网络，该网络不是全连接。</span></li>    <li class="member"><span class="function">{@link fann_create_standard()} - 创建标准的全连接反向传播神经网络。</span></li>   </ul>  </span> </div></div>
 * @return resource|false Returns a neural network resource on success, or false on error.*/
function fann_create_shortcut($num_layers, $num_neurons1, $num_neurons2, ...$_) {}

/**
*<div id="function.fann-create-sparse-array" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_create_sparse_array</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_create_sparse_array</span> &mdash; <span class="dc-title">创建一个标准的反向传播神经网络，该网络使用一个表示每层大小的数组来构造，但是并不是全连接的。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-create-sparse-array-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_create_sparse_array</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$connection_rate</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num_layers</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$layers</span></span>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   创建一个标准的反向传播神经网络，该网络使用一个表示每层大小的数组来构造，但是并不是全连接的。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-create-sparse-array-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">connection_rate</span></dt>    <dd>     <span>      连接率控制着在网络中将会有多少连接，如果连接率设置为1，那么这个网络就是全连接网络，但是如果设置为0.5将会设置一半的连接。连接率为1的结果和使用<span class="function">{@link fann_create_standard()}</span>函数的效果是一样的。     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">num_layers</span></dt>    <dd>     <p class="para">      神经网络层数，包括输入输出层。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">layers</span></dt>    <dd>     <p class="para">       表示每层大小的数组。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-create-sparse-array-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回神经网络的资源，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-create-sparse-array-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_create_sparse()} - 创建一个标准的反向传播神经网络，该网络不是全连接。</span></li>    <li class="member"><span class="function">{@link fann_create_standard()} - 创建标准的全连接反向传播神经网络。</span></li>    <li class="member"><span class="function">{@link fann_create_shortcut()} - 创建一个含快捷连接而非全连接的标准反向传播神经网络。</span></li>   </ul>  </span> </div></div>
 * @return resource|false Returns a neural network resource on success, or false on error.*/
function fann_create_sparse_array($connection_rate, $num_layers, $layers) {}

/**
*<div id="function.fann-create-sparse" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_create_sparse</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_create_sparse</span> &mdash; <span class="dc-title">创建一个标准的反向传播神经网络，该网络不是全连接。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-create-sparse-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_create_sparse</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$connection_rate</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num_layers</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num_neurons1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num_neurons2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">...$num_neuronsN</span></span><br>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   创建一个标准的反向传播神经网络，该网络不是全连接。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-create-sparse-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">connection_rate</span></dt>    <dd>     <span>      连接率控制着在网络中将会有多少连接，如果连接率设置为1，那么这个网络就是全连接网络，但是如果设置为 0.5 将会设置一半的连接。连接率为1的结果和使用 <span class="function">{@link fann_create_standard()}</span>函数的效果是一样的。     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">num_layers</span></dt>    <dd>     <p class="para">      神经网络层数，包括输入输出层。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">num_neurons1</span></dt>    <dd>     <p class="para">      第一层网络的神经数。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">num_neurons2</span></dt>    <dd>     <p class="para">      第二层网络的神经数。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">num_neuronsN</span></dt>    <dd>     <p class="para">      其它层网络的神经数。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-create-sparse-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个神经网络资源，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-create-sparse-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_create_sparse_array()} - 创建一个标准的反向传播神经网络，该网络使用一个表示每层大小的数组来构造，但是并不是全连接的。</span></li>    <li class="member"><span class="function">{@link fann_create_standard()} - 创建标准的全连接反向传播神经网络。</span></li>    <li class="member"><span class="function">{@link fann_create_shortcut()} - 创建一个含快捷连接而非全连接的标准反向传播神经网络。</span></li>   </ul>  </span> </div></div>
 * @return resource|false Returns a neural network resource on success, or false on error.*/
function fann_create_sparse($connection_rate, $num_layers, $num_neurons1, $num_neurons2, ...$_) {}

/**
*<div id="function.fann-create-standard-array" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_create_standard_array</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_create_standard_array</span> &mdash; <span class="dc-title">创建一个全连接的反向传播神经网络，该网络使用一个表示每层大小的数组来构造。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-create-standard-array-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_create_standard_array</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num_layers</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$layers</span></span>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   创建一个标准的全连接反向传播神经网络。  </p>  <p class="para">   每一层都将会有一个偏置神经元 (除了输出层),该偏置神经元将会连接下一层所有的神经元。当运行网络时，偏置神经节点一直发出1信号。  </p>  <p class="para">   请使用 <span class="function">{@link fann_destroy()}</span> 函数来销毁神经网络。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-create-standard-array-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">num_layers</span></dt>    <dd>     <span>      神经网络层数，包括输入输出层。     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">layers</span></dt>    <dd>     <p class="para">     表示每层大小的数组。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-create-standard-array-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功则返回神经网络，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-create-standard-array-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_create_standard()} - 创建标准的全连接反向传播神经网络。</span></li>    <li class="member"><span class="function">{@link fann_create_sparse()} - 创建一个标准的反向传播神经网络，该网络不是全连接。</span></li>    <li class="member"><span class="function">{@link fann_create_shortcut()} - 创建一个含快捷连接而非全连接的标准反向传播神经网络。</span></li>   </ul>  </span> </div></div>
 * @return resource|false Returns a neural network resource on success, or false on error.*/
function fann_create_standard_array($num_layers, $layers) {}

/**
*<div id="function.fann-create-standard" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_create_standard</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_create_standard</span> &mdash; <span class="dc-title">创建标准的全连接反向传播神经网络。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-create-standard-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_create_standard</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num_layers</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num_neurons1</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num_neurons2</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">...$num_neuronsN</span></span><br>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   创建一个标准的全连接反向传播神经网络。  </p>  <p class="para">   每一层都将会有一个偏置神经元 (除了输出层),   该偏置神经元将会连接下一层所有的神经元。当运行网络时，偏置神经节点一直发出1信号。  </p>  <p class="para">   请使用 <span class="function">{@link fann_destroy()}</span> 函数来销毁神经网络。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-create-standard-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">num_layers</span></dt>    <dd>     <span>      神经网络层数，包括输入输出层。     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">num_neurons1</span></dt>    <dd>     <p class="para">      第一层神经元的数量。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">num_neurons2</span></dt>    <dd>     <p class="para">      第二层神经元的数量。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">num_neuronsN</span></dt>    <dd>     <p class="para">      其他层的神经数量。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-create-standard-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回神经网络的资源，失败则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-create-standard-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_create_standard_array()} - 创建一个全连接的反向传播神经网络，该网络使用一个表示每层大小的数组来构造。</span></li>    <li class="member"><span class="function">{@link fann_create_sparse()} - 创建一个标准的反向传播神经网络，该网络不是全连接。</span></li>    <li class="member"><span class="function">{@link fann_create_shortcut()} - 创建一个含快捷连接而非全连接的标准反向传播神经网络。</span></li>   </ul>  </span> </div></div>
 * @return resource|false Returns a neural network resource on success, or false on error.*/
function fann_create_standard($num_layers, $num_neurons1, $num_neurons2, ...$_) {}

/**
*<div id="function.fann-create-train-from-callback" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_create_train_from_callback</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_create_train_from_callback</span> &mdash; <span class="dc-title">从用户提供的函数创建训练数据结构。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-create-train-from-callback-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_create_train_from_callback</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num_data</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num_input</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num_output</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$user_function</span></span><br>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   从用户提供的函数创建训练数据结构。当训练数据可数，用户需要构造一个用来接收训练数据集(包括输入，输出)数量和返回值为集合的函数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-create-train-from-callback-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">num_data</span></dt>    <dd>     <span>      训练数据的数量。     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">num_input</span></dt>    <dd>     <p class="para">      每个训练数据的输入数。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">num_output</span></dt>    <dd>     <p class="para">      每个训练数据的输出数。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">user_function</span></dt>    <dd>     <p class="para">      用户提供的函数包含以下参数：      <ul class="simplelist">       <li class="member"><span>num</span> - 训练数据集的数量。</li>       <li class="member"><span>num_input</span> - 数量数据的输入数。</li>       <li class="member"><span>num_output</span> - 数量数据的输出数。</li>      </ul>     </p>     <p class="para">      函数应该返回一个包含<span>input</span> 和 <span>output</span> 键的数组，并且这两个键的值分别表示输入输出的值(皆为数组)。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-create-train-from-callback-returnvalues">  <h3 class="title">返回值</h3>  <p class="para"> 成功时返回训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>，发生错误返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fann-create-train-from-callback-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>fann_create_train_from_callback()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">create_train_callback</span><span style="color: #007700">(</span><span style="color: #9876AA">$num_data</span><span style="color: #007700">, </span><span style="color: #9876AA">$num_input</span><span style="color: #007700">, </span><span style="color: #9876AA">$num_output</span><span style="color: #007700">) {<br />    return array(<br />        </span><span style="color: #DD0000">"input" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">array_fill</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">$num_input</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">),<br />        </span><span style="color: #DD0000">"output" </span><span style="color: #007700">=&gt; </span><span style="color: #9876AA">array_fill</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">$num_output</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">),<br />    );<br />}<br /><br /></span><span style="color: #9876AA">$num_data </span><span style="color: #007700">= </span><span style="color: #9876AA">3</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$num_input </span><span style="color: #007700">= </span><span style="color: #9876AA">2</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$num_output </span><span style="color: #007700">= </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$train_data </span><span style="color: #007700">= </span><span style="color: #9876AA">fann_create_train_from_callback</span><span style="color: #007700">(</span><span style="color: #9876AA">$num_data</span><span style="color: #007700">, </span><span style="color: #9876AA">$num_input</span><span style="color: #007700">, </span><span style="color: #9876AA">$num_output</span><span style="color: #007700">, </span><span style="color: #DD0000">"create_train_callback"</span><span style="color: #007700">);<br />if (</span><span style="color: #9876AA">$train_data</span><span style="color: #007700">) {<br />    </span><span style="color: #FF8000">// Do something with $train_data<br /></span><span style="color: #007700">}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fann-create-train-from-callback-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">This function is only available if the fann extension has been build against libfann &gt;= 2.2.</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-create-train-from-callback-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_read_train_from_file()} - 读取存储训练数据的文件。</span></li>    <li class="member"><span class="function">{@link fann_train_on_data()} - 在整个数据集上训练一段时间。</span></li>    <li class="member"><span class="function">{@link fann_destroy_train()} - 销毁训练数据。</span></li>    <li class="member"><span class="function">{@link fann_save_train()} - 将训练结构体保存至文件。</span></li>   </ul>  </span> </div></div>
 * @return resource|false*/
function fann_create_train_from_callback($num_data, $num_input, $num_output, $user_function) {}

/**
*<div id="function.fann-create-train" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_create_train</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_create_train</span> &mdash; <span class="dc-title">创建一个空的训练数据结构。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-create-train-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_create_train</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num_data</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num_input</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$num_output</span></span>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   创建一个空的训练数据结构。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-create-train-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">num_data</span></dt>    <dd>     <span>      训练数据的数量。     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">num_input</span></dt>    <dd>     <p class="para">      每个训练数据集输入的数量。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">num_output</span></dt>    <dd>     <p class="para">      每个训练数据集输出的数量。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-create-train-returnvalues">  <h3 class="title">返回值</h3>  <p class="para"> 成功时返回训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>，发生错误返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fann-create-train-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">This function is only available if the fann extension has been build against libfann &gt;= 2.2.</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-create-train-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_read_train_from_file()} - 读取存储训练数据的文件。</span></li>    <li class="member"><span class="function">{@link fann_train_on_data()} - 在整个数据集上训练一段时间。</span></li>    <li class="member"><span class="function">{@link fann_destroy_train()} - 销毁训练数据。</span></li>    <li class="member"><span class="function">{@link fann_save_train()} - 将训练结构体保存至文件。</span></li>   </ul>  </span> </div></div>
 * @return resource|false*/
function fann_create_train($num_data, $num_input, $num_output) {}

/**
*<div id="function.fann-descale-input" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_descale_input</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_descale_input</span> &mdash; <span class="dc-title">在获取基于先前计算的参数之后，在输入向量中缩小数据</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-descale-input-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_descale_input</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$input_vector</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   在获取基于先前计算的参数之后，在输入向量中缩小数据。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-descale-input-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">input_vector</span></dt>    <dd>     <p class="para">      将要被缩小的输入向量     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-descale-input-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-descale-input-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_scale_input()} - 在以前计算参数的基础上，在训练之前放大输入向量中的数据</span></li>    <li class="member"><span class="function">{@link fann_descale_output()} - 在获取基于先前计算的参数之后，在输出向量中缩小数据</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_descale_input($ann, $input_vector) {}

/**
*<div id="function.fann-descale-output" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_descale_output</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_descale_output</span> &mdash; <span class="dc-title">在获取基于先前计算的参数之后，在输出向量中缩小数据</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-descale-output-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_descale_output</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$output_vector</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   在获取基于先前计算的参数之后，在输出向量中缩小数据。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-descale-output-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">output_vector</span></dt>    <dd>     <p class="para">      将被缩小的输出向量。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-descale-output-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-descale-output-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_scale_output()} - 在以前计算参数的基础上，在训练之前放大输出向量中的数据</span></li>    <li class="member"><span class="function">{@link fann_descale_input()} - 在获取基于先前计算的参数之后，在输入向量中缩小数据</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_descale_output($ann, $output_vector) {}

/**
*<div id="function.fann-descale-train" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_descale_train</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_descale_train</span> &mdash; <span class="dc-title">基于先前计算的参数来缩小输入和输出数据</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-descale-train-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_descale_train</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$train_data</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   基于先前计算的参数来缩小输入和输出数据。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-descale-train-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">train_data</span></dt>    <dd>     <p class="para">神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-descale-train-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-descale-train-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_scale_train()} - 在以前计算参数的基础上，缩放输入和输出数据</span></li>    <li class="member"><span class="function">{@link fann_set_scaling_params()} - 根据训练数据计算输入和输出缩放参数以供将来使用</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_descale_train($ann, $train_data) {}

/**
*<div id="function.fann-destroy" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_destroy</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_destroy</span> &mdash; <span class="dc-title">销毁整个网络并且适当地释放所有的关联内存。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-destroy-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_destroy</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   销毁整个网络并且适当地释放所有的关联内存。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-destroy-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-destroy-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div></div>
 * @return bool*/
function fann_destroy($ann) {}

/**
*<div id="function.fann-destroy-train" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_destroy_train</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_destroy_train</span> &mdash; <span class="dc-title">销毁训练数据。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-destroy-train-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_destroy_train</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$train_data</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   销毁训练数据。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-destroy-train-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">train_data</span></dt>    <dd>     <span>神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-destroy-train-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div></div>
 * @return bool*/
function fann_destroy_train($train_data) {}

/**
*<div id="function.fann-duplicate-train-data" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_duplicate_train_data</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_duplicate_train_data</span> &mdash; <span class="dc-title">返回 fann 训练数据精确的副本。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-duplicate-train-data-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_duplicate_train_data</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$data</span></span>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   返回 fann 训练数据精确的副本 <span class="type" style="color:#EAB766">resource</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-duplicate-train-data-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">data</span></dt>    <dd>     <span>神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-duplicate-train-data-returnvalues">  <h3 class="title">返回值</h3>  <p class="para"> 成功时返回训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>，发生错误返回 <strong><span>false</span></strong>。</p> </div></div>
 * @return resource|false*/
function fann_duplicate_train_data($data) {}

/**
*<div id="function.fann-get-activation-function" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_activation_function</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_activation_function</span> &mdash; <span class="dc-title">返回激励函数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-activation-function-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_activation_function</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$layer</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$neuron</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   获取在层数为 <span>layer</span> 的网络中神经元数为 <span>neuron</span>的激励函数，输入层被计为 0.  </p>  <p class="para">   在输入层是不能获取神经元激励函数的。  </p>  <p class="para">   返回值将会是<a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-activation-funcs" class="link">激励函数</a> 常量之一。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-activation-function-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">layer</span></dt>    <dd>     <p class="para">      层数。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">neuron</span></dt>    <dd>     <p class="para">      神经元数     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-activation-function-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-train" class="link">学习函数</a> 常量或者如果神经未在神经网络中定义返回 -1， 错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-activation-function-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_activation_function_layer()} - 为已应用的层中所有的神经元设置激活函数</span></li>    <li class="member"><span class="function">{@link fann_set_activation_function_hidden()} - 为所有隐藏层设置激活函数</span></li>    <li class="member"><span class="function">{@link fann_set_activation_function_output()} - 为输出层设置激活函数</span></li>    <li class="member"><span class="function">{@link fann_set_activation_steepness()} - 为提供的神经元和层设置激活陡度</span></li>    <li class="member"><span class="function">{@link fann_set_activation_function()} - 为已应用的神经元和层设置激活函数</span></li>   </ul>  </span> </div></div>
 * @return int|false constant or -1 if the neuron is not defined in the neural network, or false on error.*/
function fann_get_activation_function($ann, $layer, $neuron) {}

/**
*<div id="function.fann-get-activation-steepness" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_activation_steepness</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_activation_steepness</span> &mdash; <span class="dc-title">为提供的神经和网络层数返回激活陡度</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-activation-steepness-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_activation_steepness</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$layer</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$neuron</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   获取神经元数为 <span>neuron</span> 层数为   <span>layer</span>神经网络的激活陡度，将输入层数计为1层。  </p>  <p class="para">   在输入层中是不可能获取激活陡度。  </p>  <p class="para">   激活函数的陡度表明了激活函数从最小到最大有多块。一个高值表明将会提供一个更高效的训练。  </p>  <p class="para">   在训练神经网络时，输出值应该处于极端(通常是 0 和 1，取决于激励函数)，一般陡峭的激活函数将会被使用(比如为1.0时)。  </p>  <p class="para">   默认的激活陡度是0.5.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-activation-steepness-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">layer</span></dt>    <dd>     <p class="para">      层数     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">neuron</span></dt>    <dd>     <p class="para">      神经元数     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-activation-steepness-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   激活陡度，当神经元在神经网络中没定义时为-1，错误时返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-activation-steepness-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_activation_function()} - 为已应用的神经元和层设置激活函数</span></li>    <li class="member"><span class="function">{@link fann_set_activation_steepness_layer()} - 为提供的层中所有的神经元设置激活陡度</span></li>    <li class="member"><span class="function">{@link fann_set_activation_steepness_hidden()} - 为所有隐藏层中所有的神经元设置激活函数陡度</span></li>    <li class="member"><span class="function">{@link fann_set_activation_steepness_output()} - 在输出层中设置激活陡度</span></li>    <li class="member"><span class="function">{@link fann_set_activation_steepness()} - 为提供的神经元和层设置激活陡度</span></li>   </ul>  </span> </div></div>
 * @return float|false The activation steepness for the neuron or -1 if the neuron is not defined in the neural network, or false on error.*/
function fann_get_activation_steepness($ann, $layer, $neuron) {}

/**
*<div id="function.fann-get-bias-array" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_bias_array</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_bias_array</span> &mdash; <span class="dc-title">获取网络中每一层的偏差数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-bias-array-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_bias_array</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   获取网络中每一层的偏差数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-bias-array-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-bias-array-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   包含每一层偏差数的数组。  </p> </div></div>
 * @return array An array of numbers of bias in each layer*/
function fann_get_bias_array($ann) {}

/**
*<div id="function.fann-get-bit-fail-limit" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_bit_fail_limit</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_bit_fail_limit</span> &mdash; <span class="dc-title">返回训练期间使用的误差限制</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-bit-fail-limit-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_bit_fail_limit</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   返回训练期间使用的误差限制。  </p>  <p class="para">   训练期间使用的误差限制，在 <a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-stopfunc" class="link">停止函数</a>   中设置的 <strong><span>FANN_STOPFUNC_BIT</span></strong>.  </p>  <p class="para">   限度是训练过程中期望输出和实际输出之间的最大可接受差值。每个输出偏离超过这个限度将会被算作误差。不同的是在使用对称激活函数的时候这个值要除以2，因此对称或者不对称可以使用同样的限度。  </p>  <p class="para">   默认的误差限度是 0.35.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-bit-fail-limit-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-bit-fail-limit-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回误差限度，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-bit-fail-limit-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_bit_fail_limit()} - 设置训练期间使用的误差</span></li>   </ul>  </span> </div></div>
 * @return float|false The bit fail limit, or false on error.*/
function fann_get_bit_fail_limit($ann) {}

/**
*<div id="function.fann-get-bit-fail" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_bit_fail</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_bit_fail</span> &mdash; <span class="dc-title">失败位的数量</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-bit-fail-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_bit_fail</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   失败位的数量：意味着输出神经元的数量多于失败位的限度   (参见 <span class="function">{@link fann_get_bit_fail_limit()}</span>, <span class="function">{@link fann_set_bit_fail_limit()}</span>).   位数将会在所有的训练数据中被计数，因此这个数字将会比训练数据的数量高一点。  </p>  <p class="para">   该值可以被 <span class="function">{@link fann_reset_MSE()}</span> 函数重置，并且可以被能够更新MSE值的函数更新。(比如 <span class="function">{@link fann_test_data()}</span>, <span class="function">{@link fann_train_epoch()}</span>)  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-bit-fail-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-bit-fail-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功 ，返回失败位的数量，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-bit-fail-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_MSE()} - 从网络中读取均方误差。</span></li>    <li class="member"><span class="function">{@link fann_reset_MSE()} - 重置网络中的均方误差。</span></li>    <li class="member"><span class="function">{@link fann_test_data()} - 使用训练数据来测试并且计算出 MSE</span></li>    <li class="member"><span class="function">{@link fann_train_epoch()} - 使用一组训练数据训练一个周期。</span></li>    <li class="member"><span class="function">{@link fann_get_bit_fail_limit()} - 返回训练期间使用的误差限制</span></li>    <li class="member"><span class="function">{@link fann_set_bit_fail_limit()} - 设置训练期间使用的误差</span></li>   </ul>  </span> </div></div>
 * @return int|false The number of bits fail, or false on error.*/
function fann_get_bit_fail($ann) {}

/**
*<div id="function.fann-get-cascade-activation-functions-count" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_cascade_activation_functions_count</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_cascade_activation_functions_count</span> &mdash; <span class="dc-title">返回级联激活函数的数量</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-cascade-activation-functions-count-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_cascade_activation_functions_count</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   在 <span class="function">{@link fann_get_cascade_activation_functions()}</span> 函数数组的激活函数的数量。  </p>  <p class="para">   默认激活函数的数量为6.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-cascade-activation-functions-count-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-cascade-activation-functions-count-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回级联激活函数的数量，错误则返回<strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-cascade-activation-functions-count-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_cascade_activation_functions()} - 返回级联激活函数</span></li>    <li class="member"><span class="function">{@link fann_set_cascade_activation_functions()} - 设置级联候选激活函数的数组</span></li>   </ul>  </span> </div></div>
 * @return int|false The number of cascade activation functions, or false on error.*/
function fann_get_cascade_activation_functions_count($ann) {}

/**
*<div id="function.fann-get-cascade-activation-functions" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_cascade_activation_functions</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_cascade_activation_functions</span> &mdash; <span class="dc-title">返回级联激活函数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-cascade-activation-functions-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_cascade_activation_functions</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   层级激活函数数组是一个和被候选使用的不同的数组。  </p>  <p class="para">   参见 <span class="function">{@link fann_get_cascade_num_candidates()}</span> 的描述，这个数组将会生成候选神经元。  </p>  <p class="para">   默认的激活函数是 <strong><span>FANN_SIGMOID</span></strong>, <strong><span>FANN_SIGMOID_SYMMETRIC</span></strong>,   <strong><span>FANN_GAUSSIAN</span></strong>, <strong><span>FANN_GAUSSIAN_SYMMETRIC</span></strong>, <strong><span>FANN_ELLIOT</span></strong>,   <strong><span>FANN_ELLIOT_SYMMETRIC</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-cascade-activation-functions-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-cascade-activation-functions-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回层级激活函数数组，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-cascade-activation-functions-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_cascade_activation_functions_count()} - 返回级联激活函数的数量</span></li>    <li class="member"><span class="function">{@link fann_set_cascade_activation_functions()} - 设置级联候选激活函数的数组</span></li>   </ul>  </span> </div></div>
 * @return array|false The cascade activation functions, or false on error.*/
function fann_get_cascade_activation_functions($ann) {}

/**
*<div id="function.fann-get-cascade-activation-steepnesses-count" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_cascade_activation_steepnesses_count</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_cascade_activation_steepnesses_count</span> &mdash; <span class="dc-title">激活陡度的数量</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-cascade-activation-steepnesses-count-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_cascade_activation_steepnesses_count</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   <span class="function">{@link fann_get_cascade_activation_functions()}</span> 数组中激活陡度的数量。  </p>  <p class="para">   默认的激活陡度的数量是 4.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-cascade-activation-steepnesses-count-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-cascade-activation-steepnesses-count-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功返回激活陡度数量，错误，则返回<strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-cascade-activation-steepnesses-count-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_cascade_activation_steepnesses()} - 返回级联激活陡度</span></li>    <li class="member"><span class="function">{@link fann_set_cascade_activation_functions()} - 设置级联候选激活函数的数组</span></li>   </ul>  </span> </div></div>
 * @return int|false The number of activation steepnesses, or false on error.*/
function fann_get_cascade_activation_steepnesses_count($ann) {}

/**
*<div id="function.fann-get-cascade-activation-steepnesses" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_cascade_activation_steepnesses</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_cascade_activation_steepnesses</span> &mdash; <span class="dc-title">返回级联激活陡度</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-cascade-activation-steepnesses-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_cascade_activation_steepnesses</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   层级激活函数数组是一个和被候选使用的不同的数组。  </p>  <p class="para">   参见 <span class="function">{@link fann_get_cascade_num_candidates()}</span> 的描述，这个数组将会生成候选神经元。  </p>  <p class="para">   默认的激活陡度是{0.25, 0.50, 0.75, 1.00}.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-cascade-activation-steepnesses-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-cascade-activation-steepnesses-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回级联激活陡度，错误则返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-cascade-activation-steepnesses-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_cascade_activation_steepnesses_count()} - 激活陡度的数量</span></li>    <li class="member"><span class="function">{@link fann_set_cascade_activation_steepnesses()} - 设置级联候选激活陡度的数组。</span></li>   </ul>  </span> </div></div>
 * @return array|false The cascade activation steepnesses, or false on error.*/
function fann_get_cascade_activation_steepnesses($ann) {}

/**
*<div id="function.fann-get-cascade-candidate-change-fraction" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_cascade_candidate_change_fraction</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_cascade_candidate_change_fraction</span> &mdash; <span class="dc-title">返回级联候选变化分数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-cascade-candidate-change-fraction-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_cascade_candidate_change_fraction</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   返回级联候选变化分数是一个介于0到1之间的数字。该数字决定了在训练候选神经元使用 <span class="function">{@link fann_get_cascade_candidate_stagnation_epochs()}</span> 函数时 <span class="function">{@link fann_get_MSE()}</span> 将会改变多大的分数,是为了不让这个训练停止。如果训练停止，候选神经元的训练将会被终止并且会选出最好的候选。  </p>  <p class="para">   这意味在<span class="function">{@link fann_get_cascade_candidate_stagnation_epochs()}</span>期间如果 MSE 被<span class="function"><strong style="color:#CC7832">fann_get_cascade_candidate_change_fraction()</strong></span>的分数更改，候选神经元的训练会因为训练的停滞而被停止。  </p>  <p class="para">   如果级联候选变化分数很低，这个候选神经元将训练越多，如果这个分数很高则训练的越少。  </p>  <p class="para">   默认的级联候选变化分数是 0.01, 等于 MSE 中1%的变化值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-cascade-candidate-change-fraction-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-cascade-candidate-change-fraction-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，则返回级联候选变化分数，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-cascade-candidate-change-fraction-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_cascade_candidate_change_fraction()} - 设置级联候选更改分数</span></li>    <li class="member"><span class="function">{@link fann_get_MSE()} - 从网络中读取均方误差。</span></li>    <li class="member"><span class="function">{@link fann_get_cascade_candidate_stagnation_epochs()} - 返回层叠候选停滞周期的数量</span></li>   </ul>  </span> </div></div>
 * @return float|false The cascade candidate change fraction, or false on error.*/
function fann_get_cascade_candidate_change_fraction($ann) {}

/**
*<div id="function.fann-get-cascade-candidate-limit" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_cascade_candidate_limit</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_cascade_candidate_limit</span> &mdash; <span class="dc-title">返回候选限度</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-cascade-candidate-limit-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_cascade_candidate_limit</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   候选限度表明将会有多少候选神经元被训练。该限度是 MSE 和候选分数之间的比例限度。  </p>  <p class="para">   将此值设置为低值以避免过于拟合，如果过度拟合并不是问题，则将其设置为更高的值。  </p>  <p class="para">   默认的候选限度是 1000.0.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-cascade-candidate-limit-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-cascade-candidate-limit-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回候选限度，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-cascade-candidate-limit-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_cascade_candidate_limit()} - 设置候选限度</span></li>   </ul>  </span> </div></div>
 * @return float|false The candidate limit, or false on error.*/
function fann_get_cascade_candidate_limit($ann) {}

/**
*<div id="function.fann-get-cascade-candidate-stagnation-epochs" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_cascade_candidate_stagnation_epochs</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_cascade_candidate_stagnation_epochs</span> &mdash; <span class="dc-title">返回层叠候选停滞周期的数量</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-cascade-candidate-stagnation-epochs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_cascade_candidate_stagnation_epochs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   层叠候选停滞周期的数量决定了在 <span class="function">{@link fann_get_cascade_candidate_change_fraction()}</span> 不改变MSE分数的情况下继续进行的epochs训练的数量。  </p>  <p class="para">   更多信息参见 <span class="function">{@link fann_get_cascade_candidate_change_fraction()}</span>.  </p>  <p class="para">   层叠候选停滞周期的数量是 12.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-cascade-candidate-stagnation-epochs-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-cascade-candidate-stagnation-epochs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回层叠候选停滞周期的数量，错误则返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-cascade-candidate-stagnation-epochs-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_cascade_candidate_stagnation_epochs()} - 设置级联候选停止周期数</span></li>    <li class="member"><span class="function">{@link fann_get_cascade_candidate_change_fraction()} - 返回级联候选变化分数</span></li>   </ul>  </span> </div></div>
 * @return float|false The number of cascade candidate stagnation epochs, or false on error.*/
function fann_get_cascade_candidate_stagnation_epochs($ann) {}

/**
*<div id="function.fann-get-cascade-max-cand-epochs" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_cascade_max_cand_epochs</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_cascade_max_cand_epochs</span> &mdash; <span class="dc-title">返回候选周期的最大值</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-cascade-max-cand-epochs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_cascade_max_cand_epochs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   候选周期的最大值决定了在添加新的候选神经元之前，候选输入连接周期的最大值。  </p>  <p class="para">   默认的最大候选周期是 150.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-cascade-max-cand-epochs-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-cascade-max-cand-epochs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回最大的候选周期，错误则返回<strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-cascade-max-cand-epochs-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_cascade_max_cand_epochs()} - 设置最大候选周期数</span></li>   </ul>  </span> </div></div>
 * @return int|false The maximum candidate epochs, or false on error.*/
function fann_get_cascade_max_cand_epochs($ann) {}

/**
*<div id="function.fann-get-cascade-max-out-epochs" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_cascade_max_out_epochs</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_cascade_max_out_epochs</span> &mdash; <span class="dc-title">返回输出周期的最大值</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-cascade-max-out-epochs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_cascade_max_out_epochs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   输出周期的最大值决定了在添加新的候选神经元之后，输出连接周期的最大值。  </p>  <p class="para">   默认输出周期的最大值是 150.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-cascade-max-out-epochs-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-cascade-max-out-epochs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，则返回输出周期的最大值，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-cascade-max-out-epochs-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_cascade_max_out_epochs()} - 设置最大输出周期</span></li>   </ul>  </span> </div></div>
 * @return int|false The maximum out epochs, or false on error.*/
function fann_get_cascade_max_out_epochs($ann) {}

/**
*<div id="function.fann-get-cascade-min-cand-epochs" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_cascade_min_cand_epochs</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_cascade_min_cand_epochs</span> &mdash; <span class="dc-title">返回最小的候选周期</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-cascade-min-cand-epochs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_cascade_min_cand_epochs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   最小候选周期表示在添加新的候选神经元之前，输入连接到被训练的候选神经元最小的周期数。  </p>  <p class="para">   默认的最小候选周期是50.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-cascade-min-cand-epochs-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-cascade-min-cand-epochs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回最小候选周期，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fann-get-cascade-min-cand-epochs-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">This function is only available if the fann extension has been build against libfann &gt;= 2.2.</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-cascade-min-cand-epochs-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_cascade_min_cand_epochs()} - 设置最小候选周期</span></li>   </ul>  </span> </div></div>
 * @return int|false The minimum candidate epochs, or false on error.*/
function fann_get_cascade_min_cand_epochs($ann) {}

/**
*<div id="function.fann-get-cascade-min-out-epochs" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_cascade_min_out_epochs</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_cascade_min_out_epochs</span> &mdash; <span class="dc-title">返回最小输出周期</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-cascade-min-out-epochs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_cascade_min_out_epochs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   最小输出周期表明在加入新的候选神经元后输出连接必须训练的最小周期。  </p>  <p class="para">   默认的最小输出周期是50。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-cascade-min-out-epochs-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-cascade-min-out-epochs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回最小的输出周期，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fann-get-cascade-min-out-epochs-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">This function is only available if the fann extension has been build against libfann &gt;= 2.2.</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-cascade-min-out-epochs-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_cascade_min_out_epochs()} - 设置最小输出周期</span></li>   </ul>  </span> </div></div>
 * @return int|false The minimum out epochs, or false on error.*/
function fann_get_cascade_min_out_epochs($ann) {}

/**
*<div id="function.fann-get-cascade-num-candidate-groups" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_cascade_num_candidate_groups</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_cascade_num_candidate_groups</span> &mdash; <span class="dc-title">返回候选组的数量</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-cascade-num-candidate-groups-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_cascade_num_candidate_groups</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   候选组的数目是在训练期间使用的相同候选组的个数。  </p>  <p class="para">   这个数字可以用来有更多的候选，而不必为候选定义新的参数。  </p>  <p class="para">   参见 <span class="function">{@link fann_get_cascade_num_candidates()}</span> 的描述。其中解释了这个参数将会生哪个成候选神经元。  </p>  <p class="para">   默认的候选组数为2.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-cascade-num-candidate-groups-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-cascade-num-candidate-groups-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回候选组数量，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-cascade-num-candidate-groups-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_cascade_num_candidate_groups()} - 设置候选组数量</span></li>   </ul>  </span> </div></div>
 * @return int|false The number of candidate groups, or false on error.*/
function fann_get_cascade_num_candidate_groups($ann) {}

/**
*<div id="function.fann-get-cascade-num-candidates" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_cascade_num_candidates</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_cascade_num_candidates</span> &mdash; <span class="dc-title">返回训练期间使用的候选数量</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-cascade-num-candidates-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_cascade_num_candidates</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   返回训练期间使用的候选数量 (   <span class="function">{@link fann_get_cascade_activation_functions_count()}</span>,   <span class="function">{@link fann_get_cascade_activation_steepnesses_count()}</span> 和   <span class="function">{@link fann_get_cascade_num_candidate_groups()}</span>)的和。  </p>  <p class="para">   实际的候选数是由 <span class="function">{@link fann_get_cascade_activation_functions()}</span> 和   <span class="function">{@link fann_get_cascade_activation_steepnesses()}</span> 数组定义的。 这些数组定义的激活功能和激活的陡度用于候选神经元。如果在激活函数数组中有两个激活函数并且陡度数组中有三个陡度，则将会有2x3=6个不同的候选神经元被训练。  这6个不同的候选神经元将会被复制到几个候选组中，这些候选组不同之处在于他们的初始权重。如果组的数量设为2，则候选神经元的数量为2x3x2=12.候选组的数量是有 <span class="function">{@link fann_set_cascade_num_candidate_groups()}</span> 函数定义的。  </p>  <p class="para">   默认的候选神经元数量为 6x4x2 = 48  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-cascade-num-candidates-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-cascade-num-candidates-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回训练期间候选神经元的数量，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-cascade-num-candidates-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_cascade_activation_functions()} - 返回级联激活函数</span></li>    <li class="member"><span class="function">{@link fann_get_cascade_activation_functions_count()} - 返回级联激活函数的数量</span></li>    <li class="member"><span class="function">{@link fann_get_cascade_activation_steepnesses()} - 返回级联激活陡度</span></li>    <li class="member"><span class="function">{@link fann_get_cascade_activation_steepnesses_count()} - 激活陡度的数量</span></li>    <li class="member"><span class="function">{@link fann_get_cascade_num_candidate_groups()} - 返回候选组的数量</span></li>   </ul>  </span> </div></div>
 * @return int|false The number of candidates used during training, or false on error.*/
function fann_get_cascade_num_candidates($ann) {}

/**
*<div id="function.fann-get-cascade-output-change-fraction" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_cascade_output_change_fraction</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_cascade_output_change_fraction</span> &mdash; <span class="dc-title">返回级联输出变化分数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-cascade-output-change-fraction-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_cascade_output_change_fraction</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   级联输出变化分数是一个介于0到1之间的数字，决定了在<span class="function">{@link fann_get_cascade_output_stagnation_epochs()}</span>的输出连接训练中，<span class="function">{@link fann_get_MSE()}</span>的值将改变多大才能保持训练不至于停滞。如果训练停滞了， If the training stagnates, 输出连接的训练将结束，新的候选神经元将准备。  </p>  <p class="para">   这就意味着如果在<span class="function">{@link fann_get_cascade_output_stagnation_epochs()}</span>期间， MSE没有被 <span class="function"><strong style="color:#CC7832">fann_get_cascade_output_change_fraction()</strong></span> 改变, 因为训练的停滞将导致输出连接将被停止。  </p>  <p class="para">   如果级联输出改变分数很小，输出连接将会训练的更多，如果分数很大则会训练的更少。  </p>  <p class="para">   默认的级联输出改变分数是0.01，和MSE中的1%相等。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-cascade-output-change-fraction-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-cascade-output-change-fraction-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回级联输出更改分数，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-cascade-output-change-fraction-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_cascade_output_change_fraction()} - 设置级联输出改变分数</span></li>    <li class="member"><span class="function">{@link fann_get_MSE()} - 从网络中读取均方误差。</span></li>    <li class="member"><span class="function">{@link fann_get_cascade_output_stagnation_epochs()} - 返回级联输出停滞周期的数量</span></li>   </ul>  </span> </div></div>
 * @return float|false The cascade output change fraction, or false on error.*/
function fann_get_cascade_output_change_fraction($ann) {}

/**
*<div id="function.fann-get-cascade-output-stagnation-epochs" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_cascade_output_stagnation_epochs</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_cascade_output_stagnation_epochs</span> &mdash; <span class="dc-title">返回级联输出停滞周期的数量</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-cascade-output-stagnation-epochs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_cascade_output_stagnation_epochs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   级联输出停滞周期的数量表示在<span class="function">{@link fann_get_cascade_output_change_fraction()}</span>不改变MSE的情况下，运行训练的周期数。  </p>  <p class="para">   更多详情参见 <span class="function">{@link fann_get_cascade_output_change_fraction()}</span>。  </p>  <p class="para">   级联输出停滞周期的默认值是12。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-cascade-output-stagnation-epochs-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-cascade-output-stagnation-epochs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，则返回级联输出停滞周期，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-cascade-output-stagnation-epochs-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_cascade_output_stagnation_epochs()} - 设置级联输出停滞周期的值</span></li>    <li class="member"><span class="function">{@link fann_get_cascade_output_change_fraction()} - 返回级联输出变化分数</span></li>   </ul>  </span> </div></div>
 * @return int|false The number of cascade output stagnation epochs, or false on error.*/
function fann_get_cascade_output_stagnation_epochs($ann) {}

/**
*<div id="function.fann-get-cascade-weight-multiplier" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_cascade_weight_multiplier</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_cascade_weight_multiplier</span> &mdash; <span class="dc-title">返回权重因子</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-cascade-weight-multiplier-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_cascade_weight_multiplier</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   权重因子是用于在添加神经元到神经网络之前，和候选神经元权重相乘的参数。该参数的值通常介于0到1之间，用来使训练变得不那么积极。  </p>  <p class="para">   默认权重因子是 0.4.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-cascade-weight-multiplier-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-cascade-weight-multiplier-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回权重因子，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-cascade-weight-multiplier-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_cascade_weight_multiplier()} - 设置权重因子</span></li>   </ul>  </span> </div></div>
 * @return float|false The weight multiplier, or false on error.*/
function fann_get_cascade_weight_multiplier($ann) {}

/**
*<div id="function.fann-get-connection-array" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_connection_array</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_connection_array</span> &mdash; <span class="dc-title">获取网络中的连接。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-connection-array-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_connection_array</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   获取网络中的连接。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-connection-array-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-connection-array-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   包含网络中所有连接的数组。  </p> </div></div>
 * @return array An array of connections in the network*/
function fann_get_connection_array($ann) {}

/**
*<div id="function.fann-get-connection-rate" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_connection_rate</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_connection_rate</span> &mdash; <span class="dc-title">获取当网络创建时连接的使用率。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-connection-rate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_connection_rate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   获取当网络创建时连接的使用率。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-connection-rate-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-connection-rate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，则返回当网络创建时连接的使用率, 错误则返回 <strong><span>false</span></strong> .  </p> </div></div>
 * @return float|false The connection rate used when the network was created, or false on error.*/
function fann_get_connection_rate($ann) {}

/**
*<div id="function.fann-get-errno" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_errno</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_errno</span> &mdash; <span class="dc-title">返回最后一个错误数字。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-errno-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_errno</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$errdat</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   返回最后一个错误数字。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-errno-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">errdat</span></dt>    <dd>     <span>Either neural network <span class="type" style="color:#EAB766">resource</span> or neural network trainining data <span class="type" style="color:#EAB766">resource</span>.</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-errno-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回错误数字，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-errno-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_reset_errno()} - 重置最后的错误代码。</span></li>    <li class="member"><span class="function">{@link fann_get_errstr()} - 返回最后的错误字符串。</span></li>   </ul>  </span> </div></div>
 * @return int|false The error number, or false on error.*/
function fann_get_errno($errdat) {}

/**
*<div id="function.fann-get-errstr" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_errstr</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_errstr</span> &mdash; <span class="dc-title">返回最后的错误字符串。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-errstr-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_errstr</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$errdat</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   返回最后的错误字符串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-errstr-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">errdat</span></dt>    <dd>     <span>Either neural network <span class="type" style="color:#EAB766">resource</span> or neural network trainining data <span class="type" style="color:#EAB766">resource</span>.</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-errstr-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回最后的错误字符串,，失败则返回 <strong><span>false</span></strong> 。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-errstr-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_reset_errstr()} - 重置最后的错误字符串。</span></li>    <li class="member"><span class="function">{@link fann_get_errno()} - 返回最后一个错误数字。</span></li>   </ul>  </span> </div></div>
 * @return string|false The last error string, or false on error.*/
function fann_get_errstr($errdat) {}

/**
*<div id="function.fann-get-layer-array" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_layer_array</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_layer_array</span> &mdash; <span class="dc-title">获取网络中每层的神经元数量。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-layer-array-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_layer_array</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   获取网络中每层的神经元数量。  </p>  <p class="para">   偏差神经元不包括在内，所以层数是和 fann_create 函数组想匹配的。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-layer-array-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-layer-array-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   包含每层神经元数量的数组。  </p> </div></div>
 * @return array An array of numbers of neurons in each leayer*/
function fann_get_layer_array($ann) {}

/**
*<div id="function.fann-get-learning-momentum" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_learning_momentum</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_learning_momentum</span> &mdash; <span class="dc-title">返回学习动量</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-learning-momentum-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_learning_momentum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   学习动量可用来加速 <strong><span>FANN_TRAIN_INCREMENTAL</span></strong> 训练。   一个过高的学习动量不利于训练。 动量设为0效果和没设一样。该参数的值建议在0.0到1.0之间。  </p>  <p class="para">   默认动量是 0.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-learning-momentum-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-learning-momentum-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p>  <p class="para">   正确，返回学习动量，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-learning-momentum-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_learning_momentum()} - 设置学习动量。</span></li>    <li class="member"><span class="function">{@link fann_set_training_algorithm()} - 设置训练算法。</span></li>   </ul>  </span> </div></div>
 * @return float|false The learning momentum, or false on error.*/
function fann_get_learning_momentum($ann) {}

/**
*<div id="function.fann-get-learning-rate" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_learning_rate</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_learning_rate</span> &mdash; <span class="dc-title">返回学习速率</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-learning-rate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_learning_rate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   学习率用来确定训练算法(<strong><span>FANN_TRAIN_INCREMENTAL</span></strong>, <strong><span>FANN_TRAIN_BATCH</span></strong>, <strong><span>FANN_TRAIN_QUICKPROP</span></strong>)中应该如何进行积极的训练。   不过，请注意这个函数不能用于 <strong><span>FANN_TRAIN_RPROP</span></strong>中。  </p>  <p class="para">   默认的学习速率是 0.7。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-learning-rate-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-learning-rate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回学习速率，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-learning-rate-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_learning_rate()} - 设置学习速率。</span></li>    <li class="member"><span class="function">{@link fann_set_training_algorithm()} - 设置训练算法。</span></li>   </ul>  </span> </div></div>
 * @return float|false The learning rate, or false on error.*/
function fann_get_learning_rate($ann) {}

/**
*<div id="function.fann-get-mse" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_MSE</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_MSE</span> &mdash; <span class="dc-title">从网络中读取均方误差。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-mse-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_MSE</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   从网络中读取均方误差。  </p>  <p class="para">   从网络中读取均方误差。该值是在训练或或测试中被计算的，因此如果权重在最后一次计算时已经改变，有时候会有点不太对劲。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-mse-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-mse-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，则返回均方误差, 错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-mse-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_test_data()} - 使用训练数据来测试并且计算出 MSE</span></li>   </ul>  </span> </div></div>
 * @return float|false The mean square error, or false on error.*/
function fann_get_MSE($ann) {}

/**
*<div id="function.fann-get-network-type" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_network_type</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_network_type</span> &mdash; <span class="dc-title">获取所创建的神经网络类型。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-network-type-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_network_type</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   获取所创建的神经网络的类型。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-network-type-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-network-type-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    成功，则返回<a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-nettype" class="link">网络类型</a> 常量, 错误则返回 <strong><span>false</span></strong> .  </p> </div></div>
 * @return int|false constant, or false on error.*/
function fann_get_network_type($ann) {}

/**
*<div id="function.fann-get-num-input" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_num_input</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_num_input</span> &mdash; <span class="dc-title">获取输入神经元的数量。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-num-input-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_num_input</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   获取输入神经元的数量。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-num-input-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-num-input-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，则返回输入神经元的数量, 错误则返回 <strong><span>false</span></strong>   </p> </div></div>
 * @return int|false Number of input neurons, or false on error*/
function fann_get_num_input($ann) {}

/**
*<div id="function.fann-get-num-layers" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_num_layers</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_num_layers</span> &mdash; <span class="dc-title">获取神经网络的层数。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-num-layers-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_num_layers</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   获取神经网络的层数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-num-layers-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-num-layers-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，则返回神经网络的层数，错误则返回 <strong><span>false</span></strong> .  </p> </div></div>
 * @return int|false The number of leayers in the neural network, or false on error.*/
function fann_get_num_layers($ann) {}

/**
*<div id="function.fann-get-num-output" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_num_output</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_num_output</span> &mdash; <span class="dc-title">获取输出神经元的数量。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-num-output-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_num_output</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   获取输出神经元的数量。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-num-output-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-num-output-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，则返回输出神经元的数量, 错误则返回 <strong><span>false</span></strong> .  </p> </div></div>
 * @return int|false Number of output neurons, or false on error*/
function fann_get_num_output($ann) {}

/**
*<div id="function.fann-get-quickprop-decay" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_quickprop_decay</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_quickprop_decay</span> &mdash; <span class="dc-title">返回衰退值，用于在 quickprop 训练迭代时衰减权重</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-quickprop-decay-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_quickprop_decay</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   衰退值是一个小的负数，用于在 quickprop 训练迭代时衰减权重。 这是用来确保训练时权重不要太高。  </p>  <p class="para">   默认衰退值是 -0.0001.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-quickprop-decay-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-quickprop-decay-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回衰退值，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-quickprop-decay-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_quickprop_decay()} - 设置quickprop算法衰减因子</span></li>   </ul>  </span> </div></div>
 * @return float|false The decay, or false on error.*/
function fann_get_quickprop_decay($ann) {}

/**
*<div id="function.fann-get-quickprop-mu" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_quickprop_mu</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_quickprop_mu</span> &mdash; <span class="dc-title">返回放大系数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-quickprop-mu-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_quickprop_mu</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   放大系数被用来增加和降低 quickprop 训练期间的步长。放大系数应该始终大于1，因为当它增加时，它会减少步长。  </p>  <p class="para">   默认放大系数是 1.75.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-quickprop-mu-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-quickprop-mu-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回放大系数，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-quickprop-mu-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_quickprop_mu()} - 设置 quickprop 算法放大因子</span></li>   </ul>  </span> </div></div>
 * @return float|false The mu factor, or false on error.*/
function fann_get_quickprop_mu($ann) {}

/**
*<div id="function.fann-get-rprop-decrease-factor" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_rprop_decrease_factor</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_rprop_decrease_factor</span> &mdash; <span class="dc-title">返回 RPROP 训练期间的衰减系数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-rprop-decrease-factor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_rprop_decrease_factor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   衰减系数的值小于1，用于在 RPROP 训练期间减少的步长。  </p>  <p class="para">   The default decrease factor is 0.5.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-rprop-decrease-factor-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-rprop-decrease-factor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回衰减系数，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-rprop-decrease-factor-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_rprop_decrease_factor()} - 使用 RPROP 算法训练时，设置下降因子</span></li>   </ul>  </span> </div></div>
 * @return float|false The decrease factor, or false on error.*/
function fann_get_rprop_decrease_factor($ann) {}

/**
*<div id="function.fann-get-rprop-delta-max" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_rprop_delta_max</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_rprop_delta_max</span> &mdash; <span class="dc-title">返回最大步长</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-rprop-delta-max-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_rprop_delta_max</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   最大步长是正数，决定最大步长可能有多大。.  </p>  <p class="para">   默认的最大值是 50.0.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-rprop-delta-max-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-rprop-delta-max-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功,返回最大步长，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-rprop-delta-max-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_rprop_delta_max()} - 设置最大步长</span></li>    <li class="member"><span class="function">{@link fann_get_rprop_delta_min()} - 返回最小步长</span></li>   </ul>  </span> </div></div>
 * @return float|false The maximum step-size, or false on error.*/
function fann_get_rprop_delta_max($ann) {}

/**
*<div id="function.fann-get-rprop-delta-min" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_rprop_delta_min</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_rprop_delta_min</span> &mdash; <span class="dc-title">返回最小步长</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-rprop-delta-min-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_rprop_delta_min</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   最小步长是一个小的正数，决定最小步长可能有多小。.  </p>  <p class="para">   默认的最小步长是 0.0.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-rprop-delta-min-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-rprop-delta-min-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回最小步长，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-rprop-delta-min-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_rprop_delta_min()} - 设置最小步长</span></li>   </ul>  </span> </div></div>
 * @return float|false The minimum step-size, or false on error.*/
function fann_get_rprop_delta_min($ann) {}

/**
*<div id="function.fann-get-rprop-delta-zero" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_rprop_delta_zero</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_rprop_delta_zero</span> &mdash; <span class="dc-title">返回初始步长</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-rprop-delta-zero-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_rprop_delta_zero</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   初始步长是确定初始步长的正数。  </p>  <p class="para">   默认的初始步长是 0.1.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-rprop-delta-zero-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-rprop-delta-zero-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回初始步长，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-rprop-delta-zero-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_rprop_delta_zero()} - 设置初始步长</span></li>    <li class="member"><span class="function">{@link fann_get_rprop_delta_min()} - 返回最小步长</span></li>    <li class="member"><span class="function">{@link fann_get_rprop_delta_max()} - 返回最大步长</span></li>   </ul>  </span> </div></div>
 * @return int|false The initial step-size, or false on error.*/
function fann_get_rprop_delta_zero($ann) {}

/**
*<div id="function.fann-get-rprop-increase-factor" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_rprop_increase_factor</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_rprop_increase_factor</span> &mdash; <span class="dc-title">返回 RPROP 训练的递增系数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-rprop-increase-factor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_rprop_increase_factor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   递增系数是一个大于1的值，用于递增 RPROP 训练中的步长。  </p>  <p class="para">   默认的递进系数是 1.2  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-rprop-increase-factor-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-rprop-increase-factor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回递进系数，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-rprop-increase-factor-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_rprop_increase_factor()} - 使用 RPROP 算法训练时，设置增长因子</span></li>   </ul>  </span> </div></div>
 * @return float|false The increase factor, or false on error.*/
function fann_get_rprop_increase_factor($ann) {}

/**
*<div id="function.fann-get-sarprop-step-error-shift" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_sarprop_step_error_shift</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_sarprop_step_error_shift</span> &mdash; <span class="dc-title">返回 sarprop 步值的误差偏移</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-sarprop-step-error-shift-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_sarprop_step_error_shift</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   返回 sarprop 步值的误差偏移。  </p>  <p class="para">   默认的步值误差偏移是 1.385.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-sarprop-step-error-shift-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-sarprop-step-error-shift-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回 sarprop 步值误差偏移，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fann-get-sarprop-step-error-shift-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">This function is only available if the fann extension has been build against libfann &gt;= 2.2.</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-sarprop-step-error-shift-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_sarprop_step_error_shift()} - 设置 sarprop 算法的步误差偏移量</span></li>   </ul>  </span> </div></div>
 * @return float|false The sarprop step error shift , or false on error.*/
function fann_get_sarprop_step_error_shift($ann) {}

/**
*<div id="function.fann-get-sarprop-step-error-threshold-factor" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_sarprop_step_error_threshold_factor</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_sarprop_step_error_threshold_factor</span> &mdash; <span class="dc-title">返回 sarprop 算法步值的误差阈值系数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-sarprop-step-error-threshold-factor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_sarprop_step_error_threshold_factor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   sarprop 算法步值的误差阈值系数。  </p>  <p class="para">   默认的系数是 0.1.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-sarprop-step-error-threshold-factor-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-sarprop-step-error-threshold-factor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    成功，返回 sarprop 算法步值的误差阈值系数，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fann-get-sarprop-step-error-threshold-factor-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">This function is only available if the fann extension has been build against libfann &gt;= 2.2.</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-sarprop-step-error-threshold-factor-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_sarprop_step_error_threshold_factor()} - 设置 sarprop 算法的步误差阈值因子</span></li>   </ul>  </span> </div></div>
 * @return float|false The sarprop step error threshold factor, or false on error.*/
function fann_get_sarprop_step_error_threshold_factor($ann) {}

/**
*<div id="function.fann-get-sarprop-temperature" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_sarprop_temperature</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_sarprop_temperature</span> &mdash; <span class="dc-title">返回 sarprop 算法温度</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-sarprop-temperature-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_sarprop_temperature</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   返回 sarprop 算法温度。  </p>  <p class="para">   默认温度是 0.015.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-sarprop-temperature-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-sarprop-temperature-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回 sarprop 温度，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fann-get-sarprop-temperature-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">This function is only available if the fann extension has been build against libfann &gt;= 2.2.</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-sarprop-temperature-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_sarprop_temperature()} - 设置 sarprop 算法的温度</span></li>   </ul>  </span> </div></div>
 * @return float|false The sarprop temperature, or false on error.*/
function fann_get_sarprop_temperature($ann) {}

/**
*<div id="function.fann-get-sarprop-weight-decay-shift" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_sarprop_weight_decay_shift</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_sarprop_weight_decay_shift</span> &mdash; <span class="dc-title">返回 sarprop 算法权重衰减变化值</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-sarprop-weight-decay-shift-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_sarprop_weight_decay_shift</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   sarprop 算法权重衰减变化值。  </p>  <p class="para">   默认的最大值是 -6.644.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-sarprop-weight-decay-shift-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-sarprop-weight-decay-shift-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回 sarprop 算法权重衰减变化值，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fann-get-sarprop-weight-decay-shift-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">This function is only available if the fann extension has been build against libfann &gt;= 2.2.</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-sarprop-weight-decay-shift-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_sarprop_weight_decay_shift()} - 设置 sarprop 算法的权重衰减偏移值</span></li>   </ul>  </span> </div></div>
 * @return float|false The sarprop weight decay shift, or false on error.*/
function fann_get_sarprop_weight_decay_shift($ann) {}

/**
*<div id="function.fann-get-total-connections" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_total_connections</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_total_connections</span> &mdash; <span class="dc-title">获取整个网络中所有的连接数。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-total-connections-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_total_connections</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   获取整个网络中所有的连接数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-total-connections-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-total-connections-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，则返回整个网络中所有的连接数, 错误则返回 <strong><span>false</span></strong> .  </p> </div></div>
 * @return int|false Total number of connections in the entire network, or false on error*/
function fann_get_total_connections($ann) {}

/**
*<div id="function.fann-get-total-neurons" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_total_neurons</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_total_neurons</span> &mdash; <span class="dc-title">获取整个网络中神经元的数量。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-total-neurons-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_total_neurons</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   获取整个网络中神经元的数量。 这个数量也包括偏置神经元，因此一个2-4-2的网络有2+4+2+2（偏置神经元）=10个神经元。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-total-neurons-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-total-neurons-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，则返回整个网络神经元的数量, 错误则返回 <strong><span>false</span></strong> .  </p> </div></div>
 * @return int|false Total number of neurons in the entire network, or false on error.*/
function fann_get_total_neurons($ann) {}

/**
*<div id="function.fann-get-train-error-function" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_train_error_function</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_train_error_function</span> &mdash; <span class="dc-title">返回训练中使用的错误函数。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-train-error-function-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_train_error_function</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   返回训练中使用的错误函数。  </p>  <p class="para">   有关于错误函数的详细描述，参见 <a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-errorfunc" class="link">error functions</a> 静态变量。  </p>  <p class="para">   默认的错误函数是 <strong><span>FANN_ERRORFUNC_TANH</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-train-error-function-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-train-error-function-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，则返回 <a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-errorfunc" class="link">error function</a> 静态变量, 错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-train-error-function-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_train_error_function()} - 设置训练期间使用的错误函数。</span></li>   </ul>  </span> </div></div>
 * @return int|false The constant, or false on error.*/
function fann_get_train_error_function($ann) {}

/**
*<div id="function.fann-get-training-algorithm" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_training_algorithm</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_training_algorithm</span> &mdash; <span class="dc-title">返回训练算法。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-training-algorithm-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_training_algorithm</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   返回训练算法。该训练算法是被 <span class="function">{@link fann_train_on_data()}</span> 和相关函数使用的。  </p>  <p class="para">   要注意的是这个算法在<span class="function">{@link fann_cascadetrain_on_data()}</span>函数中也是可以使用的, 尽管在层叠训练中只有<strong><span>FANN_TRAIN_RPROP</span></strong> 和 <strong><span>FANN_TRAIN_QUICKPROP</span></strong> 算法被允许使用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-training-algorithm-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-training-algorithm-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回<a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-train" class="link">训练算法</a> 常量, 错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-training-algorithm-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_training_algorithm()} - 设置训练算法。</span></li>   </ul>  </span> </div></div>
 * @return int|false constant, or false on error.*/
function fann_get_training_algorithm($ann) {}

/**
*<div id="function.fann-get-train-stop-function" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_get_train_stop_function</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_get_train_stop_function</span> &mdash; <span class="dc-title">返回训练中使用的停止函数。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-get-train-stop-function-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_get_train_stop_function</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   返回训练中使用的停止函数。  </p>  <p class="para">   停止函数的详细描述，参见<a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-stopfunc" class="link">stop functions</a> 常量。  </p>  <p class="para">   默认的停止函数是 <strong><span>FANN_STOPFUNC_MSE</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-get-train-stop-function-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-get-train-stop-function-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，则返回 <a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-stopfunc" class="link">stop function</a> 常量, 错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-get-train-stop-function-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_train_stop_function()} - 设置训练期间使用的停止函数。</span></li>   </ul>  </span> </div></div>
 * @return int|false The constant, or false on error.*/
function fann_get_train_stop_function($ann) {}

/**
*<div id="function.fann-init-weights" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_init_weights</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_init_weights</span> &mdash; <span class="dc-title">使用 Widrow 和 Nguyen 算法初始化权重。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-init-weights-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_init_weights</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$train_data</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   使用 Widrow 和 Nguyen 算法初始化权重。  </p>  <p class="para">   该函数的作用和 <span class="function">{@link fann_randomize_weights()}</span>函数相似。 该函数将会使用   Derrick Nguyen 和 Bernard Widrow 开发的算法来设置权重用于加速训练。 该技术不是经常奏效，在某些场景下比纯粹的随机初始化来得更低效。  </p>  <p class="para">   该算法要求获取输入数据的范围(比如 最大和最小输入)，因此接受别的参数，数据(将会在网络中训练的数据)。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-init-weights-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">train_data</span></dt>    <dd>     <p class="para">神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-init-weights-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-init-weights-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_randomize_weights()} - 给每个连接赋一个介于 min_weight 和 max_weight 之间的随机权重。</span></li>    <li class="member"><span class="function">{@link fann_read_train_from_file()} - 读取存储训练数据的文件。</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_init_weights($ann, $train_data) {}

/**
*<div id="function.fann-length-train-data" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_length_train_data</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_length_train_data</span> &mdash; <span class="dc-title">返回训练数据中训练模式的数量。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-length-train-data-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_length_train_data</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$data</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   返回训练数据中训练模式的数量。 <span class="type" style="color:#EAB766">resource</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-length-train-data-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">data</span></dt>    <dd>     <span>神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-length-train-data-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，则返回训练数据<span class="type" style="color:#EAB766">resource</span>中的元素数，错误则返回 <strong><span>false</span></strong> .  </p> </div></div>
 * @return int|false Number of elements in the train data ``resource``, or false on error.*/
function fann_length_train_data($data) {}

/**
*<div id="function.fann-merge-train-data" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_merge_train_data</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_merge_train_data</span> &mdash; <span class="dc-title">合并训练数据。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-merge-train-data-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_merge_train_data</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$data1</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$data2</span></span>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   将 data1 和 data2 数据集合并为新的训练数据 <span class="type" style="color:#EAB766">resource</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-merge-train-data-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">data1</span></dt>    <dd>     <span>神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">data2</span></dt>    <dd>     <p class="para">神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-merge-train-data-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，则返回合并的训练数据 <span class="type" style="color:#EAB766">resource</span>, 错误则返回 <strong><span>false</span></strong> .  </p> </div></div>
 * @return resource|false New merged train data ``resource``, or false on error.*/
function fann_merge_train_data($data1, $data2) {}

/**
*<div id="function.fann-num-input-train-data" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_num_input_train_data</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_num_input_train_data</span> &mdash; <span class="dc-title">返回训练数据中每个训练模式输入的数量。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-num-input-train-data-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_num_input_train_data</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$data</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   返回训练数据<span class="type" style="color:#EAB766">resource</span>中每个训练模式输入的数量。   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-num-input-train-data-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">data</span></dt>    <dd>     <span>神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-num-input-train-data-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    成功，则返回输入数，错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-num-input-train-data-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_length_train_data()} - 返回训练数据中训练模式的数量。</span></li>    <li class="member"><span class="function">{@link fann_num_output_train_data()} - 返回训练数据中每个训练模式输出的数量。</span></li>   </ul>  </span> </div></div>
 * @return int|false The number of inputs, or false on error.*/
function fann_num_input_train_data($data) {}

/**
*<div id="function.fann-num-output-train-data" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_num_output_train_data</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_num_output_train_data</span> &mdash; <span class="dc-title">返回训练数据中每个训练模式输出的数量。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-num-output-train-data-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_num_output_train_data</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$data</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   返回训练数据 <span class="type" style="color:#EAB766">resource</span>中每个训练模式输出的数量。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-num-output-train-data-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">data</span></dt>    <dd>     <span>神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-num-output-train-data-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，则返回输出数, 错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-num-output-train-data-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_length_train_data()} - 返回训练数据中训练模式的数量。</span></li>    <li class="member"><span class="function">{@link fann_num_input_train_data()} - 返回训练数据中每个训练模式输入的数量。</span></li>   </ul>  </span> </div></div>
 * @return int|false The number of outputs, or false on error.*/
function fann_num_output_train_data($data) {}

/**
*<div id="function.fann-print-error" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_print_error</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_print_error</span> &mdash; <span class="dc-title">打印错误字符串</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-print-error-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_print_error</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$errdat</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   打印错误字符串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-print-error-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">errdat</span></dt>    <dd>      <span>Either neural network <span class="type" style="color:#EAB766">resource</span> or neural network trainining data <span class="type" style="color:#EAB766">resource</span>.</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-print-error-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">无返回值。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-print-error-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_errstr()} - 返回最后的错误字符串。</span></li>   </ul>  </span> </div></div>
 * @return void*/
function fann_print_error($errdat) {}

/**
*<div id="function.fann-randomize-weights" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_randomize_weights</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_randomize_weights</span> &mdash; <span class="dc-title">给每个连接赋一个介于 min_weight 和 max_weight 之间的随机权重。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-randomize-weights-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_randomize_weights</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$min_weight</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$max_weight</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   给每个连接赋一个介于 <span class="parameter" style="color:#3A95FF">min_weight</span> 和 <span class="parameter" style="color:#3A95FF">max_weight</span>之间的随机权重。  </p>  <p class="para">   从一开始权重介于 -0.1 和 0.1之间。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-randomize-weights-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">min_weight</span></dt>    <dd>     <p class="para">      最小权重值     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">max_weight</span></dt>    <dd>     <p class="para">      最大权重值     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-randomize-weights-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-randomize-weights-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_init_weights()} - 使用 Widrow 和 Nguyen 算法初始化权重。</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_randomize_weights($ann, $min_weight, $max_weight) {}

/**
*<div id="function.fann-read-train-from-file" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_read_train_from_file</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_read_train_from_file</span> &mdash; <span class="dc-title">读取存储训练数据的文件。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-read-train-from-file-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_read_train_from_file</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   读取存储训练数据的文件。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-read-train-from-file-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>    <dd>     <span>      输入文件的格式如下:     </span>     <div class="example-contents"><div class="txtcode"><span>num_train_data num_input num_output<br>inputdata separated by space<br>outputdata separated by space<br><br>.<br>.<br>.<br><br>inputdata separated by space<br>outputdata separated by space</span></div>     </div>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-read-train-from-file-returnvalues">  <h3 class="title">返回值</h3>  <p class="para"> 成功时返回训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>，发生错误返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.fann-read-train-from-file-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>fann_read_train_from_file()</strong></span> 函数的使用范例：</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$train_data </span><span style="color: #007700">= </span><span style="color: #9876AA">fann_read_train_from_file</span><span style="color: #007700">(</span><span style="color: #DD0000">"xor.data"</span><span style="color: #007700">);<br />if (</span><span style="color: #9876AA">$train_data</span><span style="color: #007700">) {<br />    </span><span style="color: #FF8000">// Do something with $train_data for XOR function<br /></span><span style="color: #007700">}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>xor.data 文件的内容：</p></div>    <div class="example-contents"><div class="txtcode"><span>4 2 1<br>-1 -1<br>-1<br>-1 1<br>1<br>1 -1<br>1<br>1 1<br>-1</span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-read-train-from-file-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_train_on_data()} - 在整个数据集上训练一段时间。</span></li>    <li class="member"><span class="function">{@link fann_destroy_train()} - 销毁训练数据。</span></li>    <li class="member"><span class="function">{@link fann_save_train()} - 将训练结构体保存至文件。</span></li>   </ul>  </span> </div></div>
 * @return resource|false*/
function fann_read_train_from_file($filename) {}

/**
*<div id="function.fann-reset-errno" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_reset_errno</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_reset_errno</span> &mdash; <span class="dc-title">重置最后的错误代码。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-reset-errno-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_reset_errno</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$errdat</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   重置最后的错误代码。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-reset-errno-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">errdat</span></dt>    <dd>     <span>Either neural network <span class="type" style="color:#EAB766">resource</span> or neural network trainining data <span class="type" style="color:#EAB766">resource</span>.</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-reset-errno-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">无返回值。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-reset-errno-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_errno()} - 返回最后一个错误数字。</span></li>    <li class="member"><span class="function">{@link fann_reset_errstr()} - 重置最后的错误字符串。</span></li>   </ul>  </span> </div></div>
 * @return void*/
function fann_reset_errno($errdat) {}

/**
*<div id="function.fann-reset-errstr" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_reset_errstr</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_reset_errstr</span> &mdash; <span class="dc-title">重置最后的错误字符串。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-reset-errstr-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_reset_errstr</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$errdat</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   重置最后的错误字符串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-reset-errstr-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">errdat</span></dt>    <dd>     <span>Either neural network <span class="type" style="color:#EAB766">resource</span> or neural network trainining data <span class="type" style="color:#EAB766">resource</span>.</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-reset-errstr-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">无返回值。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-reset-errstr-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_errstr()} - 返回最后的错误字符串。</span></li>    <li class="member"><span class="function">{@link fann_reset_errno()} - 重置最后的错误代码。</span></li>   </ul>  </span> </div></div>
 * @return void*/
function fann_reset_errstr($errdat) {}

/**
*<div id="function.fann-reset-mse" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_reset_MSE</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_reset_MSE</span> &mdash; <span class="dc-title">重置网络中的均方误差。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-reset-mse-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_reset_MSE</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   重置网络中的均方误差。  </p>  <p class="para">   该函数也会重置失败时位的数量。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-reset-mse-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>      <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-reset-mse-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-reset-mse-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_MSE()} - 从网络中读取均方误差。</span></li>    <li class="member"><span class="function">{@link fann_get_bit_fail()} - 失败位的数量</span></li>    <li class="member"><span class="function">{@link fann_get_bit_fail_limit()} - 返回训练期间使用的误差限制</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_reset_MSE($ann) {}

/**
*<div id="function.fann-run" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_run</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_run</span> &mdash; <span class="dc-title">将通过神经网络运行输入。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-run-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_run</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$input</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   将通过神经网络运行输入，返回输出数组，数组的长度等于输出层神经元的个数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-run-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">input</span></dt>    <dd>     <p class="para">      输入数组的值。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-run-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，返回输出数组，错误则返回 <strong><span>false</span></strong> .  </p> </div></div>
 * @return array|false Array of output values, or false on error*/
function fann_run($ann, $input) {}

/**
*<div id="function.fann-save" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_save</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_save</span> &mdash; <span class="dc-title">将整个网络保存至配置文件。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-save-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_save</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$configuration_file</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   将整个网络保存至配置文件。  </p>  <p class="para">   配置文件包含了神经网络的所有信息，并且能够通过 <span class="function">{@link fann_create_from_file()}</span> 函数来创建一个原神经网络的精确副本以及与神经网络关联的所有参数。  </p>  <p class="para">   这三个参数 (<span class="function">{@link fann_set_callback()}</span>, <span class="function">{@link fann_set_error_log()}</span>,   <span class="function"><strong style="color:#CC7832">fann_set_user_data()</strong></span>) 不保存在文件中，因为他们不能被安全地移植到不同的位置。当使用类似 <span class="function">{@link fann_get_MSE()}</span> 函数训练时，生成的临时参数也不会被保存起来。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-save-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">configuration_file</span></dt>    <dd>     <p class="para">      配置文件的路径。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-save-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-save-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_create_from_file()} - 从配置文件中构建一个反向传播神经网络。</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_save($ann, $configuration_file) {}

/**
*<div id="function.fann-save-train" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_save_train</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_save_train</span> &mdash; <span class="dc-title">将训练结构体保存至文件。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-save-train-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_save_train</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$data</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$file_name</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   将训练结构体保存至文件， 格式和 <span class="function">{@link fann_read_train_from_file()}</span> 函数中指定的一样。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-save-train-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">data</span></dt>    <dd>     <span>神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">file_name</span></dt>    <dd>     <p class="para">      保存训练数据的文件名。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-save-train-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-save-train-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_read_train_from_file()} - 读取存储训练数据的文件。</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_save_train($data, $file_name) {}

/**
*<div id="function.fann-scale-input" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_scale_input</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_scale_input</span> &mdash; <span class="dc-title">在以前计算参数的基础上，在训练之前放大输入向量中的数据</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-scale-input-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_scale_input</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$input_vector</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   在以前计算参数的基础上，在训练之前放大输入向量中的数据。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-scale-input-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">input_vector</span></dt>    <dd>     <p class="para">      将要被缩放的输入向量。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-scale-input-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-scale-input-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_descale_input()} - 在获取基于先前计算的参数之后，在输入向量中缩小数据</span></li>    <li class="member"><span class="function">{@link fann_scale_output()} - 在以前计算参数的基础上，在训练之前放大输出向量中的数据</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_scale_input($ann, $input_vector) {}

/**
*<div id="function.fann-scale-input-train-data" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_scale_input_train_data</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_scale_input_train_data</span> &mdash; <span class="dc-title">在训练数据中缩放输入至指定范围</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-scale-input-train-data-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_scale_input_train_data</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$train_data</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$new_min</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$new_max</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   在训练数据中缩放输入至指定范围。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-scale-input-train-data-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">train_data</span></dt>    <dd>     <span>神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">new_min</span></dt>    <dd>     <p class="para">      训练数据中缩放输入后新的最小值。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">new_max</span></dt>    <dd>     <p class="para">      训练数据中缩放数据后新的最大值。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-scale-input-train-data-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-scale-input-train-data-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_scale_output_train_data()} - 在训练数据中缩放输出至指定范围</span></li>    <li class="member"><span class="function">{@link fann_scale_train_data()} - 在训练数据中缩放输入和输出到指定的范围</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_scale_input_train_data($train_data, $new_min, $new_max) {}

/**
*<div id="function.fann-scale-output" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_scale_output</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_scale_output</span> &mdash; <span class="dc-title">在以前计算参数的基础上，在训练之前放大输出向量中的数据</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-scale-output-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_scale_output</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$output_vector</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   在以前计算参数的基础上，在训练之前放大输出向量中的数据。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-scale-output-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">output_vector</span></dt>    <dd>     <p class="para">      将要被缩放的输出向量     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-scale-output-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-scale-output-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_descale_output()} - 在获取基于先前计算的参数之后，在输出向量中缩小数据</span></li>    <li class="member"><span class="function">{@link fann_scale_input()} - 在以前计算参数的基础上，在训练之前放大输入向量中的数据</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_scale_output($ann, $output_vector) {}

/**
*<div id="function.fann-scale-output-train-data" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_scale_output_train_data</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_scale_output_train_data</span> &mdash; <span class="dc-title">在训练数据中缩放输出至指定范围</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-scale-output-train-data-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_scale_output_train_data</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$train_data</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$new_min</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$new_max</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   在训练数据中缩放输出至指定范围。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-scale-output-train-data-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">train_data</span></dt>    <dd>     <span>神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">new_min</span></dt>    <dd>     <p class="para">      训练数据中缩放输出后新的最小值。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">new_max</span></dt>    <dd>     <p class="para">      训练数据中缩放输出后新的最大值。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-scale-output-train-data-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-scale-output-train-data-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_scale_input_train_data()} - 在训练数据中缩放输入至指定范围</span></li>    <li class="member"><span class="function">{@link fann_scale_train_data()} - 在训练数据中缩放输入和输出到指定的范围</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_scale_output_train_data($train_data, $new_min, $new_max) {}

/**
*<div id="function.fann-scale-train-data" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_scale_train_data</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_scale_train_data</span> &mdash; <span class="dc-title">在训练数据中缩放输入和输出到指定的范围</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-scale-train-data-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_scale_train_data</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$train_data</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$new_min</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$new_max</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   在训练数据中缩放输入和输出到指定的范围。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-scale-train-data-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">train_data</span></dt>    <dd>     <span>神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">new_min</span></dt>    <dd>     <p class="para">      在训练数据中缩放输入和输出后新的最小值。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">new_max</span></dt>    <dd>     <p class="para">      在训练数据中缩放输入和输出后新的最大值。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-scale-train-data-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-scale-train-data-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_scale_output_train_data()} - 在训练数据中缩放输出至指定范围</span></li>    <li class="member"><span class="function">{@link fann_scale_input_train_data()} - 在训练数据中缩放输入至指定范围</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_scale_train_data($train_data, $new_min, $new_max) {}

/**
*<div id="function.fann-scale-train" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_scale_train</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_scale_train</span> &mdash; <span class="dc-title">在以前计算参数的基础上，缩放输入和输出数据</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-scale-train-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_scale_train</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$train_data</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   在以前计算参数的基础上，缩放输入和输出数据。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-scale-train-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">train_data</span></dt>    <dd>     <p class="para">神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-scale-train-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-scale-train-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_descale_train()} - 基于先前计算的参数来缩小输入和输出数据</span></li>    <li class="member"><span class="function">{@link fann_set_scaling_params()} - 根据训练数据计算输入和输出缩放参数以供将来使用</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_scale_train($ann, $train_data) {}

/**
*<div id="function.fann-set-activation-function-hidden" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_activation_function_hidden</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_activation_function_hidden</span> &mdash; <span class="dc-title">为所有隐藏层设置激活函数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-activation-function-hidden-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_activation_function_hidden</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$activation_function</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   为所有隐藏层设置激活函数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-activation-function-hidden-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">activation_function</span></dt>    <dd>     <p class="para">      <a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-activation-funcs" class="link">激活函数</a> 常量。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-activation-function-hidden-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-activation-function-hidden-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_activation_function()} - 为已应用的神经元和层设置激活函数</span></li>    <li class="member"><span class="function">{@link fann_set_activation_function_layer()} - 为已应用的层中所有的神经元设置激活函数</span></li>    <li class="member"><span class="function">{@link fann_set_activation_function_output()} - 为输出层设置激活函数</span></li>    <li class="member"><span class="function">{@link fann_set_activation_steepness()} - 为提供的神经元和层设置激活陡度</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_activation_function_hidden($ann, $activation_function) {}

/**
*<div id="function.fann-set-activation-function-layer" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_activation_function_layer</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_activation_function_layer</span> &mdash; <span class="dc-title">为已应用的层中所有的神经元设置激活函数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-activation-function-layer-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_activation_function_layer</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$activation_function</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$layer</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   为层数为 <span>layer</span> 的所有神经元设置激活函数，将输入层计为0.  </p>  <p class="para">   在输入层中为神经元设置激活函数是不可能的。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-activation-function-layer-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">activation_function</span></dt>    <dd>     <p class="para">      <a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-activation-funcs" class="link">激活函数</a> 常量。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">layer</span></dt>    <dd>     <p class="para">      层数。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-activation-function-layer-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-activation-function-layer-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_activation_function()} - 为已应用的神经元和层设置激活函数</span></li>    <li class="member"><span class="function">{@link fann_set_activation_function_hidden()} - 为所有隐藏层设置激活函数</span></li>    <li class="member"><span class="function">{@link fann_set_activation_function_output()} - 为输出层设置激活函数</span></li>    <li class="member"><span class="function">{@link fann_set_activation_steepness()} - 为提供的神经元和层设置激活陡度</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_activation_function_layer($ann, $activation_function, $layer) {}

/**
*<div id="function.fann-set-activation-function-output" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_activation_function_output</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_activation_function_output</span> &mdash; <span class="dc-title">为输出层设置激活函数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-activation-function-output-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_activation_function_output</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$activation_function</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   为输出层设置激活函数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-activation-function-output-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">activation_function</span></dt>    <dd>     <p class="para">     <a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-activation-funcs" class="link">激活函数</a> 常量。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-activation-function-output-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-activation-function-output-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_activation_function()} - 为已应用的神经元和层设置激活函数</span></li>    <li class="member"><span class="function">{@link fann_set_activation_function_layer()} - 为已应用的层中所有的神经元设置激活函数</span></li>    <li class="member"><span class="function">{@link fann_set_activation_function_hidden()} - 为所有隐藏层设置激活函数</span></li>    <li class="member"><span class="function">{@link fann_set_activation_steepness()} - 为提供的神经元和层设置激活陡度</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_activation_function_output($ann, $activation_function) {}

/**
*<div id="function.fann-set-activation-function" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_activation_function</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_activation_function</span> &mdash; <span class="dc-title">为已应用的神经元和层设置激活函数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-activation-function-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_activation_function</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$activation_function</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$layer</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$neuron</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   为层数为 <span>layer</span>，神经经元数为 <span>neuron</span> 的神经元设置激活函数，将输入层记为0.  </p>  <p class="para">   在输出层中的神经元设置激活函数是不可能的。  </p>  <p class="para">   在选择激活函数时，注意激活函数有不同的范围，这个很重要哦。   <strong><span>FANN_SIGMOID</span></strong> 就是个例子。它的范围是0 -1，然而 <strong><span>FANN_SIGMOID_SYMMETRIC</span></strong> 的范围是-1 - 1， <strong><span>FANN_LINEAR</span></strong> 却是无限的。  </p>  <p class="para">   应用的激活函数应该是<a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-activation-funcs" class="link">激活函数</a>常量之一。  </p>  <p class="para">   返回值是<a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-train" class="link">激活函数</a>常量之一。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-activation-function-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">activation_function</span></dt>    <dd>     <p class="para">      <a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-activation-funcs" class="link">激活函数</a>常量。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">layer</span></dt>    <dd>     <p class="para">      层数。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">neuron</span></dt>    <dd>     <p class="para">      神经元数。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-activation-function-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-activation-function-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_activation_function_layer()} - 为已应用的层中所有的神经元设置激活函数</span></li>    <li class="member"><span class="function">{@link fann_set_activation_function_hidden()} - 为所有隐藏层设置激活函数</span></li>    <li class="member"><span class="function">{@link fann_set_activation_function_output()} - 为输出层设置激活函数</span></li>    <li class="member"><span class="function">{@link fann_set_activation_steepness()} - 为提供的神经元和层设置激活陡度</span></li>    <li class="member"><span class="function">{@link fann_get_activation_function()} - 返回激励函数</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_activation_function($ann, $activation_function, $layer, $neuron) {}

/**
*<div id="function.fann-set-activation-steepness-hidden" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_activation_steepness_hidden</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_activation_steepness_hidden</span> &mdash; <span class="dc-title">为所有隐藏层中所有的神经元设置激活函数陡度</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-activation-steepness-hidden-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_activation_steepness_hidden</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$activation_steepness</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   为所有隐藏层中所有的神经元设置激活陡度。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-activation-steepness-hidden-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">activation_steepness</span></dt>    <dd>     <p class="para">      激活陡度。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-activation-steepness-hidden-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-activation-steepness-hidden-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_activation_steepness()} - 为提供的神经元和层设置激活陡度</span></li>    <li class="member"><span class="function">{@link fann_set_activation_steepness_layer()} - 为提供的层中所有的神经元设置激活陡度</span></li>    <li class="member"><span class="function">{@link fann_set_activation_steepness_output()} - 在输出层中设置激活陡度</span></li>    <li class="member"><span class="function">{@link fann_get_activation_steepness()} - 为提供的神经和网络层数返回激活陡度</span></li>    <li class="member"><span class="function">{@link fann_set_activation_function()} - 为已应用的神经元和层设置激活函数</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_activation_steepness_hidden($ann, $activation_steepness) {}

/**
*<div id="function.fann-set-activation-steepness-layer" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_activation_steepness_layer</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_activation_steepness_layer</span> &mdash; <span class="dc-title">为提供的层中所有的神经元设置激活陡度</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-activation-steepness-layer-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_activation_steepness_layer</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$activation_steepness</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$layer</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   为层数为 <span>layer</span> 中所有的神经元设置激活陡度，将输入层计为0。  </p>  <p class="para">   在输出层中设置激活陡度是不可能的。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-activation-steepness-layer-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">activation_steepness</span></dt>    <dd>     <p class="para">      激活陡度。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">layer</span></dt>    <dd>     <p class="para">      层数。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-activation-steepness-layer-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-activation-steepness-layer-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_activation_steepness()} - 为提供的神经元和层设置激活陡度</span></li>    <li class="member"><span class="function">{@link fann_set_activation_steepness_hidden()} - 为所有隐藏层中所有的神经元设置激活函数陡度</span></li>    <li class="member"><span class="function">{@link fann_set_activation_steepness_output()} - 在输出层中设置激活陡度</span></li>    <li class="member"><span class="function">{@link fann_get_activation_steepness()} - 为提供的神经和网络层数返回激活陡度</span></li>    <li class="member"><span class="function">{@link fann_set_activation_function()} - 为已应用的神经元和层设置激活函数</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_activation_steepness_layer($ann, $activation_steepness, $layer) {}

/**
*<div id="function.fann-set-activation-steepness-output" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_activation_steepness_output</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_activation_steepness_output</span> &mdash; <span class="dc-title">在输出层中设置激活陡度</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-activation-steepness-output-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_activation_steepness_output</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$activation_steepness</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   在输出层中设置激活陡度。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-activation-steepness-output-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">activation_steepness</span></dt>    <dd>     <p class="para">      激活陡度。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-activation-steepness-output-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-activation-steepness-output-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_activation_steepness()} - 为提供的神经元和层设置激活陡度</span></li>    <li class="member"><span class="function">{@link fann_set_activation_steepness_layer()} - 为提供的层中所有的神经元设置激活陡度</span></li>    <li class="member"><span class="function">{@link fann_set_activation_steepness_hidden()} - 为所有隐藏层中所有的神经元设置激活函数陡度</span></li>    <li class="member"><span class="function">{@link fann_get_activation_steepness()} - 为提供的神经和网络层数返回激活陡度</span></li>    <li class="member"><span class="function">{@link fann_set_activation_function()} - 为已应用的神经元和层设置激活函数</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_activation_steepness_output($ann, $activation_steepness) {}

/**
*<div id="function.fann-set-activation-steepness" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_activation_steepness</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_activation_steepness</span> &mdash; <span class="dc-title">为提供的神经元和层设置激活陡度</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-activation-steepness-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_activation_steepness</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$activation_steepness</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$layer</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$neuron</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   为层数为 <span>layer</span>，神经元数为 <span>neuron</span> 的神经元设置激活陡度，输出层的层数计为0。  </p>  <p class="para">   为输入层中的神经元设置激活陡度是不可能的。.  </p>  <p class="para">   激活函数的陡度表示激活从最大值到最小值有多快。一个高的激活函数值也会导致一个更积极的训练。  </p>  <p class="para">   当训练神经网络中输出值处于一个极端值(通常为0或者1，取决于激活函数)时，可以使用陡峭的激活函数(比如 1.0)。  </p>  <p class="para">   默认激活陡度是0.5。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-activation-steepness-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">activation_steepness</span></dt>    <dd>     <p class="para">      激活陡度。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">layer</span></dt>    <dd>     <p class="para">      层数。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">neuron</span></dt>    <dd>     <p class="para">      神经元数。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-activation-steepness-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-activation-steepness-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_activation_steepness_layer()} - 为提供的层中所有的神经元设置激活陡度</span></li>    <li class="member"><span class="function">{@link fann_set_activation_steepness_hidden()} - 为所有隐藏层中所有的神经元设置激活函数陡度</span></li>    <li class="member"><span class="function">{@link fann_set_activation_steepness_output()} - 在输出层中设置激活陡度</span></li>    <li class="member"><span class="function">{@link fann_get_activation_steepness()} - 为提供的神经和网络层数返回激活陡度</span></li>    <li class="member"><span class="function">{@link fann_set_activation_function()} - 为已应用的神经元和层设置激活函数</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_activation_steepness($ann, $activation_steepness, $layer, $neuron) {}

/**
*<div id="function.fann-set-bit-fail-limit" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_bit_fail_limit</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_bit_fail_limit</span> &mdash; <span class="dc-title">设置训练期间使用的误差</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-bit-fail-limit-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_bit_fail_limit</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$bit_fail_limit</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置训练期间使用的误差。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-bit-fail-limit-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">bit_fail_limit</span></dt>    <dd>     <p class="para">      误差。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-bit-fail-limit-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-bit-fail-limit-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_bit_fail_limit()} - 返回训练期间使用的误差限制</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_bit_fail_limit($ann, $bit_fail_limit) {}

/**
*<div id="function.fann-set-callback" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_callback</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_callback</span> &mdash; <span class="dc-title">设置训练期间使用的回调函数。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-callback-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_callback</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$callback</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置训练期间使用的回调函数。 这意味着它被<span class="function">{@link fann_train_on_data()}</span> 或 <span class="function">{@link fann_train_on_file()}</span>调用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-callback-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">callback</span></dt>    <dd>     <p class="para">     提供的回调函数接受以下参数：      <ul class="simplelist">       <li class="member"><span>ann</span> - 神经网络 <span class="type" style="color:#EAB766">resource</span></li>       <li class="member"><span>train</span> - 训练数据 <span class="type" style="color:#EAB766">resource</span>        或者 当被 <span class="function">{@link fann_train_on_file()}</span> 为 <strong><span>null</span></strong></li>       <li class="member"><span>max_epochs</span> - 训练将进行的最大周期数。</li>       <li class="member"><span>epochs_between_reports</span> - 在调用该函数之前训练进行的最大周期数。</li>       <li class="member"><span>desired_error</span> - 期望的 <span class="function">{@link fann_get_MSE()}</span> 或者        <span class="function">{@link fann_get_bit_fail()}</span>, 取决于<span class="function">{@link fann_set_train_stop_function()}</span>函数选择的停止函数。</li>       <li class="member"><span>epochs</span> - The current epoch</li>      </ul>     </p>     <p class="para">      回调将会返回 <strong><span>true</span></strong>. 如果返回 <strong><span>false</span></strong>, 表明训练将会终止。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-callback-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-callback-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_train_on_data()} - 在整个数据集上训练一段时间。</span></li>    <li class="member"><span class="function">{@link fann_train_on_file()} - 在从某个文件读取的整个数据集上训练一段时间。</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_callback($ann, $callback) {}

/**
*<div id="function.fann-set-cascade-activation-functions" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_cascade_activation_functions</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_cascade_activation_functions</span> &mdash; <span class="dc-title">设置级联候选激活函数的数组</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-cascade-activation-functions-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_cascade_activation_functions</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$cascade_activation_functions</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置级联候选激活函数的数组。  </p>  <p class="para">   想知道哪个候选神经元将会被该数组生成,参见 <span class="function">{@link fann_get_cascade_num_candidates()}</span> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-cascade-activation-functions-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">cascade_activation_functions</span></dt>    <dd>     <p class="para">      级联候选激活函数数组。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-cascade-activation-functions-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-cascade-activation-functions-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_cascade_activation_functions_count()} - 返回级联激活函数的数量</span></li>    <li class="member"><span class="function"><strong style="color:#CC7832">fann_set_cascade_activation_functions()</strong></span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_cascade_activation_functions($ann, $cascade_activation_functions) {}

/**
*<div id="function.fann-set-cascade-activation-steepnesses" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_cascade_activation_steepnesses</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_cascade_activation_steepnesses</span> &mdash; <span class="dc-title">设置级联候选激活陡度的数组。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-cascade-activation-steepnesses-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_cascade_activation_steepnesses</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$cascade_activation_steepnesses_count</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置级联候选激活陡度的数组。  </p>  <p class="para">   想知道哪个候选神经元将会被该数组生成，参见 <span class="function">{@link fann_get_cascade_num_candidates()}</span> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-cascade-activation-steepnesses-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">cascade_activation_steepnesses_count</span></dt>    <dd>     <p class="para">      级联候选激活陡度数组。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-cascade-activation-steepnesses-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-cascade-activation-steepnesses-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_cascade_activation_steepnesses()} - 返回级联激活陡度</span></li>    <li class="member"><span class="function">{@link fann_get_cascade_activation_steepnesses_count()} - 激活陡度的数量</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_cascade_activation_steepnesses($ann, $cascade_activation_steepnesses_count) {}

/**
*<div id="function.fann-set-cascade-candidate-change-fraction" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_cascade_candidate_change_fraction</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_cascade_candidate_change_fraction</span> &mdash; <span class="dc-title">设置级联候选更改分数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-cascade-candidate-change-fraction-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_cascade_candidate_change_fraction</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$cascade_candidate_change_fraction</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置级联候选更改分数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-cascade-candidate-change-fraction-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">cascade_candidate_change_fraction</span></dt>    <dd>     <p class="para">      级联候选更改分数。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-cascade-candidate-change-fraction-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-cascade-candidate-change-fraction-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_cascade_candidate_change_fraction()} - 返回级联候选变化分数</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_cascade_candidate_change_fraction($ann, $cascade_candidate_change_fraction) {}

/**
*<div id="function.fann-set-cascade-candidate-limit" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_cascade_candidate_limit</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_cascade_candidate_limit</span> &mdash; <span class="dc-title">设置候选限度</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-cascade-candidate-limit-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_cascade_candidate_limit</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$cascade_candidate_limit</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置候选限度。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-cascade-candidate-limit-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">cascade_candidate_limit</span></dt>    <dd>     <p class="para">      候选限度。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-cascade-candidate-limit-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-cascade-candidate-limit-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_cascade_candidate_limit()} - 返回候选限度</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_cascade_candidate_limit($ann, $cascade_candidate_limit) {}

/**
*<div id="function.fann-set-cascade-candidate-stagnation-epochs" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_cascade_candidate_stagnation_epochs</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_cascade_candidate_stagnation_epochs</span> &mdash; <span class="dc-title">设置级联候选停止周期数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-cascade-candidate-stagnation-epochs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_cascade_candidate_stagnation_epochs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$cascade_candidate_stagnation_epochs</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置级联候选停止周期数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-cascade-candidate-stagnation-epochs-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">cascade_candidate_stagnation_epochs</span></dt>    <dd>     <p class="para">      级联候选停止周期数。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-cascade-candidate-stagnation-epochs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-cascade-candidate-stagnation-epochs-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_cascade_candidate_stagnation_epochs()} - 返回层叠候选停滞周期的数量</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_cascade_candidate_stagnation_epochs($ann, $cascade_candidate_stagnation_epochs) {}

/**
*<div id="function.fann-set-cascade-max-cand-epochs" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_cascade_max_cand_epochs</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_cascade_max_cand_epochs</span> &mdash; <span class="dc-title">设置最大候选周期数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-cascade-max-cand-epochs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_cascade_max_cand_epochs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$cascade_max_cand_epochs</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置最大候选周期数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-cascade-max-cand-epochs-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">cascade_max_cand_epochs</span></dt>    <dd>     <p class="para">      设置最大候选周期数。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-cascade-max-cand-epochs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-cascade-max-cand-epochs-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_cascade_max_cand_epochs()} - 返回候选周期的最大值</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_cascade_max_cand_epochs($ann, $cascade_max_cand_epochs) {}

/**
*<div id="function.fann-set-cascade-max-out-epochs" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_cascade_max_out_epochs</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_cascade_max_out_epochs</span> &mdash; <span class="dc-title">设置最大输出周期</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-cascade-max-out-epochs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_cascade_max_out_epochs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$cascade_max_out_epochs</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置最大输出周期。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-cascade-max-out-epochs-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">cascade_max_out_epochs</span></dt>    <dd>     <p class="para">      最大输出周期。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-cascade-max-out-epochs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-cascade-max-out-epochs-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_cascade_max_out_epochs()} - 返回输出周期的最大值</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_cascade_max_out_epochs($ann, $cascade_max_out_epochs) {}

/**
*<div id="function.fann-set-cascade-min-cand-epochs" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_cascade_min_cand_epochs</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_cascade_min_cand_epochs</span> &mdash; <span class="dc-title">设置最小候选周期</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-cascade-min-cand-epochs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_cascade_min_cand_epochs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$cascade_min_cand_epochs</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置最小候选周期。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-cascade-min-cand-epochs-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">cascade_min_cand_epochs</span></dt>    <dd>     <p class="para">      设置最小候选周期。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-cascade-min-cand-epochs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fann-set-cascade-min-cand-epochs-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">This function is only available if the fann extension has been build against libfann &gt;= 2.2.</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-cascade-min-cand-epochs-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_cascade_min_cand_epochs()} - 返回最小的候选周期</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_cascade_min_cand_epochs($ann, $cascade_min_cand_epochs) {}

/**
*<div id="function.fann-set-cascade-min-out-epochs" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_cascade_min_out_epochs</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_cascade_min_out_epochs</span> &mdash; <span class="dc-title">设置最小输出周期</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-cascade-min-out-epochs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_cascade_min_out_epochs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$cascade_min_out_epochs</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置最小输出周期。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-cascade-min-out-epochs-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">cascade_min_out_epochs</span></dt>    <dd>     <p class="para">      最小输出周期。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-cascade-min-out-epochs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fann-set-cascade-min-out-epochs-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">This function is only available if the fann extension has been build against libfann &gt;= 2.2.</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-cascade-min-out-epochs-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_cascade_min_out_epochs()} - 返回最小输出周期</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_cascade_min_out_epochs($ann, $cascade_min_out_epochs) {}

/**
*<div id="function.fann-set-cascade-num-candidate-groups" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_cascade_num_candidate_groups</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_cascade_num_candidate_groups</span> &mdash; <span class="dc-title">设置候选组数量</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-cascade-num-candidate-groups-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_cascade_num_candidate_groups</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$cascade_num_candidate_groups</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置候选组数量。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-cascade-num-candidate-groups-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">cascade_num_candidate_groups</span></dt>    <dd>     <p class="para">      候选组数量。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-cascade-num-candidate-groups-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-cascade-num-candidate-groups-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_cascade_num_candidate_groups()} - 返回候选组的数量</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_cascade_num_candidate_groups($ann, $cascade_num_candidate_groups) {}

/**
*<div id="function.fann-set-cascade-output-change-fraction" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_cascade_output_change_fraction</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_cascade_output_change_fraction</span> &mdash; <span class="dc-title">设置级联输出改变分数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-cascade-output-change-fraction-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_cascade_output_change_fraction</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$cascade_output_change_fraction</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置级联输出改变分数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-cascade-output-change-fraction-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">cascade_output_change_fraction</span></dt>    <dd>     <p class="para">      级联输出改变分数。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-cascade-output-change-fraction-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-cascade-output-change-fraction-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_cascade_output_change_fraction()} - 返回级联输出变化分数</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_cascade_output_change_fraction($ann, $cascade_output_change_fraction) {}

/**
*<div id="function.fann-set-cascade-output-stagnation-epochs" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_cascade_output_stagnation_epochs</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_cascade_output_stagnation_epochs</span> &mdash; <span class="dc-title">设置级联输出停滞周期的值</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-cascade-output-stagnation-epochs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_cascade_output_stagnation_epochs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$cascade_output_stagnation_epochs</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置级联输出停滞周期的值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-cascade-output-stagnation-epochs-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">cascade_output_stagnation_epochs</span></dt>    <dd>     <p class="para">      级联输出停滞周期的值     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-cascade-output-stagnation-epochs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-cascade-output-stagnation-epochs-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_cascade_output_stagnation_epochs()} - 返回级联输出停滞周期的数量</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_cascade_output_stagnation_epochs($ann, $cascade_output_stagnation_epochs) {}

/**
*<div id="function.fann-set-cascade-weight-multiplier" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_cascade_weight_multiplier</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_cascade_weight_multiplier</span> &mdash; <span class="dc-title">设置权重因子</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-cascade-weight-multiplier-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_cascade_weight_multiplier</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$cascade_weight_multiplier</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置权重因子。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-cascade-weight-multiplier-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">cascade_weight_multiplier</span></dt>    <dd>     <p class="para">      权重因子。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-cascade-weight-multiplier-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-cascade-weight-multiplier-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_cascade_weight_multiplier()} - 返回权重因子</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_cascade_weight_multiplier($ann, $cascade_weight_multiplier) {}

/**
*<div id="function.fann-set-error-log" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_error_log</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_error_log</span> &mdash; <span class="dc-title">设置错误记录保存的位置。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-error-log-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_error_log</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$errdat</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$log_file</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   设置错误记录保存的位置。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-error-log-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">errdat</span></dt>    <dd>     <span>Either neural network <span class="type" style="color:#EAB766">resource</span> or neural network trainining data <span class="type" style="color:#EAB766">resource</span>.</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">log_file</span></dt>    <dd>     <p class="para">      日志文件的路径。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-error-log-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">无返回值。</p> </div></div>
 * @return void*/
function fann_set_error_log($errdat, $log_file) {}

/**
*<div id="function.fann-set-input-scaling-params" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_input_scaling_params</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_input_scaling_params</span> &mdash; <span class="dc-title">根据训练数据计算将来使用的输入比例参数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-input-scaling-params-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_input_scaling_params</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$train_data</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$new_input_min</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$new_input_max</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   根据训练数据计算将来使用的输入比例参数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-input-scaling-params-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">train_data</span></dt>    <dd>     <p class="para">神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">new_input_min</span></dt>    <dd>     <p class="para">      缩放后输入数据的期望下限 (不严格遵循)     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">new_input_max</span></dt>    <dd>     <p class="para">      缩放后输入数据的期望上线 (不严格遵循)     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-input-scaling-params-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-input-scaling-params-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_output_scaling_params()} - 根据训练数据计算将来使用的输出缩放参数</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_input_scaling_params($ann, $train_data, $new_input_min, $new_input_max) {}

/**
*<div id="function.fann-set-learning-momentum" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_learning_momentum</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_learning_momentum</span> &mdash; <span class="dc-title">设置学习动量。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-learning-momentum-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_learning_momentum</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$learning_momentum</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置学习动量。  </p>  <p class="para">   更多信息，参见 <span class="function">{@link fann_get_learning_momentum()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-learning-momentum-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">learning_momentum</span></dt>    <dd>     <p class="para">      学习动量。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-learning-momentum-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-learning-momentum-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_learning_momentum()} - 返回学习动量</span></li>    <li class="member"><span class="function">{@link fann_set_training_algorithm()} - 设置训练算法。</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_learning_momentum($ann, $learning_momentum) {}

/**
*<div id="function.fann-set-learning-rate" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_learning_rate</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_learning_rate</span> &mdash; <span class="dc-title">设置学习速率。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-learning-rate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_learning_rate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$learning_rate</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置学习速率。  </p>  <p class="para">   更新信息，参见 <span class="function">{@link fann_get_learning_rate()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-learning-rate-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">learning_rate</span></dt>    <dd>     <p class="para">      学习速率。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-learning-rate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-learning-rate-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_learning_rate()} - 返回学习速率</span></li>    <li class="member"><span class="function">{@link fann_set_training_algorithm()} - 设置训练算法。</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_learning_rate($ann, $learning_rate) {}

/**
*<div id="function.fann-set-output-scaling-params" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_output_scaling_params</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_output_scaling_params</span> &mdash; <span class="dc-title">根据训练数据计算将来使用的输出缩放参数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-output-scaling-params-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_output_scaling_params</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$train_data</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$new_output_min</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$new_output_max</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   根据训练数据计算将来使用的输出缩放参数  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-output-scaling-params-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">train_data</span></dt>    <dd>     <p class="para">神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">new_output_min</span></dt>    <dd>     <p class="para">      缩放后输出数据的期望下限(不严格遵循)     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">new_output_max</span></dt>    <dd>     <p class="para">      缩放后输出数据的期望上限(不严格遵循)     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-output-scaling-params-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-output-scaling-params-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_input_scaling_params()} - 根据训练数据计算将来使用的输入比例参数</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_output_scaling_params($ann, $train_data, $new_output_min, $new_output_max) {}

/**
*<div id="function.fann-set-quickprop-decay" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_quickprop_decay</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_quickprop_decay</span> &mdash; <span class="dc-title">设置quickprop算法衰减因子</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-quickprop-decay-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_quickprop_decay</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$quickprop_decay</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置quickprop算法衰减因子。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-quickprop-decay-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">quickprop_decay</span></dt>    <dd>     <p class="para">      quickprop算法衰减因子。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-quickprop-decay-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-quickprop-decay-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_quickprop_decay()} - 返回衰退值，用于在 quickprop 训练迭代时衰减权重</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_quickprop_decay($ann, $quickprop_decay) {}

/**
*<div id="function.fann-set-quickprop-mu" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_quickprop_mu</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_quickprop_mu</span> &mdash; <span class="dc-title">设置 quickprop 算法放大因子</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-quickprop-mu-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_quickprop_mu</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$quickprop_mu</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置 quickprop 算法放大因子。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-quickprop-mu-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">quickprop_mu</span></dt>    <dd>     <p class="para">      放大因子。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-quickprop-mu-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-quickprop-mu-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_quickprop_mu()} - 返回放大系数</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_quickprop_mu($ann, $quickprop_mu) {}

/**
*<div id="function.fann-set-rprop-decrease-factor" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_rprop_decrease_factor</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_rprop_decrease_factor</span> &mdash; <span class="dc-title">使用 RPROP 算法训练时，设置下降因子</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-rprop-decrease-factor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_rprop_decrease_factor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$rprop_decrease_factor</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   使用 RPROP 算法训练时，设置下降因子。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-rprop-decrease-factor-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">rprop_decrease_factor</span></dt>    <dd>     <p class="para">      下降因子。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-rprop-decrease-factor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-rprop-decrease-factor-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_rprop_decrease_factor()} - 返回 RPROP 训练期间的衰减系数</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_rprop_decrease_factor($ann, $rprop_decrease_factor) {}

/**
*<div id="function.fann-set-rprop-delta-max" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_rprop_delta_max</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_rprop_delta_max</span> &mdash; <span class="dc-title">设置最大步长</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-rprop-delta-max-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_rprop_delta_max</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$rprop_delta_max</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   最大步长是一个正数，决定最大步长可能有多大。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-rprop-delta-max-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">rprop_delta_max</span></dt>    <dd>     <p class="para">      最大步长。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-rprop-delta-max-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-rprop-delta-max-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_rprop_delta_max()} - 返回最大步长</span></li>    <li class="member"><span class="function">{@link fann_get_rprop_delta_min()} - 返回最小步长</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_rprop_delta_max($ann, $rprop_delta_max) {}

/**
*<div id="function.fann-set-rprop-delta-min" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_rprop_delta_min</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_rprop_delta_min</span> &mdash; <span class="dc-title">设置最小步长</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-rprop-delta-min-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_rprop_delta_min</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$rprop_delta_min</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   最小步长是一个小的正数，决定最小步长可能有多小。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-rprop-delta-min-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">rprop_delta_min</span></dt>    <dd>     <p class="para">      最小步长。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-rprop-delta-min-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-rprop-delta-min-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_rprop_delta_min()} - 返回最小步长</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_rprop_delta_min($ann, $rprop_delta_min) {}

/**
*<div id="function.fann-set-rprop-delta-zero" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_rprop_delta_zero</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_rprop_delta_zero</span> &mdash; <span class="dc-title">设置初始步长</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-rprop-delta-zero-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_rprop_delta_zero</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$rprop_delta_zero</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   初始步长是确定初始步长的正数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-rprop-delta-zero-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">rprop_delta_zero</span></dt>    <dd>     <p class="para">      初始步长。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-rprop-delta-zero-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-rprop-delta-zero-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_rprop_delta_zero()} - 返回初始步长</span></li>    <li class="member"><span class="function">{@link fann_get_rprop_delta_min()} - 返回最小步长</span></li>    <li class="member"><span class="function">{@link fann_get_rprop_delta_max()} - 返回最大步长</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_rprop_delta_zero($ann, $rprop_delta_zero) {}

/**
*<div id="function.fann-set-rprop-increase-factor" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_rprop_increase_factor</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_rprop_increase_factor</span> &mdash; <span class="dc-title">使用 RPROP 算法训练时，设置增长因子</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-rprop-increase-factor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_rprop_increase_factor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$rprop_increase_factor</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   使用 RPROP 算法训练时，设置增长因子。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-rprop-increase-factor-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">rprop_increase_factor</span></dt>    <dd>     <p class="para">      增长因子。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-rprop-increase-factor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-rprop-increase-factor-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_rprop_increase_factor()} - 返回 RPROP 训练的递增系数</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_rprop_increase_factor($ann, $rprop_increase_factor) {}

/**
*<div id="function.fann-set-sarprop-step-error-shift" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_sarprop_step_error_shift</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_sarprop_step_error_shift</span> &mdash; <span class="dc-title">设置 sarprop 算法的步误差偏移量</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-sarprop-step-error-shift-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_sarprop_step_error_shift</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sarprop_step_error_shift</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置 sarprop 算法的步误差偏移量。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-sarprop-step-error-shift-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">sarprop_step_error_shift</span></dt>    <dd>     <p class="para">      sarprop 算法的步误差偏移量.     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-sarprop-step-error-shift-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fann-set-sarprop-step-error-shift-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">This function is only available if the fann extension has been build against libfann &gt;= 2.2.</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-sarprop-step-error-shift-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_sarprop_step_error_shift()} - 返回 sarprop 步值的误差偏移</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_sarprop_step_error_shift($ann, $sarprop_step_error_shift) {}

/**
*<div id="function.fann-set-sarprop-step-error-threshold-factor" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_sarprop_step_error_threshold_factor</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_sarprop_step_error_threshold_factor</span> &mdash; <span class="dc-title">设置 sarprop 算法的步误差阈值因子</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-sarprop-step-error-threshold-factor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_sarprop_step_error_threshold_factor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sarprop_step_error_threshold_factor</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置 sarprop 算法的步误差阈值因子。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-sarprop-step-error-threshold-factor-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">sarprop_step_error_threshold_factor</span></dt>    <dd>     <p class="para">      sarprop 算法的步误差阈值因子。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-sarprop-step-error-threshold-factor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fann-set-sarprop-step-error-threshold-factor-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">This function is only available if the fann extension has been build against libfann &gt;= 2.2.</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-sarprop-step-error-threshold-factor-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_sarprop_step_error_threshold_factor()} - 返回 sarprop 算法步值的误差阈值系数</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_sarprop_step_error_threshold_factor($ann, $sarprop_step_error_threshold_factor) {}

/**
*<div id="function.fann-set-sarprop-temperature" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_sarprop_temperature</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_sarprop_temperature</span> &mdash; <span class="dc-title">设置 sarprop 算法的温度</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-sarprop-temperature-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_sarprop_temperature</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sarprop_temperature</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置 sarprop 算法的温度。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-sarprop-temperature-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">sarprop_temperature</span></dt>    <dd>     <p class="para">     sarprop 算法的温度。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-sarprop-temperature-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p>  </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fann-set-sarprop-temperature-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">This function is only available if the fann extension has been build against libfann &gt;= 2.2.</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-sarprop-temperature-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_sarprop_temperature()} - 返回 sarprop 算法温度</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_sarprop_temperature($ann, $sarprop_temperature) {}

/**
*<div id="function.fann-set-sarprop-weight-decay-shift" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_sarprop_weight_decay_shift</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_sarprop_weight_decay_shift</span> &mdash; <span class="dc-title">设置 sarprop 算法的权重衰减偏移值</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-sarprop-weight-decay-shift-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_sarprop_weight_decay_shift</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$sarprop_weight_decay_shift</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置 sarprop 算法的权重衰减偏移值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-sarprop-weight-decay-shift-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">sarprop_weight_decay_shift</span></dt>    <dd>     <p class="para">      sarprop 算法的权重衰减偏移值。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-sarprop-weight-decay-shift-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.fann-set-sarprop-weight-decay-shift-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>: <p class="para">This function is only available if the fann extension has been build against libfann &gt;= 2.2.</p></p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-sarprop-weight-decay-shift-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_sarprop_weight_decay_shift()} - 返回 sarprop 算法权重衰减变化值</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_sarprop_weight_decay_shift($ann, $sarprop_weight_decay_shift) {}

/**
*<div id="function.fann-set-scaling-params" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_scaling_params</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_scaling_params</span> &mdash; <span class="dc-title">根据训练数据计算输入和输出缩放参数以供将来使用</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-scaling-params-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_scaling_params</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$train_data</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$new_input_min</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$new_input_max</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$new_output_min</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$new_output_max</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   根据训练数据计算输入和输出缩放参数以供将来使用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-scaling-params-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">train_data</span></dt>    <dd>     <p class="para">神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">new_input_min</span></dt>    <dd>     <p class="para">      缩放后输入数据的期望下限 (不严格遵循)     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">new_input_max</span></dt>    <dd>     <p class="para">      缩放后输入数据的期望上限 (不严格遵循)     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">new_output_min</span></dt>    <dd>     <p class="para">      缩放后输出数据的期望下限 (不严格遵循)     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">new_output_max</span></dt>    <dd>     <p class="para">      缩放后输出数据的期望上限 (不严格遵循)     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-scaling-params-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-scaling-params-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_set_input_scaling_params()} - 根据训练数据计算将来使用的输入比例参数</span></li>    <li class="member"><span class="function">{@link fann_set_output_scaling_params()} - 根据训练数据计算将来使用的输出缩放参数</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_scaling_params($ann, $train_data, $new_input_min, $new_input_max, $new_output_min, $new_output_max) {}

/**
*<div id="function.fann-set-train-error-function" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_train_error_function</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_train_error_function</span> &mdash; <span class="dc-title">设置训练期间使用的错误函数。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-train-error-function-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_train_error_function</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$error_function</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置训练期间使用的错误函数。  </p>  <p class="para">   更多错误函数的信息，参见 <a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-errorfunc" class="link">error functions</a> 常量.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-train-error-function-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">error_function</span></dt>    <dd>     <p class="para">     <a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-errorfunc" class="link">error function</a> 常量。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-train-error-function-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-train-error-function-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_train_error_function()} - 返回训练中使用的错误函数。</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_train_error_function($ann, $error_function) {}

/**
*<div id="function.fann-set-training-algorithm" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_training_algorithm</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_training_algorithm</span> &mdash; <span class="dc-title">设置训练算法。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-training-algorithm-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_training_algorithm</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$training_algorithm</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置训练算法。  </p>  <p class="para">   更多信息参见 <span class="function">{@link fann_get_training_algorithm()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-training-algorithm-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">training_algorithm</span></dt>    <dd>     <p class="para">      <a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-train" class="link">Training algorithm</a> 常量     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-training-algorithm-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-training-algorithm-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_training_algorithm()} - 返回训练算法。</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_training_algorithm($ann, $training_algorithm) {}

/**
*<div id="function.fann-set-train-stop-function" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_train_stop_function</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_train_stop_function</span> &mdash; <span class="dc-title">设置训练期间使用的停止函数。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-train-stop-function-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_train_stop_function</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$stop_function</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置训练期间使用的停止函数。  </p>  <p class="para">   停止函数更多详情，参见 <a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-stopfunc" class="link">stop functions</a> 常量。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-train-stop-function-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">stop_function</span></dt>    <dd>     <p class="para">     <a href="https://www.php.net/manual/zh/fann.constants.php#constants.fann-stopfunc" class="link">stop function</a> 常量。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-train-stop-function-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-set-train-stop-function-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_get_train_stop_function()} - 返回训练中使用的停止函数。</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_set_train_stop_function($ann, $stop_function) {}

/**
*<div id="function.fann-set-weight-array" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_weight_array</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_weight_array</span> &mdash; <span class="dc-title">在网络中设置一个连接。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-weight-array-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_weight_array</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$connections</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   在网络中设置一个连接。  </p>  <p class="para">   只有权重将会被改变，连接和权重将被忽略如果它们不存在于网络中。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-weight-array-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">connections</span></dt>    <dd>     <p class="para">      一个包含 <span class="classname"><a href="https://www.php.net/manual/zh/class.fannconnection.php" class="classname">FANNConnection</a></span> 对象的数组。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-weight-array-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div></div>
 * @return bool*/
function fann_set_weight_array($ann, $connections) {}

/**
*<div id="function.fann-set-weight" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_set_weight</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_set_weight</span> &mdash; <span class="dc-title">在网络中设置一个连接。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-set-weight-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_set_weight</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$from_neuron</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$to_neuron</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$weight</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   在网络中设置一个连接。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-set-weight-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">from_neuron</span></dt>    <dd>     <p class="para">      连接开始处的神经元。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">to_neuron</span></dt>    <dd>     <p class="para">      连接结束处的神经元。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">weight</span></dt>    <dd>     <p class="para">      连接权重。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-set-weight-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div></div>
 * @return bool*/
function fann_set_weight($ann, $from_neuron, $to_neuron, $weight) {}

/**
*<div id="function.fann-shuffle-train-data" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_shuffle_train_data</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_shuffle_train_data</span> &mdash; <span class="dc-title">打算训练数据，使顺序随机。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-shuffle-train-data-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_shuffle_train_data</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$train_data</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   打算训练数据，使顺序随机。 增量训练时推荐使用，但是批训练时并没有什么明显的效果。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-shuffle-train-data-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">train_data</span></dt>    <dd>     <span>神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-shuffle-train-data-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div></div>
 * @return bool*/
function fann_shuffle_train_data($train_data) {}

/**
*<div id="function.fann-subset-train-data" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_subset_train_data</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_subset_train_data</span> &mdash; <span class="dc-title">返回一个训练数据子集的副本。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-subset-train-data-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_subset_train_data</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$data</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$pos</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$length</span></span>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   返回一个训练数据子集的副本 <span class="type" style="color:#EAB766">resource</span>, 从   <span>pos</span> 位置开始向前步进 <span>length</span> 个元素。  </p>  <p class="para">   <span>fann_subset_train_data(train_data, 0, fann_length_train_data(train_data))</span> 和 <span class="function">{@link fann_duplicate_train_data()}</span>函数的效果是一样的。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-subset-train-data-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">data</span></dt>    <dd>     <span>神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">pos</span></dt>    <dd>     <p class="para">      起始位置。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">length</span></dt>    <dd>     <p class="para">     复制元素的数量。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-subset-train-data-returnvalues">  <h3 class="title">返回值</h3>  <p class="para"> 成功时返回训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>，发生错误返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-subset-train-data-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_duplicate_train_data()} - 返回 fann 训练数据精确的副本。</span></li>   </ul>  </span> </div></div>
 * @return resource|false*/
function fann_subset_train_data($data, $pos, $length) {}

/**
*<div id="function.fann-test-data" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_test_data</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_test_data</span> &mdash; <span class="dc-title">使用训练数据来测试并且计算出 MSE</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-test-data-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_test_data</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$data</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   使用训练数据来测试并且计算出 MSE。  </p>  <p class="para">   该函数将会更新 MSE 和 误差的值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-test-data-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">data</span></dt>    <dd>     <p class="para">神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-test-data-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，则更新 MSE, 错误则返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-test-data-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_train_on_data()} - 在整个数据集上训练一段时间。</span></li>    <li class="member"><span class="function">{@link fann_train_epoch()} - 使用一组训练数据训练一个周期。</span></li>    <li class="member"><span class="function">{@link fann_get_bit_fail()} - 失败位的数量</span></li>    <li class="member"><span class="function">{@link fann_get_MSE()} - 从网络中读取均方误差。</span></li>    <li class="member"><span class="function">{@link fann_set_training_algorithm()} - 设置训练算法。</span></li>   </ul>  </span> </div></div>
 * @return float|false The updated MSE, or false on error.*/
function fann_test_data($ann, $data) {}

/**
*<div id="function.fann-test" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_test</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_test</span> &mdash; <span class="dc-title">使用一组输入和一组期望的输出来测试。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-test-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_test</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$input</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$desired_output</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   使用一组输入和一组期望的输出来测试。 这个操作将会更新均方误差，但是无论如何都不会改变网络。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-test-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">input</span></dt>    <dd>     <p class="para">      输入数组。 这个数组必须和 <span class="function">{@link fann_get_num_input()}</span> 一样长。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">desired_output</span></dt>    <dd>     <p class="para">      期望的输出数组。 这个数组必须和 <span class="function">{@link fann_get_num_output()}</span> 一样长.     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-test-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回测试输出，错误时返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-test-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_test_data()} - 使用训练数据来测试并且计算出 MSE</span></li>    <li class="member"><span class="function">{@link fann_train()} - 使用一个输入集和一个期望的输出集来迭代训练一次。</span></li>    <li class="member"><span class="function">{@link fann_get_num_input()} - 获取输入神经元的数量。</span></li>    <li class="member"><span class="function">{@link fann_get_num_output()} - 获取输出神经元的数量。</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_test($ann, $input, $desired_output) {}

/**
*<div id="function.fann-train-epoch" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_train_epoch</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_train_epoch</span> &mdash; <span class="dc-title">使用一组训练数据训练一个周期。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-train-epoch-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_train_epoch</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$data</span></span>): <span class="type" style="color:#EAB766">float</span></div>  <p class="para rdfs-comment">   使用保存在 data 中训练数据训练一个周期。一个训练周期表示所有的训练数据正好使用了一次。  </p>  <p class="para">   这个函数将会返回在其实际计算之前或当中被计算的 MSE 错误。但是因为计算需要再次走一遍整个训练集，所有训练周期之后的不是真正的 MSE。 在训练中使用这个值是绰绰有余的。  </p>  <p class="para">   该函数使用的是被 <span class="function">{@link fann_set_training_algorithm()}</span> 函数选中的训练算法。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-train-epoch-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">data</span></dt>    <dd>     <p class="para">神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-train-epoch-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功，则返回 MSE, 错误则返回 <strong><span>false</span></strong> .  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-train-epoch-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_train_on_data()} - 在整个数据集上训练一段时间。</span></li>    <li class="member"><span class="function">{@link fann_test_data()} - 使用训练数据来测试并且计算出 MSE</span></li>    <li class="member"><span class="function">{@link fann_get_MSE()} - 从网络中读取均方误差。</span></li>    <li class="member"><span class="function">{@link fann_set_training_algorithm()} - 设置训练算法。</span></li>   </ul>  </span> </div></div>
 * @return float|false The MSE, or false on error.*/
function fann_train_epoch($ann, $data) {}

/**
*<div id="function.fann-train-on-data" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_train_on_data</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_train_on_data</span> &mdash; <span class="dc-title">在整个数据集上训练一段时间。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-train-on-data-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_train_on_data</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$data</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$max_epochs</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$epochs_between_reports</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$desired_error</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   在整个数据集上训练一段时间。  </p>  <p class="para">   该训练使用 <span class="function">{@link fann_set_training_algorithm()}</span> 函数选择的算法和这些训练算法设置的参数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-train-on-data-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">data</span></dt>    <dd>     <p class="para">神经网络训练数据 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">max_epochs</span></dt>    <dd>     <p class="para">      训练应该继续的最大周期数。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">epochs_between_reports</span></dt>    <dd>     <p class="para">      用户函数之间的周期数。当为0时表示没有用户函数被调用。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">desired_error</span></dt>    <dd>     <p class="para">      期望的是 <span class="function">{@link fann_get_MSE()}</span> 或 <span class="function">{@link fann_get_bit_fail()}</span>的返回值, 取决于 <span class="function">{@link fann_set_train_stop_function()}</span> 选择的停止函数。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-train-on-data-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-train-on-data-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_train_on_file()} - 在从某个文件读取的整个数据集上训练一段时间。</span></li>    <li class="member"><span class="function">{@link fann_train_epoch()} - 使用一组训练数据训练一个周期。</span></li>    <li class="member"><span class="function">{@link fann_get_bit_fail()} - 失败位的数量</span></li>    <li class="member"><span class="function">{@link fann_get_MSE()} - 从网络中读取均方误差。</span></li>    <li class="member"><span class="function">{@link fann_set_train_stop_function()} - 设置训练期间使用的停止函数。</span></li>    <li class="member"><span class="function">{@link fann_set_training_algorithm()} - 设置训练算法。</span></li>    <li class="member"><span class="function">{@link fann_set_callback()} - 设置训练期间使用的回调函数。</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_train_on_data($ann, $data, $max_epochs, $epochs_between_reports, $desired_error) {}

/**
*<div id="function.fann-train-on-file" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_train_on_file</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_train_on_file</span> &mdash; <span class="dc-title">在从某个文件读取的整个数据集上训练一段时间。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-train-on-file-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_train_on_file</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$filename</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$max_epochs</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$epochs_between_reports</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">float</span> <span class="parameter" style="color:#3A95FF">$desired_error</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   在从某个文件读取的整个数据集上训练一段时间。  </p>  <p class="para">   该训练使用 <span class="function">{@link fann_set_training_algorithm()}</span> 函数选择的算法和这些训练算法设置的参数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-train-on-file-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>    <dd>     <p class="para">      包含训练数据的文件。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">max_epochs</span></dt>    <dd>     <p class="para">      训练应该继续的最大周期数。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">epochs_between_reports</span></dt>    <dd>     <p class="para">      用户函数之间的周期数。当为0时表示没有用户函数被调用。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">desired_error</span></dt>    <dd>     <p class="para">      期望的是 <span class="function">{@link fann_get_MSE()}</span> 或 <span class="function">{@link fann_get_bit_fail()}</span>的返回值, 取决于 <span class="function">{@link fann_set_train_stop_function()}</span> 选择的停止函数。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-train-on-file-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-train-on-file-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_train_on_data()} - 在整个数据集上训练一段时间。</span></li>    <li class="member"><span class="function">{@link fann_train_epoch()} - 使用一组训练数据训练一个周期。</span></li>    <li class="member"><span class="function">{@link fann_get_bit_fail()} - 失败位的数量</span></li>    <li class="member"><span class="function">{@link fann_get_MSE()} - 从网络中读取均方误差。</span></li>    <li class="member"><span class="function">{@link fann_set_train_stop_function()} - 设置训练期间使用的停止函数。</span></li>    <li class="member"><span class="function">{@link fann_set_training_algorithm()} - 设置训练算法。</span></li>    <li class="member"><span class="function">{@link fann_set_callback()} - 设置训练期间使用的回调函数。</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_train_on_file($ann, $filename, $max_epochs, $epochs_between_reports, $desired_error) {}

/**
*<div id="function.fann-train" class="refentry"> <div class="refnamediv">  <h1 class="refname">fann_train</h1>  <p class="verinfo">(PECL fann &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">fann_train</span> &mdash; <span class="dc-title">使用一个输入集和一个期望的输出集来迭代训练一次。</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.fann-train-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>fann_train</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$ann</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$input</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$desired_output</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   使用一个输入集和一个期望的输出集来迭代训练一次。 该训练一直是递增训练，因此只会出现一个模式。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.fann-train-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ann</span></dt>    <dd>     <span>神经网络 <span class="type" style="color:#EAB766"><span class="type 资源" style="color:#EAB766">资源</span></span>。</span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">input</span></dt>    <dd>     <p class="para">      输入数组，这个数组的长度应该恰好和 <span class="function">{@link fann_get_num_input()}</span> 一样长。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">desired_output</span></dt>    <dd>     <p class="para">      期望输出数组，这个数组的长度应该恰好和<span class="function">{@link fann_get_num_output()}</span> 一样长。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.fann-train-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">成功时返回 <strong><span>true</span></strong>，其它情况下返回 <strong><span>false</span></strong>。</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.fann-train-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link fann_train_on_data()} - 在整个数据集上训练一段时间。</span></li>    <li class="member"><span class="function">{@link fann_train_epoch()} - 使用一组训练数据训练一个周期。</span></li>    <li class="member"><span class="function">{@link fann_get_num_input()} - 获取输入神经元的数量。</span></li>    <li class="member"><span class="function">{@link fann_get_num_output()} - 获取输出神经元的数量。</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function fann_train($ann, $input, $desired_output) {}

/**
*       标准反向传播算法，每次训练匹配后权重都会更新。这意味着在每个单历元中权重会被更新很多次。因为这个原因，很多问题使用这个算法将会训练的非常快，然而其他更高级的问题的训练效果不是很好。      
*/
define('FANN_TRAIN_INCREMENTAL', 0);
/**
*       标准反向传播算法，计算均方差误差后权重值将会更新。 这意味着每个单历元只会更新一次。因为这个原因，很多问题使用这个算法会训练的很慢。但是计算出的均方差误差比增量训练的效果更好，使用这个算法某些问题将会得到更好的解决方案。      
*/
define('FANN_TRAIN_BATCH', 1);
/**
*       一个更高级的批训练算法，对于很多问题该算法还会获得很好的结果。RPROP 训练算法是自适应的，因此不需要使用 learning_rate. 其他一些参数用来设置 RPROP 算法工作的方式，只推荐给那些知道 RPROP 算法如何工作的人来设置。RPROP 训练算法是被 Riedmiller 和 BraunSome 在1993年提出来的，实际上此处使用的是由 Igel 和 Husken 在2000年提出来的 iRPROP 训练算法，它是标准 RPROP 训练算法的一个变种。      
*/
define('FANN_TRAIN_RPROP', 2);
/**
*       一个更高级的批训练算法，对于很多问题该算法还会获得很好的结果。quickprop 训练算法使用 learning_rate 参数和其他更高级的参数，       但是只有当用户真正明白 quickprop 训练算法如何工作的时候才建议修改这些高级参数。 quickprop 训练算法是被 Fahlman 在1988年描述的。      
*/
define('FANN_TRAIN_QUICKPROP', 3);
/**
*       更高级的训练算法，只在2.2版本中可用。      
*/
define('FANN_TRAIN_SARPROP', 4);
/**
*       线性激励函数。      
*/
define('FANN_LINEAR', 0);
/**
*       阈值激励函数。      
*/
define('FANN_THRESHOLD', 1);
/**
*       阈值激励函数。      
*/
define('FANN_THRESHOLD_SYMMETRIC', 2);
/**
*       Sigmoid激励函数。      
*/
define('FANN_SIGMOID', 3);
/**
*       逐步线性逼近 Sigmoid 激励函数。      
*/
define('FANN_SIGMOID_STEPWISE', 4);
/**
*       对称 Sigmoid 激励函数， 又名：tanh.      
*/
define('FANN_SIGMOID_SYMMETRIC', 5);
/**
*       逐步线性逼近对称 Sigmoid 激励函数。      
*/
define('FANN_SIGMOID_SYMMETRIC_STEPWISE', 6);
/**
*       Gaussian (高斯) 激励函数。      
*/
define('FANN_GAUSSIAN', 7);
/**
*       对称 gaussian (高斯)激励函数。      
*/
define('FANN_GAUSSIAN_SYMMETRIC', 8);
/**
*       逐步 gaussian (高斯)激励函数。      
*/
define('FANN_GAUSSIAN_STEPWISE', 9);
/**
*       快速(类sigmoid)激励函数，由 David Elliott 定义的。      
*/
define('FANN_ELLIOT', 10);
/**
*       快速(类对称sigmoid)激励函数，由 David Elliott定义的。      
*/
define('FANN_ELLIOT_SYMMETRIC', 11);
/**
*       有界线性激励函数。      
*/
define('FANN_LINEAR_PIECE', 12);
/**
*       有界线性激励函数。      
*/
define('FANN_LINEAR_PIECE_SYMMETRIC', 13);
/**
*       周期sin(正弦)激励函数。      
*/
define('FANN_SIN_SYMMETRIC', 14);
/**
*       周期cos(余弦)激励函数。      
*/
define('FANN_COS_SYMMETRIC', 15);
/**
*       周期sin(正弦)激励函数。      
*/
define('FANN_SIN', 16);
/**
*       周期cos(余弦)激励函数。      
*/
define('FANN_COS', 17);
/**
*       标准线性误差函数。      
*/
define('FANN_ERRORFUNC_LINEAR', 0);
/**
*       Tanh 误差函数；通常更好但是要求更低的学习率。该误差函数当有目标输出时将会和期望值有很大的不同，然而没有目标输出时略有不同。不推荐用于级联或增量训练。      
*/
define('FANN_ERRORFUNC_TANH', 1);
/**
*       停止准则是均方误差(MSE)值。      
*/
define('FANN_STOPFUNC_MSE', 0);
/**
*       停止准则是失败时的比特位数。比特位数意味着输出神经元的个数超过了失败时的比特位数 (参考 fann_get_bit_fail_limit, fann_set_bit_fail_limit). 位数在所有的训练数据中都会被计数，所以这个数组将会比训练数据的数量更高。      
*/
define('FANN_STOPFUNC_BIT', 1);
/**
*       每一层只能连接下一层。      
*/
define('FANN_NETTYPE_LAYER', 0);
/**
*       每一层与所有以下层有连接。      
*/
define('FANN_NETTYPE_SHORTCUT', 1);
/**
*       无误差。      
*/
define('FANN_E_NO_ERROR', 0);
/**
*       无法打开读取配置文件。      
*/
define('FANN_E_CANT_OPEN_CONFIG_R', 1);
/**
*       无法打开写入配置文件。      
*/
define('FANN_E_CANT_OPEN_CONFIG_W', 2);
/**
*       配置文件的错误版本。      
*/
define('FANN_E_WRONG_CONFIG_VERSION', 3);
/**
*       从配置文件读取信息的错误。      
*/
define('FANN_E_CANT_READ_CONFIG', 4);
/**
*       从配置文件读取神经元信息的错误。      
*/
define('FANN_E_CANT_READ_NEURON', 5);
/**
*       从配置文件读取连接的错误。      
*/
define('FANN_E_CANT_READ_CONNECTIONS', 6);
/**
*       连接数和期望的值不相等。      
*/
define('FANN_E_WRONG_NUM_CONNECTIONS', 7);
/**
*       无法打开训练数据文件写入内容。      
*/
define('FANN_E_CANT_OPEN_TD_W', 8);
/**
*       无法打开训练数据文件读取内容。      
*/
define('FANN_E_CANT_OPEN_TD_R', 9);
/**
*       从文件读取训练数据错误。      
*/
define('FANN_E_CANT_READ_TD', 10);
/**
*       无法分配内存。      
*/
define('FANN_E_CANT_ALLOCATE_MEM', 11);
/**
*       无法使用已选的激励函数训练。      
*/
define('FANN_E_CANT_TRAIN_ACTIVATION', 12);
/**
*       无法使用已选的激励函数。      
*/
define('FANN_E_CANT_USE_ACTIVATION', 13);
/**
*       两个 fann_train_data 结构体之间存在不可调和的差异。      
*/
define('FANN_E_TRAIN_DATA_MISMATCH', 14);
/**
*       不能使用已选的训练算法。      
*/
define('FANN_E_CANT_USE_TRAIN_ALG', 15);
/**
*       尝试获取不在训练集内的子集。      
*/
define('FANN_E_TRAIN_DATA_SUBSET', 16);
/**
*       索引超出了界限。      
*/
define('FANN_E_INDEX_OUT_OF_BOUND', 17);
/**
*       标定参数不存在。      
*/
define('FANN_E_SCALE_NOT_PRESENT', 18);
/**
*       在人工神经网络和 data 中的输入神经元个数不匹配      
*/
define('FANN_E_INPUT_NO_MATCH', 19);
/**
*       在人工神经网络和数据中的输出神经元个数不匹配。      
*/
define('FANN_E_OUTPUT_NO_MATCH', 20);

define('FANN_VERSION', '2.2');
// End of Fann v.1.0
