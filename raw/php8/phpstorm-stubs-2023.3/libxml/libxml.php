<?php

// Start of libxml v.
use JetBrains\PhpStorm\Deprecated;
use JetBrains\PhpStorm\Internal\PhpStormStubsElementAvailable;
use JetBrains\PhpStorm\Pure;

/**
*<div id="class.libxmlerror" class="reference"> <h1 class="title">The LibXMLError class</h1>   <div class="partintro"><p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p>   <div class="section" id="libxmlerror.intro">   <h2 class="title">简介</h2>   <p class="para">    Contains various information about errors thrown by libxml. The error codes    are described within the official     <a href="http://www.xmlsoft.org/html/libxml-xmlerror.html" class="link external">&raquo;&nbsp;xmlError API documentation</a>.   </p>  </div>   <div class="section" id="libxmlerror.synopsis">   <h2 class="title">类摘要</h2>    <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>     <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">LibXMLError</strong>     </span>     {</div>     <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>     <span class="type" style="color:#EAB766">int</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.libxmlerror.php#libxmlerror.props.level">$<var class="varname">level</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">int</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.libxmlerror.php#libxmlerror.props.code">$<var class="varname">code</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">int</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.libxmlerror.php#libxmlerror.props.column">$<var class="varname">column</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">string</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.libxmlerror.php#libxmlerror.props.message">$<var class="varname">message</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">string</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.libxmlerror.php#libxmlerror.props.file">$<var class="varname">file</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>     <span class="type" style="color:#EAB766">int</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.libxmlerror.php#libxmlerror.props.line">$<var class="varname">line</var></a></var>;</div>   }</div>  </div>   <div class="section" id="libxmlerror.props">   <h2 class="title">属性</h2>   <dl>         <dt id="libxmlerror.props.level"><var class="varname">level</var></dt>     <dd>      <p class="para">       the severity of the error (one of the following constants:       <strong><span>LIBXML_ERR_WARNING</span></strong>,       <strong><span>LIBXML_ERR_ERROR</span></strong> or       <strong><span>LIBXML_ERR_FATAL</span></strong>)      </p>     </dd>             <dt id="libxmlerror.props.code"><var class="varname">code</var></dt>     <dd>      <p class="para">       The error&#039;s code.      </p>     </dd>             <dt id="libxmlerror.props.column"><var class="varname">column</var></dt>     <dd>      <p class="para">       The column where the error occurred.      </p>      <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:        <p class="para">        This property isn&#039;t entirely implemented in libxml and therefore        <span>0</span> is often returned.       </p>      </p></blockquote>     </dd>             <dt id="libxmlerror.props.message"><var class="varname">message</var></dt>     <dd>      <p class="para">       The error message, if any.      </p>     </dd>             <dt id="libxmlerror.props.file"><var class="varname">file</var></dt>     <dd>      <p class="para">The filename, or empty if the XML was loaded from a string.</p>     </dd>             <dt id="libxmlerror.props.line"><var class="varname">line</var></dt>     <dd>      <p class="para">       The line where the error occurred.      </p>     </dd>       </dl>  </div>  </div> </div>
*/
class LibXMLError
{
    /**
     * <p style="margin-top:0;">
     * the severity of the error (one of the following constants:
     * <b><code>LIBXML_ERR_WARNING</code></b>,
     * <b><code>LIBXML_ERR_ERROR</code></b> or
     * <b><code>LIBXML_ERR_FATAL</code></b>)
     * </p>
     * @var int
     */
    public int $level;

    /**
     * <p style="margin-top:0;">
     * The error's code.
     * </p>
     * @var int
     */
    public int $code;

    /**
     * <p style="margin-top:0;">
     * The column where the error occurred.
     * </p>
     * <p><b>Note</b>:
     * </p><p>
     * This property isn't entirely implemented in libxml and therefore
     * 0 is often returned.
     * </p>
     * @var int
     */
    public int $column;

    /**
     * <p style="margin-top:0;">
     * The error message, if any.
     * </p>
     * @var string
     */
    public string $message;

    /**
     * <p style="margin-top:0;">The filename, or empty if the XML was loaded from a string.</p>
     * @var string
     */
    public string $file;

    /**
     * <p style="margin-top:0;">
     * The line where the error occurred.
     * </p>
     * @var int
     */
    public int $line;
}

/**
*<div id="function.libxml-set-streams-context" class="refentry"> <div class="refnamediv">  <h1 class="refname">libxml_set_streams_context</h1>  <p class="verinfo">(PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">libxml_set_streams_context</span> &mdash; <span class="dc-title">   Set the streams context for the next libxml document load or write  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.libxml-set-streams-context-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>libxml_set_streams_context</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$context</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   Sets the streams context for the next libxml document load or write.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.libxml-set-streams-context-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">context</span></dt>      <dd>       <p class="para">        The stream context resource (created with        <span class="function">{@link stream_context_create()}</span>)       </p>      </dd>        </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.libxml-set-streams-context-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.libxml-set-streams-context-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 A <span class="function"><strong style="color:#CC7832">libxml_set_streams_context()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$opts </span><span style="color: #007700">= array(<br />    </span><span style="color: #DD0000">'http' </span><span style="color: #007700">=&gt; array(<br />        </span><span style="color: #DD0000">'user_agent' </span><span style="color: #007700">=&gt; </span><span style="color: #DD0000">'PHP libxml agent'</span><span style="color: #007700">,<br />    )<br />);<br /><br /></span><span style="color: #9876AA">$context </span><span style="color: #007700">= </span><span style="color: #9876AA">stream_context_create</span><span style="color: #007700">(</span><span style="color: #9876AA">$opts</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">libxml_set_streams_context</span><span style="color: #007700">(</span><span style="color: #9876AA">$context</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// request a file through HTTP<br /></span><span style="color: #9876AA">$doc </span><span style="color: #007700">= </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">::</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'http://www.example.com/file.xml'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.libxml-set-streams-context-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link stream_context_create()} - 创建资源流上下文</span></li>   </ul>  </span> </div></div>
 * @return void No value is returned.*/
function libxml_set_streams_context($context): void {}

/**
*<div id="function.libxml-use-internal-errors" class="refentry"> <div class="refnamediv">  <h1 class="refname">libxml_use_internal_errors</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">libxml_use_internal_errors</span> &mdash; <span class="dc-title">   Disable libxml errors and allow user to fetch error information as needed  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.libxml-use-internal-errors-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>libxml_use_internal_errors</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">bool</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$use_errors</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">libxml_use_internal_errors()</strong></span> allows you to disable   standard libxml errors and enable user error handling.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.libxml-use-internal-errors-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">use_errors</span></dt>      <dd>       <p class="para">        Enable (<strong><span>true</span></strong>) user error handling or disable (<strong><span>false</span></strong>) user error handling. Disabling will also clear any existing libxml errors.       </p>      </dd>        </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.libxml-use-internal-errors-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   This function returns the previous value of   <span class="parameter" style="color:#3A95FF">use_errors</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.libxml-use-internal-errors-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">use_errors</span> is nullable now. Previously, its default       was <strong><span>false</span></strong>.      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.libxml-use-internal-errors-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 A <span class="function"><strong style="color:#CC7832">libxml_use_internal_errors()</strong></span> example</strong></p>    <div class="example-contents"><p>     This example demonstrates the basic usage of libxml errors and the value     returned by this function.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #FF8000">// enable user error handling<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">libxml_use_internal_errors</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">// load the document<br /></span><span style="color: #9876AA">$doc </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br /><br />if (!</span><span style="color: #9876AA">$doc</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">load</span><span style="color: #007700">(</span><span style="color: #DD0000">'file.xml'</span><span style="color: #007700">)) {<br />    foreach (</span><span style="color: #9876AA">libxml_get_errors</span><span style="color: #007700">() as </span><span style="color: #9876AA">$error</span><span style="color: #007700">) {<br />        </span><span style="color: #FF8000">// handle errors here<br />    </span><span style="color: #007700">}<br /><br />    </span><span style="color: #9876AA">libxml_clear_errors</span><span style="color: #007700">();<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>bool(false)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.libxml-use-internal-errors-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link libxml_clear_errors()} - Clear libxml error buffer</span></li>    <li class="member"><span class="function">{@link libxml_get_errors()} - Retrieve array of errors</span></li>   </ul>  </span> </div></div>
 * @return bool This function returns the previous value of*/
function libxml_use_internal_errors(
    #[PhpStormStubsElementAvailable(from: '5.3', to: '7.4')] bool $use_errors = false,
    #[PhpStormStubsElementAvailable(from: '8.0')] ?bool $use_errors = null
): bool {}

/**
*<div id="function.libxml-get-last-error" class="refentry"> <div class="refnamediv">  <h1 class="refname">libxml_get_last_error</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">libxml_get_last_error</span> &mdash; <span class="dc-title">   Retrieve last error from libxml  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.libxml-get-last-error-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>libxml_get_last_error</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.libxmlerror.php" class="type LibXMLError" style="color:#EAB766">LibXMLError</a></span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   Retrieve last error from libxml.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.libxml-get-last-error-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.libxml-get-last-error-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns a <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.libxmlerror.php" class="type LibXMLError" style="color:#EAB766">LibXMLError</a></span> object if there is any error in the   buffer, <strong><span>false</span></strong> otherwise.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.libxml-get-last-error-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link libxml_get_errors()} - Retrieve array of errors</span></li>    <li class="member"><span class="function">{@link libxml_clear_errors()} - Clear libxml error buffer</span></li>   </ul>  </span> </div></div>
 * @return LibXMLError|false a LibXMLError object if there is any error in the*/
function libxml_get_last_error(): LibXMLError|false {}

/**
*<div id="function.libxml-clear-errors" class="refentry"> <div class="refnamediv">  <h1 class="refname">libxml_clear_errors</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">libxml_clear_errors</span> &mdash; <span class="dc-title">   Clear libxml error buffer  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.libxml-clear-errors-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>libxml_clear_errors</strong></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">libxml_clear_errors()</strong></span> clears the libxml error buffer.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.libxml-clear-errors-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.libxml-clear-errors-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.libxml-clear-errors-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link libxml_get_errors()} - Retrieve array of errors</span></li>    <li class="member"><span class="function">{@link libxml_get_last_error()} - Retrieve last error from libxml</span></li>   </ul>  </span> </div></div>
 * @return void No value is returned.*/
function libxml_clear_errors(): void {}

/**
*<div id="function.libxml-get-errors" class="refentry"> <div class="refnamediv">  <h1 class="refname">libxml_get_errors</h1>  <p class="verinfo">(PHP 5 &gt;= 5.1.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">libxml_get_errors</span> &mdash; <span class="dc-title">   Retrieve array of errors  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.libxml-get-errors-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>libxml_get_errors</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   Retrieve array of errors.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.libxml-get-errors-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.libxml-get-errors-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns an array with <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.libxmlerror.php" class="type LibXMLError" style="color:#EAB766">LibXMLError</a></span> objects if there are any   errors in the buffer, or an empty array otherwise.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.libxml-get-errors-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 A <span class="function"><strong style="color:#CC7832">libxml_get_errors()</strong></span> example</strong></p>    <div class="example-contents"><p>     This example demonstrates how to build a simple libxml error handler.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />libxml_use_internal_errors</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$xmlstr </span><span style="color: #007700">= &lt;&lt;&lt; XML<br /></span><span style="color: #DD0000">&lt;?xml version='1.0' standalone='yes'?&gt;<br />&lt;movies&gt;<br /> &lt;movie&gt;<br />  &lt;titles&gt;PHP: Behind the Parser&lt;/title&gt;<br /> &lt;/movie&gt;<br />&lt;/movies&gt;<br /></span><span style="color: #007700">XML;<br /><br /></span><span style="color: #9876AA">$doc </span><span style="color: #007700">= </span><span style="color: #9876AA">simplexml_load_string</span><span style="color: #007700">(</span><span style="color: #9876AA">$xmlstr</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$xml </span><span style="color: #007700">= </span><span style="color: #9876AA">explode</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$xmlstr</span><span style="color: #007700">);<br /><br />if (</span><span style="color: #9876AA">$doc </span><span style="color: #007700">=== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$errors </span><span style="color: #007700">= </span><span style="color: #9876AA">libxml_get_errors</span><span style="color: #007700">();<br /><br />    foreach (</span><span style="color: #9876AA">$errors </span><span style="color: #007700">as </span><span style="color: #9876AA">$error</span><span style="color: #007700">) {<br />        echo </span><span style="color: #9876AA">display_xml_error</span><span style="color: #007700">(</span><span style="color: #9876AA">$error</span><span style="color: #007700">, </span><span style="color: #9876AA">$xml</span><span style="color: #007700">);<br />    }<br /><br />    </span><span style="color: #9876AA">libxml_clear_errors</span><span style="color: #007700">();<br />}<br /><br /><br />function </span><span style="color: #9876AA">display_xml_error</span><span style="color: #007700">(</span><span style="color: #9876AA">$error</span><span style="color: #007700">, </span><span style="color: #9876AA">$xml</span><span style="color: #007700">)<br />{<br />    </span><span style="color: #9876AA">$return  </span><span style="color: #007700">= </span><span style="color: #9876AA">$xml</span><span style="color: #007700">[</span><span style="color: #9876AA">$error</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line </span><span style="color: #007700">- </span><span style="color: #9876AA">1</span><span style="color: #007700">] . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$return </span><span style="color: #007700">.= </span><span style="color: #9876AA">str_repeat</span><span style="color: #007700">(</span><span style="color: #DD0000">'-'</span><span style="color: #007700">, </span><span style="color: #9876AA">$error</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">column</span><span style="color: #007700">) . </span><span style="color: #DD0000">"^\n"</span><span style="color: #007700">;<br /><br />    switch (</span><span style="color: #9876AA">$error</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">level</span><span style="color: #007700">) {<br />        case </span><span style="color: #9876AA">LIBXML_ERR_WARNING</span><span style="color: #007700">:<br />            </span><span style="color: #9876AA">$return </span><span style="color: #007700">.= </span><span style="color: #DD0000">"Warning </span><span style="color: #9876AA">$error</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">code</span><span style="color: #DD0000">: "</span><span style="color: #007700">;<br />            break;<br />         case </span><span style="color: #9876AA">LIBXML_ERR_ERROR</span><span style="color: #007700">:<br />            </span><span style="color: #9876AA">$return </span><span style="color: #007700">.= </span><span style="color: #DD0000">"Error </span><span style="color: #9876AA">$error</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">code</span><span style="color: #DD0000">: "</span><span style="color: #007700">;<br />            break;<br />        case </span><span style="color: #9876AA">LIBXML_ERR_FATAL</span><span style="color: #007700">:<br />            </span><span style="color: #9876AA">$return </span><span style="color: #007700">.= </span><span style="color: #DD0000">"Fatal Error </span><span style="color: #9876AA">$error</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">code</span><span style="color: #DD0000">: "</span><span style="color: #007700">;<br />            break;<br />    }<br /><br />    </span><span style="color: #9876AA">$return </span><span style="color: #007700">.= </span><span style="color: #9876AA">trim</span><span style="color: #007700">(</span><span style="color: #9876AA">$error</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">message</span><span style="color: #007700">) .<br />               </span><span style="color: #DD0000">"\n  Line: </span><span style="color: #9876AA">$error</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">line</span><span style="color: #DD0000">" </span><span style="color: #007700">.<br />               </span><span style="color: #DD0000">"\n  Column: </span><span style="color: #9876AA">$error</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">column</span><span style="color: #DD0000">"</span><span style="color: #007700">;<br /><br />    if (</span><span style="color: #9876AA">$error</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">file</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$return </span><span style="color: #007700">.= </span><span style="color: #DD0000">"\n  File: </span><span style="color: #9876AA">$error</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">file</span><span style="color: #DD0000">"</span><span style="color: #007700">;<br />    }<br /><br />    return </span><span style="color: #DD0000">"</span><span style="color: #9876AA">$return</span><span style="color: #DD0000">\n\n--------------------------------------------\n\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>  &lt;titles&gt;PHP: Behind the Parser&lt;/title&gt;<br>----------------------------------------------^<br>Fatal Error 76: Opening and ending tag mismatch: titles line 4 and title<br>  Line: 4<br>  Column: 46<br><br>--------------------------------------------<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.libxml-get-errors-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link libxml_get_last_error()} - Retrieve last error from libxml</span></li>    <li class="member"><span class="function">{@link libxml_clear_errors()} - Clear libxml error buffer</span></li>   </ul>  </span> </div></div>
 * @return LibXMLError[] an array with LibXMLError objects if there are any*/
function libxml_get_errors(): array {}

/**
*<div id="function.libxml-disable-entity-loader" class="refentry"> <div class="refnamediv">  <h1 class="refname">libxml_disable_entity_loader</h1>  <p class="verinfo">(PHP 5 &gt;= 5.2.11, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">libxml_disable_entity_loader</span> &mdash; <span class="dc-title">Disable the ability to load external entities</span></p> </div> <div id="function.libxml-disable-entity-loader-refsynopsisdiv">   <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数已自 PHP 8.0.0 起被<em>废弃</em>。强烈建议不要依赖本函数。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.libxml-disable-entity-loader-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>libxml_disable_entity_loader</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$disable</span><span class="initializer"> = <strong><span>true</span></strong></span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Disable/enable the ability to load external entities.   Note that disabling the loading of external entities may cause general issues   with loading XML documents. However, as of libxml 2.9.0 entity substitution   is disabled by default, so there is no need to disable the loading of external   entities,   unless there is the need to resolve internal entity references with <strong><span>LIBXML_NOENT</span></strong>.   Generally, it is preferable to use <span class="function">{@link libxml_set_external_entity_loader()}</span>   to suppress loading of external entities.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.libxml-disable-entity-loader-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">disable</span></dt>     <dd>      <p class="para">       Disable (<strong><span>true</span></strong>) or enable (<strong><span>false</span></strong>) libxml extensions (such as       <a href="https://www.php.net/manual/zh/book.dom.php" class="xref">DOM</a>, <a href="https://www.php.net/manual/zh/book.xmlwriter.php" class="xref">XMLWriter</a>       and <a href="https://www.php.net/manual/zh/book.xmlreader.php" class="xref">XMLReader</a>) to load external entities.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.libxml-disable-entity-loader-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the previous value.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.libxml-disable-entity-loader-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link libxml_use_internal_errors()} - Disable libxml errors and allow user to fetch error information as needed</span></li>    <li class="member"><span class="function">{@link libxml_set_external_entity_loader()} - Changes the default external entity loader</span></li>    <li class="member"><a href="https://www.php.net/manual/zh/libxml.constants.php" class="link">The <strong><span>LIBXML_NOENT</span></strong> constant</a></li>   </ul>  </span> </div></div>
 * @return bool the previous value.*/
function libxml_disable_entity_loader(bool $disable = true): bool {}

/**
*<div id="function.libxml-set-external-entity-loader" class="refentry"> <div class="refnamediv">  <h1 class="refname">libxml_set_external_entity_loader</h1>  <p class="verinfo">(PHP 5 &gt;= 5.4.0, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">libxml_set_external_entity_loader</span> &mdash; <span class="dc-title">Changes the default external entity loader</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.libxml-set-external-entity-loader-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>libxml_set_external_entity_loader</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$resolver_function</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Changes the default external entity loader.   This can be used to suppress the expansion of arbitrary external entities to avoid XXE attacks,   even when <strong><span>LIBXML_NOENT</span></strong> has been set for the respective operation,   and is usually preferable over calling <span class="function">{@link libxml_disable_entity_loader()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.libxml-set-external-entity-loader-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">resolver_function</span></dt>    <dd>     <span>      A <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> with the following signature:      <div class="methodsynopsis dc-description">       <span class="methodname" style="color:#CC7832"><span class="replaceable">resolver</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$public_id</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$system_id</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$context</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">resource</span>|<span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">null</span></span></div>      <dl>               <dt><span class="parameter" style="color:#3A95FF">public_id</span></dt>        <dd>         <span class="simpara">          The public ID.         </span>        </dd>                      <dt><span class="parameter" style="color:#3A95FF">system_id</span></dt>        <dd>         <span class="simpara">          The system ID.         </span>        </dd>                      <dt><span class="parameter" style="color:#3A95FF">context</span></dt>        <dd>         <span class="simpara">          An array with the four elements <span>&quot;directory&quot;</span>, <span>&quot;intSubName&quot;</span>,          <span>&quot;extSubURI&quot;</span> and <span>&quot;extSubSystem&quot;</span>.         </span>        </dd>             </dl>      This callable should return a <a href="https://www.php.net/manual/zh/language.types.resource.php" class="link">resource</a>, a <span class="type" style="color:#EAB766">string</span> from which a resource can be      opened. If <strong><span>null</span></strong> is returned, the entity reference resolution will fail.     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.libxml-set-external-entity-loader-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.libxml-set-external-entity-loader-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">libxml_set_external_entity_loader()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$xml </span><span style="color: #007700">= &lt;&lt;&lt;XML<br /></span><span style="color: #DD0000">&lt;!DOCTYPE foo PUBLIC "-//FOO/BAR" "http://example.com/foobar"&gt;<br />&lt;foo&gt;bar&lt;/foo&gt;<br /></span><span style="color: #007700">XML;<br /><br /></span><span style="color: #9876AA">$dtd </span><span style="color: #007700">= &lt;&lt;&lt;DTD<br /></span><span style="color: #DD0000">&lt;!ELEMENT foo (#PCDATA)&gt;<br /></span><span style="color: #007700">DTD;<br /><br /></span><span style="color: #9876AA">libxml_set_external_entity_loader</span><span style="color: #007700">(<br />    function (</span><span style="color: #9876AA">$public</span><span style="color: #007700">, </span><span style="color: #9876AA">$system</span><span style="color: #007700">, </span><span style="color: #9876AA">$context</span><span style="color: #007700">) use(</span><span style="color: #9876AA">$dtd</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$public</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$system</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$context</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">$f </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"php://temp"</span><span style="color: #007700">, </span><span style="color: #DD0000">"r+"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">fwrite</span><span style="color: #007700">(</span><span style="color: #9876AA">$f</span><span style="color: #007700">, </span><span style="color: #9876AA">$dtd</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">rewind</span><span style="color: #007700">(</span><span style="color: #9876AA">$f</span><span style="color: #007700">);<br />        return </span><span style="color: #9876AA">$f</span><span style="color: #007700">;<br />    }<br />);<br /><br /></span><span style="color: #9876AA">$dd </span><span style="color: #007700">= new </span><span style="color: #9876AA">DOMDocument</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$r  </span><span style="color: #007700">= </span><span style="color: #9876AA">$dd</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">loadXML</span><span style="color: #007700">(</span><span style="color: #9876AA">$xml</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$dd</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">validate</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>string(10) &quot;-//FOO/BAR&quot;<br>string(25) &quot;http://example.com/foobar&quot;<br>array(4) {<br>    [&quot;directory&quot;]    =&gt; NULL<br>    [&quot;intSubName&quot;]   =&gt; NULL<br>    [&quot;extSubURI&quot;]    =&gt; NULL<br>    [&quot;extSubSystem&quot;] =&gt; NULL<br>}<br>bool(true)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.libxml-set-external-entity-loader-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link libxml_disable_entity_loader()} - Disable the ability to load external entities</span></li>    <li class="member"><span class="function">{@link libxml_get_external_entity_loader()} - Get the current external entity loader</span></li>   </ul>  </span> </div></div>
 * @return bool*/
function libxml_set_external_entity_loader(?callable $resolver_function): bool {}

/**
*<div id="function.libxml-get-external-entity-loader" class="refentry"> <div class="refnamediv">  <h1 class="refname">libxml_get_external_entity_loader</h1>  <p class="verinfo">(PHP 8 &gt;= 8.2.0)</p><p class="refpurpose"><span class="refname">libxml_get_external_entity_loader</span> &mdash; <span class="dc-title">Get the current external entity loader</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.libxml-get-external-entity-loader-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>libxml_get_external_entity_loader</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span></span></div>  <p class="para rdfs-comment">   Get external entity loader previously installed by   <span class="function">{@link libxml_set_external_entity_loader()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.libxml-get-external-entity-loader-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.libxml-get-external-entity-loader-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   The external entity loader previously installed by   <span class="function">{@link libxml_set_external_entity_loader()}</span>. If that function was   never called, or if it was called with <strong><span>null</span></strong>, <strong><span>null</span></strong> will be returned.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.libxml-get-external-entity-loader-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="function">{@link libxml_set_external_entity_loader()} - Changes the default external entity loader</span></li>  </ul> </div></div>
 * @return callable|null*/
function libxml_get_external_entity_loader(): ?callable {}

/**
*      libxml version like 20605 or 20617     
*/
define('LIBXML_VERSION', 20901);

/**
*      libxml version like 2.6.5 or 2.6.17     
*/
define('LIBXML_DOTTED_VERSION', "2.9.1");
define('LIBXML_LOADED_VERSION', 20901);

/**
*      Substitute entities     
*/
define('LIBXML_NOENT', 2);

/**
*      Load the external subset     
*/
define('LIBXML_DTDLOAD', 4);

/**
*      Default DTD attributes     
*/
define('LIBXML_DTDATTR', 8);

/**
*      Validate with the DTD     
*/
define('LIBXML_DTDVALID', 16);

/**
*      Suppress error reports     
*/
define('LIBXML_NOERROR', 32);

/**
*      Suppress warning reports     
*/
define('LIBXML_NOWARNING', 64);

/**
*      Remove blank nodes     
*/
define('LIBXML_NOBLANKS', 256);

/**
*      Implement XInclude substitution     
*/
define('LIBXML_XINCLUDE', 1024);

/**
*      Remove redundant namespace declarations     
*/
define('LIBXML_NSCLEAN', 8192);

/**
*      Merge CDATA as text nodes     
*/
define('LIBXML_NOCDATA', 16384);

/**
*      Disable network access when loading documents     
*/
define('LIBXML_NONET', 2048);

/**
*      Sets XML_PARSE_PEDANTIC flag, which enables pedantic error reporting.     
*/
define('LIBXML_PEDANTIC', 128);

/**
*      Activate small nodes allocation optimization. This may speed up your      application without needing to change the code.     
*/
define('LIBXML_COMPACT', 65536);

/**
*      Allows line numbers greater than 65535 to be reported correctly.     
*/
define('LIBXML_BIGLINES', 65535);

/**
*      Drop the XML declaration when saving a document     
*/
define('LIBXML_NOXMLDECL', 2);

/**
*      Sets XML_PARSE_HUGE flag, which relaxes any hardcoded limit from the parser. This affects       limits like maximum depth of a document or the entity recursion, as well as limits of the       size of text nodes.     
*/
define('LIBXML_PARSEHUGE', 524288);

/**
*      Expand empty tags (e.g. <code class="literal">&lt;br/&gt;</code> to      <code class="literal">&lt;br&gt;&lt;/br&gt;</code>)     
*/
define('LIBXML_NOEMPTYTAG', 4);

/**
*      Create default/fixed value nodes during XSD schema validation     
*/
define('LIBXML_SCHEMA_CREATE', 1);

/**
*      Sets HTML_PARSE_NOIMPLIED flag, which turns off the      automatic adding of implied html/body... elements.     
*/
define('LIBXML_HTML_NOIMPLIED', 8192);

/**
*      Sets HTML_PARSE_NODEFDTD flag, which prevents a default doctype      being added when one is not found.     
*/
define('LIBXML_HTML_NODEFDTD', 4);

/**
*      No errors     
*/
define('LIBXML_ERR_NONE', 0);

/**
*      A simple warning     
*/
define('LIBXML_ERR_WARNING', 1);

/**
*      A recoverable error     
*/
define('LIBXML_ERR_ERROR', 2);

/**
*      A fatal error     
*/
define('LIBXML_ERR_FATAL', 3);

// End of libxml v.
