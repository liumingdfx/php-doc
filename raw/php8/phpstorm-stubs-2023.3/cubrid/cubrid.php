<?php

// Start of cubrid v.1.1

/**
*<div id="function.cubrid-connect" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_connect</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.1)</p><p class="refpurpose"><span class="refname">cubrid_connect</span> &mdash; <span class="dc-title">Open a connection to a CUBRID Server</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-connect-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_connect</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$host</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$port</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$dbname</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$userid</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$passwd</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$new_link</span><span class="initializer"> = <strong><span>false</span></strong></span></span><br>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_connect()</strong></span> function is used to establish the    environment for connecting to your server by using your server address,    port number, database name, user name, and password. If the user name and    password is not given, then the &quot;PUBLIC&quot; connection will be made by    default.   </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-connect-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">host</span></dt>    <dd><p class="para">Host name or IP address of CUBRID CAS server.</p></dd>          <dt><span class="parameter" style="color:#3A95FF">port</span></dt>    <dd><p class="para">Port number of CUBRID CAS server (BROKER_PORT configured in $CUBRID/conf/cubrid_broker.conf).</p></dd>          <dt><span class="parameter" style="color:#3A95FF">dbname</span></dt>    <dd><p class="para">Name of database.</p></dd>          <dt><span class="parameter" style="color:#3A95FF">userid</span></dt>    <dd><p class="para">User name for the database. If not given, the default      value is &quot;public&quot;.</p></dd>          <dt><span class="parameter" style="color:#3A95FF">passwd</span></dt>    <dd><p class="para">User password. If not given, the default value is &quot;&quot;.</p></dd>          <dt><span class="parameter" style="color:#3A95FF">new_link</span></dt>    <dd><p class="para">If a second call is made to      <span class="function"><strong style="color:#CC7832">cubrid_connect()</strong></span> with the same arguments, no new      connection will be established, but instead, the connection identifier      of the already opened connection will be returned. The      <span class="parameter" style="color:#3A95FF">new_link</span> parameter modifies this behavior and      makes <span class="function"><strong style="color:#CC7832">cubrid_connect()</strong></span> always open a new connection,      even if <span class="function"><strong style="color:#CC7832">cubrid_connect()</strong></span> was called before with the      same parameters.</p></dd>     </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-connect-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Connection identifier, when process is successful, 或者在失败时返回 <strong><span>false</span></strong>.   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-connect-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3395">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_connect()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"CUBRID PHP Version:"</span><span style="color: #007700">, </span><span style="color: #9876AA">cubrid_version</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br />if (!</span><span style="color: #9876AA">$conn</span><span style="color: #007700">) {<br />    die(</span><span style="color: #DD0000">'Connect Error ('</span><span style="color: #007700">. </span><span style="color: #9876AA">cubrid_error_code</span><span style="color: #007700">() .</span><span style="color: #DD0000">')' </span><span style="color: #007700">. </span><span style="color: #9876AA">cubrid_error_msg</span><span style="color: #007700">());<br />}<br /><br /></span><span style="color: #9876AA">$db_params </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_db_parameter</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br />while (list(</span><span style="color: #9876AA">$param_name</span><span style="color: #007700">, </span><span style="color: #9876AA">$param_value</span><span style="color: #007700">) = </span><span style="color: #9876AA">each</span><span style="color: #007700">(</span><span style="color: #9876AA">$db_params</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$param_name</span><span style="color: #007700">, </span><span style="color: #9876AA">$param_value</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$server_info </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_server_info</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$client_info </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_client_info</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Server Info:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$server_info</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Client Info:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$client_info</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$charset </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_charset</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"CUBRID Charset:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$charset</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>CUBRID PHP Version:            9.1.0.0001<br><br>PARAM_ISOLATION_LEVEL          3<br>LOCK_TIMEOUT                   -1<br>MAX_STRING_LENGTH              1073741823<br>PARAM_AUTO_COMMIT              1<br><br>Server Info:                   9.1.0.0212<br>Client Info:                   9.1.0<br><br>CUBRID Charset:                iso8859-1<br></span></div>   </div>  </div> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-connect-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_pconnect()} - Open a persistent connection to a CUBRID server</span></li>   <li class="member"><span class="function">{@link cubrid_connect_with_url()} - Establish the environment for connecting to CUBRID server</span></li>   <li class="member"><span class="function">{@link cubrid_pconnect_with_url()} - Open a persistent connection to CUBRID server</span></li>   <li class="member"><span class="function">{@link cubrid_disconnect()} - Close a database connection</span></li>   <li class="member"><span class="function">{@link cubrid_close()} - Close CUBRID connection</span></li>   </ul>  </span> </div></div>
 * @return resource|false <p>*/
function cubrid_connect($host, $port, $dbname, $userid = 'PUBLIC', $passwd = '', $new_link = false) {}

/**
*<div id="function.cubrid-connect-with-url" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_connect_with_url</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.1)</p><p class="refpurpose"><span class="refname">cubrid_connect_with_url</span> &mdash; <span class="dc-title">Establish the environment for connecting to CUBRID server</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-connect-with-url-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_connect_with_url</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$conn_url</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$userid</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$passwd</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$new_link</span><span class="initializer"> = <strong><span>false</span></strong></span></span><br>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_connect_with_url()</strong></span> function is used to   establish the environment for connecting to your server by using connection   information passed with an url string argument. If the HA feature is   enabled in CUBRID, you must specify the connection information of the   standby server, which is used for failover when failure occurs, in the url   string argument of this function. If the user name and password is not   given, then the &quot;PUBLIC&quot; connection will be made by default.  </p>  <p class="para">   &lt;url&gt; ::= CUBRID:&lt;host&gt;:&lt;db_name&gt;:&lt;db_user&gt;:&lt;db_password&gt;:[?&lt;properties&gt;]  </p>  <p class="para">   &lt;properties&gt; ::= &lt;property&gt; [&amp;&lt;property&gt;]  </p>  <p class="para">   &lt;properties&gt; ::= alhosts=&lt;alternative_hosts&gt;[ &amp;rctime=&lt;time&gt;]  </p>  <p class="para">   &lt;properties&gt; ::= login_timeout=&lt;milli_sec&gt;  </p>  <p class="para">   &lt;properties&gt; ::= query_timeout=&lt;milli_sec&gt;  </p>  <p class="para">   &lt;properties&gt; ::= disconnect_on_query_timeout=true|false  </p>  <p class="para">   &lt;alternative_hosts&gt; ::= &lt;standby_broker1_host&gt;:&lt;port&gt; [,&lt;standby_broker2_host&gt;:&lt;port&gt;]  </p>  <p class="para">   &lt;host&gt; := HOSTNAME | IP_ADDR  </p>  <p class="para">   &lt;time&gt; := SECOND  </p>  <p class="para">   &lt;milli_sec&gt; := MILLI SECOND  </p>  <p class="para">   <ul class="simplelist">    <li class="member">host : A host name or IP address of the master database</li>    <li class="member">db_name : A name of the database</li>    <li class="member">db_user : A name of the database user</li>    <li class="member">db_password : A database user password</li>    <li class="member">     alhosts : Specifies the broker information of the standby server, which is     used for failover when it is impossible to connect to the active server.      You can specify multiple brokers for failover, and the connection to the brokers     is attempted in the order listed in alhosts</li>    <li class="member">     rctime : An interval between the attempts to connect to the active broker in     which failure occurred. After a failure occurs, the system connects to the      broker specified by althosts (failover), terminates the transaction, and then     attempts to connect to the active broker of the master database at every rctime.      The default value is 600 seconds.</li>    <li class="member">     login_timeout : Timeout value (unit: msec.) for database login. The default     value is 0, which means infinite postponement.    </li>    <li class="member">     query_timeout : Timeout value (unit: msec.) for query request. Upon timeout,     a message to cancel requesting a query transferred to server is sent. The return      value can depend on the disconnect_on_query_timeout configuration; even though the     message to cancel a request is sent to server, that request may succeed.    </li>    <li class="member">     disconnect_on_query_timeout : Configures a value whether to immediately return     an error of function being executed upon timeout. The default value is false.    </li>   </ul>  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    <span>?</span> and <span>:</span> that are used as identifiers    in PHP connection URL can&#039;t be included in the password. The following is    an example of a password that is invalid to use as connection URL because it contains    &quot;<span>?:</span>&quot;.   </p>   <p class="para">    $url = &quot;CUBRID:localhost:33000:tdb:dba:12?:?login_timeout=100&quot;;   </p>   <p class="para">    Passwords that contain <span>?</span> or <span>:</span>    may be passed as a separate parameter.   </p>   <p class="para">    $url = &quot;CUBRID:localhost:33000:tbd:::?login_timeout=100&quot;;   </p>   <p class="para">    $conn = cubrid_connect_with_url($url, &quot;dba&quot;, &quot;12?&quot;);   </p>   <p class="para">    If user or password is empty,you can&#039;t delete &quot;<span>:</span>&quot;,the following is    an example.   </p>   <p class="para">    $url = &quot;CUBRID:localhost:33000:demodb:::&quot;;   </p>  </p></blockquote> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-connect-with-url-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">conn_url</span></dt>     <dd><p class="para">A character string that contains server connection information.</p></dd>             <dt><span class="parameter" style="color:#3A95FF">userid</span></dt>     <dd><p class="para">User name for the database.</p></dd>             <dt><span class="parameter" style="color:#3A95FF">passwd</span></dt>     <dd><p class="para">User password.</p></dd>             <dt><span class="parameter" style="color:#3A95FF">new_link</span></dt>     <dd><p class="para">If a second call is made to       <span class="function"><strong style="color:#CC7832">cubrid_connect_with_url()</strong></span> with the same arguments,       no new connection will be established, but instead, the connection       identifier of the already opened connection will be returned. The       <span class="parameter" style="color:#3A95FF">new_link</span> parameter modifies this behavior and       makes <span class="function"><strong style="color:#CC7832">cubrid_connect_with_url()</strong></span> always open a new       connection, even if <span class="function"><strong style="color:#CC7832">cubrid_connect_with_url()</strong></span> was       called before with the same parameters.</p></dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-connect-with-url-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Connection identifier, when process is successful, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-connect-with-url-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3389">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_connect_with_url()</strong></span> url without properties example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn_url </span><span style="color: #007700">= </span><span style="color: #DD0000">"CUBRID:localhost:33000:demodb:dba::"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$con </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect_with_url</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn_url</span><span style="color: #007700">);<br /><br />if (</span><span style="color: #9876AA">$con</span><span style="color: #007700">) {<br />   echo </span><span style="color: #DD0000">"connected successfully"</span><span style="color: #007700">;<br />   </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">, </span><span style="color: #DD0000">"create table person(id int,name char(16))"</span><span style="color: #007700">);<br />   </span><span style="color: #9876AA">$req </span><span style="color: #007700">=</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">, </span><span style="color: #DD0000">"insert into person values(1,'James')"</span><span style="color: #007700">);<br /><br />   if (</span><span style="color: #9876AA">$req</span><span style="color: #007700">) {<br />      </span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br />      </span><span style="color: #9876AA">cubrid_commit</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />   } else {<br />      </span><span style="color: #9876AA">cubrid_rollback</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />   }<br />   </span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div>    <div class="example" id="function.posix-fpathconf.example.basic">   <p><strong>示例 #2 <span class="function"><strong style="color:#CC7832">cubrid_connect_with_url()</strong></span> url with properties example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn_url </span><span style="color: #007700">= </span><span style="color: #DD0000">"CUBRID:127.0.0.1:33000:demodb:dba::?login_timeout=100"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$con </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect_with_url </span><span style="color: #007700">(</span><span style="color: #9876AA">$conn_url</span><span style="color: #007700">);<br /><br />if (</span><span style="color: #9876AA">$con</span><span style="color: #007700">) {<br />   echo </span><span style="color: #DD0000">"connected successfully"</span><span style="color: #007700">;<br />   </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">, </span><span style="color: #DD0000">"create table person(id int,name char(16))"</span><span style="color: #007700">);<br />   </span><span style="color: #9876AA">$req </span><span style="color: #007700">=</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">, </span><span style="color: #DD0000">"insert into person values(1,'James')"</span><span style="color: #007700">);<br /><br />   if (</span><span style="color: #9876AA">$req</span><span style="color: #007700">) {<br />      </span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br />      </span><span style="color: #9876AA">cubrid_commit</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />   } else {<br />      </span><span style="color: #9876AA">cubrid_rollback</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />   }<br />   </span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-connect-with-url-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_connect()} - Open a connection to a CUBRID Server</span></li>    <li class="member"><span class="function">{@link cubrid_pconnect()} - Open a persistent connection to a CUBRID server</span></li>    <li class="member"><span class="function">{@link cubrid_pconnect_with_url()} - Open a persistent connection to CUBRID server</span></li>    <li class="member"><span class="function">{@link cubrid_disconnect()} - Close a database connection</span></li>    <li class="member"><span class="function">{@link cubrid_close()} - Close CUBRID connection</span></li>   </ul>  </span> </div> </div>
 * @return resource|false <p>*/
function cubrid_connect_with_url($conn_url, $userid = 'PUBLIC', $passwd = '', $new_link = false) {}

/**
*<div id="function.cubrid-pconnect" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_pconnect</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.1)</p><p class="refpurpose"><span class="refname">cubrid_pconnect</span> &mdash; <span class="dc-title">Open a persistent connection to a CUBRID server</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-pconnect-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_pconnect</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$host</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$port</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$dbname</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$userid</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$passwd</span><span class="initializer"> = ?</span></span><br>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   Establishes a persistent connection to a CUBRID server.  </p>  <p class="para">   <span class="function"><strong style="color:#CC7832">cubrid_pconnect()</strong></span> acts very much like   <span class="function">{@link cubrid_connect()}</span> with two major differences.   </p>  <p class="para">   First, when connecting, the function would first try to find a (persistent)   link that&#039;s already open with the same host, port, dbname and userid. If   one is found, an identifier for it will be returned instead of opening a   new connection.  </p>  <p class="para">   Second, the connection to the SQL server will not be closed when the   execution of the script ends.  Instead, the link will remain open for   future use (<span class="function">{@link cubrid_close()}</span> or   <span class="function">{@link cubrid_disconnect()}</span> will not close links established by   <span class="function"><strong style="color:#CC7832">cubrid_pconnect()</strong></span>).  </p>  <p class="para">   This type of link is therefore called &#039;persistent&#039;.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-pconnect-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">host</span></dt>    <dd><p class="para">Host name or IP address of CUBRID CAS server.</p></dd>          <dt><span class="parameter" style="color:#3A95FF">port</span></dt>    <dd><p class="para">Port number of CUBRID CAS server (BROKER_PORT configured in $CUBRID/conf/cubrid_broker.conf).</p></dd>          <dt><span class="parameter" style="color:#3A95FF">dbname</span></dt>    <dd><p class="para">Name of database.</p></dd>          <dt><span class="parameter" style="color:#3A95FF">userid</span></dt>    <dd><p class="para">User name for the database.</p></dd>          <dt><span class="parameter" style="color:#3A95FF">passwd</span></dt>    <dd><p class="para">User password.</p></dd>     </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-pconnect-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Connection identifier, when process is successful, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-pconnect-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3518">   <p><strong>示例 #1 <span class="function">{@link cubrid_connect()}</span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"CUBRID PHP Version:"</span><span style="color: #007700">, </span><span style="color: #9876AA">cubrid_version</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_pconnect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br />if (!</span><span style="color: #9876AA">$conn</span><span style="color: #007700">) {<br />    die(</span><span style="color: #DD0000">'Connect Error ('</span><span style="color: #007700">. </span><span style="color: #9876AA">cubrid_error_code</span><span style="color: #007700">() .</span><span style="color: #DD0000">')' </span><span style="color: #007700">. </span><span style="color: #9876AA">cubrid_error_msg</span><span style="color: #007700">());<br />}<br /><br /></span><span style="color: #9876AA">$db_params </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_db_parameter</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br />while (list(</span><span style="color: #9876AA">$param_name</span><span style="color: #007700">, </span><span style="color: #9876AA">$param_value</span><span style="color: #007700">) = </span><span style="color: #9876AA">each</span><span style="color: #007700">(</span><span style="color: #9876AA">$db_params</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$param_name</span><span style="color: #007700">, </span><span style="color: #9876AA">$param_value</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$server_info </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_server_info</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$client_info </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_client_info</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Server Info:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$server_info</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Client Info:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$client_info</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$charset </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_charset</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"CUBRID Charset:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$charset</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>CUBRID PHP Version:            9.1.0.0001<br><br>PARAM_ISOLATION_LEVEL          3<br>LOCK_TIMEOUT                   -1<br>MAX_STRING_LENGTH              1073741823<br>PARAM_AUTO_COMMIT              1<br><br>Server Info:                   9.1.0.0212<br>Client Info:                   9.1.0<br><br>CUBRID Charset:                iso8859-1<br></span></div>   </div>  </div> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-pconnect-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_connect()} - Open a connection to a CUBRID Server</span></li>   <li class="member"><span class="function">{@link cubrid_connect_with_url()} - Establish the environment for connecting to CUBRID server</span></li>   <li class="member"><span class="function">{@link cubrid_pconnect_with_url()} - Open a persistent connection to CUBRID server</span></li>   <li class="member"><span class="function">{@link cubrid_disconnect()} - Close a database connection</span></li>   <li class="member"><span class="function">{@link cubrid_close()} - Close CUBRID connection</span></li>   </ul>  </span> </div></div>
 * @return resource|false <p>*/
function cubrid_pconnect($host, $port, $dbname, $userid = 'PUBLIC', $passwd = '') {}

/**
*<div id="function.cubrid-pconnect-with-url" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_pconnect_with_url</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.1)</p><p class="refpurpose"><span class="refname">cubrid_pconnect_with_url</span> &mdash; <span class="dc-title">Open a persistent connection to CUBRID server</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-pconnect-with-url-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_pconnect_with_url</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$conn_url</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$userid</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$passwd</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   Establishes a persistent connection to a CUBRID server.  </p>  <p class="para">   <span class="function"><strong style="color:#CC7832">cubrid_pconnect_with_url()</strong></span> acts very much like   <span class="function">{@link cubrid_connect_with_url()}</span> with two major differences.   </p>  <p class="para">   First, when connecting, the function would first try to find a (persistent)   link that&#039;s already open with the same host, port, dbname and userid. If   one is found, an identifier for it will be returned instead of opening a   new connection.  </p>  <p class="para">   Second, the connection to the SQL server will not be closed when the   execution of the script ends.  Instead, the link will remain open for   future use (<span class="function">{@link cubrid_close()}</span> or   <span class="function">{@link cubrid_disconnect()}</span> will not close links established by   <span class="function"><strong style="color:#CC7832">cubrid_pconnect_with_url()</strong></span>).  </p>  <p class="para">   This type of link is therefore called &#039;persistent&#039;.  </p>  <p class="para">   &lt;url&gt; ::= CUBRID:&lt;host&gt;:&lt;db_name&gt;:&lt;db_user&gt;:&lt;db_password&gt;:[?&lt;properties&gt;]  </p>  <p class="para">   &lt;properties&gt; ::= &lt;property&gt; [&amp;&lt;property&gt;]  </p>  <p class="para">   &lt;properties&gt; ::= alhosts=&lt;alternative_hosts&gt;[ &amp;rctime=&lt;time&gt;]  </p>  <p class="para">   &lt;properties&gt; ::= login_timeout=&lt;milli_sec&gt;  </p>  <p class="para">   &lt;properties&gt; ::= query_timeout=&lt;milli_sec&gt;  </p>  <p class="para">   &lt;properties&gt; ::= disconnect_on_query_timeout=true|false  </p>  <p class="para">   &lt;alternative_hosts&gt; ::= &lt;standby_broker1_host&gt;:&lt;port&gt; [,&lt;standby_broker2_host&gt;:&lt;port&gt;]  </p>  <p class="para">   &lt;host&gt; := HOSTNAME | IP_ADDR  </p>  <p class="para">   &lt;time&gt; := SECOND  </p>  <p class="para">   &lt;milli_sec&gt; := MILLI SECOND  </p>  <p class="para">   <ul class="simplelist">    <li class="member">host : A host name or IP address of the master database</li>    <li class="member">db_name : A name of the database</li>    <li class="member">db_user : A name of the database user</li>    <li class="member">db_password : A database user password</li>    <li class="member">     alhosts : Specifies the broker information of the standby server, which is     used for failover when it is impossible to connect to the active server.      You can specify multiple brokers for failover, and the connection to the brokers     is attempted in the order listed in alhosts</li>    <li class="member">     rctime : An interval between the attempts to connect to the active broker in     which failure occurred. After a failure occurs, the system connects to the      broker specified by althosts (failover), terminates the transaction, and then     attempts to connect to the active broker of the master database at every rctime.      The default value is 600 seconds.</li>    <li class="member">     login_timeout : Timeout value (unit: msec.) for database login. The default     value is 0, which means infinite postponement.    </li>    <li class="member">     query_timeout : Timeout value (unit: msec.) for query request. Upon timeout,     a message to cancel requesting a query transferred to server is sent. The return      value can depend on the disconnect_on_query_timeout configuration; even though the     message to cancel a request is sent to server, that request may succeed.    </li>    <li class="member">     disconnect_on_query_timeout : Configures a value whether to immediately return     an error of function being executed upon timeout. The default value is false.    </li>   </ul>  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    <span>?</span> and <span>:</span> that are used as identifiers    in PHP connection URL can&#039;t be included in the password. The following is    an example of a password that is invalid to use as connection URL because it contains    &quot;<span>?:</span>&quot;.   </p>   <p class="para">    $url = &quot;CUBRID:localhost:33000:tdb:dba:12?:?login_timeout=100&quot;;   </p>   <p class="para">    Passwords that contain <span>?</span> or <span>:</span> may be    passed as a separate parameter.   </p>   <p class="para">    $url = &quot;CUBRID:localhost:33000:tbd:::?login_timeout=100&quot;;   </p>   <p class="para">    $conn = cubrid_pconnect_with_url ($url, &quot;dba&quot;, &quot;12?&quot;);   </p>   <p class="para">    If user or password is empty,you can&#039;t delete &quot;<span>:</span>&quot;,the following is    an example.   </p>   <p class="para">    $url = &quot;CUBRID:localhost:33000:demodb:::&quot;;   </p>  </p></blockquote> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-pconnect-with-url-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">conn_url</span></dt>     <dd><p class="para">A character string that contains server connection information.</p></dd>             <dt><span class="parameter" style="color:#3A95FF">userid</span></dt>     <dd><p class="para">User name for the database.</p></dd>             <dt><span class="parameter" style="color:#3A95FF">passwd</span></dt>     <dd><p class="para">User password.</p></dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-pconnect-with-url-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Connection identifier, when process is successful, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-pconnect-with-url-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3512">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_pconnect_with_url()</strong></span> url without properties example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn_url </span><span style="color: #007700">= </span><span style="color: #DD0000">"CUBRID:127.0.0.1:33000:demodb:dba::"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$con </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_pconnect_with_url </span><span style="color: #007700">(</span><span style="color: #9876AA">$conn_url</span><span style="color: #007700">);<br /><br />if (</span><span style="color: #9876AA">$con</span><span style="color: #007700">) {<br />   echo </span><span style="color: #DD0000">"connected successfully"</span><span style="color: #007700">;<br />   </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">, </span><span style="color: #DD0000">"create table person(id int,name char(16))"</span><span style="color: #007700">);<br />   </span><span style="color: #9876AA">$req </span><span style="color: #007700">=</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">, </span><span style="color: #DD0000">"insert into person values(1,'James')"</span><span style="color: #007700">);<br /><br />   if (</span><span style="color: #9876AA">$req</span><span style="color: #007700">) {<br />      </span><span style="color: #9876AA">cubrid_close_request </span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br />      </span><span style="color: #9876AA">cubrid_commit </span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />   } else {<br />      </span><span style="color: #9876AA">cubrid_rollback </span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />   }<br />   </span><span style="color: #9876AA">cubrid_disconnect </span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div>    <div class="example" id="example-3515">   <p><strong>示例 #2 <span class="function"><strong style="color:#CC7832">cubrid_pconnect_with_url()</strong></span> url with properties example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn_url </span><span style="color: #007700">= </span><span style="color: #DD0000">"CUBRID:127.0.0.1:33000:demodb:dba::?althost=10.34.63.132:33088&amp;rctime=100"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$con </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_pconnect_with_url </span><span style="color: #007700">(</span><span style="color: #9876AA">$conn_url</span><span style="color: #007700">);<br /><br />if (</span><span style="color: #9876AA">$con</span><span style="color: #007700">) {<br />   echo </span><span style="color: #DD0000">"connected successfully"</span><span style="color: #007700">;<br />   </span><span style="color: #9876AA">$req </span><span style="color: #007700">=</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">, </span><span style="color: #DD0000">"insert into person values(1,'James')"</span><span style="color: #007700">);<br /><br />   if (</span><span style="color: #9876AA">$req</span><span style="color: #007700">) {<br />      </span><span style="color: #9876AA">cubrid_close_request </span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br />      </span><span style="color: #9876AA">cubrid_commit </span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />   } else {<br />      </span><span style="color: #9876AA">cubrid_rollback </span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />   }<br />   </span><span style="color: #9876AA">cubrid_disconnect </span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-pconnect-with-url-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_connect()} - Open a connection to a CUBRID Server</span></li>    <li class="member"><span class="function">{@link cubrid_connect_with_url()} - Establish the environment for connecting to CUBRID server</span></li>    <li class="member"><span class="function">{@link cubrid_pconnect()} - Open a persistent connection to a CUBRID server</span></li>    <li class="member"><span class="function">{@link cubrid_disconnect()} - Close a database connection</span></li>    <li class="member"><span class="function">{@link cubrid_close()} - Close CUBRID connection</span></li>   </ul>  </span> </div> </div>
 * @return resource|false <p>*/
function cubrid_pconnect_with_url($conn_url, $userid = 'PUBLIC', $passwd = '') {}

/**
*<div id="function.cubrid-close" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_close</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.1)</p><p class="refpurpose"><span class="refname">cubrid_close</span> &mdash; <span class="dc-title">Close CUBRID connection</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-close-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_close</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_close()</strong></span> function ends the transaction    currently in process, closes the connection handle and disconnects from    server. If there is any request handles not closed yet at this point,    they will be closed. It is similar to the CUBRID function    <span class="function">{@link cubrid_disconnect()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-close-parameters"> <h3 class="title">参数</h3> <span>  <dl>         <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>     <dd><p class="para">The CUBRID connection identifier. If the connection identifier is not specified, the last connection opened by <span class="function">{@link cubrid_connect()}</span> is assumed.</p></dd>     </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-close-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    <strong><span>true</span></strong>, when process is successful.  </p>    <p class="para">    <strong><span>false</span></strong>, when process is unsuccessful.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-close-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3560">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_close()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$con </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect </span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br />if (</span><span style="color: #9876AA">$con</span><span style="color: #007700">) {<br />   echo </span><span style="color: #DD0000">"connected successfully"</span><span style="color: #007700">;<br />   </span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute </span><span style="color: #007700">( </span><span style="color: #9876AA">$con</span><span style="color: #007700">, </span><span style="color: #DD0000">"insert into person values(1,'James')"</span><span style="color: #007700">);<br />   if (</span><span style="color: #9876AA">$req</span><span style="color: #007700">) {<br />      </span><span style="color: #9876AA">cubrid_close_request </span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br />      </span><span style="color: #9876AA">cubrid_commit </span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />   } else {<br />      </span><span style="color: #9876AA">cubrid_rollback </span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />   }<br />   </span><span style="color: #9876AA">cubrid_close </span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div>     <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-close-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_disconnect()} - Close a database connection</span></li>   <li class="member"><span class="function">{@link cubrid_connect()} - Open a connection to a CUBRID Server</span></li>   <li class="member"><span class="function">{@link cubrid_connect_with_url()} - Establish the environment for connecting to CUBRID server</span></li>   </ul>  </span> </div></div>
 * @return bool <p>*/
function cubrid_close($conn_identifier = null) {}

/**
*<div id="function.cubrid-disconnect" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_disconnect</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_disconnect</span> &mdash; <span class="dc-title">Close a database connection</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-disconnect-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_disconnect</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_disconnect()</strong></span> function closes the connection    handle and disconnects from server. If any request handle is not closed at this point,     it will be closed. It is similar to the CUBRID MySQL compatible function <span class="function">{@link cubrid_close()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-disconnect-parameters"> <h3 class="title">参数</h3> <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">Connection identifier.</p></dd>     </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-disconnect-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-disconnect-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3401">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_disconnect()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$con </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect </span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br />if (</span><span style="color: #9876AA">$con</span><span style="color: #007700">) {<br />   echo </span><span style="color: #DD0000">"connected successfully"</span><span style="color: #007700">;<br />   <br />   </span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">( </span><span style="color: #9876AA">$con</span><span style="color: #007700">, </span><span style="color: #DD0000">"create table person(id int,name char(10))"</span><span style="color: #007700">);<br />   if (</span><span style="color: #9876AA">$req</span><span style="color: #007700">) {<br />      </span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br />      </span><span style="color: #9876AA">cubrid_commit</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />   } else {<br />      </span><span style="color: #9876AA">cubrid_rollback</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />   }<br />   <br />   </span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">( </span><span style="color: #9876AA">$con</span><span style="color: #007700">, </span><span style="color: #DD0000">"insert into person values(1,'James')"</span><span style="color: #007700">);<br />   if (</span><span style="color: #9876AA">$req</span><span style="color: #007700">) {<br />      </span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br />      </span><span style="color: #9876AA">cubrid_commit</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />   } else {<br />      </span><span style="color: #9876AA">cubrid_rollback</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />   }<br />   </span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-disconnect-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_close()} - Close CUBRID connection</span></li>   <li class="member"><span class="function">{@link cubrid_connect()} - Open a connection to a CUBRID Server</span></li>   <li class="member"><span class="function">{@link cubrid_connect_with_url()} - Establish the environment for connecting to CUBRID server</span></li>   </ul>  </span> </div></div>
 * @return bool Returns true on success or false on failure.*/
function cubrid_disconnect($conn_identifier = null) {}

/**
*<div id="function.cubrid-query" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_query</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.1)</p><p class="refpurpose"><span class="refname">cubrid_query</span> &mdash; <span class="dc-title">Send a CUBRID query</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-query-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_query</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$query</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">cubrid_query()</strong></span> sends a unique query (multiple queries are not supported) to the    currently active database on the server that&#039;s associated with the specified <span class="parameter" style="color:#3A95FF">conn_identifier</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-query-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">query</span></dt>     <dd>      <p class="para">       An SQL query      </p>      <p class="para">       Data inside the query should be {@link properly escaped}.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>     <dd>      <p class="para">       The CUBRID connection. If the connection identifier is not specified,       the last connection opened by <span class="function">{@link cubrid_connect()}</span> is       assumed.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-query-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   For SELECT, SHOW, DESCRIBE, EXPLAIN and other statements returning resultset,   <span class="function"><strong style="color:#CC7832">cubrid_query()</strong></span> returns a <span class="type" style="color:#EAB766">resource</span> on success, or <strong><span>false</span></strong> on error.  </p>  <p class="para">   For other type of SQL statements, INSERT, UPDATE, DELETE, DROP, etc,   <span class="function"><strong style="color:#CC7832">cubrid_query()</strong></span> returns <strong><span>true</span></strong> on success or <strong><span>false</span></strong> on error.  </p>  <p class="para">   The returned result resource should be passed to <span class="function">{@link cubrid_fetch_array()}</span>, and other   functions for dealing with result tables, to access the returned data.  </p>  <p class="para">   Use <span class="function">{@link cubrid_num_rows()}</span> to find out how many rows were returned for a SELECT statement or   <span class="function">{@link cubrid_affected_rows()}</span> to find out how many rows were affected by a DELETE, INSERT, REPLACE, or UPDATE statement.  </p>  <p class="para">   <span class="function"><strong style="color:#CC7832">cubrid_query()</strong></span> will also fail and return <strong><span>false</span></strong>   if the user does not have permission to access the table(s) referenced by the query.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-query-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="example-3620">    <p><strong>示例 #1 Invalid Query</strong></p>    <div class="example-contents"><p>     The following query is syntactically invalid, so <span class="function"><strong style="color:#CC7832">cubrid_query()</strong></span> fails and returns <strong><span>false</span></strong>.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">'localhost'</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">'demodb'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_query</span><span style="color: #007700">(</span><span style="color: #DD0000">'SELECT * WHERE 1=1'</span><span style="color: #007700">);<br />if (!</span><span style="color: #9876AA">$result</span><span style="color: #007700">) {<br />    die(</span><span style="color: #DD0000">'Invalid query: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">cubrid_error</span><span style="color: #007700">());<br />}<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span>  <p class="para">   <div class="example" id="example-3623">    <p><strong>示例 #2 Valid Query</strong></p>    <div class="example-contents"><p>     The following query is valid, so <span class="function"><strong style="color:#CC7832">cubrid_query()</strong></span> returns a <span class="type" style="color:#EAB766">resource</span>.    </p></div>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// This could be supplied by a user, for example<br /></span><span style="color: #9876AA">$firstname </span><span style="color: #007700">= </span><span style="color: #DD0000">'fred'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$lastname  </span><span style="color: #007700">= </span><span style="color: #DD0000">'fox'</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">'localhost'</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">'demodb'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"DROP TABLE if exists friends"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"create table friends(firstname varchar,lastname varchar,address char(24),age int)"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"insert into friends values('fred','fox','home-1','20')"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"insert into friends values('blue','cat','home-2','21')"</span><span style="color: #007700">);<br /></span><span style="color: #FF8000">// Formulate Query<br />// This is the best way to perform an SQL query<br />// For more examples, see cubrid_real_escape_string()<br /></span><span style="color: #9876AA">$query </span><span style="color: #007700">= </span><span style="color: #9876AA">sprintf</span><span style="color: #007700">(</span><span style="color: #DD0000">"SELECT firstname, lastname, address, age FROM friends WHERE firstname='%s' AND lastname='%s'"</span><span style="color: #007700">,<br /></span><span style="color: #9876AA">cubrid_real_escape_string</span><span style="color: #007700">(</span><span style="color: #9876AA">$firstname</span><span style="color: #007700">),<br /></span><span style="color: #9876AA">cubrid_real_escape_string</span><span style="color: #007700">(</span><span style="color: #9876AA">$lastname</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">// Perform Query<br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$query</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Check result<br />// This shows the actual query sent to CUBRID, and the error. Useful for debugging.<br /></span><span style="color: #007700">if (!</span><span style="color: #9876AA">$result</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">$message  </span><span style="color: #007700">= </span><span style="color: #DD0000">'Invalid query: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">cubrid_error</span><span style="color: #007700">() . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$message </span><span style="color: #007700">.= </span><span style="color: #DD0000">'Whole query: ' </span><span style="color: #007700">. </span><span style="color: #9876AA">$query</span><span style="color: #007700">;<br />    die(</span><span style="color: #9876AA">$message</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #FF8000">// Use result<br />// Attempting to print $result won't allow access to information in the resource<br />// One of the cubrid result functions must be used<br />// See also cubrid_result(), cubrid_fetch_array(), cubrid_fetch_row(), etc.<br /></span><span style="color: #007700">while (</span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_assoc</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">)) {<br />    echo </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">'firstname'</span><span style="color: #007700">];<br />    echo </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">'lastname'</span><span style="color: #007700">];<br />    echo </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">'address'</span><span style="color: #007700">];<br />    echo </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">'age'</span><span style="color: #007700">];<br />}<br /><br /></span><span style="color: #FF8000">// Free the resources associated with the result set<br />// This is done automatically at the end of the script<br /></span><span style="color: #9876AA">cubrid_free_result</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-query-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_connect()} - Open a connection to a CUBRID Server</span></li>    <li class="member"><span class="function">{@link cubrid_error()} - Get the error message</span></li>    <li class="member"><span class="function">{@link cubrid_real_escape_string()} - Escape special characters in a string for use in an SQL statement</span></li>    <li class="member"><span class="function">{@link cubrid_result()} - Return the value of a specific field in a specific row</span></li>    <li class="member"><span class="function">{@link cubrid_fetch_assoc()} - Return the associative array that corresponds to the fetched row</span></li>    <li class="member"><span class="function">{@link cubrid_unbuffered_query()} - Perform a query without fetching the results into memory</span></li>   </ul>  </span> </div></div>
 * @return resource|bool <ul><li>*/
function cubrid_query($query, $conn_identifier = null) {}

/**
*<div id="function.cubrid-execute" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_execute</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_execute</span> &mdash; <span class="dc-title">Execute a prepared SQL statement</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-execute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_execute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$sql</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$option</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766">resource</span></div>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>cubrid_execute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$request_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$option</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766">bool</span></div>    <p class="para rdfs-comment">      The <span class="function"><strong style="color:#CC7832">cubrid_execute()</strong></span> function is used to execute the      given SQL statement. It executes the query by using      <span class="parameter" style="color:#3A95FF">conn_identifier</span> and SQL, and then returns the      request identifier created. It is used for simple execution of query,      where the parameter binding is not needed. In addition, the      <span class="function"><strong style="color:#CC7832">cubrid_execute()</strong></span> function is used to execute the      prepared statement by means of <span class="function">{@link cubrid_prepare()}</span> and      <span class="function">{@link cubrid_bind()}</span>. At this time, you need to specify      arguments of <span class="parameter" style="color:#3A95FF">request_identifier</span> and      <span class="parameter" style="color:#3A95FF">option</span>.    </p>    <p class="para">     The <span class="parameter" style="color:#3A95FF">option</span> is used to determine whether to get OID     after query execution and whether to execute the query in synchronous or     asynchronous mode. <strong><span>CUBRID_INCLUDE_OID</span></strong> and <strong><span>CUBRID_ASYNC</span></strong> (or     <strong><span>CUBRID_EXEC_QUERY_ALL</span></strong> if you want to execute multiple SQL statements) can     be specified by using a bitwise OR operator. If not specified, neither of     them isselected. If the flag <strong><span>CUBRID_EXEC_QUERY_ALL</span></strong> is set, a synchronous     mode (sync_mode) is used to retrieve query results, and in such cases the     following rules are applied:     </p>    <p class="para">     <ul class="simplelist">      <li class="member">The return value is the result of the first query.</li>      <li class="member">       If an error occurs in any query, the execution is processed as a       failure.      </li>      <li class="member">       In a query composed of q1 q2 q3, if an error       occurs in q2 after q1 succeeds the execution, the result of q1 remains       valid. That is, the previous successful query executions are not rolled       back when an error occurs.      </li>      <li class="member">       If a query is executed successfully, the result of the second query can       be obtained using <span class="function">{@link cubrid_next_result()}</span>.      </li>     </ul>    </p>    <p class="para">     If the first argument is <span class="parameter" style="color:#3A95FF">request_identifier</span> to     execute the <span class="function">{@link cubrid_prepare()}</span> function, you can specify     an option, <strong><span>CUBRID_ASYNC</span></strong> only.    </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-execute-parameters"> <h3 class="title">参数</h3> <span>      <dl>              <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>      <dd><p class="para">Connection identifier.</p></dd>                    <dt><span class="parameter" style="color:#3A95FF">sql</span></dt>      <dd><p class="para">SQL to be executed.</p></dd>                    <dt><span class="parameter" style="color:#3A95FF">option</span></dt>        <dd><p class="para">Query execution option <strong><span>CUBRID_INCLUDE_OID</span></strong>, <strong><span>CUBRID_ASYNC</span></strong>, <strong><span>CUBRID_EXEC_QUERY_ALL</span></strong>.</p></dd>                     <dt><span class="parameter" style="color:#3A95FF">request_identifier</span></dt>      <dd><p class="para"><span class="function">{@link cubrid_prepare()}</span> identifier.</p></dd>             </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-execute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Request identifier, when process is successful and first param is    conn_identifier; <strong><span>true</span></strong>, when process is successful and first argument is    request_identifier, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.cubrid-execute-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        Add new option <strong><span>CUBRID_EXEC_QUERY_ALL</span></strong>.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-execute-examples">  <h3 class="title">示例</h3>  <div class="example" id="function.posix-sysconf.example.basic">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_execute()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT code FROM event WHERE name='100m Butterfly' and gender='M'"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_ASYNC</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_ASSOC</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$event_code </span><span style="color: #007700">= </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"code"</span><span style="color: #007700">];<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$history_req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM history WHERE event_code=?"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$history_req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$event_code</span><span style="color: #007700">, </span><span style="color: #DD0000">"number"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$history_req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-20s %-9s %-10s %-5s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"athlete"</span><span style="color: #007700">, </span><span style="color: #DD0000">"host_year"</span><span style="color: #007700">, </span><span style="color: #DD0000">"score"</span><span style="color: #007700">, </span><span style="color: #DD0000">"unit"</span><span style="color: #007700">);<br />while (</span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$history_req</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_ASSOC</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-20s %-9s %-10s %-5s\n"</span><span style="color: #007700">, <br />        </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"athlete"</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"host_year"</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"score"</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"unit"</span><span style="color: #007700">]);<br />}<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$history_req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>athlete              host_year score      unit <br>Phelps Michael       2004      51.25      time <br></span></div>   </div>  </div> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-execute-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_prepare()} - Prepare a SQL statement for execution</span></li>   <li class="member"><span class="function">{@link cubrid_bind()} - Bind variables to a prepared statement as parameters</span></li>   <li class="member"><span class="function">{@link cubrid_next_result()} - Get result of next query when executing multiple SQL statements</span></li>   <li class="member"><span class="function">{@link cubrid_close_request()} - Close the request handle</span></li>   <li class="member"><span class="function">{@link cubrid_commit()} - Commit a transaction</span></li>   <li class="member"><span class="function">{@link cubrid_rollback()} - Roll back a transaction</span></li>   </ul>  </span>  </div></div>
 * @return resource|bool <p>*/
function cubrid_execute($conn_identifier, $sql, $option = null) {}

/**
*<div id="function.cubrid-execute" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_execute</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_execute</span> &mdash; <span class="dc-title">Execute a prepared SQL statement</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-execute-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_execute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$sql</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$option</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766">resource</span></div>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>cubrid_execute</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$request_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$option</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766">bool</span></div>    <p class="para rdfs-comment">      The <span class="function"><strong style="color:#CC7832">cubrid_execute()</strong></span> function is used to execute the      given SQL statement. It executes the query by using      <span class="parameter" style="color:#3A95FF">conn_identifier</span> and SQL, and then returns the      request identifier created. It is used for simple execution of query,      where the parameter binding is not needed. In addition, the      <span class="function"><strong style="color:#CC7832">cubrid_execute()</strong></span> function is used to execute the      prepared statement by means of <span class="function">{@link cubrid_prepare()}</span> and      <span class="function">{@link cubrid_bind()}</span>. At this time, you need to specify      arguments of <span class="parameter" style="color:#3A95FF">request_identifier</span> and      <span class="parameter" style="color:#3A95FF">option</span>.    </p>    <p class="para">     The <span class="parameter" style="color:#3A95FF">option</span> is used to determine whether to get OID     after query execution and whether to execute the query in synchronous or     asynchronous mode. <strong><span>CUBRID_INCLUDE_OID</span></strong> and <strong><span>CUBRID_ASYNC</span></strong> (or     <strong><span>CUBRID_EXEC_QUERY_ALL</span></strong> if you want to execute multiple SQL statements) can     be specified by using a bitwise OR operator. If not specified, neither of     them isselected. If the flag <strong><span>CUBRID_EXEC_QUERY_ALL</span></strong> is set, a synchronous     mode (sync_mode) is used to retrieve query results, and in such cases the     following rules are applied:     </p>    <p class="para">     <ul class="simplelist">      <li class="member">The return value is the result of the first query.</li>      <li class="member">       If an error occurs in any query, the execution is processed as a       failure.      </li>      <li class="member">       In a query composed of q1 q2 q3, if an error       occurs in q2 after q1 succeeds the execution, the result of q1 remains       valid. That is, the previous successful query executions are not rolled       back when an error occurs.      </li>      <li class="member">       If a query is executed successfully, the result of the second query can       be obtained using <span class="function">{@link cubrid_next_result()}</span>.      </li>     </ul>    </p>    <p class="para">     If the first argument is <span class="parameter" style="color:#3A95FF">request_identifier</span> to     execute the <span class="function">{@link cubrid_prepare()}</span> function, you can specify     an option, <strong><span>CUBRID_ASYNC</span></strong> only.    </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-execute-parameters"> <h3 class="title">参数</h3> <span>      <dl>              <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>      <dd><p class="para">Connection identifier.</p></dd>                    <dt><span class="parameter" style="color:#3A95FF">sql</span></dt>      <dd><p class="para">SQL to be executed.</p></dd>                    <dt><span class="parameter" style="color:#3A95FF">option</span></dt>        <dd><p class="para">Query execution option <strong><span>CUBRID_INCLUDE_OID</span></strong>, <strong><span>CUBRID_ASYNC</span></strong>, <strong><span>CUBRID_EXEC_QUERY_ALL</span></strong>.</p></dd>                     <dt><span class="parameter" style="color:#3A95FF">request_identifier</span></dt>      <dd><p class="para"><span class="function">{@link cubrid_prepare()}</span> identifier.</p></dd>             </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-execute-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Request identifier, when process is successful and first param is    conn_identifier; <strong><span>true</span></strong>, when process is successful and first argument is    request_identifier, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.cubrid-execute-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        Add new option <strong><span>CUBRID_EXEC_QUERY_ALL</span></strong>.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-execute-examples">  <h3 class="title">示例</h3>  <div class="example" id="function.posix-sysconf.example.basic">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_execute()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT code FROM event WHERE name='100m Butterfly' and gender='M'"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_ASYNC</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_ASSOC</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$event_code </span><span style="color: #007700">= </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"code"</span><span style="color: #007700">];<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$history_req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM history WHERE event_code=?"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$history_req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$event_code</span><span style="color: #007700">, </span><span style="color: #DD0000">"number"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$history_req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-20s %-9s %-10s %-5s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"athlete"</span><span style="color: #007700">, </span><span style="color: #DD0000">"host_year"</span><span style="color: #007700">, </span><span style="color: #DD0000">"score"</span><span style="color: #007700">, </span><span style="color: #DD0000">"unit"</span><span style="color: #007700">);<br />while (</span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$history_req</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_ASSOC</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-20s %-9s %-10s %-5s\n"</span><span style="color: #007700">, <br />        </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"athlete"</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"host_year"</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"score"</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"unit"</span><span style="color: #007700">]);<br />}<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$history_req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>athlete              host_year score      unit <br>Phelps Michael       2004      51.25      time <br></span></div>   </div>  </div> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-execute-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_prepare()} - Prepare a SQL statement for execution</span></li>   <li class="member"><span class="function">{@link cubrid_bind()} - Bind variables to a prepared statement as parameters</span></li>   <li class="member"><span class="function">{@link cubrid_next_result()} - Get result of next query when executing multiple SQL statements</span></li>   <li class="member"><span class="function">{@link cubrid_close_request()} - Close the request handle</span></li>   <li class="member"><span class="function">{@link cubrid_commit()} - Commit a transaction</span></li>   <li class="member"><span class="function">{@link cubrid_rollback()} - Roll back a transaction</span></li>   </ul>  </span>  </div></div>
 * @return bool <p>*/
function cubrid_execute($request_identifier, $option = null) {}

/**
*<div id="function.cubrid-bind" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_bind</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_bind</span> &mdash; <span class="dc-title">Bind variables to a prepared statement as parameters</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-bind-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_bind</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$req_identifier</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$bind_index</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$bind_value</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$bind_value_type</span><span class="initializer"> = ?</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_bind()</strong></span> function is used to bind values to a   corresponding named or question mark placeholder in the SQL statement that   was passed to <span class="function">{@link cubrid_prepare()}</span>. If   <span class="parameter" style="color:#3A95FF">bind_value_type</span> is not given, string will be the   default.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    If the type of data to be bound is BLOB/CLOB, CUBRID will try to map the    data as a PHP stream. If the actually bind value type is not stream,    CUBRID will convert it to string, and use it as the full path and file    name of a file on the client filesystem.   </p>   <p class="para">    If the type of data to be bound explicitly is ENUM, the <span class="parameter" style="color:#3A95FF">bind_value</span>    argument should be the enum element which is in string format.   </p>   <p class="para">    In CUBRID shard envrioment, the <span class="parameter" style="color:#3A95FF">bind_value_type</span> must be included in     the <span class="function"><strong style="color:#CC7832">cubrid_bind()</strong></span> function.   </p>  </p></blockquote>  <p class="para">  The following table shows the types of substitute values.  </p>  <p class="para">   <table class="doctable table">    <caption><strong>CUBRID Bind Date Types</strong></caption>         <thead>      <tr>       <th>Support</th>       <th>Bind Type</th>       <th>Corresponding SQL Type</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>Supported</td>       <td>STRING</td>       <td>CHAR, VARCHAR</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>NCHAR</td>       <td>NCHAR, NVARCHAR</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>BIT</td>       <td>BIT, VARBIT</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>NUMERIC or NUMBER</td>       <td>SHORT, INT, NUMERIC</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>FLOAT</td>       <td>FLOAT</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>DOUBLE</td>       <td>DOUBLE</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>TIME</td>       <td>TIME</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>DATE</td>       <td>DATE</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>TIMESTAMP</td>       <td>TIMESTAMP</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>OBJECT</td>       <td>OBJECT</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>ENUM</td>       <td>ENUM</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>BLOB</td>       <td>BLOB</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>CLOB</td>       <td>CLOB</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>NULL</td>       <td>NULL</td>      </tr>      <tr>       <td>Not supported</td>       <td>SET</td>       <td>SET</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>MULTISET</td>       <td>MULTISET</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>SEQUENCE</td>       <td>SEQUENCE</td>      </tr>     </tbody>       </table>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-bind-parameters"> <h3 class="title">参数</h3> <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">req_identifier</span></dt>  <dd><p class="para">Request identifier as a result of    <span class="function">{@link cubrid_prepare()}</span>.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">bind_index</span></dt>  <dd><p class="para">Location of binding parameters. It starts with 1.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">bind_value</span></dt>  <dd><p class="para">Actual value for binding.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">bind_value_type</span></dt>  <dd><p class="para">A type of the value to bind. (It is omitted by default.    Thus, the system internally uses string by default. However, you need to    specify the exact type of the value as an argument when they are NCHAR,    BIT, or BLOB/CLOB).</p></dd>     </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-bind-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.cubrid-bind-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.3.1</td>       <td>        Added BLOB/CLOB data types support.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-bind-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3359">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_bind()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT code FROM event WHERE sports='Basketball' and gender='M'"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_ASSOC</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$event_code </span><span style="color: #007700">= </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"code"</span><span style="color: #007700">];<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$game_req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT athlete_code FROM game WHERE host_year=1992 and event_code=? and nation_code='USA'"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$game_req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$event_code</span><span style="color: #007700">, </span><span style="color: #DD0000">"number"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$game_req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"--- Dream Team (1992 United States men's Olympic basketball team) ---\n"</span><span style="color: #007700">);<br />while (</span><span style="color: #9876AA">$athlete_code </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$game_req</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_NUM</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">$athlete_req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT name FROM athlete WHERE code=? AND nation_code='USA' AND event='Basketball' AND gender='M'"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$athlete_req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$athlete_code</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">], </span><span style="color: #DD0000">"number"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$athlete_req</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_assoc</span><span style="color: #007700">(</span><span style="color: #9876AA">$athlete_req</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"name"</span><span style="color: #007700">]);<br />}<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$game_req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$athlete_req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div><div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>--- Dream Team (1992 United States men&#039;s Olympic basketball team) ---<br>Stockton John<br>Robinson David<br>Pippen Scottie<br>Mullin C.<br>Malone Karl<br>Laettner C.<br>Jordan Michael<br>Johnson Earvin<br>Ewing Patrick<br>Drexler Clyde<br>Bird Larry<br>Barkley Charles<br></span></div>   </div>  </div>  <div class="example" id="example-3362">   <p><strong>示例 #2 <span class="function"><strong style="color:#CC7832">cubrid_bind()</strong></span> BLOB/CLOB example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$con </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">, </span><span style="color: #DD0000">""</span><span style="color: #007700">);<br />if (</span><span style="color: #9876AA">$con</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">,</span><span style="color: #DD0000">"DROP TABLE if exists php_cubrid_lob_test"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">,</span><span style="color: #DD0000">"CREATE TABLE php_cubrid_lob_test (doc_content CLOB)"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$sql </span><span style="color: #007700">= </span><span style="color: #DD0000">"INSERT INTO php_cubrid_lob_test(doc_content) VALUES(?)"</span><span style="color: #007700">; <br />    </span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">, </span><span style="color: #9876AA">$sql</span><span style="color: #007700">); <br /><br />    </span><span style="color: #9876AA">$fp </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">"book.txt"</span><span style="color: #007700">, </span><span style="color: #DD0000">"rb"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$fp</span><span style="color: #007700">, </span><span style="color: #DD0000">"clob"</span><span style="color: #007700">); <br />    </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);  <br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div>  <div class="example" id="example-3365">   <p><strong>示例 #3 <span class="function"><strong style="color:#CC7832">cubrid_bind()</strong></span> BLOB/CLOB example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$con </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">, </span><span style="color: #DD0000">""</span><span style="color: #007700">);<br />if (</span><span style="color: #9876AA">$con</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">,</span><span style="color: #DD0000">"DROP TABLE if exists php_cubrid_lob_test"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">,</span><span style="color: #DD0000">"CREATE TABLE php_cubrid_lob_test (image BLOB)"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$sql </span><span style="color: #007700">= </span><span style="color: #DD0000">"INSERT INTO php_cubrid_lob_test(image) VALUES(?)"</span><span style="color: #007700">; <br />    </span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">, </span><span style="color: #9876AA">$sql</span><span style="color: #007700">); <br /><br />    </span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #DD0000">"cubrid_logo.png"</span><span style="color: #007700">, </span><span style="color: #DD0000">"blob"</span><span style="color: #007700">); <br />    </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);  <br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-bind-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_execute()} - Execute a prepared SQL statement</span></li>    <li class="member"><span class="function">{@link cubrid_prepare()} - Prepare a SQL statement for execution</span></li>   </ul>  </span> </div></div>
 * @return bool TRUE, when process is successful, otherwise FALSE.*/
function cubrid_bind($req_identifier, $bind_index, $bind_value, $bind_value_type = null) {}

/**
*<div id="function.cubrid-close-prepare" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_close_prepare</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_close_prepare</span> &mdash; <span class="dc-title">Close the request handle </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-close-prepare-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_close_prepare</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$req_identifier</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_close_prepare()</strong></span> function closes the request   handle given by the <span class="parameter" style="color:#3A95FF">req_identifier</span> argument, and   releases the memory region related to the handle. It is an alias of   <span class="function">{@link cubrid_close_request()}</span>.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-close-prepare-parameters"> <h3 class="title">参数</h3> <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">req_identifier</span></dt>  <dd><p class="para">Request identifier.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-close-prepare-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Return <strong><span>true</span></strong> on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-close-prepare-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3368">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_close_prepare()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$con </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect </span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">, </span><span style="color: #DD0000">""</span><span style="color: #007700">);<br />if (</span><span style="color: #9876AA">$con</span><span style="color: #007700">) {<br />   echo </span><span style="color: #DD0000">"connected successfully"</span><span style="color: #007700">;<br />   </span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute </span><span style="color: #007700">( </span><span style="color: #9876AA">$con</span><span style="color: #007700">, </span><span style="color: #DD0000">"select * from members"</span><span style="color: #007700">, <br />                           </span><span style="color: #9876AA">CUBRID_INCLUDE_OID </span><span style="color: #007700">| </span><span style="color: #9876AA">CUBRID_ASYNC</span><span style="color: #007700">);<br />   if (</span><span style="color: #9876AA">$req</span><span style="color: #007700">) {<br />      while ( list (</span><span style="color: #9876AA">$id</span><span style="color: #007700">, </span><span style="color: #9876AA">$name</span><span style="color: #007700">) = </span><span style="color: #9876AA">cubrid_fetch </span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">) ){<br />         echo </span><span style="color: #9876AA">$id</span><span style="color: #007700">;<br />         echo </span><span style="color: #9876AA">$name</span><span style="color: #007700">;<br />      } <br />      </span><span style="color: #9876AA">cubrid_close_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">); </span><span style="color: #FF8000">// or you can use cubrid_close_request($req)<br />   </span><span style="color: #007700">}<br />   </span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-close-prepare-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_close_request()} - Close the request handle</span></li>   </ul>  </span> </div></div>
 * @return bool TRUE, when process is successful, otherwise FALSE.*/
function cubrid_close_prepare($req_identifier) {}

/**
*<div id="function.cubrid-close-request" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_close_request</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_close_request</span> &mdash; <span class="dc-title">Close the request handle </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-close-request-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_close_request</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$req_identifier</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_close_request()</strong></span> function closes the request    handle given by the <span class="parameter" style="color:#3A95FF">req_identifier</span> argument, and    releases the memory region related to the handle. It is an alias of    <span class="function">{@link cubrid_close_prepare()}</span>.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-close-request-parameters"> <h3 class="title">参数</h3> <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">req_identifier</span></dt>  <dd><p class="para">Request identifier.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-close-request-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Return <strong><span>true</span></strong> on success.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-close-request-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3371">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_close_request()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$con </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect </span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">, </span><span style="color: #DD0000">""</span><span style="color: #007700">);<br />if (</span><span style="color: #9876AA">$con</span><span style="color: #007700">) {<br />   echo </span><span style="color: #DD0000">"connected successfully"</span><span style="color: #007700">;<br />   </span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute </span><span style="color: #007700">( </span><span style="color: #9876AA">$con</span><span style="color: #007700">, </span><span style="color: #DD0000">"select * from members"</span><span style="color: #007700">, <br />                           </span><span style="color: #9876AA">CUBRID_INCLUDE_OID </span><span style="color: #007700">| </span><span style="color: #9876AA">CUBRID_ASYNC</span><span style="color: #007700">);<br />   if (</span><span style="color: #9876AA">$req</span><span style="color: #007700">) {<br />      while ( list (</span><span style="color: #9876AA">$id</span><span style="color: #007700">, </span><span style="color: #9876AA">$name</span><span style="color: #007700">) = </span><span style="color: #9876AA">cubrid_fetch </span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">) ){<br />         echo </span><span style="color: #9876AA">$id</span><span style="color: #007700">;<br />         echo </span><span style="color: #9876AA">$name</span><span style="color: #007700">;<br />      } <br />      </span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">); </span><span style="color: #FF8000">// or you can use cubrid_close_prepare($req)<br />   </span><span style="color: #007700">}<br />   </span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-close-request-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_close_prepare()} - Close the request handle</span></li>   </ul>  </span> </div></div>
 * @return bool TRUE, when process is successful, or FALSE.*/
function cubrid_close_request($req_identifier) {}

/**
*<div id="function.cubrid-col-get" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_col_get</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_col_get</span> &mdash; <span class="dc-title">Get contents of collection type column using OID</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-col-get-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_col_get</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$oid</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$attr_name</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_col_get()</strong></span> function is used to get contents    of the elements of the collection type (set, multiset, sequence) attribute    you requested as an array.  </p> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-col-get-parameters"> <h3 class="title">参数</h3> <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">Connection identifier.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">oid</span></dt>  <dd><p class="para">OID of the instance that you want to read.</p></dd>       <dt><span class="parameter" style="color:#3A95FF">attr_name</span></dt>  <dd><p class="para">Attribute name that you want to read from the instance.</p></dd>    </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-col-get-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Array (0-based numerical array) containing the elements you requested,    when process is successful;  </p>    <p class="para">    <strong><span>false</span></strong> (to distinguish the error from the situation of attribute having    empty collection or NULL, in case of error, a warning message is shown; in    such case you can check the error by using    <span class="function">{@link cubrid_error_code()}</span>), when process is unsuccessful.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-col-get-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3374">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_col_get()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br />@</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"DROP TABLE foo"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"CREATE TABLE foo(a int AUTO_INCREMENT, b set(int), c list(int), d char(10))"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO foo(a, b, c, d) VALUES(1, {1,2,3}, {11,22,33,333}, 'a')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM foo"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_INCLUDE_OID</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_move_cursor</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_FIRST</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$oid </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_current_oid</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_col_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$size </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_col_size</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$size</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(3) {<br>  [0]=&gt;<br>  string(1) &quot;1&quot;<br>  [1]=&gt;<br>  string(1) &quot;2&quot;<br>  [2]=&gt;<br>  string(1) &quot;3&quot;<br>}<br>int(3)<br></span></div>   </div>  </div> </div></div>
 * @return array <ul><li>*/
function cubrid_col_get($conn_identifier, $oid, $attr_name) {}

/**
*<div id="function.cubrid-col-size" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_col_size</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_col_size</span> &mdash; <span class="dc-title">Get the number of elements in collection type column using OID</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-col-size-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_col_size</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$oid</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$attr_name</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_col_size()</strong></span> function is used to get the    number of elements in a collection type (set, multiset, sequence)    attribute.  </p> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-col-size-parameters"> <h3 class="title">参数</h3> <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">Connection identifier.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">oid</span></dt>  <dd><p class="para">OID the instance that you want to work with.</p></dd>       <dt><span class="parameter" style="color:#3A95FF">attr_name</span></dt>  <dd><p class="para">Name of the attribute that you want to work with.</p></dd>    </dl>  </span> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-col-size-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Number of elements, when process is successful, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div><br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.cubrid-col-size-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.3.1</td>       <td>        Change return value: when process is unsuccessful, return false, not -1.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-col-size-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3377">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_col_size()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br />@</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"DROP TABLE foo"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"CREATE TABLE foo(a int AUTO_INCREMENT, b set(int), c list(int), d char(10))"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO foo(a, b, c, d) VALUES(1, {1,2,3}, {11,22,33,333}, 'a')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM foo"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_INCLUDE_OID</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_move_cursor</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_FIRST</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$oid </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_current_oid</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_col_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$size </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_col_size</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$size</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(3) {<br>  [0]=&gt;<br>  string(1) &quot;1&quot;<br>  [1]=&gt;<br>  string(1) &quot;2&quot;<br>  [2]=&gt;<br>  string(1) &quot;3&quot;<br>}<br>int(3)<br></span></div>   </div>  </div> </div></div>
 * @return int <p>*/
function cubrid_col_size($conn_identifier, $oid, $attr_name) {}

/**
*<div id="function.cubrid-unbuffered-query" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_unbuffered_query</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_unbuffered_query</span> &mdash; <span class="dc-title">Perform a query without fetching the results into memory</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-unbuffered-query-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_unbuffered_query</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$query</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">    This function performs a query without waiting for that all query results have been complete. It will return     when the results are being generated.   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-unbuffered-query-parameters"> <h3 class="title">参数</h3> <span>  <dl>         <dt><span class="parameter" style="color:#3A95FF">query</span></dt>     <dd><p class="para">A SQL query.</p></dd>              <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>      <dd><p class="para">The CUBRID connection. If the connection identifier is not specified, the last connection opened by <span class="function">{@link cubrid_connect()}</span> is assumed.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-unbuffered-query-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   For SELECT, SHOW, DESCRIBE or EXPLAIN statements returns a request identifier resource on success.  </p>  <p class="para">    For other type of SQL statements, UPDATE, DELETE, DROP, etc, returns <strong><span>true</span></strong> on success.  </p>   <p class="para">    <strong><span>false</span></strong> on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-unbuffered-query-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3632">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_unbuffered_query()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />    $link </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">30000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">, </span><span style="color: #DD0000">""</span><span style="color: #007700">);<br />    if (!</span><span style="color: #9876AA">$link</span><span style="color: #007700">)<br />    {<br />        die(</span><span style="color: #DD0000">'Could not connect.'</span><span style="color: #007700">);<br />    }<br />    </span><span style="color: #9876AA">$query </span><span style="color: #007700">= </span><span style="color: #DD0000">"select * from code"</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_unbuffered_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$query</span><span style="color: #007700">, </span><span style="color: #9876AA">$link</span><span style="color: #007700">);<br /><br />    while (</span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">))<br />    {<br />        </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">);<br />    }<br /><br />    </span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$link</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.cubrid-unbuffered-query-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    The benefits of <span class="function"><strong style="color:#CC7832">cubrid_unbuffered_query()</strong></span> come    at a cost: you cannot use <span class="function">{@link cubrid_num_rows()}</span> and    <span class="function">{@link cubrid_data_seek()}</span> on a result set returned from    <span class="function"><strong style="color:#CC7832">cubrid_unbuffered_query()</strong></span>.   </p>  </p></blockquote> </div></div>
 * @return resource|bool <p>*/
function cubrid_unbuffered_query($query, $conn_identifier = null) {}

/**
*<div id="function.cubrid-list-dbs" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_list_dbs</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_list_dbs</span> &mdash; <span class="dc-title">Return an array with the list of all existing CUBRID databases</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-list-dbs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_list_dbs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   This function returns an array with the list of all existing Cubrid   databases.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-list-dbs-parameters"> <h3 class="title">参数</h3> <span>  <dl>        <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>    <dd><p class="para">The CUBRID connection.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-list-dbs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An numeric array with all existing Cubrid databases; on success.  </p>   <p class="para">    <strong><span>false</span></strong> on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-list-dbs-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3611">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_list_dbs()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$db_list </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_list_dbs</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$db_list</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(1) {<br>  [0]=&gt;<br>  string(6) &quot;demodb&quot;<br>}<br></span></div>    </div>  </div> </div></div>
 * @return array <p>*/
function cubrid_list_dbs($conn_identifier) {}

/**
*<div id="function.cubrid-error" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_error</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.1)</p><p class="refpurpose"><span class="refname">cubrid_error</span> &mdash; <span class="dc-title">Get the error message</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-error-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_error</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$connection</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_error()</strong></span> function is used to get the error    message that occurred during the use of CUBRID API. Usually, it gets error    message when API returns false as its return value.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-error-parameters"> <h3 class="title">参数</h3> <span>  <dl>         <dt><span class="parameter" style="color:#3A95FF">connection</span></dt>     <dd><p class="para">The CUBRID connection.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-error-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Error message that occurred.  </p>  <p class="para"> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-error-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3572">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_error()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$con </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">'localhost'</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">'demodb'</span><span style="color: #007700">, </span><span style="color: #DD0000">'dba'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">, </span><span style="color: #DD0000">"select id, name from person"</span><span style="color: #007700">);<br />if (</span><span style="color: #9876AA">$req</span><span style="color: #007700">) {<br />    while (list (</span><span style="color: #9876AA">$id</span><span style="color: #007700">, </span><span style="color: #9876AA">$name</span><span style="color: #007700">) = </span><span style="color: #9876AA">cubrid_fetch</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">)) <br />    echo </span><span style="color: #9876AA">$id</span><span style="color: #007700">, </span><span style="color: #9876AA">$name</span><span style="color: #007700">;<br />} else {<br />    echo </span><span style="color: #DD0000">"Error Code: "</span><span style="color: #007700">, </span><span style="color: #9876AA">cubrid_errno</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />    echo </span><span style="color: #DD0000">"Error Message: "</span><span style="color: #007700">, </span><span style="color: #9876AA">cubrid_error</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>     <div class="example-contents"><p>以上示例会输出：</p></div>     <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Error Code: -493 Error Message: Syntax: Unknown class &quot;person&quot;. select id, [name] from person<br></span></div>     </div>     </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-error-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_errno()} - Return the numerical value of the error message from previous CUBRID operation</span></li>   <li class="member"><span class="function">{@link cubrid_error_code()} - Get error code for the most recent function call</span></li>   <li class="member"><span class="function">{@link cubrid_error_msg()} - Get last error message for the most recent function call</span></li>   </ul>  </span>  </div></div>
 * @return string <p>*/
function cubrid_error($connection = null) {}

/**
*<div id="function.cubrid-error-msg" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_error_msg</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_error_msg</span> &mdash; <span class="dc-title">Get last error message for the most recent function call</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-error-msg-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_error_msg</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_error_msg()</strong></span> function is used to get the    error message that occurred during the use of CUBRID API. Usually, it gets    error message when API returns false as its return value.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-error-msg-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-error-msg-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Error message that occurred.  </p>  <p class="para"> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-error-msg-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3413">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_error_msg()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /><br />if (!@</span><span style="color: #9876AA">cubrid_schema</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">100000</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"Error facility: %d\nError code: %d\nError msg: %s\n"</span><span style="color: #007700">, <br />        </span><span style="color: #9876AA">cubrid_error_code_facility</span><span style="color: #007700">(), </span><span style="color: #9876AA">cubrid_error_code</span><span style="color: #007700">(), </span><span style="color: #9876AA">cubrid_error_msg</span><span style="color: #007700">());<br /><br />    </span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br />    exit;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Error facility: 2<br>Error code: -10015<br>Error msg: Invalid T_CCI_SCH_TYPE value<br></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-error-msg-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_error_code()} - Get error code for the most recent function call</span></li>   <li class="member"><span class="function">{@link cubrid_error_code_facility()} - Get the facility code of error</span></li>   </ul>  </span>  </div></div>
 * @return string <p>*/
function cubrid_error_msg() {}

/**
*<div id="function.cubrid-errno" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_errno</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.1)</p><p class="refpurpose"><span class="refname">cubrid_errno</span> &mdash; <span class="dc-title">Return the numerical value of the error message from previous CUBRID operation</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-errno-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_errno</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   Returns the error number from the last CUBRID function.   </p>  <p class="para">   The <span class="function"><strong style="color:#CC7832">cubrid_errno()</strong></span> function is used to get the   error code of the error that occurred during the API execution.  Usually,   it gets the error code when API returns false as its return value.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-errno-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>     <dd>      <p class="para">       The CUBRID connection identifier. If the connection identifier is not       specified, the last connection opened by       <span class="function">{@link cubrid_connect()}</span> is assumed.      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-errno-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the error number from the last CUBRID function, or <span>0</span> (zero) if no error occurred.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-errno-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="example-3569">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_errno()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$con </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">'localhost'</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">'demodb'</span><span style="color: #007700">, </span><span style="color: #DD0000">'dba'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">, </span><span style="color: #DD0000">"select id, name from person"</span><span style="color: #007700">);<br />if (</span><span style="color: #9876AA">$req</span><span style="color: #007700">) {<br />    while (list (</span><span style="color: #9876AA">$id</span><span style="color: #007700">, </span><span style="color: #9876AA">$name</span><span style="color: #007700">) = </span><span style="color: #9876AA">cubrid_fetch</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">)) <br />    echo </span><span style="color: #9876AA">$id</span><span style="color: #007700">, </span><span style="color: #9876AA">$name</span><span style="color: #007700">;<br />} else {<br />    echo </span><span style="color: #DD0000">"Error Code: "</span><span style="color: #007700">, </span><span style="color: #9876AA">cubrid_errno</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />    echo </span><span style="color: #DD0000">"Error Message: "</span><span style="color: #007700">, </span><span style="color: #9876AA">cubrid_error</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>     <div class="example-contents"><p>以上示例会输出：</p></div>     <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Error Code: -493 Error Message: Syntax: Unknown class &quot;person&quot;. select id, [name] from person<br></span></div>     </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-errno-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_error()} - Get the error message</span></li>    <li class="member"><span class="function">{@link cubrid_error_code()} - Get error code for the most recent function call</span></li>    <li class="member"><span class="function">{@link cubrid_error_msg()} - Get last error message for the most recent function call</span></li>   </ul>  </span> </div></div>
 * @return int <p>*/
function cubrid_errno($conn_identifier = null) {}

/**
*<div id="function.cubrid-error-code" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_error_code</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_error_code</span> &mdash; <span class="dc-title">Get error code for the most recent function call</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-error-code-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_error_code</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_error_code()</strong></span> function is used to get the    error code of the error that occurred during the API execution. Usually,    it gets the error code when API returns false as its return value.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-error-code-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-error-code-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Error code of the error that occurred, or <span>0</span> (zero) if no   error occurred.   </p>  <p class="para"> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-error-code-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3410">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_error_code()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn </span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM code WHERE s_name=?"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= @</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br />if (!</span><span style="color: #9876AA">$req</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"Error facility: %d\nError code: %d\nError msg: %s\n"</span><span style="color: #007700">, <br />        </span><span style="color: #9876AA">cubrid_error_code_facility</span><span style="color: #007700">(), </span><span style="color: #9876AA">cubrid_error_code</span><span style="color: #007700">(), </span><span style="color: #9876AA">cubrid_error_msg</span><span style="color: #007700">());<br /><br />    </span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br />    exit;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>   <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Error facility: 4<br>Error code: -30015<br>Error msg: Some parameter not binded<br></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-error-code-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_error_code_facility()} - Get the facility code of error</span></li>   <li class="member"><span class="function">{@link cubrid_error_msg()} - Get last error message for the most recent function call</span></li>   </ul>  </span>  </div></div>
 * @return int <p>*/
function cubrid_error_code() {}

/**
*<div id="function.cubrid-affected-rows" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_affected_rows</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_affected_rows</span> &mdash; <span class="dc-title">Return the number of rows affected by the last SQL statement</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-affected-rows-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_affected_rows</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <div class="methodsynopsis dc-description"><span class="methodname" style="color:#CC7832"><strong>cubrid_affected_rows</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$req_identifier</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_affected_rows()</strong></span> function is used to get the    number of rows affected by the SQL statement (INSERT, DELETE, UPDATE).  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-affected-rows-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>    <dd><p class="para">The CUBRID connection. If the connection identifier is not      specified, the last link opend by <span class="function">{@link cubrid_connect()}</span> is    assumed.</p></dd>          <dt><span class="parameter" style="color:#3A95FF">req_identifier</span></dt>    <dd>      <p class="para">        Request Identifier, could be returned from either <span class="function">{@link cubrid_prepare()}</span> or <span class="function">{@link cubrid_execute()}</span>.         If the request identifier is not specified, the last identifier requested by         <span class="function">{@link cubrid_prepare()}</span> or <span class="function">{@link cubrid_execute()}</span> is assumed.      </p>    </dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-affected-rows-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Number of rows affected by the SQL statement, when process is successful.  </p>   <p class="para">    -1, when SQL statement is not INSERT, DELETE or UPDATE.  </p>  <p class="para">   <strong><span>false</span></strong>, when the request identifier is not specified, and there is no last   request.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-affected-rows-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3554">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_affected_rows()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">'localhost'</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">'demodb'</span><span style="color: #007700">, </span><span style="color: #DD0000">'dba'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"DROP TABLE IF EXISTS cubrid_test"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"CREATE TABLE cubrid_test (d varchar)"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$sql_stmt </span><span style="color: #007700">= </span><span style="color: #DD0000">"INSERT INTO cubrid_test(d) VALUES('php-test')"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$sql_stmt</span><span style="color: #007700">);<br /><br />for (</span><span style="color: #9876AA">$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">10</span><span style="color: #007700">; </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br />    </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">cubrid_commit</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"DELETE FROM cubrid_test WHERE d='php-test'"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_ASYNC</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">cubrid_affected_rows</span><span style="color: #007700">());<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">cubrid_affected_rows</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">cubrid_affected_rows</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br />print </span><span style="color: #DD0000">"done!"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Rows deleted: 5<br></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-affected-rows-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_execute()} - Execute a prepared SQL statement</span></li>   </ul>  </span> </div></div>
 * @return int <p>*/
function cubrid_affected_rows($conn_identifier = null) {}

/**
*<div id="function.cubrid-insert-id" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_insert_id</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_insert_id</span> &mdash; <span class="dc-title">Return the ID generated for the last updated <strong><span>AUTO_INCREMENT</span></strong> column</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-insert-id-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_insert_id</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_insert_id()</strong></span> function retrieves the ID   generated for the AUTO_INCREMENT column which is updated by the previous   INSERT query. It returns 0 if the previous query does not generate new   rows, or FALSE on failure.   </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    CUBRID supports AUTO_INCREMENT for more than one columns in a table. In    most cases, there will be a single AUTO_INCREMENT column in a table. If    there are multiple AUTO_INCREMENT columns, this function should not be    used even if it will return a value.   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-insert-id-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>    <dd><p class="para">      The connection identifier previously obtained by a call to      <span class="function">{@link cubrid_connect()}</span>.    </p></dd>     </dl> </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-insert-id-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A string representing the ID generated for an AUTO_INCREMENT column by the   previous query, on success.  </p>  <p class="para">   0, if the previous query does not generate new rows.  </p>  <p class="para">    <strong><span>false</span></strong> on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.cubrid-insert-id-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        Change the return value from an array to string; Remove the first        parameter class_name.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-insert-id-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3446">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_insert_id()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /><br />@</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"DROP TABLE cubrid_test"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"CREATE TABLE cubrid_test (d int AUTO_INCREMENT(1, 2), t varchar)"</span><span style="color: #007700">);<br /><br />for (</span><span style="color: #9876AA">$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">10</span><span style="color: #007700">; </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br />    </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO cubrid_test(t) VALUES('cubrid_test')"</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">$id </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_insert_id</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$id</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>string(2) &quot;19&quot;<br></span></div>    </div>  </div> </div></div>
 * @return string <p>*/
function cubrid_insert_id($conn_identifier = null) {}

/**
*<div id="function.cubrid-result" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_result</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_result</span> &mdash; <span class="dc-title">Return the value of a specific field in a specific row</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-result-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_result</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$row</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$field</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">    This function returns the value of a specific field in a specific row from    a result set.   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-result-parameters"> <h3 class="title">参数</h3> <span>  <dl>        <dt><span class="parameter" style="color:#3A95FF">result</span></dt>    <dd><p class="para"><span class="parameter" style="color:#3A95FF">result</span> comes from a call to <span class="function">{@link cubrid_execute()}</span></p></dd>          <dt><span class="parameter" style="color:#3A95FF">row</span></dt>  <dd><p class="para">The row number from the result that is being retrieved. Row numbers start at 0.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">field</span></dt>  <dd><p class="para">    The name or offset of the <span class="parameter" style="color:#3A95FF">field</span> being retrieved. It    can be the field&#039;s offset, the field&#039;s name, or the field&#039;s table dot    field name (tablename.fieldname). If the column name has been aliased    (&#039;select foo as bar from...&#039;), use the alias instead of the column name.    If undefined, the first field is retrieved.  </p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-result-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Value of a specific field, on success (NULL if value if null).  </p>   <p class="para">    <strong><span>false</span></strong> on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-result-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3629">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_result()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM code"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_result</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_result</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_result</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">"f_name"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>string(1) &quot;X&quot;<br>string(5) &quot;Mixed&quot;<br>string(4) &quot;Gold&quot;<br></span></div>    </div>  </div> </div></div>
 * @return string <p>*/
function cubrid_result($result, $row, $field = 0) {}

/**
*<div id="function.cubrid-num-rows" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_num_rows</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_num_rows</span> &mdash; <span class="dc-title">Get the number of rows in the result set</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-num-rows-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_num_rows</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_num_rows()</strong></span> function is used to get the    number of rows from the query result.   It can be used for <span>SELECT</span> statements.   For <span>INSERT</span>, <span>UPDATE</span>, or <span>DELETE</span> queries,   use the <span class="function">{@link cubrid_affected_rows()}</span> function.  </p>  <p class="para">   Note: The <span class="function"><strong style="color:#CC7832">cubrid_num_rows()</strong></span> function can only be used   for synchronous query; it returns 0 when it is used for asynchronous query.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-num-rows-parameters">  <h3 class="title">参数</h3>  <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">result</span></dt>  <dd><p class="para"><span class="parameter" style="color:#3A95FF">result</span> comes from a call to    <span class="function">{@link cubrid_execute()}</span>, <span class="function">{@link cubrid_query()}</span> and    <span class="function">{@link cubrid_prepare()}</span></p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-num-rows-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Number of rows, when process is successful.  </p>  <p class="para">    0 when the query was done in async mode.   </p>  <p class="para">    -1, if SQL statement is not SELECT.  </p>  <p class="para">   <strong><span>false</span></strong> when process is unsuccessful.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-num-rows-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3509">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_num_rows()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM code"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$row_num </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_num_rows</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$col_num </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_num_cols</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"Row Num: %d\nColumn Num: %d\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$row_num</span><span style="color: #007700">, </span><span style="color: #9876AA">$col_num</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Row Num: 6<br>Column Num: 2<br></span></div>   </div>  </div> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-num-rows-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_execute()} - Execute a prepared SQL statement</span></li>      <li class="member"><span class="function">{@link cubrid_num_cols()} - Return the number of columns in the result set</span></li>      <li class="member"><span class="function">{@link cubrid_affected_rows()} - Return the number of rows affected by the last SQL statement</span></li>     </ul>  </span>  </div> </div>
 * @return int <p>*/
function cubrid_num_rows($result) {}

/**
*<div id="function.cubrid-num-cols" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_num_cols</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_num_cols</span> &mdash; <span class="dc-title">Return the number of columns in the result set</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-num-cols-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_num_cols</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_num_cols()</strong></span> function is used to get the    number of columns from the query result. It can only be used when the    query executed is a <span>SELECT</span> statement.  </p></div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-num-cols-parameters">  <h3 class="title">参数</h3>  <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">result</span></dt>  <dd><p class="para">Result.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-num-cols-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Number of columns, when process is successful.  </p>  <p class="para">    <strong><span>false</span></strong>, if SQL statement is not SELECT.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-num-cols-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3506">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_num_cols()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM code"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$row_num </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_num_rows</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$col_num </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_num_cols</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"Row Num: %d\nColumn Num: %d\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$row_num</span><span style="color: #007700">, </span><span style="color: #9876AA">$col_num</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Row Num: 6<br>Column Num: 2<br></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-num-cols-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_execute()} - Execute a prepared SQL statement</span></li>      <li class="member"><span class="function">{@link cubrid_num_rows()} - Get the number of rows in the result set</span></li>     </ul>  </span>  </div></div>
 * @return int <p>*/
function cubrid_num_cols($result) {}

/**
*<div id="function.cubrid-num-fields" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_num_fields</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_num_fields</span> &mdash; <span class="dc-title">Return the number of columns in the result set</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-num-fields-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_num_fields</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">    This function returns the number of columns in the result set, on success,    or it returns FALSE on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-num-fields-parameters"> <h3 class="title">参数</h3> <span>  <dl>        <dt><span class="parameter" style="color:#3A95FF">result</span></dt>    <dd><p class="para"><span class="parameter" style="color:#3A95FF">result</span> comes from a call to      <span class="function">{@link cubrid_execute()}</span>, <span class="function">{@link cubrid_query()}</span>      and <span class="function">{@link cubrid_prepare()}</span></p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-num-fields-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Number of columns, on success.  </p>   <p class="para">    -1 if SQL sentence is not SELECT.  </p>  <p class="para">   <strong><span>false</span></strong> when process is unsuccessful.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-num-fields-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3614">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_num_fields()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM code"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$row_num </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_num_rows</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$col_num </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_num_fields</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"Row Num: %d\nColumn Num: %d\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$row_num</span><span style="color: #007700">, </span><span style="color: #9876AA">$col_num</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Row Num: 6<br>Column Num: 2<br></span></div>    </div>  </div> </div></div>
 * @return int <p>*/
function cubrid_num_fields($result) {}

/**
*<div id="function.cubrid-fetch" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_fetch</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_fetch</span> &mdash; <span class="dc-title">Fetch the next row from a result set</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-fetch-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_fetch</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = CUBRID_BOTH</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_fetch()</strong></span> function is used to get a single row from the query result.  The cursor automatically moves to the next row after getting the result.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-fetch-parameters">  <h3 class="title">参数</h3>  <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">result</span></dt>  <dd><p class="para"><span class="parameter" style="color:#3A95FF">result</span> comes from a call to <span class="function">{@link cubrid_execute()}</span></p></dd>        <dt><span class="parameter" style="color:#3A95FF">type</span></dt>  <dd><p class="para">Array type of the fetched result CUBRID_NUM, CUBRID_ASSOC,    CUBRID_BOTH, CUBRID_OBJECT. If you want to operate the lob object, you can    use CUBRID_LOB.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-fetch-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">Result array or object, when process is successful.</p>  <p class="para"><strong><span>false</span></strong>, when there are no more rows; NULL, when process is unsuccessful.</p>  <p class="para">The result can be received either as an array or as an object, and you can decide which data type to use by setting the <span class="parameter" style="color:#3A95FF">type</span> argument. The <span class="parameter" style="color:#3A95FF">type</span> variable can be set to one of the following values:</p>    <ul class="simplelist">        <li class="member">CUBRID_NUM : Numerical array (0-based)</li>        <li class="member">CUBRID_ASSOC : Associative array</li>        <li class="member">CUBRID_BOTH : Numerical &amp; Associative array (default)</li>        <li class="member">CUBRID_OBJECT : object that has the attribute name as the column name of query result</li>    </ul>    <p class="para">When <span class="parameter" style="color:#3A95FF">type</span> argument is omitted, the result will be received using CUBRID_BOTH option as default. When you want to receive query result in object data type, the column name of the result must obey the naming rules for identifiers in PHP.  For example, column name such as &quot;count(*)&quot; cannot be received in object type.</p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-fetch-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3419">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_fetch()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM stadium WHERE nation_code='GRE' AND seats &gt; 10000"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-40s %-10s %-6s %-20s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"name"</span><span style="color: #007700">, </span><span style="color: #DD0000">"area"</span><span style="color: #007700">, </span><span style="color: #DD0000">"seats"</span><span style="color: #007700">, </span><span style="color: #DD0000">"address"</span><span style="color: #007700">);<br />while (</span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-40s %-10s %-6s %-20s\n"</span><span style="color: #007700">, <br />        </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"name"</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"area"</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"seats"</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"address"</span><span style="color: #007700">]);<br />}<br /><br /></span><span style="color: #FF8000">// if you want to operate lob object, you can use cubrid_fetch($req, CUBRID_LOB)<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>name                                     area       seats  address             <br>Panathinaiko Stadium                     86300.00   50000  Athens, Greece      <br>Olympic Stadium                          54700.00   13000  Athens, Greece      <br>Olympic Indoor Hall                      34100.00   18800  Athens, Greece      <br>Olympic Hall                             52400.00   21000  Athens, Greece      <br>Olympic Aquatic Centre                   42500.00   11500  Athens, Greece      <br>Markopoulo Olympic Equestrian Centre     64000.00   15000  Markopoulo, Athens, Greece<br>Faliro Coastal Zone Olympic Complex      34650.00   12171  Faliro, Athens, Greece<br>Athens Olympic Stadium                   120400.00  71030  Maroussi, Athens, Greece <br>Ano Liossia                              34000.00   12000  Ano Liosia, Athens, Greece<br></span></div>   </div>  </div> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-fetch-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_execute()} - Execute a prepared SQL statement</span></li>   <li class="member"><span class="function">{@link cubrid_fetch_array()} - Fetch a result row as an associative array, a numeric array, or both</span></li>   <li class="member"><span class="function">{@link cubrid_fetch_row()} - Return a numerical array with the values of the current row</span></li>   <li class="member"><span class="function">{@link cubrid_fetch_assoc()} - Return the associative array that corresponds to the fetched row</span></li>   <li class="member"><span class="function">{@link cubrid_fetch_object()} - Fetch the next row and return it as an object</span></li>   </ul>  </span>  </div></div>
 * @return mixed*/
function cubrid_fetch($result, $type = CUBRID_BOTH) {}

/**
*<div id="function.cubrid-fetch-row" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_fetch_row</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_fetch_row</span> &mdash; <span class="dc-title">Return a numerical array with the values of the current row</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-fetch-row-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_fetch_row</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">    This function returns a numerical array with the values of the current row    from the result set, starting from 0, and moves the internal data pointer    ahead.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-fetch-row-parameters"> <h3 class="title">参数</h3> <span>  <dl>        <dt><span class="parameter" style="color:#3A95FF">result</span></dt>    <dd><p class="para"><span class="parameter" style="color:#3A95FF">result</span> comes from a call to <span class="function">{@link cubrid_execute()}</span></p></dd>           <dt><span class="parameter" style="color:#3A95FF">type</span></dt>    <dd><p class="para">Type can only be CUBRID_LOB, this parameter will be used      only when you need to operate the lob object.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-fetch-row-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    A numerical array, when process is successful.  </p>   <p class="para">    <strong><span>false</span></strong>, when there are no more rows; NULL, when process is unsuccessful.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-fetch-row-examples">  <h3 class="title">示例</h3>  <div class="example" id="random-bytes.example.basic">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_fetch_row()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT name,area,seats,address FROM stadium WHERE nation_code='GRE' AND seats &gt; 10000"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-40s %-10s %-6s %-20s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"name"</span><span style="color: #007700">, </span><span style="color: #DD0000">"area"</span><span style="color: #007700">, </span><span style="color: #DD0000">"seats"</span><span style="color: #007700">, </span><span style="color: #DD0000">"address"</span><span style="color: #007700">);<br />while (</span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_row</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-40s %-10s %-6s %-20s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">2</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">3</span><span style="color: #007700">]);<br />}<br /><br /></span><span style="color: #FF8000">// if you want to operate LOB object, you can use cubrid_fetch_row($req, CUBRID_LOB)<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>name                                     area       seats  address             <br>Panathinaiko Stadium                     86300.00   50000  Athens, Greece      <br>Olympic Stadium                          54700.00   13000  Athens, Greece      <br>Olympic Indoor Hall                      34100.00   18800  Athens, Greece      <br>Olympic Hall                             52400.00   21000  Athens, Greece      <br>Olympic Aquatic Centre                   42500.00   11500  Athens, Greece      <br>Markopoulo Olympic Equestrian Centre     64000.00   15000  Markopoulo, Athens, Greece<br>Faliro Coastal Zone Olympic Complex      34650.00   12171  Faliro, Athens, Greece<br>Athens Olympic Stadium                   120400.00  71030  Maroussi, Athens, Greece <br>Ano Liossia                              34000.00   12000  Ano Liosia, Athens, Greece<br></span></div>    </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-fetch-row-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_execute()} - Execute a prepared SQL statement</span></li>   <li class="member"><span class="function">{@link cubrid_fetch()} - Fetch the next row from a result set</span></li>   <li class="member"><span class="function">{@link cubrid_fetch_array()} - Fetch a result row as an associative array, a numeric array, or both</span></li>   <li class="member"><span class="function">{@link cubrid_fetch_assoc()} - Return the associative array that corresponds to the fetched row</span></li>   <li class="member"><span class="function">{@link cubrid_fetch_object()} - Fetch the next row and return it as an object</span></li>   </ul>  </span> </div></div>
 * @return array <p>*/
function cubrid_fetch_row($result, $type = null) {}

/**
*<div id="function.cubrid-fetch-array" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_fetch_array</h1>  <p class="verinfo">(PECL CUBRID &gt;=8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_fetch_array</span> &mdash; <span class="dc-title">Fetch a result row as an associative array, a numeric array, or both</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-fetch-array-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_fetch_array</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = CUBRID_BOTH</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_fetch_array()</strong></span> function is used to get a    single row from the query result and returns an array. The cursor    automatically moves to the next row after getting the result.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-fetch-array-parameters">  <h3 class="title">参数</h3>  <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">result</span></dt>    <dd><p class="para"><span class="parameter" style="color:#3A95FF">Result</span> comes from a call to <span class="function">{@link cubrid_execute()}</span></p></dd>          <dt><span class="parameter" style="color:#3A95FF">type</span></dt>    <dd><p class="para">Array type of the fetched result CUBRID_NUM, CUBRID_ASSOC,      CUBRID_BOTH. If you need to operate the lob object, you can use CUBRID_LOB.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-fetch-array-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">Returns an array of strings that corresponds to the fetched row, when process is successful.</p>  <p class="para"><strong><span>false</span></strong>, when there are no more rows; NULL, when process is unsuccessful.</p>  <p class="para">The type of returned array depends on how type is defined. By using CUBRID_BOTH (default), you&#039;ll get an array with both associative and number indices, and you can decide which data type to use by setting the <span class="parameter" style="color:#3A95FF">type</span> argument. The <span class="parameter" style="color:#3A95FF">type</span> variable can be set to one of the following values:</p>    <ul class="simplelist">        <li class="member">CUBRID_NUM : Numerical array (0-based)</li>        <li class="member">CUBRID_ASSOC : Associative array</li>        <li class="member">CUBRID_BOTH : Numerical &amp; Associative array (default)</li>    </ul>   </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-fetch-array-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3575">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_fetch_array()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT name,area,seats,address FROM stadium WHERE nation_code='GRE' AND seats &gt; 10000"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-40s %-10s %-6s %-20s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"name"</span><span style="color: #007700">, </span><span style="color: #DD0000">"area"</span><span style="color: #007700">, </span><span style="color: #DD0000">"seats"</span><span style="color: #007700">, </span><span style="color: #DD0000">"address"</span><span style="color: #007700">);<br />while (</span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_array</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_NUM</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-40s %-10s %-6s %-20s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">2</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">3</span><span style="color: #007700">]);<br />}<br /><br /></span><span style="color: #FF8000">// if you want to operate LOB object, you can use cubrid_fetch_array($req, CUBRID_NUM | CUBRID_LOB)<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>name                                     area       seats  address             <br>Panathinaiko Stadium                     86300.00   50000  Athens, Greece      <br>Olympic Stadium                          54700.00   13000  Athens, Greece      <br>Olympic Indoor Hall                      34100.00   18800  Athens, Greece      <br>Olympic Hall                             52400.00   21000  Athens, Greece      <br>Olympic Aquatic Centre                   42500.00   11500  Athens, Greece      <br>Markopoulo Olympic Equestrian Centre     64000.00   15000  Markopoulo, Athens, Greece<br>Faliro Coastal Zone Olympic Complex      34650.00   12171  Faliro, Athens, Greece<br>Athens Olympic Stadium                   120400.00  71030  Maroussi, Athens, Greece <br>Ano Liossia                              34000.00   12000  Ano Liosia, Athens, Greece<br></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-fetch-array-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_execute()} - Execute a prepared SQL statement</span></li>   <li class="member"><span class="function">{@link cubrid_fetch()} - Fetch the next row from a result set</span></li>   <li class="member"><span class="function">{@link cubrid_fetch_row()} - Return a numerical array with the values of the current row</span></li>   <li class="member"><span class="function">{@link cubrid_fetch_assoc()} - Return the associative array that corresponds to the fetched row</span></li>   <li class="member"><span class="function">{@link cubrid_fetch_object()} - Fetch the next row and return it as an object</span></li>   </ul>  </span>  </div></div>
 * @return array <p>*/
function cubrid_fetch_array($result, $type = CUBRID_BOTH) {}

/**
*<div id="function.cubrid-fetch-assoc" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_fetch_assoc</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_fetch_assoc</span> &mdash; <span class="dc-title">Return the associative array that corresponds to the fetched row</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-fetch-assoc-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_fetch_assoc</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">    This function returns the associative array, that corresponds to the    fetched row, and then moves the internal data pointer ahead, or returns    FALSE when the end is reached.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-fetch-assoc-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">result</span></dt>    <dd><p class="para"><span class="parameter" style="color:#3A95FF">result</span> comes from a call to <span class="function">{@link cubrid_execute()}</span></p></dd>          <dt><span class="parameter" style="color:#3A95FF">type</span></dt>    <dd><p class="para">Type can only be CUBRID_LOB, this parameter will be used      only when you need to operate the lob object.</p></dd>     </dl> </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-fetch-assoc-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Associative array, when process is successful.  </p>   <p class="para">    <strong><span>false</span></strong>, when there are no more rows; NULL, when process is unsuccessful.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-fetch-assoc-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3578">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_fetch_assoc()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT name,area,seats,address FROM stadium WHERE nation_code='GRE' AND seats &gt; 10000"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-40s %-10s %-6s %-20s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"name"</span><span style="color: #007700">, </span><span style="color: #DD0000">"area"</span><span style="color: #007700">, </span><span style="color: #DD0000">"seats"</span><span style="color: #007700">, </span><span style="color: #DD0000">"address"</span><span style="color: #007700">);<br />while (</span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_assoc</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-40s %-10s %-6s %-20s\n"</span><span style="color: #007700">, <br />        </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"name"</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"area"</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"seats"</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"address"</span><span style="color: #007700">]);<br />}<br /><br /></span><span style="color: #FF8000">// if you want to operate LOB object, you can use cubrid_fetch_assoc($req, CUBRID_LOB)<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>name                                     area       seats  address             <br>Panathinaiko Stadium                     86300.00   50000  Athens, Greece      <br>Olympic Stadium                          54700.00   13000  Athens, Greece      <br>Olympic Indoor Hall                      34100.00   18800  Athens, Greece      <br>Olympic Hall                             52400.00   21000  Athens, Greece      <br>Olympic Aquatic Centre                   42500.00   11500  Athens, Greece      <br>Markopoulo Olympic Equestrian Centre     64000.00   15000  Markopoulo, Athens, Greece<br>Faliro Coastal Zone Olympic Complex      34650.00   12171  Faliro, Athens, Greece<br>Athens Olympic Stadium                   120400.00  71030  Maroussi, Athens, Greece <br>Ano Liossia                              34000.00   12000  Ano Liosia, Athens, Greece<br></span></div>    </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-fetch-assoc-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_execute()} - Execute a prepared SQL statement</span></li>   <li class="member"><span class="function">{@link cubrid_fetch()} - Fetch the next row from a result set</span></li>   <li class="member"><span class="function">{@link cubrid_fetch_row()} - Return a numerical array with the values of the current row</span></li>   <li class="member"><span class="function">{@link cubrid_fetch_array()} - Fetch a result row as an associative array, a numeric array, or both</span></li>   <li class="member"><span class="function">{@link cubrid_fetch_object()} - Fetch the next row and return it as an object</span></li>   </ul>  </span>  </div></div>
 * @return array <p>*/
function cubrid_fetch_assoc($result, $type = null) {}

/**
*<div id="function.cubrid-fetch-object" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_fetch_object</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_fetch_object</span> &mdash; <span class="dc-title">Fetch the next row and return it as an object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-fetch-object-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_fetch_object</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$class_name</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$params</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = ?</span></span><br>): <span class="type" style="color:#EAB766">object</span></div>  <p class="para rdfs-comment">    This function returns an object with the column names of the result set as    properties. The values of these properties are extracted from the current    row of the result.   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-fetch-object-parameters"> <h3 class="title">参数</h3> <span>  <dl>     <dt><span class="parameter" style="color:#3A95FF">result</span></dt>   <dd><p class="para"><span class="parameter" style="color:#3A95FF">result</span> comes from a call to <span class="function">{@link cubrid_execute()}</span></p></dd>        <dt><span class="parameter" style="color:#3A95FF">class_name</span></dt>      <dd>       <p class="para">        The name of the class to instantiate. If not specified, a        <span class="classname"><a href="https://www.php.net/manual/zh/class.stdclass.php" class="classname">stdClass</a></span> (stdClass is PHP&#039;s generic empty class        that&#039;s used when casting other types to objects) object is returned.       </p>     </dd>            <dt><span class="parameter" style="color:#3A95FF">params</span></dt>      <dd>       <p class="para">        An optional <span class="type" style="color:#EAB766">array</span> of parameters to pass to the constructor        for <span class="parameter" style="color:#3A95FF">class_name</span> objects.       </p>     </dd>            <dt><span class="parameter" style="color:#3A95FF">type</span></dt>      <dd>       <p class="para">        Type can only be CUBRID_LOB, this parameter will be used only when you        need to operate the lob object.       </p>     </dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-fetch-object-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    An object, when process is successful.  </p>   <p class="para">    <strong><span>false</span></strong>, when there are no more rows; NULL, when process is unsuccessful.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-fetch-object-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3587">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_fetch_object()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$res </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM code"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">cubrid_fetch_object</span><span style="color: #007700">(</span><span style="color: #9876AA">$res</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">// if you want to operate LOB object, you can use cubrid_fetch_object($res, CUBRID_LOB)<br /><br /></span><span style="color: #007700">class </span><span style="color: #9876AA">demodb_code </span><span style="color: #007700">{<br />    public </span><span style="color: #9876AA">$s_name </span><span style="color: #007700">= </span><span style="color: #9876AA">null</span><span style="color: #007700">;<br />    public </span><span style="color: #9876AA">$f_name </span><span style="color: #007700">= </span><span style="color: #9876AA">null</span><span style="color: #007700">;<br /><br />    public function </span><span style="color: #9876AA">toString</span><span style="color: #007700">() {<br />        </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$this</span><span style="color: #007700">);<br />    }<br />}<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">cubrid_fetch_object</span><span style="color: #007700">(</span><span style="color: #9876AA">$res</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb_code"</span><span style="color: #007700">));<br /><br /></span><span style="color: #FF8000">// if you want to operate LOB object, you can use cubrid_fetch_object($res, "demodb_code", CUBRID_LOB)<br /><br /></span><span style="color: #007700">class </span><span style="color: #9876AA">demodb_code_construct </span><span style="color: #007700">extends </span><span style="color: #9876AA">demodb_code </span><span style="color: #007700">{<br />    public function </span><span style="color: #9876AA">__construct</span><span style="color: #007700">(</span><span style="color: #9876AA">$s</span><span style="color: #007700">, </span><span style="color: #9876AA">$f</span><span style="color: #007700">) {<br />        </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">s_name </span><span style="color: #007700">= </span><span style="color: #9876AA">$s</span><span style="color: #007700">; <br />        </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">f_name </span><span style="color: #007700">= </span><span style="color: #9876AA">$f</span><span style="color: #007700">; <br />    }   <br />}<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">cubrid_fetch_object</span><span style="color: #007700">(</span><span style="color: #9876AA">$res</span><span style="color: #007700">, </span><span style="color: #DD0000">'demodb_code_construct'</span><span style="color: #007700">, array(</span><span style="color: #DD0000">'s_name'</span><span style="color: #007700">, </span><span style="color: #DD0000">'f_name'</span><span style="color: #007700">)));<br /><br /></span><span style="color: #FF8000">// if you want to operate LOB object, you can use cubrid_fetch_object($res, 'demodb_code_construct', array('s_name', 'f_name'), CUBRID_LOB)<br /><br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">cubrid_fetch_object</span><span style="color: #007700">(</span><span style="color: #9876AA">$res</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$res</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>object(stdClass)#1 (2) {<br>  [&quot;s_name&quot;]=&gt;<br>  string(1) &quot;X&quot;<br>  [&quot;f_name&quot;]=&gt;<br>  string(5) &quot;Mixed&quot;<br>}<br>object(demodb_code)#1 (2) {<br>  [&quot;s_name&quot;]=&gt;<br>  string(1) &quot;W&quot;<br>  [&quot;f_name&quot;]=&gt;<br>  string(5) &quot;Woman&quot;<br>}<br>object(demodb_code_construct)#1 (2) {<br>  [&quot;s_name&quot;]=&gt;<br>  string(6) &quot;s_name&quot;<br>  [&quot;f_name&quot;]=&gt;<br>  string(6) &quot;f_name&quot;<br>}<br>object(stdClass)#1 (2) {<br>  [&quot;s_name&quot;]=&gt;<br>  string(1) &quot;B&quot;<br>  [&quot;f_name&quot;]=&gt;<br>  string(6) &quot;Bronze&quot;<br>}<br></span></div>    </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-fetch-object-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_execute()} - Execute a prepared SQL statement</span></li>   <li class="member"><span class="function">{@link cubrid_fetch()} - Fetch the next row from a result set</span></li>   <li class="member"><span class="function">{@link cubrid_fetch_array()} - Fetch a result row as an associative array, a numeric array, or both</span></li>   <li class="member"><span class="function">{@link cubrid_fetch_assoc()} - Return the associative array that corresponds to the fetched row</span></li>   <li class="member"><span class="function">{@link cubrid_fetch_row()} - Return a numerical array with the values of the current row</span></li>   </ul>  </span> </div></div>
 * @return object <p>*/
function cubrid_fetch_object($result, $class_name = null, $params = null, $type = null) {}

/**
*<div id="function.cubrid-data-seek" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_data_seek</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_data_seek</span> &mdash; <span class="dc-title">Move the internal row pointer of the CUBRID result</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-data-seek-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_data_seek</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$row_number</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    This function performs the moving of the internal row pointer of the    CUBRID result (associated with the specified result identifier) to point    to a specific row number. There are functions, such as    <span class="function">{@link cubrid_fetch_assoc()}</span>, which use the current stored    value of <span class="parameter" style="color:#3A95FF">row number</span>.   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-data-seek-parameters"> <h3 class="title">参数</h3> <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">result</span></dt>  <dd><p class="para">The result.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">row_number</span></dt>  <dd><p class="para">This is the desired row number of the new result pointer.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-data-seek-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> on success or <strong><span>false</span></strong> on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-data-seek-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3563">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_data_seek()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"127.0.0.1"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM code"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_data_seek</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_row</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_data_seek</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_row</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_data_seek</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">4</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_row</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>       <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(2) {<br>  [0]=&gt;<br>  string(1) &quot;X&quot;<br>  [1]=&gt;<br>  string(5) &quot;Mixed&quot;<br>}<br>array(2) {<br>  [0]=&gt;<br>  string(1) &quot;M&quot;<br>  [1]=&gt;<br>  string(3) &quot;Man&quot;<br>}<br>array(2) {<br>  [0]=&gt;<br>  string(1) &quot;S&quot;<br>  [1]=&gt;<br>  string(6) &quot;Silver&quot;<br>}<br></span></div>    </div>  </div> </div></div>
 * @return bool <p>*/
function cubrid_data_seek($result, $row_number) {}

/**
*<div id="function.cubrid-fetch-lengths" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_fetch_lengths</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_fetch_lengths</span> &mdash; <span class="dc-title">Return an array with the lengths of the values of each field from the current row</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-fetch-lengths-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_fetch_lengths</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">    This function returns a numeric array with the lengths of the values of    each field from the current row of the result set or it returns FALSE on    failure.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    If field data type is BLOB/CLOB, you should get its length by using    <span class="function">{@link cubrid_lob_size()}</span>.   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-fetch-lengths-parameters"> <h3 class="title">参数</h3> <span>  <dl>        <dt><span class="parameter" style="color:#3A95FF">result</span></dt>    <dd><p class="para"><span class="parameter" style="color:#3A95FF">result</span> comes from a call to <span class="function">{@link cubrid_execute()}</span></p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-fetch-lengths-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    A numeric array, when process is successful.  </p>   <p class="para">    <strong><span>false</span></strong> on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-fetch-lengths-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3584">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_fetch_lengths()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM game WHERE host_year=2004 AND nation_code='AUS' AND medal='G'"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_row</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$lens </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_lengths</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$lens</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [0] =&gt; 2004<br>    [1] =&gt; 20085<br>    [2] =&gt; 15118<br>    [3] =&gt; 30134<br>    [4] =&gt; AUS<br>    [5] =&gt; G<br>    [6] =&gt; 2004-8-20<br>)<br>Array<br>(<br>    [0] =&gt; 4<br>    [1] =&gt; 5<br>    [2] =&gt; 5<br>    [3] =&gt; 5<br>    [4] =&gt; 3<br>    [5] =&gt; 1<br>    [6] =&gt; 10<br>)<br></span></div>    </div>  </div> </div></div>
 * @return array <p>*/
function cubrid_fetch_lengths($result) {}

/**
*<div id="function.cubrid-fetch-field" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_fetch_field</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.1)</p><p class="refpurpose"><span class="refname">cubrid_fetch_field</span> &mdash; <span class="dc-title">Get column information from a result and return as an object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-fetch-field-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_fetch_field</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$field_offset</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766">object</span></div>  <p class="para rdfs-comment">    This function returns an object with certain properties of the specific    column. The properties of the object are:  </p>  <p class="para">    <dl>      <dt><span class="parameter" style="color:#3A95FF">name</span></dt>  <dd><p class="para">column name</p></dd>        <dt><span class="parameter" style="color:#3A95FF">table</span></dt>  <dd><p class="para">name of the table that the column belongs to</p></dd>        <dt><span class="parameter" style="color:#3A95FF">def</span></dt>  <dd><p class="para">default value of the column</p></dd>        <dt><span class="parameter" style="color:#3A95FF">max_length</span></dt>  <dd><p class="para">maximum length of the column</p></dd>        <dt><span class="parameter" style="color:#3A95FF">not_null</span></dt>  <dd><p class="para">1 if the column cannot be NULL</p></dd>        <dt><span class="parameter" style="color:#3A95FF">primary_key</span></dt>  <dd><p class="para">1 if the column is a primary key</p></dd>        <dt><span class="parameter" style="color:#3A95FF">unique_key</span></dt>  <dd><p class="para">1 if the column is an unique key</p></dd>        <dt><span class="parameter" style="color:#3A95FF">multiple_key</span></dt>  <dd><p class="para">1 if the column is a non-unique key</p></dd>        <dt><span class="parameter" style="color:#3A95FF">numeric</span></dt>  <dd><p class="para">1 if the column is numeric</p></dd>        <dt><span class="parameter" style="color:#3A95FF">blob</span></dt>  <dd><p class="para">1 if the column is a BLOB</p></dd>        <dt><span class="parameter" style="color:#3A95FF">type</span></dt>  <dd><p class="para">the type of the column</p></dd>        <dt><span class="parameter" style="color:#3A95FF">unsigned</span></dt>  <dd><p class="para">1 if the column is unsigned</p></dd>        <dt><span class="parameter" style="color:#3A95FF">zerofill</span></dt>  <dd><p class="para">1 if the column is zero-filled</p></dd>     </dl>    </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-fetch-field-parameters"> <h3 class="title">参数</h3> <span>  <dl>        <dt><span class="parameter" style="color:#3A95FF">result</span></dt>    <dd><p class="para"><span class="parameter" style="color:#3A95FF">result</span> comes from a call to <span class="function">{@link cubrid_execute()}</span></p></dd>          <dt><span class="parameter" style="color:#3A95FF">field_offset</span></dt>    <dd><p class="para">     The numerical field offset. If the field offset is not specified, the     next field (that was not yet retrieved by this function) is retrieved.     The <span class="parameter" style="color:#3A95FF">field_offset</span> starts at 0.    </p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-fetch-field-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Object with certain properties of the specific column, when process is successful.  </p>   <p class="para">    <strong><span>false</span></strong> on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-fetch-field-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3581">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_fetch_field()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT event_code,athlete_code,nation_code,game_date FROM game WHERE host_year=1988 and event_code=20001;"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">cubrid_fetch_row</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">cubrid_field_seek</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$field </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_field</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n--- Field Properties ---\n"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"name:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">name</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"table:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">table</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s \"%s\"\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"default value:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">def</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %d\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"max length:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">max_length</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %d\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"not null:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">not_null</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %d\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"primary key:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">primary_key</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %d\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"unique key:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">unique_key</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %d\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"multiple key:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">multiple_key</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %d\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"numeric:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">numeric</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %d\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"blob:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">blob</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"type:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">type</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %d\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"unsigned:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">unsigned</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %d\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"zerofill:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">zerofill</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(4) {<br>  [0]=&gt;<br>  string(5) &quot;20001&quot;<br>  [1]=&gt;<br>  string(5) &quot;16681&quot;<br>  [2]=&gt;<br>  string(3) &quot;KOR&quot;<br>  [3]=&gt;<br>  string(9) &quot;1988-9-30&quot;<br>}<br><br>--- Field Properties ---<br>name:                          athlete_code<br>table:                         game<br>default value:                 &quot;&quot;<br>max length:                    0<br>not null:                      1<br>primary key:                   1<br>unique key:                    1<br>multiple key:                  0<br>numeric:                       1<br>blob:                          0<br>type:                          integer<br>unsigned:                      0<br>zerofill:                      0<br></span></div>    </div>  </div> </div></div>
 * @return object <p>*/
function cubrid_fetch_field($result, $field_offset = 0) {}

/**
*<div id="function.cubrid-column-names" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_column_names</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_column_names</span> &mdash; <span class="dc-title">Get the column names in result</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-column-names-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_column_names</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$req_identifier</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_column_names()</strong></span> function is used to get the    column names of the query result by using <span class="parameter" style="color:#3A95FF">req_identifier</span>.  </p> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-column-names-parameters"> <h3 class="title">参数</h3> <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">req_identifier</span></dt>  <dd><p class="para">Request identifier.</p></dd>     </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-column-names-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Array of string values containing the column names, when process is successful, 或者在失败时返回 <strong><span>false</span></strong>.   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-column-names-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3380">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_column_names()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM game WHERE host_year=2004 AND nation_code='AUS' AND medal='G'"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$column_names </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_column_names</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$column_types </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_column_types</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %-30s %-15s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Column Names"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Column Types"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Column Maxlen"</span><span style="color: #007700">);<br />for(</span><span style="color: #9876AA">$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">$size </span><span style="color: #007700">= </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$column_names</span><span style="color: #007700">); </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">$size</span><span style="color: #007700">; </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br />    </span><span style="color: #9876AA">$column_len </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_field_len</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">, </span><span style="color: #9876AA">$i</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %-30s %-15s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$column_names</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">], </span><span style="color: #9876AA">$column_types</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">], </span><span style="color: #9876AA">$column_len</span><span style="color: #007700">); <br />}<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Column Names                   Column Types                   Column Maxlen  <br>host_year                      integer                        11             <br>event_code                     integer                        11             <br>athlete_code                   integer                        11             <br>stadium_code                   integer                        11             <br>nation_code                    char                           3              <br>medal                          char                           1              <br>game_date                      date                           10             <br></span></div>   </div>  </div> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-column-names-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_prepare()} - Prepare a SQL statement for execution</span></li>    <li class="member"><span class="function">{@link cubrid_execute()} - Execute a prepared SQL statement</span></li>    <li class="member"><span class="function">{@link cubrid_column_types()} - Get column types in result</span></li>   </ul>  </span> </div></div>
 * @return array <p>*/
function cubrid_column_names($req_identifier) {}

/**
*<div id="function.cubrid-column-types" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_column_types</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_column_types</span> &mdash; <span class="dc-title">Get column types in result</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-column-types-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_column_types</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$req_identifier</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_column_types()</strong></span> function gets column types of    query results by using <span class="parameter" style="color:#3A95FF">req_identifier</span>.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-column-types-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">req_identifier</span></dt>    <dd><p class="para">Request identifier.</p></dd>     </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-column-types-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Array of string values containing the column types, when process is successful, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-column-types-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3383">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_column_types()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM game WHERE host_year=2004 AND nation_code='AUS' AND medal='G'"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$column_names </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_column_names</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$column_types </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_column_types</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %-30s %-15s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Column Names"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Column Types"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Column Maxlen"</span><span style="color: #007700">);<br />for(</span><span style="color: #9876AA">$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">$size </span><span style="color: #007700">= </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$column_names</span><span style="color: #007700">); </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">$size</span><span style="color: #007700">; </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br />    </span><span style="color: #9876AA">$column_len </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_field_len</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">, </span><span style="color: #9876AA">$i</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %-30s %-15s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$column_names</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">], </span><span style="color: #9876AA">$column_types</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">], </span><span style="color: #9876AA">$column_len</span><span style="color: #007700">); <br />}<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Column Names                   Column Types                   Column Maxlen  <br>host_year                      integer                        11             <br>event_code                     integer                        11             <br>athlete_code                   integer                        11             <br>stadium_code                   integer                        11             <br>nation_code                    char                           3              <br>medal                          char                           1              <br>game_date                      date                           10             <br></span></div>   </div>  </div> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-column-types-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_column_names()} - Get the column names in result</span></li>    <li class="member"><span class="function">{@link cubrid_prepare()} - Prepare a SQL statement for execution</span></li>    <li class="member"><span class="function">{@link cubrid_execute()} - Execute a prepared SQL statement</span></li>   </ul>  </span> </div></div>
 * @return array <p>*/
function cubrid_column_types($req_identifier) {}

/**
*<div id="function.cubrid-field-seek" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_field_seek</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_field_seek</span> &mdash; <span class="dc-title">Move the result set cursor to the specified field offset</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-field-seek-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_field_seek</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$field_offset</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    This function moves the result set cursor to the specified field offset.    This offset is used by <span class="function">{@link cubrid_fetch_field()}</span> if it    doesn&#039;t include a field offset. It returns TRUE on success or FALSE on    failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-field-seek-parameters"> <h3 class="title">参数</h3> <span>  <dl>        <dt><span class="parameter" style="color:#3A95FF">result</span></dt>    <dd><p class="para"><span class="parameter" style="color:#3A95FF">result</span> comes from a call to <span class="function">{@link cubrid_execute()}</span></p></dd>            <dt><span class="parameter" style="color:#3A95FF">field_offset</span></dt>     <dd><p class="para">       The numerical field offset. The <span class="parameter" style="color:#3A95FF">field_offset</span>       starts at 0. If <span class="parameter" style="color:#3A95FF">field_offset</span> does not exist, an       error of level <strong><span>E_WARNING</span></strong> is also issued.     </p></dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-field-seek-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <strong><span>true</span></strong> on success.  </p>   <p class="para">    <strong><span>false</span></strong> on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-field-seek-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3602">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_field_seek()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT event_code,athlete_code,nation_code,game_date FROM game WHERE host_year=1988 and event_code=20001;"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">cubrid_fetch_row</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">cubrid_field_seek</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$field </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_field</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n--- Field Properties ---\n"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"name:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">name</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"table:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">table</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s \"%s\"\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"default value:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">def</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %d\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"max length:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">max_length</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %d\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"not null:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">not_null</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %d\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"unique key:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">unique_key</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %d\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"multiple key:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">multiple_key</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %d\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"numeric:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">numeric</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"type:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$field</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">type</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(4) {<br>  [0]=&gt;<br>  string(5) &quot;20001&quot;<br>  [1]=&gt;<br>  string(5) &quot;16132&quot;<br>  [2]=&gt;<br>  string(3) &quot;KOR&quot;<br>  [3]=&gt;<br>  string(9) &quot;1988-09-30&quot;<br>}<br><br>--- Field Properties ---<br>name:                          athlete_code<br>table:                         game<br>default value:                 &quot;&quot;<br>max length:                    0<br>not null:                      1<br>unique key:                    1<br>multiple key:                  0<br>numeric:                       1<br>type:                          integer<br></span></div>    </div>  </div> </div></div>
 * @return bool <p>*/
function cubrid_field_seek($result, $field_offset) {}

/**
*<div id="function.cubrid-free-result" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_free_result</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_free_result</span> &mdash; <span class="dc-title">Free the memory occupied by the result data</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-free-result-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_free_result</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$req_identifier</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    This function frees the memory occupied by the result data. It returns    <strong><span>true</span></strong> on success or <strong><span>false</span></strong> on failure. Note that it can only frees the    client fetch buffer now, and if you want free all memory, use function    <span class="function">{@link cubrid_close_request()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-free-result-parameters"> <h3 class="title">参数</h3> <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">req_identifier</span></dt>  <dd><p class="para">This is the request identifier.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-free-result-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-free-result-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3422">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_free_result()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php <br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM history WHERE host_year=2004 ORDER BY event_code"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_assoc</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_free_result</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(5) {<br>  [&quot;event_code&quot;]=&gt;<br>  string(5) &quot;20005&quot;<br>  [&quot;athlete&quot;]=&gt;<br>  string(12) &quot;Hayes Joanna&quot;<br>  [&quot;host_year&quot;]=&gt;<br>  string(4) &quot;2004&quot;<br>  [&quot;score&quot;]=&gt;<br>  string(5) &quot;12.37&quot;<br>  [&quot;unit&quot;]=&gt;<br>  string(4) &quot;time&quot;<br>}<br></span></div>    </div>  </div> </div></div>
 * @return bool <p>*/
function cubrid_free_result($req_identifier) {}

/**
*<div id="function.cubrid-field-name" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_field_name</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_field_name</span> &mdash; <span class="dc-title">Return the name of the specified field index</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-field-name-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_field_name</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$field_offset</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">    This function returns the name of the specified field index on success or    it returns FALSE on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-field-name-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">result</span></dt>    <dd><p class="para"><span class="parameter" style="color:#3A95FF">result</span> comes from a call to <span class="function">{@link cubrid_execute()}</span></p></dd>          <dt><span class="parameter" style="color:#3A95FF">field_offset</span></dt>    <dd><p class="para">     The numerical field offset. The <span class="parameter" style="color:#3A95FF">field_offset</span>     starts at 0. If <span class="parameter" style="color:#3A95FF">field_offset</span> does not exist, an     error of level <strong><span>E_WARNING</span></strong> is also issued.    </p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-field-name-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Name of specified field index, on success.  </p>   <p class="para">    <strong><span>false</span></strong> on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-field-name-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3599">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_field_name()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM game WHERE host_year=2004 AND nation_code='AUS' AND medal='G'"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$col_num </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_num_cols</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Field Name"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Field Flags"</span><span style="color: #007700">);<br />for(</span><span style="color: #9876AA">$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">$col_num</span><span style="color: #007700">; </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">cubrid_field_name</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">, </span><span style="color: #9876AA">$i</span><span style="color: #007700">), </span><span style="color: #9876AA">cubrid_field_flags</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">, </span><span style="color: #9876AA">$i</span><span style="color: #007700">)); <br />}<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Field Name                     Field Flags<br>host_year                      not_null primary_key unique_key<br>event_code                     not_null primary_key unique_key foreign_key<br>athlete_code                   not_null primary_key unique_key foreign_key<br>stadium_code                   not_null<br>nation_code                    <br>medal                          <br>game_date                      <br></span></div>    </div>  </div> </div></div>
 * @return string <p>*/
function cubrid_field_name($result, $field_offset) {}

/**
*<div id="function.cubrid-field-table" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_field_table</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_field_table</span> &mdash; <span class="dc-title">Return the name of the table of the specified field</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-field-table-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_field_table</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$field_offset</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">    This function returns the name of the table of the specified field. This is useful when using large select queries with JOINS.   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-field-table-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">result</span></dt>    <dd>     <p class="para"><span class="parameter" style="color:#3A95FF">result</span> comes from a call to     <span class="function">{@link cubrid_execute()}</span></p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">field_offset</span></dt>    <dd><p class="para">     The numerical field offset. The <span class="parameter" style="color:#3A95FF">field_offset</span>     starts at 0. If <span class="parameter" style="color:#3A95FF">field_offset</span> does not exist, an     error of level <strong><span>E_WARNING</span></strong> is also issued.    </p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-field-table-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Name of the table of the specified field, on success.  </p>  <p class="para">    <strong><span>false</span></strong> when invalid field_offset value.  </p>  <p class="para">    -1 if SQL sentence is not SELECT.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-field-table-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3605">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_field_table()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM code"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$col_num </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_num_cols</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-15s %-15s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Field Table"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Field Name"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Field Type"</span><span style="color: #007700">);<br />for(</span><span style="color: #9876AA">$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">$col_num</span><span style="color: #007700">; </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-15s %-15s %s\n"</span><span style="color: #007700">, <br />        </span><span style="color: #9876AA">cubrid_field_table</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">, </span><span style="color: #9876AA">$i</span><span style="color: #007700">), </span><span style="color: #9876AA">cubrid_field_name</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">, </span><span style="color: #9876AA">$i</span><span style="color: #007700">), </span><span style="color: #9876AA">cubrid_field_type</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">, </span><span style="color: #9876AA">$i</span><span style="color: #007700">)); <br />}<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Field Table     Field Name      Field Type<br>code            s_name          char<br>code            f_name          varchar<br></span></div>    </div>  </div> </div></div>
 * @return string <p>*/
function cubrid_field_table($result, $field_offset) {}

/**
*<div id="function.cubrid-field-len" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_field_len</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_field_len</span> &mdash; <span class="dc-title">Get the maximum length of the specified field</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-field-len-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_field_len</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$field_offset</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">    This function returns the maximum length of the specified field on success, or it returns FALSE on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-field-len-parameters"> <h3 class="title">参数</h3> <span>  <dl>        <dt><span class="parameter" style="color:#3A95FF">result</span></dt>    <dd><p class="para"><span class="parameter" style="color:#3A95FF">result</span> comes from a call to <span class="function">{@link cubrid_execute()}</span></p></dd>          <dt><span class="parameter" style="color:#3A95FF">field_offset</span></dt>  <dd><p class="para">The numerical field offset. The <span class="parameter" style="color:#3A95FF">field_offset</span> starts at 0. If <span class="parameter" style="color:#3A95FF">field_offset</span> does not exist, an error of level <strong><span>E_WARNING</span></strong> is also issued.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-field-len-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Maximum length, when process is successful.  </p>   <p class="para">    <strong><span>false</span></strong> on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-field-len-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3596">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_field_len()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM game WHERE host_year=2004 AND nation_code='AUS' AND medal='G'"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$column_names </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_column_names</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$column_types </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_column_types</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %-30s %-15s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Column Names"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Column Types"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Column Maxlen"</span><span style="color: #007700">);<br />for(</span><span style="color: #9876AA">$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">$size </span><span style="color: #007700">= </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$column_names</span><span style="color: #007700">); </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">$size</span><span style="color: #007700">; </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br />    </span><span style="color: #9876AA">$column_len </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_field_len</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">, </span><span style="color: #9876AA">$i</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %-30s %-15s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$column_names</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">], </span><span style="color: #9876AA">$column_types</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">], </span><span style="color: #9876AA">$column_len</span><span style="color: #007700">); <br />}<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Column Names                   Column Types                   Column Maxlen  <br>host_year                      integer                        11             <br>event_code                     integer                        11             <br>athlete_code                   integer                        11             <br>stadium_code                   integer                        11             <br>nation_code                    char                           3              <br>medal                          char                           1              <br>game_date                      date                           10                 <br></span></div>    </div>  </div> </div></div>
 * @return int <p>*/
function cubrid_field_len($result, $field_offset) {}

/**
*<div id="function.cubrid-field-type" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_field_type</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_field_type</span> &mdash; <span class="dc-title">Return the type of the column corresponding to the given field offset</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-field-type-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_field_type</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$field_offset</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">    This function returns the type of the column corresponding to the given    field offset. The returned field type could be one of the following:    &quot;int&quot;, &quot;real&quot;, &quot;string&quot;, etc.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-field-type-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">result</span></dt>    <dd>     <p class="para"><span class="parameter" style="color:#3A95FF">result</span> comes from a call to     <span class="function">{@link cubrid_execute()}</span></p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">field_offset</span></dt>    <dd><p class="para">     The numerical field offset. The <span class="parameter" style="color:#3A95FF">field_offset</span>     starts at 0. If <span class="parameter" style="color:#3A95FF">field_offset</span> does not exist, an     error of level <strong><span>E_WARNING</span></strong> is also issued.    </p></dd>     </dl> </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-field-type-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Type of the column, on success.  </p>  <p class="para">    <strong><span>false</span></strong> when invalid field_offset value.  </p>  <p class="para">    -1 if SQL sentence is not SELECT.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-field-type-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3608">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_field_type()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM code"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$col_num </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_num_cols</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-15s %-15s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Field Table"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Field Name"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Field Type"</span><span style="color: #007700">);<br />for(</span><span style="color: #9876AA">$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">$col_num</span><span style="color: #007700">; </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-15s %-15s %s\n"</span><span style="color: #007700">, <br />        </span><span style="color: #9876AA">cubrid_field_table</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">, </span><span style="color: #9876AA">$i</span><span style="color: #007700">), </span><span style="color: #9876AA">cubrid_field_name</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">, </span><span style="color: #9876AA">$i</span><span style="color: #007700">), </span><span style="color: #9876AA">cubrid_field_type</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">, </span><span style="color: #9876AA">$i</span><span style="color: #007700">)); <br />}<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Field Table     Field Name      Field Type<br>code            s_name          char<br>code            f_name          varchar<br></span></div>    </div>  </div> </div></div>
 * @return string <p>*/
function cubrid_field_type($result, $field_offset) {}

/**
*<div id="function.cubrid-field-flags" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_field_flags</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_field_flags</span> &mdash; <span class="dc-title">Return a string with the flags of the given field offset</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-field-flags-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_field_flags</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$field_offset</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">    This function returns a string with the flags of the given field offset    separated by space. You can split the returned value using explode. The    possible flags could be: <strong><span>not_null</span></strong>,    <strong><span>primary_key</span></strong>, <strong><span>unique_key</span></strong>,    <strong><span>foreign_key</span></strong>, <strong><span>auto_increment</span></strong>,    <strong><span>shared</span></strong>, <strong><span>reverse_index</span></strong>,    <strong><span>reverse_unique</span></strong> and <strong><span>timestamp</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-field-flags-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">result</span></dt>    <dd><p class="para"><span class="parameter" style="color:#3A95FF">result</span> comes from a call to <span class="function">{@link cubrid_execute()}</span></p></dd>          <dt><span class="parameter" style="color:#3A95FF">field_offset</span></dt>    <dd><p class="para">     The numerical field offset. The <span class="parameter" style="color:#3A95FF">field_offset</span>     starts at 0. If <span class="parameter" style="color:#3A95FF">field_offset</span> does not exist, an     error of level <strong><span>E_WARNING</span></strong> is also issued.    </p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-field-flags-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    A string with flags, when process is successful.  </p>  <p class="para">    <strong><span>false</span></strong> when invalid field_offset value.  </p>  <p class="para">    -1 if SQL sentence is not SELECT.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-field-flags-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3593">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_field_flags()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM game WHERE host_year=2004 AND nation_code='AUS' AND medal='G'"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$col_num </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_num_cols</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Field Name"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Field Flags"</span><span style="color: #007700">);<br />for(</span><span style="color: #9876AA">$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">$col_num</span><span style="color: #007700">; </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">cubrid_field_name</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">, </span><span style="color: #9876AA">$i</span><span style="color: #007700">), </span><span style="color: #9876AA">cubrid_field_flags</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">, </span><span style="color: #9876AA">$i</span><span style="color: #007700">)); <br />}<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Field Name                     Field Flags<br>host_year                      not_null primary_key unique_key<br>event_code                     not_null primary_key unique_key foreign_key<br>athlete_code                   not_null primary_key unique_key foreign_key<br>stadium_code                   not_null<br>nation_code                    <br>medal                          <br>game_date                      <br></span></div>    </div>  </div> </div></div>
 * @return string <p>*/
function cubrid_field_flags($result, $field_offset) {}

/**
*<div id="function.cubrid-real-escape-string" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_real_escape_string</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_real_escape_string</span> &mdash; <span class="dc-title">Escape special characters in a string for use in an SQL statement</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-real-escape-string-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_real_escape_string</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$unescaped_string</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">    This function returns the escaped string version of the given string. It    will escape the following characters: <strong><span>&#039;</span></strong>.     In general, single quotations are used to enclose character string. Double    quotations may be used as well depending on the value of ansi_quotes,    which is a parameter related to SQL statement. If the ansi_quotes value is    set to no, character string enclosed by double quotations is handled as    character string, not as an identifier. The default value is yes.    If you want to include a single quote as part of a character string, enter    two single quotes in a row.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-real-escape-string-parameters"> <h3 class="title">参数</h3> <span>  <dl>         <dt><span class="parameter" style="color:#3A95FF">unescaped_string</span></dt>     <dd><p class="para">The string that is to be escaped.</p></dd>             <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>     <dd><p class="para">     The CUBRID connection. If the connection identifier is not specified, the     last connection opened by <span class="function">{@link cubrid_connect()}</span> is assumed.     </p></dd>      </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-real-escape-string-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Escaped string version of the given string, on success.  </p>   <p class="para">    <strong><span>false</span></strong> on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-real-escape-string-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3626">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_real_escape_string()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$unescaped_str </span><span style="color: #007700">= </span><span style="color: #DD0000">' !"#$%&amp;\'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~'</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$escaped_str </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_real_escape_string</span><span style="color: #007700">(</span><span style="color: #9876AA">$unescaped_str</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$len </span><span style="color: #007700">= </span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$unescaped_str</span><span style="color: #007700">);<br /><br />@</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"DROP TABLE cubrid_test"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"CREATE TABLE cubrid_test (t char(</span><span style="color: #9876AA">$len</span><span style="color: #DD0000">))"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO cubrid_test (t) VALUES('</span><span style="color: #9876AA">$escaped_str</span><span style="color: #DD0000">')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM cubrid_test"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_assoc</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(1) {<br>  [&quot;t&quot;]=&gt;<br>  string(95) &quot; !&quot;#$%&amp;&#039;()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~&quot;<br>}<br></span></div>    </div>  </div> </div></div>
 * @return string <p>*/
function cubrid_real_escape_string($unescaped_string, $conn_identifier = null) {}

/**
*<div id="function.cubrid-client-encoding" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_client_encoding</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.1)</p><p class="refpurpose"><span class="refname">cubrid_client_encoding</span> &mdash; <span class="dc-title">Return the current CUBRID connection charset</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-client-encoding-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_client_encoding</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   This function returns the current CUBRID connection charset and is similar   to the CUBRID function <span class="function">{@link cubrid_get_charset()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-client-encoding-parameters"> <h3 class="title">参数</h3> <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">The CUBRID connection. If the connection identifier is not specified, the last link opened by <span class="function">{@link cubrid_connect()}</span> is assumed. </p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-client-encoding-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A string that represents the CUBRID connection charset; on success.  </p>   <p class="para">    <strong><span>false</span></strong> on failure.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-client-encoding-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3557">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_client_encoding()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$con </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br />if (!</span><span style="color: #9876AA">$con</span><span style="color: #007700">)<br />{<br />    die(</span><span style="color: #DD0000">'Could not connect.'</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"CUBRID current charset: %s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">cubrid_client_encoding</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>CUBRID current charset: iso8859-1<br></span></div>    </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-client-encoding-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_get_charset()} - Return the current CUBRID connection charset</span></li>   </ul>  </span> </div></div>
 * @return string <p>*/
function cubrid_client_encoding($conn_identifier = null) {}

/**
*<div id="function.cubrid-ping" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_ping</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.1)</p><p class="refpurpose"><span class="refname">cubrid_ping</span> &mdash; <span class="dc-title">Ping a server connection or reconnect if there is no connection</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-ping-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_ping</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   Checks whether or not the connection to the server is working.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-ping-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>     <dd>      <p class="para">       The CUBRID connection identifier. If the connection identifier is not       specified, the last connection opened by       <span class="function">{@link cubrid_connect()}</span> is assumed.      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-ping-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns <strong><span>true</span></strong> if the connection to the server CUBRID server is working, otherwise <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-ping-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="example-3617">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_ping()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />set_time_limit</span><span style="color: #007700">(</span><span style="color: #9876AA">0</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">'localhost'</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">'demodb'</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// Assuming this query will take a long time <br /></span><span style="color: #9876AA">$sql </span><span style="color: #007700">= </span><span style="color: #DD0000">"select * from athlete"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$sql</span><span style="color: #007700">);<br />if (!</span><span style="color: #9876AA">$result</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">'Query #1 failed, exiting.'</span><span style="color: #007700">;<br />    exit;<br />}<br /><br /></span><span style="color: #FF8000">// Make sure the connection is still alive, if not, try to reconnect <br /></span><span style="color: #007700">if (!</span><span style="color: #9876AA">cubrid_ping</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">)) {<br />    echo </span><span style="color: #DD0000">'Lost connection, exiting after query #1'</span><span style="color: #007700">;<br />    exit;<br />}<br /></span><span style="color: #9876AA">cubrid_free_result</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">// So the connection is still alive, let's run another query <br /></span><span style="color: #9876AA">$sql2 </span><span style="color: #007700">= </span><span style="color: #DD0000">"select * from code"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$result2 </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_query</span><span style="color: #007700">(</span><span style="color: #9876AA">$sql2</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
 * @return bool <p>*/
function cubrid_ping($conn_identifier = null) {}

/**
*<div id="function.cubrid-get-client-info" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_get_client_info</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_get_client_info</span> &mdash; <span class="dc-title">Return the client library version</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-get-client-info-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_get_client_info</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">    This function returns a string that represents the client library version.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-get-client-info-parameters"> <h3 class="title">参数</h3> <span>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-get-client-info-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A string that represents the client library version on success, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-get-client-info-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3431">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_get_client_info()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"CUBRID PHP Version:"</span><span style="color: #007700">, </span><span style="color: #9876AA">cubrid_version</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33088</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /><br />if (!</span><span style="color: #9876AA">$conn</span><span style="color: #007700">) {<br />    die(</span><span style="color: #DD0000">'Connect Error ('</span><span style="color: #007700">. </span><span style="color: #9876AA">cubrid_error_code</span><span style="color: #007700">() .</span><span style="color: #DD0000">')' </span><span style="color: #007700">. </span><span style="color: #9876AA">cubrid_error_msg</span><span style="color: #007700">());<br />}<br /><br /></span><span style="color: #9876AA">$db_params </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_db_parameter</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br />while (list(</span><span style="color: #9876AA">$param_name</span><span style="color: #007700">, </span><span style="color: #9876AA">$param_value</span><span style="color: #007700">) = </span><span style="color: #9876AA">each</span><span style="color: #007700">(</span><span style="color: #9876AA">$db_params</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$param_name</span><span style="color: #007700">, </span><span style="color: #9876AA">$param_value</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$server_info </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_server_info</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$client_info </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_client_info</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Server Info:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$server_info</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Client Info:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$client_info</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$charset </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_charset</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"CUBRID Charset:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$charset</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>CUBRID PHP Version:            9.1.0.0001<br><br>PARAM_ISOLATION_LEVEL          3<br>LOCK_TIMEOUT                   -1<br>MAX_STRING_LENGTH              1073741823<br>PARAM_AUTO_COMMIT              1<br><br>Server Info:                   9.1.0.0212<br>Client Info:                   9.1.0<br><br>CUBRID Charset:                iso8859-1<br></span></div>    </div>  </div> </div></div>
 * @return string <p>*/
function cubrid_get_client_info() {}

/**
*<div id="function.cubrid-get-server-info" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_get_server_info</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_get_server_info</span> &mdash; <span class="dc-title">Return the CUBRID server version</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-get-server-info-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_get_server_info</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">    This function returns a string that represents the CUBRID server version.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-get-server-info-parameters"> <h3 class="title">参数</h3> <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">The CUBRID connection.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-get-server-info-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A string that represents the CUBRID server version on success, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-get-server-info-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3440">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_get_server_info()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"CUBRID PHP Version:"</span><span style="color: #007700">, </span><span style="color: #9876AA">cubrid_version</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33088</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /><br />if (!</span><span style="color: #9876AA">$conn</span><span style="color: #007700">) {<br />    die(</span><span style="color: #DD0000">'Connect Error ('</span><span style="color: #007700">. </span><span style="color: #9876AA">cubrid_error_code</span><span style="color: #007700">() .</span><span style="color: #DD0000">')' </span><span style="color: #007700">. </span><span style="color: #9876AA">cubrid_error_msg</span><span style="color: #007700">());<br />}<br /><br /></span><span style="color: #9876AA">$db_params </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_db_parameter</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br />while (list(</span><span style="color: #9876AA">$param_name</span><span style="color: #007700">, </span><span style="color: #9876AA">$param_value</span><span style="color: #007700">) = </span><span style="color: #9876AA">each</span><span style="color: #007700">(</span><span style="color: #9876AA">$db_params</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$param_name</span><span style="color: #007700">, </span><span style="color: #9876AA">$param_value</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$server_info </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_server_info</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$client_info </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_client_info</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Server Info:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$server_info</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Client Info:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$client_info</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$charset </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_charset</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"CUBRID Charset:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$charset</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>CUBRID PHP Version:            9.1.0.0001<br><br>PARAM_ISOLATION_LEVEL          3<br>LOCK_TIMEOUT                   -1<br>MAX_STRING_LENGTH              1073741823<br>PARAM_AUTO_COMMIT              1<br><br>Server Info:                   9.1.0.0212<br>Client Info:                   9.1.0<br><br>CUBRID Charset:                iso8859-1<br></span></div>    </div>  </div> </div></div>
 * @return string <p>*/
function cubrid_get_server_info($conn_identifier) {}

/**
*<div id="function.cubrid-get-db-parameter" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_get_db_parameter</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_get_db_parameter</span> &mdash; <span class="dc-title">Returns the CUBRID database parameters</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-get-db-parameter-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_get_db_parameter</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   This function returns the CUBRID database parameters, 或者在失败时返回 <strong><span>false</span></strong>.    It returns an associative array with the values for the following parameters:  </p>  <p class="para">  <ul class="simplelist">   <li class="member"><strong><span>PARAM_ISOLATION_LEVEL</span></strong></li>   <li class="member"><strong><span>PARAM_LOCK_TIMEOUT</span></strong></li>   <li class="member"><strong><span>PARAM_MAX_STRING_LENGTH</span></strong></li>   <li class="member"><strong><span>PARAM_AUTO_COMMIT</span></strong></li>  </ul>  </p>  <p class="para">  <table class="doctable table">   <caption><strong>Database parameters</strong></caption>         <thead>      <tr>       <th>Parameter</th>       <th>Description</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PARAM_ISOLATION_LEVEL</td>       <td>The transaction isolation level.</td>      </tr>      <tr>       <td>LOCK_TIMEOUT</td>       <td>CUBRID provides the lock timeout feature, which sets the waiting        time (in seconds) for the lock until the transaction lock setting is        allowed. The default value of the lock_timeout_in_secs parameter is        -1, which means the application client will wait indefinitely until        the transaction lock is allowed.       </td>      </tr>      <tr>       <td>PARAM_AUTO_COMMIT</td>       <td>In CUBRID PHP, auto-commit mode is disabled by default for        transaction management. It can be set by using        <span class="function">{@link cubrid_set_autocommit()}</span>.        </td>      </tr>     </tbody>       </table>  </p>  <p class="para">   The following table shows the isolation levels from 1 to 6. It consists of   table schema (row) and isolation level:  <table class="doctable table">   <caption><strong>Levels of Isolation Supported by CUBRID</strong></caption>         <thead>      <tr>       <th>Name</th>       <th>Description</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>SERIALIZABLE (6)</td>       <td>In this isolation level, problems concerning concurrency (e.g.        dirty read, non-repeatable read, phantom read, etc.) do not        occur.</td>      </tr>      <tr>       <td>REPEATABLE READ CLASS with REPEATABLE READ INSTANCES (5)</td>       <td>Another transaction T2 cannot update the schema of table A while        transaction T1 is viewing table A.       Transaction T1 may experience phantom read for the record R that was       inserted by another transaction T2 when it is repeatedly retrieving a       specific record.</td>      </tr>      <tr>       <td>REPEATABLE READ CLASS with READ COMMITTED INSTANCES (or CURSOR STABILITY) (4)</td>       <td>Another transaction T2 cannot update the schema of table A while        transaction T1 is viewing table A.       Transaction T1 may experience R read (non-repeatable read) that was       updated and committed by another transaction T2 when it is repeatedly       retrieving the record R.</td>      </tr>      <tr>       <td>REPEATABLE READ CLASS with READ UNCOMMITTED INSTANCES (3)</td>       <td>Default isolation level.  Another transaction T2 cannot update        the schema of table A  while transaction T1 is viewing table A.        Transaction T1 may experience R&#039; read (dirty read) for the record that        was updated but not committed by another transaction T2.</td>      </tr>      <tr>       <td>READ COMMITTED CLASS with READ COMMITTED INSTANCES (2)</td>       <td>Transaction T1 may experience A&#039; read (non-repeatable read) for        the table that was updated and committed by another transaction  T2        while it is viewing table A repeatedly.  Transaction T1 may experience        R&#039; read (non-repeatable read) for the record that was updated and        committed by another transaction T2 while it is retrieving the record        R repeatedly.</td>      </tr>      <tr>       <td>READ COMMITTED CLASS with READ UNCOMMITTED INSTANCES (1)</td>       <td>Transaction T1 may experience A&#039; read (non-repeatable read) for        the table that was updated and committed by another transaction T2        while it is repeatedly viewing table A.  Transaction T1 may experience        R&#039; read (dirty read) for the record that was updated but not committed        by another transaction T2.</td>      </tr>     </tbody>       </table>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-get-db-parameter-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>    <dd><p class="para">      The CUBRID connection. If the connection identifier is not specified,      the last link opened by <span class="function">{@link cubrid_connect()}</span> is assumed.     </p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-get-db-parameter-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   An associative array with CUBRID database parameters; on success, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.cubrid-get-db-parameter-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        Change LOCK_TIMEOUT to PARAM_LOCK_TIMEOUT, and MAX_STRING_LENGTH to        PARAM_MAX_STRING_LENGTH in result.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-get-db-parameter-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3434">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_get_db_parameter()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"CUBRID PHP Version:"</span><span style="color: #007700">, </span><span style="color: #9876AA">cubrid_version</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33088</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /><br />if (!</span><span style="color: #9876AA">$conn</span><span style="color: #007700">) {<br />    die(</span><span style="color: #DD0000">'Connect Error ('</span><span style="color: #007700">. </span><span style="color: #9876AA">cubrid_error_code</span><span style="color: #007700">() .</span><span style="color: #DD0000">')' </span><span style="color: #007700">. </span><span style="color: #9876AA">cubrid_error_msg</span><span style="color: #007700">());<br />}<br /><br /></span><span style="color: #9876AA">$db_params </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_db_parameter</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br />while (list(</span><span style="color: #9876AA">$param_name</span><span style="color: #007700">, </span><span style="color: #9876AA">$param_value</span><span style="color: #007700">) = </span><span style="color: #9876AA">each</span><span style="color: #007700">(</span><span style="color: #9876AA">$db_params</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$param_name</span><span style="color: #007700">, </span><span style="color: #9876AA">$param_value</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$server_info </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_server_info</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$client_info </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_client_info</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Server Info:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$server_info</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Client Info:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$client_info</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$charset </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_charset</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"CUBRID Charset:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$charset</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>CUBRID PHP Version:            9.1.0.0001<br><br>PARAM_ISOLATION_LEVEL          3<br>LOCK_TIMEOUT                   -1<br>MAX_STRING_LENGTH              1073741823<br>PARAM_AUTO_COMMIT              1<br><br>Server Info:                   9.1.0.0212<br>Client Info:                   9.1.0<br><br>CUBRID Charset:                iso8859-1<br></span></div>    </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-get-db-parameter-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_set_db_parameter()} - Sets the CUBRID database parameters</span></li>    <li class="member"><span class="function">{@link cubrid_get_autocommit()} - Get auto-commit mode of the connection</span></li>   </ul>  </span> </div></div>
 * @return array <p>*/
function cubrid_get_db_parameter($conn_identifier) {}

/**
*<div id="function.cubrid-get-autocommit" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_get_autocommit</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.4.0)</p><p class="refpurpose"><span class="refname">cubrid_get_autocommit</span> &mdash; <span class="dc-title">Get auto-commit mode of the connection</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-get-autocommit-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_get_autocommit</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_get_autocommit()</strong></span> function is used to get the status of CUBRID   database connection auto-commit mode.  </p>  <p class="para">   For CUBRID 8.4.0, auto-commit mode is disabled by default for transaction   management.  </p>  <p class="para">   For CUBRID 8.4.1, auto-commit mode is enabled by default for transaction   management.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-get-autocommit-parameters"> <h3 class="title">参数</h3> <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">Connection identifier.</p></dd>     </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-get-autocommit-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    <strong><span>true</span></strong>, when auto-commit is on.  </p>  <p class="para">   <strong><span>false</span></strong>, when auto-commit is off.  </p>  <p class="para">   <strong><span>null</span></strong> on error.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-get-autocommit-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_set_autocommit()} - Set autocommit mode of the connection</span></li>   <li class="member"><span class="function">{@link cubrid_commit()} - Commit a transaction</span></li>   </ul>  </span> </div></div>
 * @return bool <p>*/
function cubrid_get_autocommit($conn_identifier) {}

/**
*<div id="function.cubrid-get-charset" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_get_charset</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_get_charset</span> &mdash; <span class="dc-title">Return the current CUBRID connection charset</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-get-charset-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_get_charset</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   This function returns the current CUBRID connection charset and is similar   to the CUBRID MySQL compatible function   <span class="function">{@link cubrid_client_encoding()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-get-charset-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>    <dd><p class="para">The CUBRID connection.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-get-charset-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   A string that represents the CUBRID connection charset on success, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-get-charset-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3425">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_get_charset()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$con </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br />if (!</span><span style="color: #9876AA">$con</span><span style="color: #007700">)<br />{<br />    die(</span><span style="color: #DD0000">'Could not connect.'</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"CUBRID current charset: %s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">cubrid_get_charset</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>CUBRID current charset: iso8859-1<br></span></div>    </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-get-charset-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_client_encoding()} - Return the current CUBRID connection charset</span></li>   </ul>  </span> </div></div>
 * @return string <p>*/
function cubrid_get_charset($conn_identifier) {}

/**
*<div id="function.cubrid-set-autocommit" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_set_autocommit</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.4.0)</p><p class="refpurpose"><span class="refname">cubrid_set_autocommit</span> &mdash; <span class="dc-title">Set autocommit mode of the connection</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-set-autocommit-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_set_autocommit</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$mode</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_set_autocommit()</strong></span> function is used to set the   CUBRID database auto-commit mode of the current database connection.   </p>  <p class="para">    In CUBRID PHP, auto-commit mode is disabled by default for transaction   management. When auto-commit mode is truned from off to on, any pending work is   automatically committed.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-set-autocommit-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>    <dd><p class="para">Connection identifier.</p></dd>          <dt><span class="parameter" style="color:#3A95FF">mode</span></dt>    <dd>     <p class="para">Auto-commit mode. The following constants can be used:</p>     <p class="para">     <ul class="simplelist">       <li class="member"><strong><span>CUBRID_AUTOCOMMIT_FALSE</span></strong></li>       <li class="member"><strong><span>CUBRID_AUTOCOMMIT_TRUE</span></strong></li>     </ul>     </p>    </dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-set-autocommit-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-set-autocommit-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_get_autocommit()} - Get auto-commit mode of the connection</span></li>   <li class="member"><span class="function">{@link cubrid_commit()} - Commit a transaction</span></li>   </ul>  </span> </div></div>
 * @return bool <p>*/
function cubrid_set_autocommit($conn_identifier, $mode) {}

/**
*<div id="function.cubrid-db-name" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_db_name</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.1)</p><p class="refpurpose"><span class="refname">cubrid_db_name</span> &mdash; <span class="dc-title">Get db name from results of cubrid_list_dbs</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-db-name-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_db_name</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$result</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$index</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   Retrieve the database name from a call to <span class="function">{@link cubrid_list_dbs()}</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-db-name-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">result</span></dt>     <dd>      <p class="para">       The result pointer from a call to <span class="function">{@link cubrid_list_dbs()}</span>.      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">index</span></dt>     <dd>      <p class="para">       The index into the result set.      </p>     </dd>       </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-db-name-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the database name on success, and <strong><span>false</span></strong> on failure. If <strong><span>false</span></strong>   is returned, use <span class="function">{@link cubrid_error()}</span> to determine the nature   of the error.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-db-name-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="example-3566">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_db_name()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />error_reporting</span><span style="color: #007700">(</span><span style="color: #9876AA">E_ALL</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">'localhost'</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">'demodb'</span><span style="color: #007700">, </span><span style="color: #DD0000">'dba'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$db_list </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_list_dbs</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$cnt </span><span style="color: #007700">= </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$db_list</span><span style="color: #007700">);<br />while (</span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">$cnt</span><span style="color: #007700">) {<br />    echo </span><span style="color: #9876AA">cubrid_db_name</span><span style="color: #007700">(</span><span style="color: #9876AA">$db_list</span><span style="color: #007700">, </span><span style="color: #9876AA">$i</span><span style="color: #007700">) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />    </span><span style="color: #9876AA">$i</span><span style="color: #007700">++;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>     <div class="example-contents"><p>以上示例会输出：</p></div>     <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>demodb<br></span></div>     </div>   </div>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-db-name-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_list_dbs()} - Return an array with the list of all existing CUBRID databases</span></li>   </ul>  </span> </div></div>
 * @return string <p>*/
function cubrid_db_name($result, $index) {}

/**
 * (PHP 5, CUBRID &gt;= 8.3.1)<br/>
 * Get result data
 * @link https://php.net/manual/en/function.cubrid-db-parameter.php
 * @param resource $conn_identifier <p>
 * The CUBRID connection. If the connection identifier is not specified,
 * the last link opened by cubrid_connect() is assumed.
 * </p>
 * @return array <p>
 * An associative array with CUBRID database
 * parameters; on success. FALSE on failure.
 * </p>
 */
function cubrid_db_parameter($conn_identifier) {}

/**
*<div id="function.cubrid-set-db-parameter" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_set_db_parameter</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.4.0)</p><p class="refpurpose"><span class="refname">cubrid_set_db_parameter</span> &mdash; <span class="dc-title">Sets the CUBRID database parameters</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-set-db-parameter-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_set_db_parameter</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$param_type</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$param_value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_set_db_parameter()</strong></span> function is used to set   the CUBRID database parameters. It can set the following CUBRID database   parameters:  </p>  <p class="para">   <ul class="simplelist">    <li class="member"><strong><span>PARAM_ISOLATION_LEVEL</span></strong></li>    <li class="member"><strong><span>PARAM_LOCK_TIMEOUT</span></strong></li>   </ul>  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    The auto-commit mode can be set by using    <span class="function">{@link cubrid_set_autocommit()}</span>.   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-set-db-parameter-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>     <dd><p class="para">      The CUBRID connection. If the connection identifier is not specified,      the last link opened by <span class="function">{@link cubrid_connect()}</span> is assumed.     </p></dd>          <dt><span class="parameter" style="color:#3A95FF">param_type</span></dt>    <dd><p class="para">Database parameter type.</p></dd>          <dt><span class="parameter" style="color:#3A95FF">param_value</span></dt>    <dd><p class="para">Isolation level value (1-6) or lock timeout (in seconds) value.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-set-db-parameter-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-set-db-parameter-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3545">   <p><strong>示例 #1 <span class="function">{@link cubrid_get_db_parameter()}</span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$params </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_db_parameter</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$params</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_set_autocommit</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_AUTOCOMMIT_TRUE</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_set_db_parameter</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_PARAM_ISOLATION_LEVEL</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$params_new </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_db_parameter</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$params_new</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(4) {<br>  [&quot;PARAM_ISOLATION_LEVEL&quot;]=&gt;<br>  int(3)<br>  [&quot;PARAM_LOCK_TIMEOUT&quot;]=&gt;<br>  int(-1)<br>  [&quot;PARAM_MAX_STRING_LENGTH&quot;]=&gt;<br>  int(1073741823)<br>  [&quot;PARAM_AUTO_COMMIT&quot;]=&gt;<br>  int(0)<br>}<br>array(4) {<br>  [&quot;PARAM_ISOLATION_LEVEL&quot;]=&gt;<br>  int(2)<br>  [&quot;PARAM_LOCK_TIMEOUT&quot;]=&gt;<br>  int(-1)<br>  [&quot;PARAM_MAX_STRING_LENGTH&quot;]=&gt;<br>  int(1073741823)<br>  [&quot;PARAM_AUTO_COMMIT&quot;]=&gt;<br>  int(1)<br>}<br></span></div>    </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-set-db-parameter-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_get_db_parameter()} - Returns the CUBRID database parameters</span></li>    <li class="member"><span class="function">{@link cubrid_set_autocommit()} - Set autocommit mode of the connection</span></li>   </ul>  </span> </div></div>
 * @return bool <p>*/
function cubrid_set_db_parameter($conn_identifier, $param_type, $param_value) {}

/**
*<div id="function.cubrid-get-query-timeout" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_get_query_timeout</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.4.1)</p><p class="refpurpose"><span class="refname">cubrid_get_query_timeout</span> &mdash; <span class="dc-title">Get the query timeout value of the request</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-get-query-timeout-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_get_query_timeout</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$req_identifier</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_get_query_timeout()</strong></span> function is used to get   the query timeout of the request.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-get-query-timeout-parameters"> <h3 class="title">参数</h3> <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">req_identifier</span></dt>  <dd><p class="para">Request identifier.</p></dd>     </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-get-query-timeout-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Returns the query timeout value in milliseconds of the current request on success, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-get-query-timeout-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3437">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_get_query_timeout()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$host </span><span style="color: #007700">= </span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$port </span><span style="color: #007700">= </span><span style="color: #9876AA">33000</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$db </span><span style="color: #007700">= </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$conn </span><span style="color: #007700">=<br /></span><span style="color: #9876AA">cubrid_connect_with_url</span><span style="color: #007700">(</span><span style="color: #DD0000">"CUBRID:</span><span style="color: #9876AA">$host</span><span style="color: #DD0000">:</span><span style="color: #9876AA">$port</span><span style="color: #DD0000">:</span><span style="color: #9876AA">$db</span><span style="color: #DD0000">:::?login_timeout=50000&amp;query_timeout=5000&amp;disconnect_on_query_timeout=yes"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM code"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$timeout </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_query_timeout</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$timeout</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_set_query_timeout</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1000</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$timeout </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_query_timeout</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$timeout</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>int(5000)<br>int(1000)<br></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-get-query-timeout-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_set_query_timeout()} - Set the timeout time of query execution</span></li>   </ul>  </span> </div></div>
 * @return int <p>*/
function cubrid_get_query_timeout($req_identifier) {}

/**
*<div id="function.cubrid-set-query-timeout" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_set_query_timeout</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.4.1)</p><p class="refpurpose"><span class="refname">cubrid_set_query_timeout</span> &mdash; <span class="dc-title">Set the timeout time of query execution</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-set-query-timeout-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_set_query_timeout</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$req_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$timeout</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_set_query_timeout()</strong></span> function is used to set   the timeout time of query execution.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-set-query-timeout-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">req_identifier</span></dt>    <dd><p class="para">Request identifier.</p></dd>          <dt><span class="parameter" style="color:#3A95FF">timeout</span></dt>    <dd>     <p class="para">Timeout time in milliseconds.</p>    </dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-set-query-timeout-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-set-query-timeout-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_get_query_timeout()} - Get the query timeout value of the request</span></li>   </ul>  </span> </div></div>
 * @return bool <p>*/
function cubrid_set_query_timeout($req_identifier, $timeout) {}

/**
*<div id="function.cubrid-get-class-name" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_get_class_name</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_get_class_name</span> &mdash; <span class="dc-title">Get the class name using OID</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-get-class-name-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_get_class_name</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$oid</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_get_class_name()</strong></span> function is used to get the    class name from <span class="parameter" style="color:#3A95FF">oid</span>. It doesn&#039;t work when selecting data from the system tables,    for example db_class.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-get-class-name-parameters">  <h3 class="title">参数</h3>  <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>    <dd><p class="para">Connection identifier.</p></dd>          <dt><span class="parameter" style="color:#3A95FF">oid</span></dt>    <dd><p class="para">OID of the instance that you want to check the existence.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-get-class-name-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Class name when process is successful, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-get-class-name-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3428">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_get_class_name()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM code"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_INCLUDE_OID</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$oid </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_current_oid</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$class_name </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_class_name</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$class_name</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>code<br></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-get-class-name-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_is_instance()} - Check whether the instance pointed by OID exists</span></li>   <li class="member"><span class="function">{@link cubrid_drop()} - Delete an instance using OID</span></li>   </ul>  </span>  </div></div>
 * @return string <p>*/
function cubrid_get_class_name($conn_identifier, $oid) {}

/**
*<div id="function.cubrid-get" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_get</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_get</span> &mdash; <span class="dc-title">Get a column using OID</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-get-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_get</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$oid</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$attr</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_get()</strong></span> function is used to get the attribute    of the instance of the given <span class="parameter" style="color:#3A95FF">oid</span>.  You can get    single attribute by using string data type for the    <span class="parameter" style="color:#3A95FF">attr</span> argument, or many attributes by using array    data type for the <span class="parameter" style="color:#3A95FF">attr</span> argument.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-get-parameters">  <h3 class="title">参数</h3>  <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">Connection identifier.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">oid</span></dt>  <dd><p class="para">OID of the instance that you want to read.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">attr</span></dt>  <dd><p class="para">Name of the attribute that you want to read.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-get-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Content of the requested attribute, when process is successful; When   <span class="parameter" style="color:#3A95FF">attr</span> is set with string data type, the result is   returned as a string; when <span class="parameter" style="color:#3A95FF">attr</span> is set with array   data type (0-based numerical array), then the result is returned in   associative array. When <span class="parameter" style="color:#3A95FF">attr</span> is omitted, then all   attributes are received in array form.  </p>  <p class="para">   <strong><span>false</span></strong> when process is unsuccessful or result is NULL (If error occurs to   distinguish empty string from NULL, then it prints the warning message.   You can check the error by using <span class="function">{@link cubrid_error_code()}</span>)  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-get-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3443">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_get()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /><br />@</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"DROP TABLE foo"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"CREATE TABLE foo(a int AUTO_INCREMENT, b set(int), c list(int), d char(10))"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO foo(a, b, c, d) VALUES(1, {1,2,3}, {11,22,33,333}, 'a')"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO foo(a, b, c, d) VALUES(2, {4,5,7}, {44,55,66,666}, 'b')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM foo"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_INCLUDE_OID</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_move_cursor</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_FIRST</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$oid </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_current_oid</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>string(9) &quot;{1, 2, 3}&quot;<br>array(4) {<br>  [&quot;a&quot;]=&gt;<br>  string(1) &quot;1&quot;<br>  [&quot;b&quot;]=&gt;<br>  array(3) {<br>    [0]=&gt;<br>    string(1) &quot;1&quot;<br>    [1]=&gt;<br>    string(1) &quot;2&quot;<br>    [2]=&gt;<br>    string(1) &quot;3&quot;<br>  }<br>  [&quot;c&quot;]=&gt;<br>  array(4) {<br>    [0]=&gt;<br>    string(2) &quot;11&quot;<br>    [1]=&gt;<br>    string(2) &quot;22&quot;<br>    [2]=&gt;<br>    string(2) &quot;33&quot;<br>    [3]=&gt;<br>    string(3) &quot;333&quot;<br>  }<br>  [&quot;d&quot;]=&gt;<br>  string(10) &quot;a         &quot;<br>}<br></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-get-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_put()} - Update a column using OID</span></li>   </ul>  </span>  </div> </div>
 * @return mixed <p>*/
function cubrid_get($conn_identifier, $oid, $attr = null) {}

/**
*<div id="function.cubrid-is-instance" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_is_instance</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_is_instance</span> &mdash; <span class="dc-title">Check whether the instance pointed by OID exists</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-is-instance-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_is_instance</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$oid</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_is_instance()</strong></span> function is used to check    whether the instance pointed by the given <span class="parameter" style="color:#3A95FF">oid</span>    exists or not.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-is-instance-parameters">  <h3 class="title">参数</h3>  <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">Connection identifier.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">oid</span></dt>  <dd><p class="para">OID of the instance that you want to check the existence.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-is-instance-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    1, if such instance exists;   </p>    <p class="para">    0, if such instance does not exist;   </p>    <p class="para">    -1, in case of error  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-is-instance-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3449">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_is_instance()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$sql </span><span style="color: #007700">= &lt;&lt;&lt;EOD<br /></span><span style="color: #DD0000">SELECT host_year, medal, game_date <br />FROM game <br />WHERE athlete_code IN <br />    (SELECT code FROM athlete WHERE name='Thorpe Ian');<br /></span><span style="color: #007700">EOD;<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$sql</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_INCLUDE_OID</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$oid </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_current_oid</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$res </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_is_instance </span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">);<br />if (</span><span style="color: #9876AA">$res </span><span style="color: #007700">== </span><span style="color: #9876AA">1</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"Instance pointed by </span><span style="color: #9876AA">$oid</span><span style="color: #DD0000"> exists.\n"</span><span style="color: #007700">;<br />} else if (</span><span style="color: #9876AA">$res </span><span style="color: #007700">== </span><span style="color: #9876AA">0</span><span style="color: #007700">){<br />    echo </span><span style="color: #DD0000">"Instance pointed by </span><span style="color: #9876AA">$oid</span><span style="color: #DD0000"> doesn't exist.\n"</span><span style="color: #007700">;<br />} else {<br />    echo </span><span style="color: #DD0000">"error\n"</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Instance pointed by @0|0|0 doesn&#039;t exist.<br></span></div>   </div>  </div> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-is-instance-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_drop()} - Delete an instance using OID</span></li>      <li class="member"><span class="function">{@link cubrid_get_class_name()} - Get the class name using OID</span></li>   </ul>  </span>  </div></div>
 * @return int <p>*/
function cubrid_is_instance($conn_identifier, $oid) {}

/**
*<div id="function.cubrid-commit" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_commit</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_commit</span> &mdash; <span class="dc-title">Commit a transaction</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-commit-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_commit</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_commit()</strong></span> function is used to execute commit    on the transaction pointed by <span class="parameter" style="color:#3A95FF">conn_identifier</span>,    currently in progress. Connection to the server is closed after the    <span class="function"><strong style="color:#CC7832">cubrid_commit()</strong></span> function is called; However,     the connection handle is still valid.  </p>  <p class="para">   In CUBRID PHP, auto-commit mode is disabled by default for transaction management.    You can set it by using <span class="function">{@link cubrid_set_autocommit()}</span>.    You can get its status by using <span class="function">{@link cubrid_get_autocommit()}</span>. Before you start a transaction,    remember to disable the auto-commit mode.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-commit-parameters"> <h3 class="title">参数</h3> <span>  <dl>         <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>     <dd><p class="para">Connection identifier.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-commit-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-commit-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3386">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_commit()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br />@</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"DROP TABLE publishers"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$sql </span><span style="color: #007700">= &lt;&lt;&lt;EOD<br /></span><span style="color: #DD0000">CREATE TABLE publishers(<br />pub_id CHAR(3), <br />pub_name VARCHAR(20), <br />city VARCHAR(15), <br />state CHAR(2), <br />country VARCHAR(15)<br />)<br /></span><span style="color: #007700">EOD;<br /></span><span style="color: #9876AA">cubrid_set_autocommit</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #9876AA">false</span><span style="color: #007700">);<br />if (!</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$sql</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"Error facility: %d\nError code: %d\nError msg: %s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">cubrid_error_code_facility</span><span style="color: #007700">(), </span><span style="color: #9876AA">cubrid_error_code</span><span style="color: #007700">(), </span><span style="color: #9876AA">cubrid_error_msg</span><span style="color: #007700">());<br /><br />    </span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br />    exit;<br />}<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO publishers VALUES(?, ?, ?, ?, ?)"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$id_list </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"P01"</span><span style="color: #007700">, </span><span style="color: #DD0000">"P02"</span><span style="color: #007700">, </span><span style="color: #DD0000">"P03"</span><span style="color: #007700">, </span><span style="color: #DD0000">"P04"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$name_list </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"Abatis Publishers"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Core Dump Books"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Schadenfreude Press"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Tenterhooks Press"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$city_list </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"New York"</span><span style="color: #007700">, </span><span style="color: #DD0000">"San Francisco"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Hamburg"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Berkeley"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$state_list </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"NY"</span><span style="color: #007700">, </span><span style="color: #DD0000">"CA"</span><span style="color: #007700">, </span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #DD0000">"CA"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$country_list </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"USA"</span><span style="color: #007700">, </span><span style="color: #DD0000">"USA"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Germany"</span><span style="color: #007700">, </span><span style="color: #DD0000">"USA"</span><span style="color: #007700">);<br /><br />for (</span><span style="color: #9876AA">$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">$size </span><span style="color: #007700">= </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$id_list</span><span style="color: #007700">); </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">$size</span><span style="color: #007700">; </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br />    </span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$id_list</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">]);<br />    </span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">$name_list</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">]);<br />    </span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #9876AA">$city_list</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">]);<br />    </span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">4</span><span style="color: #007700">, </span><span style="color: #9876AA">$state_list</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">]);<br />    </span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #9876AA">$country_list</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">]);<br /><br />    if (!(</span><span style="color: #9876AA">$ret </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">))) {<br />        break;<br />    }<br />}<br /><br />if (!</span><span style="color: #9876AA">$ret</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">cubrid_rollback</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br />} else {<br />    </span><span style="color: #9876AA">cubrid_commit</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM publishers"</span><span style="color: #007700">);<br />    while (</span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_assoc</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">)) {<br />        </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-3s %-20s %-15s %-3s %-15s\n"</span><span style="color: #007700">, <br />            </span><span style="color: #9876AA">$result</span><span style="color: #007700">[</span><span style="color: #DD0000">"pub_id"</span><span style="color: #007700">], </span><span style="color: #9876AA">$result</span><span style="color: #007700">[</span><span style="color: #DD0000">"pub_name"</span><span style="color: #007700">], </span><span style="color: #9876AA">$result</span><span style="color: #007700">[</span><span style="color: #DD0000">"city"</span><span style="color: #007700">], </span><span style="color: #9876AA">$result</span><span style="color: #007700">[</span><span style="color: #DD0000">"state"</span><span style="color: #007700">], </span><span style="color: #9876AA">$result</span><span style="color: #007700">[</span><span style="color: #DD0000">"country"</span><span style="color: #007700">]);<br />    }<br />}<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>P01 Abatis Publishers    New York        NY  USA            <br>P02 Core Dump Books      San Francisco   CA  USA            <br>P03 Schadenfreude Press  Hamburg             Germany        <br>P04 Tenterhooks Press    Berkeley        CA  USA            <br></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-commit-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_rollback()} - Roll back a transaction</span></li>   <li class="member"><span class="function">{@link cubrid_get_autocommit()} - Get auto-commit mode of the connection</span></li>   <li class="member"><span class="function">{@link cubrid_set_autocommit()} - Set autocommit mode of the connection</span></li>   </ul>  </span> </div></div>
 * @return bool <p>*/
function cubrid_commit($conn_identifier) {}

/**
*<div id="function.cubrid-rollback" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_rollback</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_rollback</span> &mdash; <span class="dc-title">Roll back a transaction</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-rollback-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_rollback</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_rollback()</strong></span> function executes rollback on the    transaction pointed by <span class="parameter" style="color:#3A95FF">conn_identifier</span>, currently in    progress.  </p>  <p class="para">    Connection to server is closed after calling    <span class="function"><strong style="color:#CC7832">cubrid_rollback()</strong></span>. Connection handle, however, is    still valid.  </p> </div><br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-rollback-parameters">  <h3 class="title">参数</h3>  <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">Connection identifier.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-rollback-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-rollback-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3527">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_rollback()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"127.0.0.1"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_set_autocommit</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #9876AA">false</span><span style="color: #007700">);<br /><br />@</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"DROP TABLE publishers"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$sql </span><span style="color: #007700">= &lt;&lt;&lt;EOD<br /></span><span style="color: #DD0000">CREATE TABLE publishers(<br />pub_id CHAR(3), <br />pub_name VARCHAR(20), <br />city VARCHAR(15), <br />state CHAR(2), <br />country VARCHAR(15)<br />)<br /></span><span style="color: #007700">EOD;<br /><br />if (!</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$sql</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"Error facility: %d\nError code: %d\nError msg: %s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">cubrid_error_code_facility</span><span style="color: #007700">(), </span><span style="color: #9876AA">cubrid_error_code</span><span style="color: #007700">(), </span><span style="color: #9876AA">cubrid_error_msg</span><span style="color: #007700">());<br /><br />    </span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br />    exit;<br />}<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO publishers VALUES(?, ?, ?, ?, ?)"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$id_list </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"P01"</span><span style="color: #007700">, </span><span style="color: #DD0000">"P02"</span><span style="color: #007700">, </span><span style="color: #DD0000">"P03"</span><span style="color: #007700">, </span><span style="color: #DD0000">"P04"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$name_list </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"Abatis Publishers"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Core Dump Books"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Schadenfreude Press"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Tenterhooks Press"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$city_list </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"New York"</span><span style="color: #007700">, </span><span style="color: #DD0000">"San Francisco"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Hamburg"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Berkeley"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$state_list </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"NY"</span><span style="color: #007700">, </span><span style="color: #DD0000">"CA"</span><span style="color: #007700">, </span><span style="color: #9876AA">NULL</span><span style="color: #007700">, </span><span style="color: #DD0000">"CA"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$country_list </span><span style="color: #007700">= array(</span><span style="color: #DD0000">"USA"</span><span style="color: #007700">, </span><span style="color: #DD0000">"USA"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Germany"</span><span style="color: #007700">, </span><span style="color: #DD0000">"USA"</span><span style="color: #007700">);<br /><br />for (</span><span style="color: #9876AA">$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">$size </span><span style="color: #007700">= </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$id_list</span><span style="color: #007700">); </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">$size</span><span style="color: #007700">; </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br />    </span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$id_list</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">]);<br />    </span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">$name_list</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">]);<br />    </span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">, </span><span style="color: #9876AA">$city_list</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">]);<br />    </span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">4</span><span style="color: #007700">, </span><span style="color: #9876AA">$state_list</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">]);<br />    </span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #9876AA">$country_list</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">]);<br /><br />    if (!(</span><span style="color: #9876AA">$ret </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">))) {<br />        break;<br />    }<br />}<br /><br />if (!</span><span style="color: #9876AA">$ret</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">cubrid_rollback</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br />} else {<br />    </span><span style="color: #9876AA">cubrid_commit</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM publishers"</span><span style="color: #007700">);<br />    while (</span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_assoc</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">)) {<br />        </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-3s %-20s %-15s %-3s %-15s\n"</span><span style="color: #007700">, <br />            </span><span style="color: #9876AA">$result</span><span style="color: #007700">[</span><span style="color: #DD0000">"pub_id"</span><span style="color: #007700">], </span><span style="color: #9876AA">$result</span><span style="color: #007700">[</span><span style="color: #DD0000">"pub_name"</span><span style="color: #007700">], </span><span style="color: #9876AA">$result</span><span style="color: #007700">[</span><span style="color: #DD0000">"city"</span><span style="color: #007700">], </span><span style="color: #9876AA">$result</span><span style="color: #007700">[</span><span style="color: #DD0000">"state"</span><span style="color: #007700">], </span><span style="color: #9876AA">$result</span><span style="color: #007700">[</span><span style="color: #DD0000">"country"</span><span style="color: #007700">]);<br />    }<br />}<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>P01 Abatis Publishers    New York        NY  USA            <br>P02 Core Dump Books      San Francisco   CA  USA            <br>P03 Schadenfreude Press  Hamburg             Germany        <br>P04 Tenterhooks Press    Berkeley        CA  USA            <br></span></div>   </div>  </div> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-rollback-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">     <li class="member"><span class="function">{@link cubrid_commit()} - Commit a transaction</span></li>     <li class="member"><span class="function">{@link cubrid_disconnect()} - Close a database connection</span></li>        </ul>  </span>  </div></div>
 * @return bool <p>*/
function cubrid_rollback($conn_identifier) {}

/**
*<div id="function.cubrid-current-oid" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_current_oid</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_current_oid</span> &mdash; <span class="dc-title">Get OID of the current cursor location</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-current-oid-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_current_oid</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$req_identifier</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_current_oid()</strong></span> function is used to get the    oid of the current cursor location from the query result.  To use    <span class="function"><strong style="color:#CC7832">cubrid_current_oid()</strong></span>, the query executed must be a    updatable query, and the <strong><span>CUBRID_INCLUDE_OID</span></strong> option must be included during    the query execution.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-current-oid-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">req_identifier</span></dt>    <dd><p class="para">Request identifier.</p></dd>     </dl>  </span> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-current-oid-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Oid of current cursor location, when process is successful, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-current-oid-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3398">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_current_oid()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM code"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_INCLUDE_OID</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$oid </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_current_oid</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$res </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$res</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [s_name] =&gt; X<br>    [f_name] =&gt; Mixed<br>)<br></span></div>   </div>  </div> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-current-oid-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_execute()} - Execute a prepared SQL statement</span></li>   </ul>  </span> </div></div>
 * @return string <p>*/
function cubrid_current_oid($req_identifier) {}

/**
*<div id="function.cubrid-drop" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_drop</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_drop</span> &mdash; <span class="dc-title">Delete an instance using OID</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-drop-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_drop</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$oid</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_drop()</strong></span> function is used to delete an    instance from database by using the <span class="parameter" style="color:#3A95FF">oid</span> of the instance.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-drop-parameters"> <h3 class="title">参数</h3> <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">Connection identifier.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">oid</span></dt>  <dd><p class="para">Oid of the instance that you want to delete.</p></dd>     </dl>  </span> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-drop-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-drop-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3404">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_drop()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /><br />@</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"DROP TABLE foo"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"CREATE TABLE foo(a int AUTO_INCREMENT, b set(int), c list(int), d char(10))"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO foo(a, b, c, d) VALUES(1, {1,2,3}, {11,22,33,333}, 'a')"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO foo(a, b, c, d) VALUES(2, {4,5,7}, {44,55,66,666}, 'b')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM foo"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_INCLUDE_OID</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_move_cursor</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_FIRST</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$oid </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_current_oid</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"--- Before Drop: ---\n"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br />if (</span><span style="color: #9876AA">cubrid_drop</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">cubrid_commit</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br />} else {<br />    </span><span style="color: #9876AA">cubrid_rollback</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM foo"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_INCLUDE_OID</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_move_cursor</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_FIRST</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$oid </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_current_oid</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n--- After Drop: ---\n"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>--- Before Drop: ---<br>array(4) {<br>  [&quot;a&quot;]=&gt;<br>  string(1) &quot;1&quot;<br>  [&quot;b&quot;]=&gt;<br>  array(3) {<br>    [0]=&gt;<br>    string(1) &quot;1&quot;<br>    [1]=&gt;<br>    string(1) &quot;2&quot;<br>    [2]=&gt;<br>    string(1) &quot;3&quot;<br>  }<br>  [&quot;c&quot;]=&gt;<br>  array(4) {<br>    [0]=&gt;<br>    string(2) &quot;11&quot;<br>    [1]=&gt;<br>    string(2) &quot;22&quot;<br>    [2]=&gt;<br>    string(2) &quot;33&quot;<br>    [3]=&gt;<br>    string(3) &quot;333&quot;<br>  }<br>  [&quot;d&quot;]=&gt;<br>  string(10) &quot;a         &quot;<br>}<br><br>--- After Drop: ---<br>array(4) {<br>  [&quot;a&quot;]=&gt;<br>  string(1) &quot;2&quot;<br>  [&quot;b&quot;]=&gt;<br>  array(3) {<br>    [0]=&gt;<br>    string(1) &quot;4&quot;<br>    [1]=&gt;<br>    string(1) &quot;5&quot;<br>    [2]=&gt;<br>    string(1) &quot;7&quot;<br>  }<br>  [&quot;c&quot;]=&gt;<br>  array(4) {<br>    [0]=&gt;<br>    string(2) &quot;44&quot;<br>    [1]=&gt;<br>    string(2) &quot;55&quot;<br>    [2]=&gt;<br>    string(2) &quot;66&quot;<br>    [3]=&gt;<br>    string(3) &quot;666&quot;<br>  }<br>  [&quot;d&quot;]=&gt;<br>  string(10) &quot;b         &quot;<br>}<br></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-drop-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_is_instance()} - Check whether the instance pointed by OID exists</span></li>   </ul>  </span> </div></div>
 * @return bool <p>*/
function cubrid_drop($conn_identifier, $oid) {}

/**
*<div id="function.cubrid-error-code-facility" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_error_code_facility</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_error_code_facility</span> &mdash; <span class="dc-title">Get the facility code of error</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-error-code-facility-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_error_code_facility</strong></span>(): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_error_code_facility()</strong></span> function is used to    get the facility code (level in which the error occurred) from the error    code of the error that occurred during the API execution. Usually, you can    get the error code when API returns false as its return value.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-error-code-facility-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-error-code-facility-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Facility code of the error code that occurred:     <strong><span>CUBRID_FACILITY_DBMS</span></strong>, <strong><span>CUBRID_FACILITY_CAS</span></strong>,    <strong><span>CUBRID_FACILITY_CCI</span></strong>, <strong><span>CUBRID_FACILITY_CLIENT</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-error-code-facility-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3407">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_error_code_facility()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= @</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM unknown"</span><span style="color: #007700">);<br />if (!</span><span style="color: #9876AA">$req</span><span style="color: #007700">) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"Error facility: %d\nError code: %d\nError msg: %s\n"</span><span style="color: #007700">, <br />        </span><span style="color: #9876AA">cubrid_error_code_facility</span><span style="color: #007700">(), </span><span style="color: #9876AA">cubrid_error_code</span><span style="color: #007700">(), </span><span style="color: #9876AA">cubrid_error_msg</span><span style="color: #007700">());<br /><br />    </span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br />    exit;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Error facility: 1<br>Error code: -493<br>Error msg: Syntax: In line 1, column 15 before END OF STATEMENT<br>Syntax error: unexpected &#039;unknown&#039;<br></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-error-code-facility-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_error_code()} - Get error code for the most recent function call</span></li>   <li class="member"><span class="function">{@link cubrid_error_msg()} - Get last error message for the most recent function call</span></li>   </ul>  </span>  </div></div>
 * @return int <p>*/
function cubrid_error_code_facility() {}

/**
*<div id="function.cubrid-lob-close" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lob_close</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.1)</p><p class="refpurpose"><span class="refname">cubrid_lob_close</span> &mdash; <span class="dc-title">Close BLOB/CLOB data</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lob-close-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lob_close</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$lob_identifier_array</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">cubrid_lob_close()</strong></span> is used to close all BLOB/CLOB   returned from <span class="function">{@link cubrid_lob_get()}</span>.   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lob-close-parameters">  <h3 class="title">参数</h3>  <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">lob_identifier_array</span></dt>  <dd><p class="para">LOB identifier array returned from <span class="function">{@link cubrid_lob_get()}</span>.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lob-close-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-lob-close-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3452">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_lob_close()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect </span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"DROP TABLE if exists doc"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"CREATE TABLE doc (id INT, doc_content CLOB)"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"INSERT INTO doc VALUES (5,'hello,cubrid')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$lobs </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_lob_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT doc_content FROM doc WHERE id=5"</span><span style="color: #007700">);<br />echo </span><span style="color: #DD0000">"Doc size: "</span><span style="color: #007700">.</span><span style="color: #9876AA">cubrid_lob_size</span><span style="color: #007700">(</span><span style="color: #9876AA">$lobs</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]).</span><span style="color: #DD0000">" bytes"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">cubrid_lob_export</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$lobs</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">], </span><span style="color: #DD0000">"doc_5.txt"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_lob_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$lobs</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lob-close-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_lob_get()} - Get BLOB/CLOB data</span></li>      <li class="member"><span class="function">{@link cubrid_lob_size()} - Get BLOB/CLOB data size</span></li>      <li class="member"><span class="function">{@link cubrid_lob_export()} - Export BLOB/CLOB data to file</span></li>         <li class="member"><span class="function">{@link cubrid_lob_send()} - Read BLOB/CLOB data and send straight to browser</span></li>        </ul>  </span>  </div></div>
 * @return bool <p>*/
function cubrid_lob_close($lob_identifier_array) {}

/**
*<div id="function.cubrid-lob-export" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lob_export</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.1)</p><p class="refpurpose"><span class="refname">cubrid_lob_export</span> &mdash; <span class="dc-title">Export BLOB/CLOB data to file</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lob-export-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lob_export</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$lob_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$path_name</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">cubrid_lob_export()</strong></span> is used to get BLOB/CLOB data from CUBRID database, and saves its contents to a file.   To use this function, you must use <span class="function">{@link cubrid_lob_get()}</span> first to get BLOB/CLOB info from CUBRID.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lob-export-parameters">  <h3 class="title">参数</h3>  <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>    <dd><p class="para">Connection identifier.</p></dd>          <dt><span class="parameter" style="color:#3A95FF">lob_identifier</span></dt>    <dd><p class="para">LOB identifier.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">path_name</span></dt>  <dd><p class="para">Path name of the file.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lob-export-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-lob-export-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3455">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_lob_export()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect </span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"DROP TABLE if exists doc"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"CREATE TABLE doc (id INT, doc_content CLOB)"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"INSERT INTO doc VALUES (5,'hello,cubrid')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$lobs </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_lob_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT doc_content FROM doc WHERE id=5"</span><span style="color: #007700">);<br />echo </span><span style="color: #DD0000">"Doc size: "</span><span style="color: #007700">.</span><span style="color: #9876AA">cubrid_lob_size</span><span style="color: #007700">(</span><span style="color: #9876AA">$lobs</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]).</span><span style="color: #DD0000">" bytes"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">cubrid_lob_export</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$lobs</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">], </span><span style="color: #DD0000">"doc_5.txt"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_lob_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$lobs</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lob-export-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_lob_get()} - Get BLOB/CLOB data</span></li>         <li class="member"><span class="function">{@link cubrid_lob_close()} - Close BLOB/CLOB data</span></li>      <li class="member"><span class="function">{@link cubrid_lob_size()} - Get BLOB/CLOB data size</span></li>      <li class="member"><span class="function">{@link cubrid_lob_send()} - Read BLOB/CLOB data and send straight to browser</span></li>        </ul>  </span>  </div></div>
 * @return bool <p>*/
function cubrid_lob_export($conn_identifier, $lob_identifier, $path_name) {}

/**
*<div id="function.cubrid-lob-get" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lob_get</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.1)</p><p class="refpurpose"><span class="refname">cubrid_lob_get</span> &mdash; <span class="dc-title">Get BLOB/CLOB data</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lob-get-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lob_get</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$sql</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">cubrid_lob_get()</strong></span> is used to get BLOB/CLOB meta info from CUBRID database,    CUBRID gets BLOB/CLOB by executing the SQL statement, and returns all LOBs as a resource array.    Be sure that the SQL retrieves only one column and its data type is BLOB or CLOB.  </p>  <p class="para">   Remember to use <span class="function">{@link cubrid_lob_close()}</span> to release the LOBs if you don&#039;t need it any more.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lob-get-parameters">  <h3 class="title">参数</h3>  <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">Connection identifier.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">sql</span></dt>  <dd><p class="para">SQL statement to be executed.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lob-get-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Return an array of LOB resources, when process is successful, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-lob-get-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3458">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_lob_get()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect </span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"DROP TABLE if exists doc"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"CREATE TABLE doc (id INT, doc_content CLOB)"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"INSERT INTO doc VALUES (5,'hello,cubrid')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$lobs </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_lob_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT doc_content FROM doc WHERE id=5"</span><span style="color: #007700">);<br />echo </span><span style="color: #DD0000">"Doc size: "</span><span style="color: #007700">.</span><span style="color: #9876AA">cubrid_lob_size</span><span style="color: #007700">(</span><span style="color: #9876AA">$lobs</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]).</span><span style="color: #DD0000">" bytes"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">cubrid_lob_export</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$lobs</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">], </span><span style="color: #DD0000">"doc_5.txt"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_lob_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$lobs</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lob-get-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_lob_close()} - Close BLOB/CLOB data</span></li>      <li class="member"><span class="function">{@link cubrid_lob_size()} - Get BLOB/CLOB data size</span></li>      <li class="member"><span class="function">{@link cubrid_lob_export()} - Export BLOB/CLOB data to file</span></li>         <li class="member"><span class="function">{@link cubrid_lob_send()} - Read BLOB/CLOB data and send straight to browser</span></li>        </ul>  </span>  </div></div>
 * @return array <p>*/
function cubrid_lob_get($conn_identifier, $sql) {}

/**
*<div id="function.cubrid-lob-send" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lob_send</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.1)</p><p class="refpurpose"><span class="refname">cubrid_lob_send</span> &mdash; <span class="dc-title">Read BLOB/CLOB data and send straight to browser</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lob-send-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lob_send</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$lob_identifier</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">cubrid_lob_send()</strong></span> reads BLOB/CLOB data and passes it straight through to the browser.     To use this function, you must use <span class="function">{@link cubrid_lob_get()}</span> first to get BLOB/CLOB info from CUBRID.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lob-send-parameters">  <h3 class="title">参数</h3>  <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>    <dd><p class="para">Connection identifier.</p></dd>          <dt><span class="parameter" style="color:#3A95FF">lob_identifier</span></dt>    <dd><p class="para">LOB identifier.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lob-send-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-lob-send-examples">  <h3 class="title">示例</h3>  <div class="example" id="volatile.example.basic">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_lob_send()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect </span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"DROP TABLE if exists doc"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"CREATE TABLE doc (id INT, doc_content CLOB)"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"INSERT INTO doc VALUES (5,'hello,cubrid')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$lobs </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_lob_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT doc_content FROM doc WHERE id=5"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_lob_send</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$lobs</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br /></span><span style="color: #9876AA">cubrid_lob_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$lobs</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lob-send-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_lob_get()} - Get BLOB/CLOB data</span></li>         <li class="member"><span class="function">{@link cubrid_lob_close()} - Close BLOB/CLOB data</span></li>      <li class="member"><span class="function">{@link cubrid_lob_size()} - Get BLOB/CLOB data size</span></li>      <li class="member"><span class="function">{@link cubrid_lob_export()} - Export BLOB/CLOB data to file</span></li>        </ul>  </span>  </div></div>
 * @return bool <p>*/
function cubrid_lob_send($conn_identifier, $lob_identifier) {}

/**
*<div id="function.cubrid-lob-size" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lob_size</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.1)</p><p class="refpurpose"><span class="refname">cubrid_lob_size</span> &mdash; <span class="dc-title">Get BLOB/CLOB data size</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lob-size-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lob_size</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$lob_identifier</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">cubrid_lob_size()</strong></span> is used to get BLOB/CLOB data size.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lob-size-parameters">  <h3 class="title">参数</h3>  <span>  <dl>         <dt><span class="parameter" style="color:#3A95FF">lob_identifier</span></dt>     <dd><p class="para">LOB identifier.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lob-size-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    A string representing LOB data size, when process is successful, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.cubrid-lob-size-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.4.0</td>       <td>        Change return value type from int to string.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-lob-size-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3464">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_lob_size()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$lobs </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_lob_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$con</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT doc_content FROM doc WHERE doc_id=5"</span><span style="color: #007700">);<br />echo </span><span style="color: #DD0000">"Doc size:"</span><span style="color: #007700">.</span><span style="color: #9876AA">cubrid_lob_size</span><span style="color: #007700">(</span><span style="color: #9876AA">$lobs</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">]);<br /></span><span style="color: #9876AA">cubrid_lob_export</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$lobs</span><span style="color: #007700">[</span><span style="color: #9876AA">0</span><span style="color: #007700">], </span><span style="color: #DD0000">"doc_5.txt"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_lob_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$lobs</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lob-size-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link cubrid_lob_get()} - Get BLOB/CLOB data</span></li>      <li class="member"><span class="function">{@link cubrid_lob_close()} - Close BLOB/CLOB data</span></li>      <li class="member"><span class="function">{@link cubrid_lob_export()} - Export BLOB/CLOB data to file</span></li>         <li class="member"><span class="function">{@link cubrid_lob_send()} - Read BLOB/CLOB data and send straight to browser</span></li>        </ul>  </span>  </div></div>
 * @return string <p>*/
function cubrid_lob_size($lob_identifier) {}

/**
*<div id="function.cubrid-lob2-bind" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lob2_bind</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.4.1)</p><p class="refpurpose"><span class="refname">cubrid_lob2_bind</span> &mdash; <span class="dc-title">Bind a lob object or a string as a lob object to a prepared statement as parameters</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lob2-bind-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lob2_bind</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$req_identifier</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$bind_index</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$bind_value</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$bind_value_type</span><span class="initializer"> = ?</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_lob2_bind()</strong></span> function is used to bind BLOB/CLOB datas   to a corresponding question mark placeholder in the SQL statement that was passed    to <span class="function">{@link cubrid_prepare()}</span>. If <span class="parameter" style="color:#3A95FF">bind_value_type</span>    is not given, string will be &quot;BLOB&quot; as the default. But if you use   <span class="function">{@link cubrid_lob2_new()}</span> before, <span class="parameter" style="color:#3A95FF">bind_value_type</span>   will be consistent with <span class="parameter" style="color:#3A95FF">type</span> in <span class="function">{@link cubrid_lob2_new()}</span> as the default.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lob2-bind-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">req_identifier</span></dt>    <dd>     <p class="para">Request identifier as a result of <span class="function">{@link cubrid_prepare()}</span>.</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">bind_index</span></dt>    <dd>     <p class="para">Location of binding parameters. It starts with 1.</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">bind_value</span></dt>    <dd>     <p class="para">Actual value for binding.</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">bind_value_type</span></dt>    <dd>     <p class="para">It must be &quot;BLOB&quot; or &quot;CLOB&quot; and it won&#039;t be case-sensitive. If it not be given, the default value is &quot;BLOB&quot;.</p>    </dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lob2-bind-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-lob2-bind-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3467">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_lob2_bind()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Table: test_lob (id INT, contents CLOB)<br /><br /></span><span style="color: #9876AA">$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">, </span><span style="color: #DD0000">""</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"DROP TABLE if exists test_lob"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"CREATE TABLE test_lob (id INT, contents CLOB)"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO test_lob VALUES (?, ?)"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">,</span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">3</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$lob </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_lob2_new</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">'CLOB'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_lob2_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">$lob</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">4</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_lob2_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #DD0000">'CUBRID LOB2 TEST'</span><span style="color: #007700">, </span><span style="color: #DD0000">'CLOB'</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lob2-bind-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_lob2_new()} - Create a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_close()} - Close LOB object</span></li>   </ul>  </span> </div></div>
 * @return bool <p>*/
function cubrid_lob2_bind($req_identifier, $bind_index, $bind_value, $bind_value_type = null) {}

/**
*<div id="function.cubrid-lob2-close" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lob2_close</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.4.1)</p><p class="refpurpose"><span class="refname">cubrid_lob2_close</span> &mdash; <span class="dc-title">Close LOB object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lob2-close-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lob2_close</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$lob_identifier</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_lob2_close()</strong></span> function is used to close LOB object   returned from <span class="function">{@link cubrid_lob2_new()}</span> or got from the result set.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lob2-close-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">lob_identifier</span></dt>    <dd>     <p class="para">Lob identifier as a result of <span class="function">{@link cubrid_lob2_new()}</span> or get from the result set.</p>    </dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lob2-close-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lob2-close-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_lob2_new()} - Create a lob object</span></li>   </ul>  </span> </div></div>
 * @return bool <p>*/
function cubrid_lob2_close($lob_identifier) {}

/**
*<div id="function.cubrid-lob2-export" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lob2_export</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.4.1)</p><p class="refpurpose"><span class="refname">cubrid_lob2_export</span> &mdash; <span class="dc-title">Export the lob object to a file</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lob2-export-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lob2_export</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$lob_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$file_name</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_lob2_export()</strong></span> function is used to save the    contents of BLOB/CLOB data to a file. To use this function, you must use   <span class="function">{@link cubrid_lob2_new()}</span> or fetch a lob object from CUBRID    database first. If the file already exists, the operation will fail.    This function will not influence the cursor position of the lob object.    It operates the entire lob object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lob2-export-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">lob_identifier</span></dt>    <dd>     <p class="para">Lob identifier as a result of <span class="function">{@link cubrid_lob2_new()}</span> or get from the result set.</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>    <dd>     <p class="para">File name you want to store BLOB/CLOB data. It also supports the path of the file.</p>    </dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lob2-export-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-lob2-export-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3470">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_lob2_export()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// Table: test_lob (id INT, contents CLOB)<br /><br /></span><span style="color: #9876AA">$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">, </span><span style="color: #DD0000">""</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"DROP TABLE if exists doc"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"CREATE TABLE doc (id INT, doc_content CLOB)"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"INSERT INTO doc VALUES (5,'hello,cubrid')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"select * from doc"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_move_cursor</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_FIRST</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_NUM </span><span style="color: #007700">| </span><span style="color: #9876AA">CUBRID_LOB</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_lob2_export</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">], </span><span style="color: #DD0000">"doc_3.txt"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_lob2_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lob2-export-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_lob2_new()} - Create a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_close()} - Close LOB object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_import()} - Import BLOB/CLOB data from a file</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_bind()} - Bind a lob object or a string as a lob object to a prepared statement as parameters</span></li>   </ul>  </span> </div></div>
 * @return bool <p>*/
function cubrid_lob2_export($lob_identifier, $file_name) {}

/**
*<div id="function.cubrid-lob2-import" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lob2_import</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.4.1)</p><p class="refpurpose"><span class="refname">cubrid_lob2_import</span> &mdash; <span class="dc-title">Import BLOB/CLOB data from a file</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lob2-import-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lob2_import</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$lob_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$file_name</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_lob2_import()</strong></span> function is used to save the   contents of BLOB/CLOB data from a file. To use this function, you must use   <span class="function">{@link cubrid_lob2_new()}</span> or fetch a lob object from CUBRID database   first. If the file already exists, the operation will fail.    This function will not influence the cursor position of the lob object.    It operates the entire lob object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lob2-import-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">lob_identifier</span></dt>    <dd>     <p class="para">Lob identifier as a result of <span class="function">{@link cubrid_lob2_new()}</span> or get from the result set.</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">filename</span></dt>    <dd>     <p class="para">File name you want to import BLOB/CLOB data. It also supports the path of the file.</p>    </dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lob2-import-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-lob2-import-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3473">   <p><strong>示例 #1 <span class="function">{@link cubrid_lob2_export()}</span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">, </span><span style="color: #DD0000">""</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"DROP TABLE if exists test_lob"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"CREATE TABLE test_lob (id INT, contents CLOB)"</span><span style="color: #007700">);<br /> <br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO test_lob VALUES (?, ?)"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$lob </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_lob2_new</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"clob"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_lob2_import</span><span style="color: #007700">(</span><span style="color: #9876AA">$lob</span><span style="color: #007700">, </span><span style="color: #DD0000">"doc_1.txt"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_lob2_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">$lob</span><span style="color: #007700">, </span><span style="color: #DD0000">'CLOB'</span><span style="color: #007700">); </span><span style="color: #FF8000">// or cubrid_lob2_bind($req, 2, $lob);<br /><br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_lob2_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$lob</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lob2-import-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_lob2_new()} - Create a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_close()} - Close LOB object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_export()} - Export the lob object to a file</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_bind()} - Bind a lob object or a string as a lob object to a prepared statement as parameters</span></li>   </ul>  </span> </div></div>
 * @return bool <p>*/
function cubrid_lob2_import($lob_identifier, $file_name) {}

/**
*<div id="function.cubrid-lob2-new" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lob2_new</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.4.1)</p><p class="refpurpose"><span class="refname">cubrid_lob2_new</span> &mdash; <span class="dc-title">Create a lob object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lob2-new-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lob2_new</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$type</span><span class="initializer"> = &quot;BLOB&quot;</span></span>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_lob2_new()</strong></span> function is used to create a lob object (both BLOB and CLOB).    This function should be used before you bind a lob object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lob2-new-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>    <dd>     <p class="para">Connection identifier. If the connection identifier is not specified,       the last connection opened by <span class="function">{@link cubrid_connect()}</span> or       <span class="function">{@link cubrid_connect_with_url()}</span> is assumed.</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">type</span></dt>    <dd>     <p class="para">It may be &quot;BLOB&quot; or &quot;CLOB&quot;, it won&#039;t be case-sensitive. The default value is &quot;BLOB&quot;.</p>    </dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lob2-new-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   Lob identifier when it is successful, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lob2-new-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_lob2_close()} - Close LOB object</span></li>   </ul>  </span> </div></div>
 * @return resource|false <p>*/
function cubrid_lob2_new($conn_identifier = null, $type = "BLOB") {}

/**
*<div id="function.cubrid-lob2-read" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lob2_read</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.4.1)</p><p class="refpurpose"><span class="refname">cubrid_lob2_read</span> &mdash; <span class="dc-title">Read from BLOB/CLOB data</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lob2-read-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lob2_read</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$lob_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$len</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_lob2_read()</strong></span> function reads <span class="parameter" style="color:#3A95FF">len</span> bytes from the    LOB data and returns the bytes read.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lob2-read-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">lob_identifier</span></dt>    <dd>     <p class="para">Lob identifier as a result of <span class="function">{@link cubrid_lob2_new()}</span> or get from the result set.</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">len</span></dt>    <dd>     <p class="para">Length from buffer you want to read from the lob data.</p>    </dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lob2-read-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Returns the contents as a string, <strong><span>false</span></strong> when there is no more data, or <strong><span>null</span></strong> on failure.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-lob2-read-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3476">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_lob2_read()</strong></span> example 1</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// test_lob (id INT, contents CLOB)<br /><br /></span><span style="color: #9876AA">$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"public"</span><span style="color: #007700">, </span><span style="color: #DD0000">""</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"select * from test_lob"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_row</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_LOB</span><span style="color: #007700">);<br /><br />print </span><span style="color: #DD0000">"position now is " </span><span style="color: #007700">. </span><span style="color: #9876AA">cubrid_lob2_tell</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">cubrid_lob2_seek</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">], </span><span style="color: #9876AA">10</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_FIRST</span><span style="color: #007700">);<br /><br />print </span><span style="color: #DD0000">"\nposition after moving farword is " </span><span style="color: #007700">. </span><span style="color: #9876AA">cubrid_lob2_tell</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$data </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_lob2_read</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">], </span><span style="color: #9876AA">12</span><span style="color: #007700">);<br /><br />print </span><span style="color: #DD0000">"\nposition after reading is " </span><span style="color: #007700">. </span><span style="color: #9876AA">cubrid_lob2_tell</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br />print </span><span style="color: #9876AA">$data </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">cubrid_lob2_seek</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">], </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_CURRENT</span><span style="color: #007700">);<br /><br />print </span><span style="color: #DD0000">"\nposition after moving again is " </span><span style="color: #007700">. </span><span style="color: #9876AA">cubrid_lob2_tell</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">]) . </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">$data </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_lob2_read</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">], </span><span style="color: #9876AA">20</span><span style="color: #007700">);<br />print </span><span style="color: #9876AA">$data </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div>    <div class="example" id="example-3479">   <p><strong>示例 #2 <span class="function"><strong style="color:#CC7832">cubrid_lob2_read()</strong></span> example 2</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// test_lob (id INT, contents CLOB)<br /><br /></span><span style="color: #9876AA">$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">, </span><span style="color: #DD0000">""</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"select * from test_lob"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_row</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_LOB</span><span style="color: #007700">);<br /><br />while (</span><span style="color: #9876AA">true</span><span style="color: #007700">) {<br />    if (</span><span style="color: #9876AA">$data </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_lob2_read</span><span style="color: #007700">(</span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">], </span><span style="color: #9876AA">1024</span><span style="color: #007700">)) {<br />        print </span><span style="color: #9876AA">$data </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />    }<br />    elseif (</span><span style="color: #9876AA">$data </span><span style="color: #007700">=== </span><span style="color: #9876AA">false</span><span style="color: #007700">) {<br />        print </span><span style="color: #DD0000">"There is no more data\n"</span><span style="color: #007700">;<br />        break;<br />    }<br />    else {<br />        print </span><span style="color: #DD0000">"There must some errors\n"</span><span style="color: #007700">;<br />        break;<br />    }<br />}<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lob2-read-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_lob2_write()} - Write to a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_seek()} - Move the cursor of a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_seek64()} - Move the cursor of a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_tell()} - Tell the cursor position of the LOB object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_tell64()} - Tell the cursor position of the LOB object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_size()} - Get a lob object's size</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_size64()} - Get a lob object's size</span></li>   </ul>  </span> </div></div>
 * @return string <p>*/
function cubrid_lob2_read($lob_identifier, $len) {}

/**
*<div id="function.cubrid-lob2-seek64" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lob2_seek64</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.4.1)</p><p class="refpurpose"><span class="refname">cubrid_lob2_seek64</span> &mdash; <span class="dc-title">Move the cursor of a lob object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lob2-seek64-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lob2_seek64</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$lob_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$origin</span><span class="initializer"> = CUBRID_CURSOR_CURRENT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_lob2_seek64()</strong></span> function is used to move the cursor   position of a lob object by the value set in the <span class="parameter" style="color:#3A95FF">offset</span>    argument, to the direction set in the <span class="parameter" style="color:#3A95FF">origin</span> argument.    If the <span class="parameter" style="color:#3A95FF">offset</span> you want to move is larger than an integer    data can be stored, you can use this function.  </p>  <p class="para">   To set the <span class="parameter" style="color:#3A95FF">origin</span> argument, you can use <strong><span>CUBRID_CURSOR_FIRST</span></strong>   to set the cursor position moving forward <span class="parameter" style="color:#3A95FF">offset</span> units from   the first beginning. In this case, <span class="parameter" style="color:#3A95FF">offset</span> must be a positive value.  </p>  <p class="para">   If you use <strong><span>CUBRID_CURSOR_CURRENT</span></strong> for <span class="parameter" style="color:#3A95FF">origin</span>, you can move   forward or backward. and <span class="parameter" style="color:#3A95FF">offset</span> can be positive or negative.  </p>  <p class="para">   If you use <strong><span>CUBRID_CURSOR_LAST</span></strong> for <span class="parameter" style="color:#3A95FF">origin</span>, you can move backward   <span class="parameter" style="color:#3A95FF">offset</span> units from the end of LOB object and <span class="parameter" style="color:#3A95FF">offset</span> only can be positive.  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:      <p class="para">   If you use this function to move the cursor position of the lob object, you should pass <span class="parameter" style="color:#3A95FF">offset</span> as a string.  </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lob2-seek64-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">lob_identifier</span></dt>    <dd>     <p class="para">Lob identifier as a result of <span class="function">{@link cubrid_lob2_new()}</span> or get from the result set.</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>    <dd>     <p class="para">Number of units you want to move the cursor.</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">origin</span></dt>    <dd>     <p class="para">This parameter can be the following values:</p>     <p class="para">CUBRID_CURSOR_FIRST: move forward from the first beginning.</p>     <p class="para">CUBRID_CURSOR_CURRENT: move forward or backward from the current position.</p>     <p class="para">CUBRID_CURSOR_LAST: move backward at the end of LOB object.</p>    </dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lob2-seek64-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-lob2-seek64-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3482">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_lob2_seek64()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// test_lob (id INT, contents CLOB)<br />// Data length of doc_1.txt should be greater than 20101029056306120215.<br /><br /></span><span style="color: #9876AA">$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">, </span><span style="color: #DD0000">""</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"DROP TABLE if exists test_lob"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"CREATE TABLE test_lob (id INT, contents CLOB)"</span><span style="color: #007700">);<br /> <br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO test_lob VALUES (?, ?)"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$lob </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_lob2_new</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"clob"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_lob2_import</span><span style="color: #007700">(</span><span style="color: #9876AA">$lob</span><span style="color: #007700">, </span><span style="color: #DD0000">"doc_1.txt"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_lob2_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">$lob</span><span style="color: #007700">, </span><span style="color: #DD0000">'CLOB'</span><span style="color: #007700">); </span><span style="color: #FF8000">// or cubrid_lob2_bind($req, 2, $lob);<br /><br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_lob2_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$lob</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"select * from test_lob"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_row</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_LOB</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$lob </span><span style="color: #007700">= </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #9876AA">1</span><span style="color: #007700">];<br /><br /></span><span style="color: #9876AA">cubrid_lob2_seek64</span><span style="color: #007700">(</span><span style="color: #9876AA">$lob</span><span style="color: #007700">, </span><span style="color: #DD0000">"20101029056306120215"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_FIRST</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$data </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_lob2_read</span><span style="color: #007700">(</span><span style="color: #9876AA">$lob</span><span style="color: #007700">, </span><span style="color: #9876AA">20</span><span style="color: #007700">);<br />echo </span><span style="color: #9876AA">$data</span><span style="color: #007700">.</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lob2-seek64-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_lob2_read()} - Read from BLOB/CLOB data</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_write()} - Write to a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_seek()} - Move the cursor of a lob object</span></li>      <li class="member"><span class="function">{@link cubrid_lob2_tell()} - Tell the cursor position of the LOB object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_tell64()} - Tell the cursor position of the LOB object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_size()} - Get a lob object's size</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_size64()} - Get a lob object's size</span></li>   </ul>  </span> </div></div>
 * @return bool <p>*/
function cubrid_lob2_seek64($lob_identifier, $offset, $origin = CUBRID_CURSOR_CURRENT) {}

/**
*<div id="function.cubrid-lob2-seek" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lob2_seek</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.4.1)</p><p class="refpurpose"><span class="refname">cubrid_lob2_seek</span> &mdash; <span class="dc-title">Move the cursor of a lob object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lob2-seek-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lob2_seek</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$lob_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$origin</span><span class="initializer"> = CUBRID_CURSOR_CURRENT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_lob2_seek()</strong></span> function is used to move the cursor   position of a lob object by the value set in the <span class="parameter" style="color:#3A95FF">offset</span>   argument, to the direction set in the <span class="parameter" style="color:#3A95FF">origin</span> argument.  </p>  <p class="para">   To set the <span class="parameter" style="color:#3A95FF">origin</span> argument, you can use <strong><span>CUBRID_CURSOR_FIRST</span></strong>   to set the cursor position moving forward <span class="parameter" style="color:#3A95FF">offset</span> units from   the first beginning. In this case, <span class="parameter" style="color:#3A95FF">offset</span> must be a positive value.  </p>  <p class="para">   If you use <strong><span>CUBRID_CURSOR_CURRENT</span></strong> for <span class="parameter" style="color:#3A95FF">origin</span>, you can move    forward or backward. and <span class="parameter" style="color:#3A95FF">offset</span> can be positive or negative.  </p>  <p class="para">   If you use <strong><span>CUBRID_CURSOR_LAST</span></strong> for <span class="parameter" style="color:#3A95FF">origin</span>, you can move    backward <span class="parameter" style="color:#3A95FF">offset</span> units from the end of LOB object and   <span class="parameter" style="color:#3A95FF">offset</span> only can be positive.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lob2-seek-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">lob_identifier</span></dt>    <dd>     <p class="para">Lob identifier as a result of <span class="function">{@link cubrid_lob2_new()}</span> or get from the result set.</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>    <dd>     <p class="para">Number of units you want to move the cursor.</p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">origin</span></dt>    <dd>     <p class="para">This parameter can be the following values:</p>     <p class="para">CUBRID_CURSOR_FIRST: move forward from the first beginning.</p>     <p class="para">CUBRID_CURSOR_CURRENT: move forward or backward from the current position.</p>     <p class="para">CUBRID_CURSOR_LAST: move backward at the end of LOB object.</p>    </dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lob2-seek-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-lob2-seek-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3485">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_lob2_seek()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #FF8000">// test_lob (id INT, contents CLOB)<br /></span><span style="color: #9876AA">$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">, </span><span style="color: #DD0000">""</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"DROP TABLE if exists test_lob"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">,</span><span style="color: #DD0000">"CREATE TABLE test_lob (id INT, contents CLOB)"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO test_lob VALUES(2, ?)"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$lob </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_lob2_new</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">'CLOB'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$len </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_lob2_write</span><span style="color: #007700">(</span><span style="color: #9876AA">$lob</span><span style="color: #007700">, </span><span style="color: #DD0000">"Hello world"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_lob2_seek</span><span style="color: #007700">(</span><span style="color: #9876AA">$lob</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_LAST</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_lob2_write</span><span style="color: #007700">(</span><span style="color: #9876AA">$lob</span><span style="color: #007700">, </span><span style="color: #DD0000">"beautiful"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_lob2_seek</span><span style="color: #007700">(</span><span style="color: #9876AA">$lob</span><span style="color: #007700">, </span><span style="color: #9876AA">15</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_FIRST</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$data </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_lob2_read</span><span style="color: #007700">(</span><span style="color: #9876AA">$lob</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">);<br /><br />echo </span><span style="color: #9876AA">$data</span><span style="color: #007700">.</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">cubrid_lob2_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">$lob</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lob2-seek-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_lob2_read()} - Read from BLOB/CLOB data</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_write()} - Write to a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_seek64()} - Move the cursor of a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_tell()} - Tell the cursor position of the LOB object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_tell64()} - Tell the cursor position of the LOB object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_size()} - Get a lob object's size</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_size64()} - Get a lob object's size</span></li>   </ul>  </span> </div></div>
 * @return bool <p>*/
function cubrid_lob2_seek($lob_identifier, $offset, $origin = CUBRID_CURSOR_CURRENT) {}

/**
*<div id="function.cubrid-lob2-size64" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lob2_size64</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.4.1)</p><p class="refpurpose"><span class="refname">cubrid_lob2_size64</span> &mdash; <span class="dc-title">Get a lob object&#039;s size</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lob2-size64-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lob2_size64</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$lob_identifier</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_lob2_size64()</strong></span> function is used to get the   size of a lob object.  If the size of a lob object is larger than an   integer data can be stored, you can use this function and it will return   the size as a string.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lob2-size64-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">lob_identifier</span></dt>    <dd>     <p class="para">Lob identifier as a result of <span class="function">{@link cubrid_lob2_new()}</span> or get from the result set.</p>    </dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lob2-size64-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   It will return the size of the LOB object as a string when it processes successfully, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lob2-size64-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_lob2_read()} - Read from BLOB/CLOB data</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_write()} - Write to a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_seek()} - Move the cursor of a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_seek64()} - Move the cursor of a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_tell()} - Tell the cursor position of the LOB object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_tell64()} - Tell the cursor position of the LOB object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_size()} - Get a lob object's size</span></li>   </ul>  </span> </div></div>
 * @return string <p>*/
function cubrid_lob2_size64($lob_identifier) {}

/**
*<div id="function.cubrid-lob2-size" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lob2_size</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.4.1)</p><p class="refpurpose"><span class="refname">cubrid_lob2_size</span> &mdash; <span class="dc-title">Get a lob object&#039;s size</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lob2-size-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lob2_size</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$lob_identifier</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_lob2_size()</strong></span> function is used to get the size of a lob object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lob2-size-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">lob_identifier</span></dt>    <dd>     <p class="para">Lob identifier as a result of <span class="function">{@link cubrid_lob2_new()}</span> or get from the result set.</p>    </dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lob2-size-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   It will return the size of the LOB object when it processes successfully, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lob2-size-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_lob2_read()} - Read from BLOB/CLOB data</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_write()} - Write to a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_seek()} - Move the cursor of a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_seek64()} - Move the cursor of a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_tell()} - Tell the cursor position of the LOB object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_tell64()} - Tell the cursor position of the LOB object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_size64()} - Get a lob object's size</span></li>   </ul>  </span> </div></div>
 * @return int <p>*/
function cubrid_lob2_size($lob_identifier) {}

/**
*<div id="function.cubrid-lob2-tell64" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lob2_tell64</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.4.1)</p><p class="refpurpose"><span class="refname">cubrid_lob2_tell64</span> &mdash; <span class="dc-title">Tell the cursor position of the LOB object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lob2-tell64-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lob2_tell64</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$lob_identifier</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_lob2_tell64()</strong></span> function is used to tell the    cursor position of the LOB object. If the size of a lob object is larger   than an integer data can be stored, you can use this function and it will   return the position information as a string.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lob2-tell64-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">lob_identifier</span></dt>    <dd>     <p class="para">Lob identifier as a result of <span class="function">{@link cubrid_lob2_new()}</span> or get from the result set.</p>    </dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lob2-tell64-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    It will return the cursor position on the LOB object as a string when it processes successfully, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lob2-tell64-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_lob2_read()} - Read from BLOB/CLOB data</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_write()} - Write to a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_seek()} - Move the cursor of a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_seek64()} - Move the cursor of a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_tell()} - Tell the cursor position of the LOB object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_size()} - Get a lob object's size</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_size64()} - Get a lob object's size</span></li>   </ul>  </span> </div></div>
 * @return string <p>*/
function cubrid_lob2_tell64($lob_identifier) {}

/**
*<div id="function.cubrid-lob2-tell" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lob2_tell</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.4.1)</p><p class="refpurpose"><span class="refname">cubrid_lob2_tell</span> &mdash; <span class="dc-title">Tell the cursor position of the LOB object</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lob2-tell-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lob2_tell</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$lob_identifier</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_lob2_tell()</strong></span> function is used to tell the cursor position of the LOB object.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lob2-tell-parameters"> <h3 class="title">参数</h3> <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">lob_identifier</span></dt>    <dd>     <p class="para">Lob identifier as a result of <span class="function">{@link cubrid_lob2_new()}</span> or get from the result set.</p>    </dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lob2-tell-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    It will return the cursor position on the LOB object when it processes successfully, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lob2-tell-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_lob2_read()} - Read from BLOB/CLOB data</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_write()} - Write to a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_seek()} - Move the cursor of a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_seek64()} - Move the cursor of a lob object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_tell64()} - Tell the cursor position of the LOB object</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_size()} - Get a lob object's size</span></li>   <li class="member"><span class="function">{@link cubrid_lob2_size64()} - Get a lob object's size</span></li>   </ul>  </span> </div></div>
 * @return int <p>*/
function cubrid_lob2_tell($lob_identifier) {}

/**
*<div id="function.cubrid-lock-read" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lock_read</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_lock_read</span> &mdash; <span class="dc-title">Set a read lock on the given OID</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lock-read-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lock_read</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$oid</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_lock_read()</strong></span> function is used to put read    lock on the instance pointed by given <span class="parameter" style="color:#3A95FF">oid</span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lock-read-parameters">  <h3 class="title">参数</h3>  <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>    <dd><p class="para">Connection identifier.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">oid</span></dt>  <dd><p class="para">OID of the instance that you want to put read lock on.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lock-read-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-lock-read-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3494">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_lock_read()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br />@</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"DROP TABLE foo"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"CREATE TABLE foo(a int AUTO_INCREMENT, b set(int), c list(int), d char(10))"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO foo(a, b, c, d) VALUES(1, {1,2,3}, {11,22,33,333}, 'a')"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO foo(a, b, c, d) VALUES(2, {4,5,7}, {44,55,66,666}, 'b')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM foo"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_INCLUDE_OID</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_move_cursor</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_FIRST</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$oid </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_current_oid</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_lock_read</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div><div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>string(9) &quot;{1, 2, 3}&quot;<br>array(4) {<br>  [&quot;a&quot;]=&gt;<br>  string(1) &quot;1&quot;<br>  [&quot;b&quot;]=&gt;<br>  array(3) {<br>    [0]=&gt;<br>    string(1) &quot;1&quot;<br>    [1]=&gt;<br>    string(1) &quot;2&quot;<br>    [2]=&gt;<br>    string(1) &quot;3&quot;<br>  }<br>  [&quot;c&quot;]=&gt;<br>  array(4) {<br>    [0]=&gt;<br>    string(2) &quot;11&quot;<br>    [1]=&gt;<br>    string(2) &quot;22&quot;<br>    [2]=&gt;<br>    string(2) &quot;33&quot;<br>    [3]=&gt;<br>    string(3) &quot;333&quot;<br>  }<br>  [&quot;d&quot;]=&gt;<br>  string(10) &quot;a         &quot;<br>}<br></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lock-read-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_lock_write()} - Set a write lock on the given OID</span></li>      </ul>  </span>  </div> </div>
 * @return bool <p>*/
function cubrid_lock_read($conn_identifier, $oid) {}

/**
*<div id="function.cubrid-lock-write" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_lock_write</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_lock_write</span> &mdash; <span class="dc-title">Set a write lock on the given OID</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-lock-write-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_lock_write</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$oid</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_lock_write()</strong></span> function is used to put write    lock on the instance pointed by the given <span class="parameter" style="color:#3A95FF">oid</span>.  </p></div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-lock-write-parameters">  <h3 class="title">参数</h3>  <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">Connection identifier.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">oid</span></dt>  <dd><p class="para">OID of the instance that you want to put write lock on.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-lock-write-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-lock-write-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3497">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_lock_write()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br />@</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"DROP TABLE foo"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"CREATE TABLE foo(a int AUTO_INCREMENT, b set(int), c list(int), d char(10))"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO foo(a, b, c, d) VALUES(1, {1,2,3}, {11,22,33,333}, 'a')"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO foo(a, b, c, d) VALUES(2, {4,5,7}, {44,55,66,666}, 'b')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM foo"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_INCLUDE_OID</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_move_cursor</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_FIRST</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$oid </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_current_oid</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_lock_write</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_col_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_put</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">, array(</span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">4</span><span style="color: #007700">, </span><span style="color: #9876AA">8</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_col_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(3) {<br>  [0]=&gt;<br>  string(1) &quot;1&quot;<br>  [1]=&gt;<br>  string(1) &quot;2&quot;<br>  [2]=&gt;<br>  string(1) &quot;3&quot;<br>}<br>array(3) {<br>  [0]=&gt;<br>  string(1) &quot;2&quot;<br>  [1]=&gt;<br>  string(1) &quot;4&quot;<br>  [2]=&gt;<br>  string(1) &quot;8&quot;<br>}<br></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-lock-write-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_lock_read()} - Set a read lock on the given OID</span></li>      </ul>  </span>  </div> </div>
 * @return bool <p>*/
function cubrid_lock_write($conn_identifier, $oid) {}

/**
*<div id="function.cubrid-move-cursor" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_move_cursor</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_move_cursor</span> &mdash; <span class="dc-title">Move the cursor in the result</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-move-cursor-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_move_cursor</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$req_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$offset</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$origin</span><span class="initializer"> = CUBRID_CURSOR_CURRENT</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_move_cursor()</strong></span> function is used to move the    current cursor location of <span class="parameter" style="color:#3A95FF">req_identifier</span> by the    value set in the <span class="parameter" style="color:#3A95FF">offset</span> argument, to the direction    set in the <span class="parameter" style="color:#3A95FF">origin</span> argument. To set the    <span class="parameter" style="color:#3A95FF">origin</span> argument, you can use <strong><span>CUBRID_CURSOR_FIRST</span></strong>    for the first part of the result, <strong><span>CUBRID_CURSOR_CURRENT</span></strong> for the current    location of the result, or <strong><span>CUBRID_CURSOR_LAST</span></strong> for the last part of the    result. If <span class="parameter" style="color:#3A95FF">origin</span> argument is not explicitly    designated, then the function uses <strong><span>CUBRID_CURSOR_CURRENT</span></strong> as its default    value.  </p>  <p class="para">    If the value of cursor movement range goes over the valid limit, then the    cursor moves to the next location after the valid range for the cursor.    For example, if you move 20 units in the result with the size of 10, then    the cursor will move to 11th place and return <strong><span>CUBRID_NO_MORE_DATA</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-move-cursor-parameters">  <h3 class="title">参数</h3>  <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">req_identifier</span></dt>  <dd><p class="para">Request identifier.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">offset</span></dt>  <dd><p class="para">Number of units you want to move the cursor.</p></dd>       <dt><span class="parameter" style="color:#3A95FF">origin</span></dt>  <dd><p class="para">Location where you want to move the cursor from <strong><span>CUBRID_CURSOR_FIRST</span></strong>, <strong><span>CUBRID_CURSOR_CURRENT</span></strong>, <strong><span>CUBRID_CURSOR_LAST</span></strong>.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-move-cursor-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-move-cursor-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3500">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_move_cursor()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"127.0.0.1"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM code"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_move_cursor</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_LAST</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_row</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_move_cursor</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_FIRST</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_row</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_move_cursor</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_CURRENT</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$result </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_row</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$result</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div><div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(2) {<br>  [0]=&gt;<br>  string(1) &quot;G&quot;<br>  [1]=&gt;<br>  string(4) &quot;Gold&quot;<br>}<br>array(2) {<br>  [0]=&gt;<br>  string(1) &quot;X&quot;<br>  [1]=&gt;<br>  string(5) &quot;Mixed&quot;<br>}<br>array(2) {<br>  [0]=&gt;<br>  string(1) &quot;M&quot;<br>  [1]=&gt;<br>  string(3) &quot;Man&quot;<br>}<br></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-move-cursor-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_execute()} - Execute a prepared SQL statement</span></li>      </ul>  </span>  </div> </div>
 * @return int <p>*/
function cubrid_move_cursor($req_identifier, $offset, $origin = CUBRID_CURSOR_CURRENT) {}

/**
*<div id="function.cubrid-next-result" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_next_result</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.4.0)</p><p class="refpurpose"><span class="refname">cubrid_next_result</span> &mdash; <span class="dc-title">Get result of next query when executing multiple SQL statements</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-next-result-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_next_result</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$result</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_next_result()</strong></span> function is used to get    results of next query if multiple SQL statements are executed and   <strong><span>CUBRID_EXEC_QUERY_ALL</span></strong> flag is set upon    <span class="function">{@link cubrid_execute()}</span>.   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-next-result-parameters">  <h3 class="title">参数</h3>  <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">result</span></dt>  <dd><p class="para"><span class="parameter" style="color:#3A95FF">result</span> comes from a call to <span class="function">{@link cubrid_execute()}</span></p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-next-result-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-next-result-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3503">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_next_result()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"127.0.0.1"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$sql_stmt </span><span style="color: #007700">= </span><span style="color: #DD0000">"SELECT * FROM code; SELECT * FROM history WHERE host_year=2004 AND event_code=20281"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$res </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$sql_stmt</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_EXEC_QUERY_ALL</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">get_result_info</span><span style="color: #007700">(</span><span style="color: #9876AA">$res</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_next_result</span><span style="color: #007700">(</span><span style="color: #9876AA">$res</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">get_result_info</span><span style="color: #007700">(</span><span style="color: #9876AA">$res</span><span style="color: #007700">);<br /><br />function </span><span style="color: #9876AA">get_result_info</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">)<br />{<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n------------ get_result_info --------------------\n"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$row_num </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_num_rows</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$col_num </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_num_cols</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$column_name_list </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_column_names</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$column_type_list </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_column_types</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$column_last_name </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_field_name</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">$col_num </span><span style="color: #007700">- </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$column_last_table </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_field_table</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">$col_num </span><span style="color: #007700">- </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$column_last_type </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_field_type</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">$col_num </span><span style="color: #007700">- </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$column_last_len </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_field_len</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">$col_num </span><span style="color: #007700">- </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$column_1_flags </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_field_flags</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %d\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Row count:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$row_num</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %d\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Column count:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$col_num</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %-30s %-15s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Column Names"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Column Types"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Column Len"</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"------------------------------------------------------------------------------\n"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$size </span><span style="color: #007700">= </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$column_name_list</span><span style="color: #007700">);<br />    for(</span><span style="color: #9876AA">$i </span><span style="color: #007700">= </span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">$size</span><span style="color: #007700">; </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br />        </span><span style="color: #9876AA">$column_len </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_field_len</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">$i</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %-30s %-15s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$column_name_list</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">], </span><span style="color: #9876AA">$column_type_list</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">], </span><span style="color: #9876AA">$column_len</span><span style="color: #007700">); <br />    }<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n\n"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Last Column Name:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$column_last_name</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Last Column Table:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$column_last_table</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Last Column Type:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$column_last_type</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %d\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Last Column Len:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$column_last_len</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Second Column Flags:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$column_1_flags</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n\n"</span><span style="color: #007700">);<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>------------ get_result_info --------------------<br>Row count:                     6<br>Column count:                  2<br><br>Column Names                   Column Types                   Column Len     <br>------------------------------------------------------------------------------<br>s_name                         char                           1              <br>f_name                         varchar                        6              <br><br><br>Last Column Name:              f_name<br>Last Column Table:             code<br>Last Column Type:              varchar<br>Last Column Len:               6<br>Second Column Flags:           <br><br><br><br>------------ get_result_info --------------------<br>Row count:                     4<br>Column count:                  5<br><br>Column Names                   Column Types                   Column Len     <br>------------------------------------------------------------------------------<br>event_code                     integer                        11             <br>athlete                        varchar                        40             <br>host_year                      integer                        11             <br>score                          varchar                        10             <br>unit                           varchar                        5              <br><br><br>Last Column Name:              unit<br>Last Column Table:             history<br>Last Column Type:              varchar<br>Last Column Len:               5<br>Second Column Flags:           not_null primary_key unique_key<br></span></div>   </div>  </div> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-next-result-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">   <li class="member"><span class="function">{@link cubrid_execute()} - Execute a prepared SQL statement</span></li>   </ul>  </span>  </div></div>
 * @return bool <p>*/
function cubrid_next_result($result) {}

/**
*<div id="function.cubrid-prepare" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_prepare</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_prepare</span> &mdash; <span class="dc-title">Prepare a SQL statement for execution</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-prepare-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_prepare</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$prepare_stmt</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$option</span><span class="initializer"> = 0</span></span>): <span class="type" style="color:#EAB766">resource</span></div>  <p class="para rdfs-comment">      The <span class="function"><strong style="color:#CC7832">cubrid_prepare()</strong></span> function is a sort of API which represents SQL statements       compiled previously to a given connection handle. This pre-compiled SQL statement will be included       in the <span class="function"><strong style="color:#CC7832">cubrid_prepare()</strong></span>.   </p>  <p class="para">      Accordingly, you can use this statement effectively to execute several times repeatedly or to       process long data. Only a single statement can be used and a parameter may put a question mark (?)       to appropriate area in the SQL statement. Add a parameter when you bind a value in the VALUES       clause of INSERT statement or in the WHERE clause. Note that it is allowed to bind a value to a       MARK(?) by using the <span class="function">{@link cubrid_bind()}</span> function only.   </p> </div><br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-prepare-parameters">  <h3 class="title">参数</h3>  <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">Connection identifier.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">prepare_stmt</span></dt>  <dd><p class="para">Prepare query.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">option</span></dt>    <dd><p class="para">OID return option <strong><span>CUBRID_INCLUDE_OID</span></strong>.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-prepare-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Request identifier, if process is successful, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-prepare-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3521">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_prepare()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$sql </span><span style="color: #007700">= &lt;&lt;&lt;EOD<br /></span><span style="color: #DD0000">SELECT g.event_code, e.name <br />FROM game g <br />JOIN event e ON g.event_code=e.code <br />WHERE host_year = ? AND event_code NOT IN (SELECT event_code FROM game WHERE host_year=?) GROUP BY event_code;<br /></span><span style="color: #007700">EOD;<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_prepare</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$sql</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">2004</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_bind</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">2000</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$row_num </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_num_rows</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"There are %d event that exits in 2004 olympic but not in 2000. For example:\n\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$row_num</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-15s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Event_code"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Event_name"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"----------------------------\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_assoc</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-15d %s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"event_code"</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"name"</span><span style="color: #007700">]);<br /></span><span style="color: #9876AA">$row </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_fetch_assoc</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-15d %s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"event_code"</span><span style="color: #007700">], </span><span style="color: #9876AA">$row</span><span style="color: #007700">[</span><span style="color: #DD0000">"name"</span><span style="color: #007700">]);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>There are 27 event that exits in 2004 olympic but not in 2000. For example:<br><br>Event_code      Event_name<br>----------------------------<br>20063           +91kg<br>20070           64kg<br></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-prepare-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">      <li class="member"><span class="function">{@link cubrid_execute()} - Execute a prepared SQL statement</span></li>      <li class="member"><span class="function">{@link cubrid_bind()} - Bind variables to a prepared statement as parameters</span></li>     </ul>  </span>  </div></div>
 * @return resource|false <p>*/
function cubrid_prepare($conn_identifier, $prepare_stmt, $option = 0) {}

/**
*<div id="function.cubrid-put" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_put</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_put</span> &mdash; <span class="dc-title">Update a column using OID</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-put-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_put</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$oid</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$attr</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$value</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">      The <span class="function"><strong style="color:#CC7832">cubrid_put()</strong></span> function is used to update an      attribute of the instance of the given <span class="parameter" style="color:#3A95FF">oid</span>.  </p>  <p class="para">      You can update single attribute by using string data type to set      <span class="parameter" style="color:#3A95FF">attr</span>.  In such case, you can use integer,      floating point or string type data for the <span class="parameter" style="color:#3A95FF">value</span>      argument. To update multiple number of attributes, you can disregard the      <span class="parameter" style="color:#3A95FF">attr</span> argument, and set      <span class="parameter" style="color:#3A95FF">value</span> argument with associative array data type.  </p> </div><br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-put-parameters">  <h3 class="title">参数</h3>  <span>  <dl>       <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>    <dd><p class="para">Connection identifier.</p></dd>          <dt><span class="parameter" style="color:#3A95FF">oid</span></dt>    <dd><p class="para">OID of the instance that you want to update.</p></dd>          <dt><span class="parameter" style="color:#3A95FF">attr</span></dt>    <dd><p class="para">Name of the attribute that you want to update.</p></dd>          <dt><span class="parameter" style="color:#3A95FF">value</span></dt>    <dd><p class="para">New value that you want to assign to the attribute.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-put-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-put-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3524">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_put()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br />@</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"DROP TABLE foo"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"CREATE TABLE foo(a int AUTO_INCREMENT, b set(int), c list(int), d char(10))"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO foo(a, b, c, d) VALUES(1, {1,2,3}, {11,22,33,333}, 'a')"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO foo(a, b, c, d) VALUES(2, {4,5,7}, {44,55,66,666}, 'b')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM foo"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_INCLUDE_OID</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_move_cursor</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_FIRST</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$oid </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_current_oid</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_col_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_put</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">, array(</span><span style="color: #9876AA">2</span><span style="color: #007700">, </span><span style="color: #9876AA">4</span><span style="color: #007700">, </span><span style="color: #9876AA">8</span><span style="color: #007700">));<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_col_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(3) {<br>  [0]=&gt;<br>  string(1) &quot;1&quot;<br>  [1]=&gt;<br>  string(1) &quot;2&quot;<br>  [2]=&gt;<br>  string(1) &quot;3&quot;<br>}<br>array(3) {<br>  [0]=&gt;<br>  string(1) &quot;2&quot;<br>  [1]=&gt;<br>  string(1) &quot;4&quot;<br>  [2]=&gt;<br>  string(1) &quot;8&quot;<br>}<br></span></div>   </div>  </div> </div>   <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-put-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">     <li class="member"><span class="function">{@link cubrid_get()} - Get a column using OID</span></li>      <li class="member"><span class="function">{@link cubrid_set_add()} - Insert a single element to set type column using OID</span></li>      <li class="member"><span class="function">{@link cubrid_set_drop()} - Delete an element from set type column using OID</span></li>      <li class="member"><span class="function">{@link cubrid_seq_insert()} - Insert an element to a sequence type column using OID</span></li>      <li class="member"><span class="function">{@link cubrid_seq_drop()} - Delete an element from sequence type column using OID</span></li>      <li class="member"><span class="function">{@link cubrid_seq_put()} - Update the element value of sequence type column using OID</span></li>     </ul>  </span>  </div></div>
 * @return bool <p>*/
function cubrid_put($conn_identifier, $oid, $attr = null, $value) {}

/**
*<div id="function.cubrid-schema" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_schema</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_schema</span> &mdash; <span class="dc-title">Get the requested schema information</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-schema-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_schema</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$schema_type</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$class_name</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$attr_name</span><span class="initializer"> = ?</span></span><br>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   The <span class="function"><strong style="color:#CC7832">cubrid_schema()</strong></span> function is used to get the   requested schema information from database. To get information about specific class,   set the <span class="parameter" style="color:#3A95FF">class_name</span>, to get information about specific attribute   (can be used only with <strong><span>CUBRID_SCH_ATTR_PRIVILEGE</span></strong>),   set the <span class="parameter" style="color:#3A95FF">attr_name</span>.  </p>  <p class="para">  The result of the <span class="function"><strong style="color:#CC7832">cubrid_schema()</strong></span> function is returned as a two-dimensional  array (column (associative array) * row (numeric array)). The following  tables shows types of schema and the column structure of the result array to  be returned based on the schema type.  </p>  <p class="para">  <table class="doctable table">   <caption><strong>Result Composition of Each Type</strong></caption>         <thead>      <tr>       <th>Schema</th>       <th>Column Number</th>       <th>Column Name</th>       <th>Value</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>CUBRID_SCH_CLASS</td>       <td>1</td>       <td>NAME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>2</td>       <td>TYPE</td>       <td>0:system class 1:vclass 2:class</td>      </tr>      <tr>       <td>CUBRID_SCH_VCLASS</td>       <td>1</td>       <td>NAME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>2</td>       <td>TYPE</td>       <td>1:vclass</td>      </tr>      <tr>       <td>CUBRID_SCH_QUERY_SPEC</td>       <td>1</td>       <td>QUERY_SPEC</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td>CUBRID_SCH_ATTRIBUTE / CUBRID_SCH_CLASS_ATTRIBUTE</td>       <td>1</td>       <td>ATTR_NAME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>2</td>       <td>DOMAIN</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>3</td>       <td>SCALE</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>4</td>       <td>PRECISION</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>5</td>       <td>INDEXED</td>       <td>1:indexed</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>6</td>       <td>NOT NULL</td>       <td>1:not null</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>7</td>       <td>SHARED</td>       <td>1:shared</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>8</td>       <td>UNIQUE</td>       <td>1:unique</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>9</td>       <td>DEFAULT</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>10</td>       <td>ATTR_ORDER</td>       <td>base:1</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>11</td>       <td>CLASS_NAME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>12</td>       <td>SOURCE_CLASS</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>13</td>       <td>IS_KEY</td>       <td>1:key</td>      </tr>      <tr>       <td>CUBRID_SCH_METHOD / CUBRID_SCH_CLASS_METHOD</td>       <td>1</td>       <td>NAME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>2</td>       <td>RET_DOMAIN</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>3</td>       <td>ARG_DOMAIN</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td>CUBRID_SCH_METHOD_FILE</td>       <td>1</td>       <td>METHOD_FILE</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td>CUBRID_SCH_SUPERCLASS / CUBRID_SCH_DIRECT_SUPER_CLASS / CUBRID_SCH_SUBCLASS</td>       <td>1</td>       <td>CLASS_NAME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>2</td>       <td>TYPE</td>       <td>0:system class 1:vclass 2:class</td>      </tr>      <tr>       <td>CUBRID_SCH_CONSTRAINT</td>       <td>1</td>       <td>TYPE</td>       <td>0:unique 1:index 2:reverse unique 3:reverse index</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>2</td>       <td>NAME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>3</td>       <td>ATTR_NAME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>4</td>       <td>NUM_PAGES</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>5</td>       <td>NUM_KEYS</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>6</td>       <td>PRIMARY_KEY</td>       <td>1:primary key</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>7</td>       <td>KEY_ORDER</td>       <td>base:1</td>      </tr>      <tr>       <td>CUBRID_SCH_TRIGGER</td>       <td>1</td>       <td>NAME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>2</td>       <td>STATUS</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>3</td>       <td>EVENT</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>4</td>       <td>TARGET_CLASS</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>5</td>       <td>TARGET_ATTR</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>6</td>       <td>ACTION_TIME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>7</td>       <td>ACTION</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>8</td>       <td>PRIORITY</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>9</td>       <td>CONDITION_TIME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>10</td>       <td>CONDITION</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td>CUBRID_SCH_CLASS_PRIVILEGE / CUBRID_SCH_ATTR_PRIVILEGE</td>       <td>1</td>       <td>CLASS_NAME / ATTR_NAME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>2</td>       <td>PRIVILEGE</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>3</td>       <td>GRANTABLE</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td>CUBRID_SCH_PRIMARY_KEY</td>       <td>1</td>       <td>CLASS_NAME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>2</td>       <td>ATTR_NAME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>3</td>       <td>KEY_SEQ</td>       <td>base:1</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>4</td>       <td>KEY_NAME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td>CUBRID_SCH_IMPORTED_KEYS / CUBRID_SCH_EXPORTED_KEYS / CUBRID_SCH_CROSS_REFERENCE</td>       <td>1</td>       <td>PKTABLE_NAME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>2</td>       <td>PKCOLUMN_NAME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>3</td>       <td>FKTABLE_NAME</td>       <td>base:1</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>4</td>       <td>FKCOLUMN_NAME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>5</td>       <td>KEY_SEQ</td>       <td>base:1</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>6</td>       <td>UPDATE_ACTION</td>       <td>0:cascade 1:restrict 2:no action 3:set null</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>7</td>       <td>DELETE_ACTION</td>       <td>0:cascade 1:restrict 2:no action 3:set null</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>8</td>       <td>FK_NAME</td>       <td class="empty">&nbsp;</td>      </tr>      <tr>       <td class="empty">&nbsp;</td>       <td>9</td>       <td>PK_NAME</td>       <td class="empty">&nbsp;</td>      </tr>     </tbody>       </table>  </p> </div><br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-schema-parameters">  <h3 class="title">参数</h3>  <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">Connection identifier.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">schema_type</span></dt>  <dd><p class="para">Schema data that you want to know.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">class_name</span></dt>  <dd><p class="para">Class you want to know the schema of.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">attr_name</span></dt>  <dd><p class="para">Attribute you want to know the schema of.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-schema-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Array containing the schema information, when process is successful, 或者在失败时返回 <strong><span>false</span></strong>.  </p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.cubrid-schema-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>8.3.1</td>       <td>        Change return value: when process is unsuccessful, return false, not -1.       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-schema-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3530">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_schema()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n--- Primary Key ---\n"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$pk </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_schema</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_SCH_PRIMARY_KEY</span><span style="color: #007700">, </span><span style="color: #DD0000">"game"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$pk</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n--- Foreign Keys ---\n"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$fk </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_schema</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_SCH_IMPORTED_KEYS</span><span style="color: #007700">, </span><span style="color: #DD0000">"game"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$fk</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n--- Column Attribute ---\n"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_schema</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_SCH_ATTRIBUTE</span><span style="color: #007700">, </span><span style="color: #DD0000">"stadium"</span><span style="color: #007700">, </span><span style="color: #DD0000">"area"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span><br>--- Primary Key ---<br>array(3) {<br>  [0]=&gt;<br>  array(4) {<br>    [&quot;CLASS_NAME&quot;]=&gt;<br>    string(4) &quot;game&quot;<br>    [&quot;ATTR_NAME&quot;]=&gt;<br>    string(12) &quot;athlete_code&quot;<br>    [&quot;KEY_SEQ&quot;]=&gt;<br>    string(1) &quot;3&quot;<br>    [&quot;KEY_NAME&quot;]=&gt;<br>    string(41) &quot;pk_game_host_year_event_code_athlete_code&quot;<br>  }<br>  [1]=&gt;<br>  array(4) {<br>    [&quot;CLASS_NAME&quot;]=&gt;<br>    string(4) &quot;game&quot;<br>    [&quot;ATTR_NAME&quot;]=&gt;<br>    string(10) &quot;event_code&quot;<br>    [&quot;KEY_SEQ&quot;]=&gt;<br>    string(1) &quot;2&quot;<br>    [&quot;KEY_NAME&quot;]=&gt;<br>    string(41) &quot;pk_game_host_year_event_code_athlete_code&quot;<br>  }<br>  [2]=&gt;<br>  array(4) {<br>    [&quot;CLASS_NAME&quot;]=&gt;<br>    string(4) &quot;game&quot;<br>    [&quot;ATTR_NAME&quot;]=&gt;<br>    string(9) &quot;host_year&quot;<br>    [&quot;KEY_SEQ&quot;]=&gt;<br>    string(1) &quot;1&quot;<br>    [&quot;KEY_NAME&quot;]=&gt;<br>    string(41) &quot;pk_game_host_year_event_code_athlete_code&quot;<br>  }<br>}<br><br>--- Foreign Keys ---<br>array(2) {<br>  [0]=&gt;<br>  array(9) {<br>    [&quot;PKTABLE_NAME&quot;]=&gt;<br>    string(7) &quot;athlete&quot;<br>    [&quot;PKCOLUMN_NAME&quot;]=&gt;<br>    string(4) &quot;code&quot;<br>    [&quot;FKTABLE_NAME&quot;]=&gt;<br>    string(4) &quot;game&quot;<br>    [&quot;FKCOLUMN_NAME&quot;]=&gt;<br>    string(12) &quot;athlete_code&quot;<br>    [&quot;KEY_SEQ&quot;]=&gt;<br>    string(1) &quot;1&quot;<br>    [&quot;UPDATE_RULE&quot;]=&gt;<br>    string(1) &quot;1&quot;<br>    [&quot;DELETE_RULE&quot;]=&gt;<br>    string(1) &quot;1&quot;<br>    [&quot;FK_NAME&quot;]=&gt;<br>    string(20) &quot;fk_game_athlete_code&quot;<br>    [&quot;PK_NAME&quot;]=&gt;<br>    string(15) &quot;pk_athlete_code&quot;<br>  }<br>  [1]=&gt;<br>  array(9) {<br>    [&quot;PKTABLE_NAME&quot;]=&gt;<br>    string(5) &quot;event&quot;<br>    [&quot;PKCOLUMN_NAME&quot;]=&gt;<br>    string(4) &quot;code&quot;<br>    [&quot;FKTABLE_NAME&quot;]=&gt;<br>    string(4) &quot;game&quot;<br>    [&quot;FKCOLUMN_NAME&quot;]=&gt;<br>    string(10) &quot;event_code&quot;<br>    [&quot;KEY_SEQ&quot;]=&gt;<br>    string(1) &quot;1&quot;<br>    [&quot;UPDATE_RULE&quot;]=&gt;<br>    string(1) &quot;1&quot;<br>    [&quot;DELETE_RULE&quot;]=&gt;<br>    string(1) &quot;1&quot;<br>    [&quot;FK_NAME&quot;]=&gt;<br>    string(18) &quot;fk_game_event_code&quot;<br>    [&quot;PK_NAME&quot;]=&gt;<br>    string(13) &quot;pk_event_code&quot;<br>  }<br>}<br><br>--- Column Attribute ---<br>array(1) {<br>  [0]=&gt;<br>  array(13) {<br>    [&quot;ATTR_NAME&quot;]=&gt;<br>    string(4) &quot;area&quot;<br>    [&quot;DOMAIN&quot;]=&gt;<br>    string(1) &quot;7&quot;<br>    [&quot;SCALE&quot;]=&gt;<br>    string(1) &quot;2&quot;<br>    [&quot;PRECISION&quot;]=&gt;<br>    string(2) &quot;10&quot;<br>    [&quot;INDEXED&quot;]=&gt;<br>    string(1) &quot;0&quot;<br>    [&quot;NON_NULL&quot;]=&gt;<br>    string(1) &quot;0&quot;<br>    [&quot;SHARED&quot;]=&gt;<br>    string(1) &quot;0&quot;<br>    [&quot;UNIQUE&quot;]=&gt;<br>    string(1) &quot;0&quot;<br>    [&quot;DEFAULT&quot;]=&gt;<br>    NULL<br>    [&quot;ATTR_ORDER&quot;]=&gt;<br>    string(1) &quot;4&quot;<br>    [&quot;CLASS_NAME&quot;]=&gt;<br>    string(7) &quot;stadium&quot;<br>    [&quot;SOURCE_CLASS&quot;]=&gt;<br>    string(7) &quot;stadium&quot;<br>    [&quot;IS_KEY&quot;]=&gt;<br>    string(1) &quot;0&quot;<br>  }<br>}<br></span></div>   </div>  </div> </div></div>
 * @return array <p>*/
function cubrid_schema($conn_identifier, $schema_type, $class_name = null, $attr_name = null) {}

/**
*<div id="function.cubrid-seq-drop" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_seq_drop</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_seq_drop</span> &mdash; <span class="dc-title">Delete an element from sequence type column using OID</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-seq-drop-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_seq_drop</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$oid</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$attr_name</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$index</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_seq_drop()</strong></span> function is used to delete an    element you request from the given sequence type attribute in the    database.  </p> </div><br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-seq-drop-parameters">  <h3 class="title">参数</h3>  <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">Connection identifier.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">oid</span></dt>  <dd><p class="para">OID of the instance you want to work with.</p></dd>            <dt><span class="parameter" style="color:#3A95FF">attr_name</span></dt>  <dd><p class="para">Name of the attribute that you want to delete an element from.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">index</span></dt>  <dd><p class="para">Index of the element that you want to delete (1-based).</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-seq-drop-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-seq-drop-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3533">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_seq_drop()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br />@</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"DROP TABLE foo"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"CREATE TABLE foo(a int AUTO_INCREMENT, b set(int), c sequence(int), d char(10))"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO foo(a, b, c, d) VALUES(1, {1,2,3}, {11,22,33,333}, 'a')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM foo"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_INCLUDE_OID</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_move_cursor</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_FIRST</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$oid </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_current_oid</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_col_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"c"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_seq_drop</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"c"</span><span style="color: #007700">, </span><span style="color: #9876AA">4</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_col_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"c"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div><div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(4) {<br>  [0]=&gt;<br>  string(2) &quot;11&quot;<br>  [1]=&gt;<br>  string(2) &quot;22&quot;<br>  [2]=&gt;<br>  string(2) &quot;33&quot;<br>  [3]=&gt;<br>  string(3) &quot;333&quot;<br>}<br>array(3) {<br>  [0]=&gt;<br>  string(2) &quot;11&quot;<br>  [1]=&gt;<br>  string(2) &quot;22&quot;<br>  [2]=&gt;<br>  string(2) &quot;33&quot;<br>}<br></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-seq-drop-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">     <li class="member"><span class="function">{@link cubrid_seq_insert()} - Insert an element to a sequence type column using OID</span></li>      <li class="member"><span class="function">{@link cubrid_seq_put()} - Update the element value of sequence type column using OID</span></li>      </ul>  </span>  </div> </div>
 * @return bool <p>*/
function cubrid_seq_drop($conn_identifier, $oid, $attr_name, $index) {}

/**
*<div id="function.cubrid-seq-insert" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_seq_insert</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_seq_insert</span> &mdash; <span class="dc-title">Insert an element to a sequence type column using OID</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-seq-insert-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_seq_insert</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$oid</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$attr_name</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$index</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$seq_element</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_col_insert()</strong></span> function is used to insert an    element to a sequence type attribute in a requested location.  </p> </div><br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-seq-insert-parameters">  <h3 class="title">参数</h3>  <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">Connection identifier.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">oid</span></dt>  <dd><p class="para">OID of the instance you want to work with.</p></dd>            <dt><span class="parameter" style="color:#3A95FF">attr_name</span></dt>  <dd><p class="para">Name of the attribute you want to insert an instance to.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">index</span></dt>  <dd><p class="para">Location of the element, you want to insert the element to (1-based).</p></dd>       <dt><span class="parameter" style="color:#3A95FF">seq_element</span></dt>  <dd><p class="para">Content of the element that you want to insert.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-seq-insert-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-seq-insert-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3536">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_seq_insert()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br />@</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"DROP TABLE foo"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"CREATE TABLE foo(a int AUTO_INCREMENT, b set(int), c sequence(int), d char(10))"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO foo(a, b, c, d) VALUES(1, {1,2,3}, {11,22,33,333}, 'a')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM foo"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_INCLUDE_OID</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_move_cursor</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_FIRST</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$oid </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_current_oid</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_col_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"c"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_seq_insert</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"c"</span><span style="color: #007700">, </span><span style="color: #9876AA">5</span><span style="color: #007700">, </span><span style="color: #DD0000">"44"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_col_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"c"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div><div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(4) {<br>  [0]=&gt;<br>  string(2) &quot;11&quot;<br>  [1]=&gt;<br>  string(2) &quot;22&quot;<br>  [2]=&gt;<br>  string(2) &quot;33&quot;<br>  [3]=&gt;<br>  string(3) &quot;333&quot;<br>}<br>array(5) {<br>  [0]=&gt;<br>  string(2) &quot;11&quot;<br>  [1]=&gt;<br>  string(2) &quot;22&quot;<br>  [2]=&gt;<br>  string(2) &quot;33&quot;<br>  [3]=&gt;<br>  string(3) &quot;333&quot;<br>  [4]=&gt;<br>  string(2) &quot;44&quot;<br>}<br></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-seq-insert-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">     <li class="member"><span class="function">{@link cubrid_seq_drop()} - Delete an element from sequence type column using OID</span></li>      <li class="member"><span class="function">{@link cubrid_seq_put()} - Update the element value of sequence type column using OID</span></li>      </ul>  </span>  </div></div>
 * @return bool <p>*/
function cubrid_seq_insert($conn_identifier, $oid, $attr_name, $index, $seq_element) {}

/**
*<div id="function.cubrid-seq-put" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_seq_put</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_seq_put</span> &mdash; <span class="dc-title">Update the element value of sequence type column using OID</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-seq-put-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_seq_put</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$oid</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$attr_name</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$index</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$seq_element</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_seq_put()</strong></span> function is used to update the    content of the requested element in a sequent type attribute using OID.  </p> </div><br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-seq-put-parameters">  <h3 class="title">参数</h3>  <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">Connection identifier.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">oid</span></dt>  <dd><p class="para">OID of the instance you want to work with.</p></dd>            <dt><span class="parameter" style="color:#3A95FF">attr_name</span></dt>  <dd><p class="para">Name of the attribute that you want to update an element.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">index</span></dt>  <dd><p class="para">Index (1-based) of the element that you want to update.</p></dd>       <dt><span class="parameter" style="color:#3A95FF">seq_element</span></dt>  <dd><p class="para">New content that you want to use for the update.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-seq-put-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-seq-put-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3539">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_seq_put()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br />@</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"DROP TABLE foo"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"CREATE TABLE foo(a int AUTO_INCREMENT, b set(int), c sequence(int), d char(10))"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO foo(a, b, c, d) VALUES(1, {1,2,3}, {11,22,33,333}, 'a')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM foo"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_INCLUDE_OID</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_move_cursor</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_FIRST</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$oid </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_current_oid</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_col_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"c"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_seq_put</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"c"</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #DD0000">"111"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_col_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"c"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div><div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(4) {<br>  [0]=&gt;<br>  string(2) &quot;11&quot;<br>  [1]=&gt;<br>  string(2) &quot;22&quot;<br>  [2]=&gt;<br>  string(2) &quot;33&quot;<br>  [3]=&gt;<br>  string(3) &quot;333&quot;<br>}<br>array(4) {<br>  [0]=&gt;<br>  string(3) &quot;111&quot;<br>  [1]=&gt;<br>  string(2) &quot;22&quot;<br>  [2]=&gt;<br>  string(2) &quot;33&quot;<br>  [3]=&gt;<br>  string(3) &quot;333&quot;<br>}<br></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-seq-put-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">     <li class="member"><span class="function">{@link cubrid_seq_drop()} - Delete an element from sequence type column using OID</span></li>      <li class="member"><span class="function">{@link cubrid_seq_insert()} - Insert an element to a sequence type column using OID</span></li>      </ul>  </span>  </div></div>
 * @return bool <p>*/
function cubrid_seq_put($conn_identifier, $oid, $attr_name, $index, $seq_element) {}

/**
 * (PHP 5, CUBRID &gt;= 8.3.0)<br/>
 * Insert a single element to set type column using OID
 * @link https://php.net/manual/en/function.cubrid-seq-add.php
 * @param resource $conn_identifier <p>
 * Connection identifier.
 * </p>
 * @param string $oid <p>
 * OID of the instance you want to work with.
 * </p>
 * @param string $attr_name <p>
 * Name of the attribute you want to insert an element.
 * </p>
 * @param string $seq_element <p>
 * Content of the element that you want to insert.
 * </p>
 * @return bool <p>
 * TRUE, when process is successful. FALSE,
 * when process is unsuccessful.
 * </p>
 */
function cubrid_seq_add($conn_identifier, $oid, $attr_name, $seq_element) {}

/**
*<div id="function.cubrid-set-add" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_set_add</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_set_add</span> &mdash; <span class="dc-title">Insert a single element to set type column using OID</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-set-add-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_set_add</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$oid</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$attr_name</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$set_element</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_set_add()</strong></span> function is used to insert a    single element to a set type attribute (set, multiset, sequence) you    requested.  </p> </div><br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-set-add-parameters">  <h3 class="title">参数</h3>  <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">Connection identifier.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">oid</span></dt>  <dd><p class="para">OID of the instance you want to work with.</p></dd>            <dt><span class="parameter" style="color:#3A95FF">attr_name</span></dt>  <dd><p class="para">Name of the attribute you want to insert an element.</p></dd>       <dt><span class="parameter" style="color:#3A95FF">set_element</span></dt>  <dd><p class="para">Content of the element you want to insert.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-set-add-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-set-add-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3542">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_set_add()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br />@</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"DROP TABLE foo"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"CREATE TABLE foo(a int AUTO_INCREMENT, b set(int), c list(int), d char(10))"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO foo(a, b, c, d) VALUES(1, {1,2,3}, {11,22,33,333}, 'a')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM foo"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_INCLUDE_OID</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_move_cursor</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_FIRST</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$oid </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_current_oid</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_col_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_set_add</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">, </span><span style="color: #DD0000">"4"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_col_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div><div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(3) {<br>  [0]=&gt;<br>  string(1) &quot;1&quot;<br>  [1]=&gt;<br>  string(1) &quot;2&quot;<br>  [2]=&gt;<br>  string(1) &quot;3&quot;<br>}<br>array(4) {<br>  [0]=&gt;<br>  string(1) &quot;1&quot;<br>  [1]=&gt;<br>  string(1) &quot;2&quot;<br>  [2]=&gt;<br>  string(1) &quot;3&quot;<br>  [3]=&gt;<br>  string(1) &quot;4&quot;<br>}<br></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-set-add-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">     <li class="member"><span class="function">{@link cubrid_seq_drop()} - Delete an element from sequence type column using OID</span></li>     </ul>  </span>  </div></div>
 * @return bool <p>*/
function cubrid_set_add($conn_identifier, $oid, $attr_name, $set_element) {}

/**
*<div id="function.cubrid-set-drop" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_set_drop</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_set_drop</span> &mdash; <span class="dc-title">Delete an element from set type column using OID</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-set-drop-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_set_drop</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">resource</span> <span class="parameter" style="color:#3A95FF">$conn_identifier</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$oid</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$attr_name</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$set_element</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_set_drop()</strong></span> function is used to delete an    element that you request from the given set type (set, multiset) attribute    of the database.  </p> </div><br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-set-drop-parameters">  <h3 class="title">参数</h3>  <span>  <dl>      <dt><span class="parameter" style="color:#3A95FF">conn_identifier</span></dt>  <dd><p class="para">Connection identifier.</p></dd>        <dt><span class="parameter" style="color:#3A95FF">oid</span></dt>  <dd><p class="para">OID of the instance you want to work with.</p></dd>            <dt><span class="parameter" style="color:#3A95FF">attr_name</span></dt>  <dd><p class="para">Name of the attribute you want to delete an element from.</p></dd>       <dt><span class="parameter" style="color:#3A95FF">set_element</span></dt>  <dd><p class="para">Content of the element you want to delete.</p></dd>     </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-set-drop-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-set-drop-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3548">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_set_drop()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33000</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br />@</span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"DROP TABLE foo"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"CREATE TABLE foo(a int AUTO_INCREMENT, b set(int), c list(int), d char(10))"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"INSERT INTO foo(a, b, c, d) VALUES(1, {1,2,3}, {11,22,33,333}, 'a')"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$req </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_execute</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #DD0000">"SELECT * FROM foo"</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_INCLUDE_OID</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_move_cursor</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">, </span><span style="color: #9876AA">CUBRID_CURSOR_FIRST</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$oid </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_current_oid</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_col_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_set_drop</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">, </span><span style="color: #DD0000">"1"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$attr </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_col_get</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">, </span><span style="color: #9876AA">$oid</span><span style="color: #007700">, </span><span style="color: #DD0000">"b"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$attr</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_close_request</span><span style="color: #007700">(</span><span style="color: #9876AA">$req</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div><div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>array(3) {<br>  [0]=&gt;<br>  string(1) &quot;1&quot;<br>  [1]=&gt;<br>  string(1) &quot;2&quot;<br>  [2]=&gt;<br>  string(1) &quot;3&quot;<br>}<br>array(2) {<br>  [0]=&gt;<br>  string(1) &quot;2&quot;<br>  [1]=&gt;<br>  string(1) &quot;3&quot;<br>}<br></span></div>   </div>  </div> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-set-drop-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">     <li class="member"><span class="function">{@link cubrid_set_add()} - Insert a single element to set type column using OID</span></li>     </ul>  </span>  </div></div>
 * @return bool <p>*/
function cubrid_set_drop($conn_identifier, $oid, $attr_name, $set_element) {}

/**
*<div id="function.cubrid-version" class="refentry"> <div class="refnamediv">  <h1 class="refname">cubrid_version</h1>  <p class="verinfo">(PECL CUBRID &gt;= 8.3.0)</p><p class="refpurpose"><span class="refname">cubrid_version</span> &mdash; <span class="dc-title">Get the CUBRID PHP module&#039;s version</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.cubrid-version-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>cubrid_version</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">    The <span class="function"><strong style="color:#CC7832">cubrid_version()</strong></span> function is used to get the CUBRID    PHP module&#039;s version.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.cubrid-version-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.cubrid-version-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">    Version information (eg. &quot;8.3.1.0001&quot;).  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.cubrid-version-examples">  <h3 class="title">示例</h3>  <div class="example" id="example-3551">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">cubrid_version()</strong></span> example</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"CUBRID PHP Version:"</span><span style="color: #007700">, </span><span style="color: #9876AA">cubrid_version</span><span style="color: #007700">());<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$conn </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_connect</span><span style="color: #007700">(</span><span style="color: #DD0000">"localhost"</span><span style="color: #007700">, </span><span style="color: #9876AA">33088</span><span style="color: #007700">, </span><span style="color: #DD0000">"demodb"</span><span style="color: #007700">, </span><span style="color: #DD0000">"dba"</span><span style="color: #007700">);<br /><br />if (!</span><span style="color: #9876AA">$conn</span><span style="color: #007700">) {<br />    die(</span><span style="color: #DD0000">'Connect Error ('</span><span style="color: #007700">. </span><span style="color: #9876AA">cubrid_error_code</span><span style="color: #007700">() .</span><span style="color: #DD0000">')' </span><span style="color: #007700">. </span><span style="color: #9876AA">cubrid_error_msg</span><span style="color: #007700">());<br />}<br /><br /></span><span style="color: #9876AA">$db_params </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_db_parameter</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br />while (list(</span><span style="color: #9876AA">$param_name</span><span style="color: #007700">, </span><span style="color: #9876AA">$param_value</span><span style="color: #007700">) = </span><span style="color: #9876AA">each</span><span style="color: #007700">(</span><span style="color: #9876AA">$db_params</span><span style="color: #007700">)) {<br />    </span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #9876AA">$param_name</span><span style="color: #007700">, </span><span style="color: #9876AA">$param_value</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$server_info </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_server_info</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$client_info </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_client_info</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Server Info:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$server_info</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"Client Info:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$client_info</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$charset </span><span style="color: #007700">= </span><span style="color: #9876AA">cubrid_get_charset</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">printf</span><span style="color: #007700">(</span><span style="color: #DD0000">"%-30s %s\n"</span><span style="color: #007700">, </span><span style="color: #DD0000">"CUBRID Charset:"</span><span style="color: #007700">, </span><span style="color: #9876AA">$charset</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">cubrid_disconnect</span><span style="color: #007700">(</span><span style="color: #9876AA">$conn</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>CUBRID PHP Version:            9.1.0.0001<br><br>PARAM_ISOLATION_LEVEL          3<br>LOCK_TIMEOUT                   -1<br>MAX_STRING_LENGTH              1073741823<br>PARAM_AUTO_COMMIT              1<br><br>Server Info:                   9.1.0.0212<br>Client Info:                   9.1.0<br><br>CUBRID Charset:                iso8859-1<br></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.cubrid-version-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">     <li class="member"><span class="function">{@link cubrid_error_code()} - Get error code for the most recent function call</span></li>     <li class="member"><span class="function">{@link cubrid_error_code_facility()} - Get the facility code of error</span></li>        </ul>  </span>  </div></div>
 * @return string <p>*/
function cubrid_version() {}

/**
 * Columns are returned into the array having a numerical index to the
 * fields. This index starts with 0, the first field in the result.
 * @link https://php.net/manual/en/cubrid.constants.php
 */
define('CUBRID_NUM', 1);

/**
 * Columns are returned into the array having the fieldname as the array
 * index.
 * @link https://php.net/manual/en/cubrid.constants.php
 */
define('CUBRID_ASSOC', 2);

/**
 * Columns are returned into the array having both a numerical index
 * and the fieldname as the array index.
 * @link https://php.net/manual/en/cubrid.constants.php
 */
define('CUBRID_BOTH', 3);

/**
 * Get query result as an object.
 * @link https://php.net/manual/en/cubrid.constants.php
 */
define('CUBRID_OBJECT', 4);

/**
 * Determine whether to get OID during query execution.
 * @link https://php.net/manual/en/cubrid.constants.php
 */
define('CUBRID_INCLUDE_OID', 1);

/**
 * Execute the query in asynchronous mode.
 * @link https://php.net/manual/en/cubrid.constants.php
 */
define('CUBRID_ASYNC', 2);

/**
 * Execute the query in synchronous mode.
 * This flag must be set when executing multiple SQL statements.
 * @link https://php.net/manual/en/cubrid.constants.php
 */
define('CUBRID_EXEC_QUERY_ALL', 4);

/**
 * Returned value of cubrid_move_cursor() function
 * in case of success.
 * @link https://php.net/manual/en/cubrid.constants.php
 */
define('CUBRID_CURSOR_SUCCESS', 1);

/**
 * Returned value of cubrid_move_cursor() function in case
 * of failure.
 * @link https://php.net/manual/en/cubrid.constants.php
 */
define('CUBRID_NO_MORE_DATA', 0);

/**
 * Returned value of cubrid_move_cursor() function in case
 * of failure.
 * @link https://php.net/manual/en/cubrid.constants.php
 */
define('CUBRID_CURSOR_ERROR', -1);

/**
 * Enable the auto-commit mode.
 * @link https://php.net/manual/en/cubrid.constants.php
 */
define('CUBRID_AUTOCOMMIT_TRUE', 1);

/**
 * Disable the auto-commit mode.
 * @link https://php.net/manual/en/cubrid.constants.php
 */
define('CUBRID_AUTOCOMMIT_FALSE', 0);

/**
 * Move current cursor to the first position in the result.
 * @link https://php.net/manual/en/cubrid.constants.php
 */
define('CUBRID_CURSOR_FIRST', 0);

/**
 * Move current cursor as a default value if the origin is
 * not specified.
 * @link https://php.net/manual/en/cubrid.constants.php
 */
define('CUBRID_CURSOR_CURRENT', 1);

/**
 * Move current cursor to the last position in the result.
 * @link https://php.net/manual/en/cubrid.constants.php
 */
define('CUBRID_CURSOR_LAST', 2);

// End of cubrid v.1.0
