<?php

/**
*       OAuth <em>RSA-SHA1</em> 签名方法。      
*/
define('OAUTH_SIG_METHOD_RSASHA1', 'RSA-SHA1');
/**
*       OAuth <em>HMAC-SHA1</em> 签名方法。      
*/
define('OAUTH_SIG_METHOD_HMACSHA1', 'HMAC-SHA1');
/**
*       OAuth <em>HMAC-SHA256</em> 签名方法。      
*/
define('OAUTH_SIG_METHOD_HMACSHA256', 'HMAC-SHA256');

/**
*       此常量代表把 OAuth 参数放在 <code class="literal">Authorization</code> 头部。      
*/
define('OAUTH_AUTH_TYPE_AUTHORIZATION', 3);
/**
*       此常量标志着一个 NoAuth OAuth 请求。      
*/
define('OAUTH_AUTH_TYPE_NONE', 2);
/**
*       此常量表示将 OAuth 参数放在请求中。       <abbr title="Uniform Resource Identifier">URI</abbr>.      
*/
define('OAUTH_AUTH_TYPE_URI', 1);
/**
*     此常量表示将 OAuth 参数作为 HTTP POST 主体的一部分。      
*/
define('OAUTH_AUTH_TYPE_FORM', 2);

/**
*       为 OAuth 请求使用 <em>GET</em> 方法。      
*/
define('OAUTH_HTTP_METHOD_GET', 'GET');
/**
*       为 OAuth 请求使用 <em>POST</em> 方法。      
*/
define('OAUTH_HTTP_METHOD_POST', 'POST');
/**
*       为 OAuth 请求使用 <em>PUT</em> 方法。      
*/
define('OAUTH_HTTP_METHOD_PUT', 'PUT');
/**
*       为 OAuth 请求使用 <em>HEAD</em> 方法。      
*/
define('OAUTH_HTTP_METHOD_HEAD', 'HEAD');
/**
*       为 OAuth 请求使用 <em>DELETE</em> 方法。      
*/
define('OAUTH_HTTP_METHOD_DELETE', 'DELETE');

/**
*       使用 <span class="methodname">{@link OAuth::setRequestEngine()}</span> 来设置引擎为 <a href="https://www.php.net/manual/zh/book.stream.php" class="link">PHP 流</a>，与用 <strong><code>OAUTH_REQENGINE_CURL</code></strong> 的 <a href="https://www.php.net/manual/zh/book.curl.php" class="link">Curl</a> 截然相反。      
*/
define('OAUTH_REQENGINE_STREAMS', 1);
/**
*       使用 <span class="methodname">{@link OAuth::setRequestEngine()}</span> 来设置引擎为 <a href="https://www.php.net/manual/zh/book.curl.php" class="link">Curl</a>，与用 <strong><code>OAUTH_REQENGINE_STREAMS</code></strong> 的 <a href="https://www.php.net/manual/zh/book.stream.php" class="link">PHP 流</a> 截然相反。      
*/
define('OAUTH_REQENGINE_CURL', 2);

/**
*      一切良好。      
*/
define('OAUTH_OK', 0);
/**
*       <em>oauth_nonce</em> 值已经用于上一个上一个请求，因此现在不能使用了。      
*/
define('OAUTH_BAD_NONCE', 4);
/**
*        <em>oauth_timestamp</em> 值不能被服务提供者接受。这种情况下，响应应该也包含 <em>oauth_acceptable_timestamps</em> 参数。      
*/
define('OAUTH_BAD_TIMESTAMP', 8);
/**
*      <em>oauth_consumer_key</em> 暂时不能被服务提供者接受。比如，服务提供者限流了使用者。      
*/
define('OAUTH_CONSUMER_KEY_UNKNOWN', 16);
/**
*       使用者密钥遭拒绝。      
*/
define('OAUTH_CONSUMER_KEY_REFUSED', 32);
/**
*        <em>oauth_signature</em> 无效，因为和服务提供者的签名计算不匹配。      
*/
define('OAUTH_INVALID_SIGNATURE', 64);
/**
*       <em>oauth_token</em> 已经被消费。此令牌不能再被使用，因为在上一次请求中已经使用过。      
*/
define('OAUTH_TOKEN_USED', 128);
/**
*       <em>oauth_token</em> 已经过期。      
*/
define('OAUTH_TOKEN_EXPIRED', 256);
/**
*       <em>oauth_token</em> 被服务提供者拒绝。原因未知，也许是因为令牌从未发布、已经消费、过期、或服务提供者忘记了。      
*/
define('OAUTH_TOKEN_REJECTED', 1024);
/**
*       <em>oauth_verifier</em> 不正确。      
*/
define('OAUTH_VERIFIER_INVALID', 2048);
/**
*       一个必需的参数没有接收到。这种情况下，响应也应该包含 <em>oauth_parameters_absent</em> 参数。      
*/
define('OAUTH_PARAMETER_ABSENT', 4096);
/**
*       <em>oauth_signature_method</em> 不能被服务提供者接受。      
*/
define('OAUTH_SIGNATURE_METHOD_REJECTED', 8192);

/**
*<div id="function.oauth-get-sbs" class="refentry"> <div class="refnamediv">  <h1 class="refname">oauth_get_sbs</h1>  <p class="verinfo">(PECL OAuth &gt;=0.99.7)</p><p class="refpurpose"><span class="refname">oauth_get_sbs</span> &mdash; <span class="dc-title">生成一个签名字符基串</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.oauth-get-sbs-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>oauth_get_sbs</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$http_method</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$uri</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$request_parameters</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment"> 根据 pecl/oauth 生成一个签名字符基串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.oauth-get-sbs-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">http_method</span></dt>     <dd>      <p class="para">     HTTP 方法。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">uri</span></dt>     <dd>      <p class="para">       将要编码的 URI  。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">request_parameters</span></dt>     <dd>      <p class="para">       请求参数的数组。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.oauth-get-sbs-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个签名字符基串。  </p> </div></div>
 * @return string*/
function oauth_get_sbs($http_method, $uri, $request_parameters = []) {}

/**
*<div id="function.oauth-urlencode" class="refentry"> <div class="refnamediv">  <h1 class="refname">oauth_urlencode</h1>  <p class="verinfo">(PECL OAuth &gt;=0.99.2)</p><p class="refpurpose"><span class="refname">oauth_urlencode</span> &mdash; <span class="dc-title">将 URI 编码为 RFC 3986 规范</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.oauth-urlencode-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>oauth_urlencode</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$uri</span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   将 URI 编码为 <a href="http://www.faqs.org/rfcs/rfc3986" class="link external">&raquo;&nbsp;RFC 3986</a> 规范。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.oauth-urlencode-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">uri</span></dt>     <dd>      <p class="para">       将要编码的 URI 。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.oauth-urlencode-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个 <a href="http://www.faqs.org/rfcs/rfc3986" class="link external">&raquo;&nbsp;RFC 3986</a> 规范的编码字符串。  </p> </div></div>
 * @return string*/
function oauth_urlencode($uri) {}

/**
*<div id="class.oauth" class="reference"> <h1 class="title">OAuth 类</h1>  <div class="partintro"><p class="verinfo">(PECL OAuth &gt;= 0.99.1)</p>  <div class="section" id="oauth.intro">   <h2 class="title">简介</h2>   <p class="para">   此 OAuth 扩展提供一个简单接口使用 OAuth HTTP 规范与数据提供者互动，以便保护私有资源。   </p>  </div>  <div class="section" id="oauth.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">OAuth</strong>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.oauth.php#oauth.props.debug">$<var class="varname">debug</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.oauth.php#oauth.props.sslchecks">$<var class="varname">sslChecks</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.oauth.php#oauth.props.debuginfo">$<var class="varname">debugInfo</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="constructorsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$consumer_key</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$consumer_secret</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$signature_method</span><span class="initializer"> = <strong><span>OAUTH_SIG_METHOD_HMACSHA1</span></strong></span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$auth_type</span><span class="initializer"> = 0</span></span><br>)</div>    <div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.destruct.php" class="methodname" style="color:#CC7832">__destruct</a></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.disabledebug.php" class="methodname" style="color:#CC7832">disableDebug</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.disableredirects.php" class="methodname" style="color:#CC7832">disableRedirects</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.disablesslchecks.php" class="methodname" style="color:#CC7832">disableSSLChecks</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.enabledebug.php" class="methodname" style="color:#CC7832">enableDebug</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.enableredirects.php" class="methodname" style="color:#CC7832">enableRedirects</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.enablesslchecks.php" class="methodname" style="color:#CC7832">enableSSLChecks</a></span>(): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.fetch.php" class="methodname" style="color:#CC7832">fetch</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$protected_resource_url</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$extra_parameters</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$http_method</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$http_headers</span><span class="initializer"> = ?</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.generatesignature.php" class="methodname" style="color:#CC7832">generateSignature</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$http_method</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$url</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$extra_parameters</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.getaccesstoken.php" class="methodname" style="color:#CC7832">getAccessToken</a></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$access_token_url</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$auth_session_handle</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$verifier_token</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$http_method</span><span class="initializer"> = ?</span></span><br>): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.getcapath.php" class="methodname" style="color:#CC7832">getCAPath</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.getlastresponse.php" class="methodname" style="color:#CC7832">getLastResponse</a></span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.getlastresponseheaders.php" class="methodname" style="color:#CC7832">getLastResponseHeaders</a></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.getlastresponseinfo.php" class="methodname" style="color:#CC7832">getLastResponseInfo</a></span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.getrequestheader.php" class="methodname" style="color:#CC7832">getRequestHeader</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$http_method</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$url</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$extra_parameters</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.getrequesttoken.php" class="methodname" style="color:#CC7832">getRequestToken</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$request_token_url</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$callback_url</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$http_method</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.setauthtype.php" class="methodname" style="color:#CC7832">setAuthType</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$auth_type</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.setcapath.php" class="methodname" style="color:#CC7832">setCAPath</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$ca_path</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$ca_info</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.setnonce.php" class="methodname" style="color:#CC7832">setNonce</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$nonce</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.setrequestengine.php" class="methodname" style="color:#CC7832">setRequestEngine</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$reqengine</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.setrsacertificate.php" class="methodname" style="color:#CC7832">setRSACertificate</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$cert</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.setsslchecks.php" class="methodname" style="color:#CC7832">setSSLChecks</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$sslcheck</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.settimestamp.php" class="methodname" style="color:#CC7832">setTimestamp</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$timestamp</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.settoken.php" class="methodname" style="color:#CC7832">setToken</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$token</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$token_secret</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauth.setversion.php" class="methodname" style="color:#CC7832">setVersion</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$version</span></span>): <span class="type" style="color:#EAB766">bool</span></div>   }</div>  </div>  <div class="section" id="oauth.props">   <h2 class="title">属性</h2>   <dl>         <dt id="oauth.props.debug"><var class="varname">debug</var></dt>     <dd>      <p class="para"/>     </dd>             <dt id="oauth.props.sslchecks"><var class="varname">sslChecks</var></dt>     <dd>      <p class="para"/>     </dd>             <dt id="oauth.props.debuginfo"><var class="varname">debugInfo</var></dt>     <dd>      <p class="para"/>     </dd>       </dl>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link OAuth::__construct} — 新建一个 OAuth 对象</li><li>{@link OAuth::__destruct} — 析构函数</li><li>{@link OAuth::disableDebug} — 关闭详细的调试</li><li>{@link OAuth::disableRedirects} — 关闭重定向</li><li>{@link OAuth::disableSSLChecks} — 关闭 SSL 检查</li><li>{@link OAuth::enableDebug} — 启用详细调试</li><li>{@link OAuth::enableRedirects} — 启用重定向</li><li>{@link OAuth::enableSSLChecks} — 启用 SSL 检查</li><li>{@link OAuth::fetch} — 获取一个 OAuth 受保护的资源</li><li>{@link OAuth::generateSignature} — 生成一个签名</li><li>{@link OAuth::getAccessToken} — 获取一个访问令牌</li><li>{@link OAuth::getCAPath} — 获取 CA 信息</li><li>{@link OAuth::getLastResponse} — 获取最后一次的响应</li><li>{@link OAuth::getLastResponseHeaders} — 获取最后一次响应的头信息</li><li>{@link OAuth::getLastResponseInfo} — 获取关于最后一次响应的 HTTP 信息</li><li>{@link OAuth::getRequestHeader} — 生成 OAuth 头信息字符串签名</li><li>{@link OAuth::getRequestToken} — 获取一个请求令牌</li><li>{@link OAuth::setAuthType} — 设置授权类型</li><li>{@link OAuth::setCAPath} — 设置 CA 路径和信息</li><li>{@link OAuth::setNonce} — 为后续请求设置现时标志</li><li>{@link OAuth::setRequestEngine} — 设置目标请求引擎</li><li>{@link OAuth::setRSACertificate} — 设置 RSA 证书</li><li>{@link OAuth::setSSLChecks} — 调整特定的SSL请求检查</li><li>{@link OAuth::setTimestamp} — 设置时间戳</li><li>{@link OAuth::setToken} — 设置令牌和 secret</li><li>{@link OAuth::setVersion} — 设置 OAuth 版本</li></ul></div>
*/
class OAuth
{
    /**
     * @var bool
     */
    public $debug;

    /**
     * @var bool
     */
    public $sslChecks;

    /**
     * @var array
     */
    public $debugInfo;

    /**
     * Create a new OAuth object
     * @param string $consumer_key
     * @param string $consumer_secret
     * @param string $signature_method
     * @param int $auth_type
     * @throws \OAuthException
     */
    public function __construct($consumer_key, $consumer_secret, $signature_method = OAUTH_SIG_METHOD_HMACSHA1, $auth_type = OAUTH_AUTH_TYPE_AUTHORIZATION) {}

/**
*<div id="oauth.disabledebug" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::disableDebug</h1>  <p class="verinfo">(PECL OAuth &gt;= 0.99.3)</p><p class="refpurpose"><span class="refname">OAuth::disableDebug</span> &mdash; <span class="dc-title">关闭详细的调试</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.disabledebug-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::disableDebug</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   关闭详细的请求信息（默认为关闭）。或者，将 <a href="https://www.php.net/manual/zh/class.oauth.php#oauth.props.debug" class="link">调试</a> 属性设置为 <strong><span>false</span></strong> 值来关闭调试。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.disabledebug-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.disabledebug-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <strong><span>true</span></strong>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-oauth.disabledebug-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL oauth 0.99.8</td>       <td>        增加相关 <a href="https://www.php.net/manual/zh/class.oauth.php#oauth.props.debug" class="link">调试</a> 属性。       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauth.disabledebug-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::enableDebug()} - 启用详细调试</span></li>   </ul>  </span> </div></div>
     * @return bool*/
    public function disableDebug() {}

/**
*<div id="oauth.disableredirects" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::disableRedirects</h1>  <p class="verinfo">(PECL OAuth &gt;= 0.99.9)</p><p class="refpurpose"><span class="refname">OAuth::disableRedirects</span> &mdash; <span class="dc-title">关闭重定向</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.disableredirects-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::disableRedirects</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   禁用自动跟随其后的重定向，这样，手动重定向请求。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.disableredirects-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.disableredirects-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <strong><span>true</span></strong>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauth.disableredirects-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::enableRedirects()} - 启用重定向</span></li>  </ul> </div></div>
     * @return void*/
    public function disableRedirects() {}

/**
*<div id="oauth.disablesslchecks" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::disableSSLChecks</h1>  <p class="verinfo">(PECL OAuth &gt;= 0.99.5)</p><p class="refpurpose"><span class="refname">OAuth::disableSSLChecks</span> &mdash; <span class="dc-title">关闭 SSL 检查</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.disablesslchecks-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::disableSSLChecks</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   关闭通常的 SSL 对等证书和主机检查，但不用于生产环境。或者，设置 <span class="parameter" style="color:#3A95FF">sslChecks</span> 成员为  <strong><span>false</span></strong> 来关闭 SSL 检查。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.disablesslchecks-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.disablesslchecks-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <strong><span>true</span></strong>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-oauth.disablesslchecks-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL oauth 0.99.8</td>       <td>        增加了 <span class="parameter" style="color:#3A95FF">sslChecks</span> 成员       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauth.disablesslchecks-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::enableSSLChecks()} - 启用 SSL 检查</span></li>   </ul>  </span> </div></div>
     * @return bool*/
    public function disableSSLChecks() {}

/**
*<div id="oauth.enabledebug" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::enableDebug</h1>  <p class="verinfo">(PECL OAuth &gt;= 0.99.3)</p><p class="refpurpose"><span class="refname">OAuth::enableDebug</span> &mdash; <span class="dc-title">启用详细调试</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.enabledebug-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::enableDebug</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   打开用于调试的详细请求信息，调试信息存储在 <span class="parameter" style="color:#3A95FF">debugInfo</span> 成员中。或者，可以设置 <span class="parameter" style="color:#3A95FF">debug</span>  成员为一个非 <strong><span>false</span></strong> 值来打开启用调试。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.enabledebug-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.enabledebug-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <strong><span>true</span></strong>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-oauth.enabledebug-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL oauth 0.99.8</td>       <td>        增加了 <span class="parameter" style="color:#3A95FF">debug</span> 和 <span class="parameter" style="color:#3A95FF">debugInfo</span> 成员       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauth.enabledebug-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::disableDebug()} - 关闭详细的调试</span></li>   </ul>  </span> </div></div>
     * @return bool*/
    public function enableDebug() {}

/**
*<div id="oauth.enableredirects" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::enableRedirects</h1>  <p class="verinfo">(PECL OAuth &gt;= 0.99.9)</p><p class="refpurpose"><span class="refname">OAuth::enableRedirects</span> &mdash; <span class="dc-title">启用重定向</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.enableredirects-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::enableRedirects</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   启用自动重定向，此项默认为启用。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.enableredirects-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.enableredirects-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <strong><span>true</span></strong>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauth.enableredirects-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::disableRedirects()} - 关闭重定向</span></li>  </ul> </div></div>
     * @return bool*/
    public function enableRedirects() {}

/**
*<div id="oauth.enablesslchecks" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::enableSSLChecks</h1>  <p class="verinfo">(PECL OAuth &gt;= 0.99.5)</p><p class="refpurpose"><span class="refname">OAuth::enableSSLChecks</span> &mdash; <span class="dc-title">启用 SSL 检查</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.enablesslchecks-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::enableSSLChecks</strong></span>(): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   启用通常的l SSL 对等证书和主机检查（默认为启用）。或者，可以设置 <span class="parameter" style="color:#3A95FF">sslChecks</span> 成员为一个非 <strong><span>false</span></strong>  值来启用 SSL 检查。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.enablesslchecks-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.enablesslchecks-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <strong><span>true</span></strong>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-oauth.enablesslchecks-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL oauth 0.99.8</td>       <td>        增加 <span class="parameter" style="color:#3A95FF">sslChecks</span> 成员       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauth.enablesslchecks-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::disableSSLChecks()} - 关闭 SSL 检查</span></li>   </ul>  </span> </div></div>
     * @return bool*/
    public function enableSSLChecks() {}

    /**
     * Set the timeout
     * @param int $timeout Time in milliseconds
     * @return void
     */
    public function setTimeout($timeout) {}

/**
*<div id="oauth.fetch" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::fetch</h1>  <p class="verinfo">(PECL OAuth &gt;= 0.99.1)</p><p class="refpurpose"><span class="refname">OAuth::fetch</span> &mdash; <span class="dc-title">获取一个 OAuth 受保护的资源</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.fetch-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::fetch</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$protected_resource_url</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$extra_parameters</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$http_method</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$http_headers</span><span class="initializer"> = ?</span></span><br>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">   获取一个资源。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.fetch-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">protected_resource_url</span></dt>     <dd>      <p class="para">      OAuth 受保护资源的URL      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">extra_parameters</span></dt>     <dd>      <p class="para">      和资源请求一起发送的额外参数。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">http_method</span></dt>     <dd>      <p class="para">       <strong><span>OAUTH_HTTP_METHOD_*</span></strong> 系列 <a href="https://www.php.net/manual/zh/oauth.constants.php" class="link">OAUTH 常量</a>之一，GET、POST、PUT、HEAD 或 DELETE 其中的一个。      </p>      <p class="para">       HEAD （<strong><span>OAUTH_HTTP_METHOD_HEAD</span></strong> ）可以用于先于请求发现信息（如果 OAuth 证书在 <span>Authorization</span> 头部）。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">http_headers</span></dt>     <dd>      <p class="para">       HTTP 客户端头信息（像 User-Agent， Accept 等等这样的）。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.fetch-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-oauth.fetch-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL oauth 1.0.0</td>       <td>        以前失败时返回 <strong><span>null</span></strong>，而不是 <strong><span>false</span></strong>。       </td>      </tr>      <tr>       <td>PECL oauth 0.99.5</td>       <td>        新增 <span class="parameter" style="color:#3A95FF">http_method</span> 参数       </td>      </tr>      <tr>       <td>PECL oauth 0.99.8</td>       <td>        新增 <span class="parameter" style="color:#3A95FF">http_headers</span> 参数       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-oauth.fetch-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">OAuth::fetch()</strong></span> example</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">try {<br />    </span><span style="color: #9876AA">$oauth </span><span style="color: #007700">= new </span><span style="color: #9876AA">OAuth</span><span style="color: #007700">(</span><span style="color: #DD0000">"consumer_key"</span><span style="color: #007700">,</span><span style="color: #DD0000">"consumer_secret"</span><span style="color: #007700">,</span><span style="color: #9876AA">OAUTH_SIG_METHOD_HMACSHA1</span><span style="color: #007700">,</span><span style="color: #9876AA">OAUTH_AUTH_TYPE_AUTHORIZATION</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$oauth</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setToken</span><span style="color: #007700">(</span><span style="color: #DD0000">"access_token"</span><span style="color: #007700">,</span><span style="color: #DD0000">"access_token_secret"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$oauth</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">fetch</span><span style="color: #007700">(</span><span style="color: #DD0000">"http://photos.example.net/photo?file=vacation.jpg"</span><span style="color: #007700">);<br /><br />    </span><span style="color: #9876AA">$response_info </span><span style="color: #007700">= </span><span style="color: #9876AA">$oauth</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getLastResponseInfo</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">header</span><span style="color: #007700">(</span><span style="color: #DD0000">"Content-Type: </span><span style="color: #007700">{</span><span style="color: #9876AA">$response_info</span><span style="color: #007700">[</span><span style="color: #DD0000">"content_type"</span><span style="color: #007700">]}</span><span style="color: #DD0000">"</span><span style="color: #007700">);<br />    echo </span><span style="color: #9876AA">$oauth</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getLastResponse</span><span style="color: #007700">();<br />} catch(</span><span style="color: #9876AA">OAuthException $E</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"Exception caught!\n"</span><span style="color: #007700">;<br />    echo </span><span style="color: #DD0000">"Response: "</span><span style="color: #007700">. </span><span style="color: #9876AA">$E</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">lastResponse </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauth.fetch-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::getLastResponse()} - 获取最后一次的响应</span></li>    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::getLastResponseInfo()} - 获取关于最后一次响应的 HTTP 信息</span></li>    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::setToken()} - 设置令牌和 secret</span></li>   </ul>  </span> </div></div>
     * @return mixed*/
    public function fetch($protected_resource_url, $extra_parameters = [], $http_method = null, $http_headers = []) {}

/**
*<div id="oauth.getaccesstoken" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::getAccessToken</h1>  <p class="verinfo">(PECL OAuth &gt;= 0.99.1)</p><p class="refpurpose"><span class="refname">OAuth::getAccessToken</span> &mdash; <span class="dc-title">获取一个访问令牌</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.getaccesstoken-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::getAccessToken</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$access_token_url</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$auth_session_handle</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$verifier_token</span><span class="initializer"> = ?</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$http_method</span><span class="initializer"> = ?</span></span><br>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">  从服务提供者获取一个访问令牌、secret以及一些附带的响应参数 。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.getaccesstoken-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">access_token_url</span></dt>     <dd>      <p class="para">       用于访问令牌 API  的 URL。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">auth_session_handle</span></dt>     <dd>      <p class="para">      授权会话句柄，此参数在 OAuth 规范核心中没有任何引用， 但可能被大的提供者实现。<a href="http://oauth.pbwiki.com/ScalableOAuth/" class="link external">&raquo;&nbsp;参见 ScalableOAuth</a> 获取更多信息。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">verifier_token</span></dt>     <dd>      <p class="para">       对于支持 1.0a 的服务提供者， 当交换请求令牌和访问令牌时，必须传递 <span class="parameter" style="color:#3A95FF">verifier_token</span> 。如果 <span class="parameter" style="color:#3A95FF">verifier_token</span> 存在于 <span class="parameter" style="color:#3A95FF">$_GET</span> 或 <span class="parameter" style="color:#3A95FF">$_POST</span> 中，它将被自动传递，且调用者不需要指定一个  <span class="parameter" style="color:#3A95FF">verifier_token</span> （通常如果访问令牌在 oauth_callback URL 上被交换 ）。       <a href="http://oauth.pbwiki.com/ScalableOAuth/" class="link external">&raquo;&nbsp;参见 ScalableOAuth</a> 获取更多信息。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">http_method</span></dt>     <dd>      <p class="para">       要使用的 HTTP 方法，例如 <span>GET</span> 或 <span>POST</span>。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.getaccesstoken-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功则返回一个包含解析过的 OAuth 响应的数组， 失败则返回 <strong><span>false</span></strong> 。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-oauth.getaccesstoken-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL oauth 1.0.0</td>       <td>        以前失败时返回 <strong><span>null</span></strong>，而不是 <strong><span>false</span></strong>。       </td>      </tr>      <tr>       <td>PECL oauth 0.99.9</td>       <td>        新增 <span class="parameter" style="color:#3A95FF">verifier_token</span> 参数       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-oauth.getaccesstoken-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">OAuth::getAccessToken()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">try {<br />    </span><span style="color: #9876AA">$oauth </span><span style="color: #007700">= new </span><span style="color: #9876AA">OAuth</span><span style="color: #007700">(</span><span style="color: #9876AA">OAUTH_CONSUMER_KEY</span><span style="color: #007700">,</span><span style="color: #9876AA">OAUTH_CONSUMER_SECRET</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$oauth</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setToken</span><span style="color: #007700">(</span><span style="color: #9876AA">$request_token</span><span style="color: #007700">,</span><span style="color: #9876AA">$request_token_secret</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$access_token_info </span><span style="color: #007700">= </span><span style="color: #9876AA">$oauth</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getAccessToken</span><span style="color: #007700">(</span><span style="color: #DD0000">"https://example.com/oauth/access_token"</span><span style="color: #007700">);<br />    if(!empty(</span><span style="color: #9876AA">$access_token_info</span><span style="color: #007700">)) {<br />        </span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$access_token_info</span><span style="color: #007700">);<br />    } else {<br />        print </span><span style="color: #DD0000">"Failed fetching access token, response was: " </span><span style="color: #007700">. </span><span style="color: #9876AA">$oauth</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getLastResponse</span><span style="color: #007700">();<br />    }<br />} catch(</span><span style="color: #9876AA">OAuthException $E</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"Response: "</span><span style="color: #007700">. </span><span style="color: #9876AA">$E</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">lastResponse </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [oauth_token] =&gt; some_token<br>    [oauth_token_secret] =&gt; some_token_secret<br>)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauth.getaccesstoken-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::getLastResponse()} - 获取最后一次的响应</span></li>    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::getLastResponseInfo()} - 获取关于最后一次响应的 HTTP 信息</span></li>    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::setToken()} - 设置令牌和 secret</span></li>   </ul>  </span> </div></div>
     * @return array*/
    public function getAccessToken($access_token_url, $auth_session_handle = null, $verifier_token = null) {}

/**
*<div id="oauth.getcapath" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::getCAPath</h1>  <p class="verinfo">(PECL OAuth &gt;= 0.99.8)</p><p class="refpurpose"><span class="refname">OAuth::getCAPath</span> &mdash; <span class="dc-title">获取 CA 信息</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.getcapath-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::getCAPath</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   获取证书授权的信息，其中包括通过 <span class="methodname" style="color:#CC7832">{@link OAuth::setCaPath()}</span> 设置的  ca_path 和 ca_info 。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.getcapath-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.getcapath-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  返回一个证书授权信息的 <span class="type" style="color:#EAB766"><span class="type 数组" style="color:#EAB766">数组</span></span> ，在返回的关联数组中明确地包含 <span>ca_path</span> 和 <span>ca_info</span> 键。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauth.getcapath-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::setCAPath()} - 设置 CA 路径和信息</span></li>   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::getLastResponseInfo()} - 获取关于最后一次响应的 HTTP 信息</span></li>  </ul> </div></div>
     * @return array*/
    public function getCAPath() {}

/**
*<div id="oauth.getlastresponse" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::getLastResponse</h1>  <p class="verinfo">(PECL OAuth &gt;= 0.99.1)</p><p class="refpurpose"><span class="refname">OAuth::getLastResponse</span> &mdash; <span class="dc-title">获取最后一次的响应</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.getlastresponse-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::getLastResponse</strong></span>(): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   获取最近一次请求的原始响应。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.getlastresponse-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.getlastresponse-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个最后一次响应的字符串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauth.getlastresponse-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::getLastResponseInfo()} - 获取关于最后一次响应的 HTTP 信息</span></li>    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::fetch()} - 获取一个 OAuth 受保护的资源</span></li>   </ul>  </span> </div></div>
     * @return string*/
    public function getLastResponse() {}

/**
*<div id="oauth.getlastresponseheaders" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::getLastResponseHeaders</h1>  <p class="verinfo">(No version information available, might only be in Git)</p><p class="refpurpose"><span class="refname">OAuth::getLastResponseHeaders</span> &mdash; <span class="dc-title">获取最后一次响应的头信息</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.getlastresponseheaders-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::getLastResponseHeaders</strong></span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   获取最后一次响应的头信息。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.getlastresponseheaders-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.getlastresponseheaders-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  返回一个包含最后一次响应头信息的字符串  或者在失败时返回 <strong><span>false</span></strong> 。  </p> </div></div>
     * @return string|false*/
    public function getLastResponseHeaders() {}

/**
*<div id="oauth.getlastresponseinfo" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::getLastResponseInfo</h1>  <p class="verinfo">(PECL OAuth &gt;= 0.99.1)</p><p class="refpurpose"><span class="refname">OAuth::getLastResponseInfo</span> &mdash; <span class="dc-title">获取关于最后一次响应的 HTTP 信息</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.getlastresponseinfo-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::getLastResponseInfo</strong></span>(): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">  获取关于最后一次响应的 HTTP 信息。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.getlastresponseinfo-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.getlastresponseinfo-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回一个包含最后一次请求响应信息的数组。可以用到来自 <span class="function">{@link curl_getinfo()}</span> 的常量。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauth.getlastresponseinfo-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::fetch()} - 获取一个 OAuth 受保护的资源</span></li>    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::getLastResponse()} - 获取最后一次的响应</span></li>   </ul>  </span> </div></div>
     * @return array*/
    public function getLastResponseInfo() {}

/**
*<div id="oauth.getrequestheader" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::getRequestHeader</h1>  <p class="verinfo">(No version information available, might only be in Git)</p><p class="refpurpose"><span class="refname">OAuth::getRequestHeader</span> &mdash; <span class="dc-title">生成 OAuth 头信息字符串签名</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.getrequestheader-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::getRequestHeader</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$http_method</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$url</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$extra_parameters</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span></div>  <p class="para rdfs-comment">   生成基于最终 HTTP 方法、URL 和 一个字符串/数组附加参数的 OAuth 头信息字符串签名。   </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.getrequestheader-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">http_method</span></dt>    <dd>     <span>      请求的 HTTP 方法。     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">url</span></dt>    <dd>     <p class="para">      请求的 URL 。     </p>    </dd>          <dt><span class="parameter" style="color:#3A95FF">extra_parameters</span></dt>    <dd>     <p class="para">      字符串或数组类型的附带参数。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.getrequestheader-returnvalues">  <h3 class="title">返回值</h3>  <p class="para"> 返回 一个包含生成的请求头信息的字符串 r 或者在失败时返回 <strong><span>false</span></strong>  </p> </div></div>
     * @return string|false*/
    public function getRequestHeader($http_method, $url, $extra_parameters = '') {}

/**
*<div id="oauth.getrequesttoken" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::getRequestToken</h1>  <p class="verinfo">(PECL OAuth &gt;= 0.99.1)</p><p class="refpurpose"><span class="refname">OAuth::getRequestToken</span> &mdash; <span class="dc-title">获取一个请求令牌</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.getrequesttoken-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::getRequestToken</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$request_token_url</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$callback_url</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$http_method</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">array</span></div>  <p class="para rdfs-comment">   从服务提供者那里获取一个请求令牌、secret 、以及一些附带的响应参数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.getrequesttoken-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">request_token_url</span></dt>     <dd>      <p class="para">       请求令牌 API 的 URL。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">callback_url</span></dt>     <dd>      <p class="para">       OAuth 回调 URL。 如果传递了 <span class="parameter" style="color:#3A95FF">callback_url</span> 且为空值，则将其设置为“oob”即到 OAuth 2009.1 咨询的地址。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">http_method</span></dt>     <dd>      <p class="para">       要使用的 HTTP 方法，例如 <span>GET</span> 或 <span>POST</span>。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.getrequesttoken-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功则返回一个包含解析过了的 OAuth 响应的数组，失败则返回 <strong><span>false</span></strong> 。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-oauth.getrequesttoken-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL oauth 1.0.0</td>       <td>        以前失败时返回 <strong><span>null</span></strong>，而不是 <strong><span>false</span></strong>。       </td>      </tr>      <tr>       <td>PECL oauth 0.99.9</td>       <td>       增加 <span class="parameter" style="color:#3A95FF">callback_url</span> 参数。       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-oauth.getrequesttoken-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">OAuth::getRequestToken()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">try {<br />    </span><span style="color: #9876AA">$oauth </span><span style="color: #007700">= new </span><span style="color: #9876AA">OAuth</span><span style="color: #007700">(</span><span style="color: #9876AA">OAUTH_CONSUMER_KEY</span><span style="color: #007700">,</span><span style="color: #9876AA">OAUTH_CONSUMER_SECRET</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$request_token_info </span><span style="color: #007700">= </span><span style="color: #9876AA">$oauth</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getRequestToken</span><span style="color: #007700">(</span><span style="color: #DD0000">"https://example.com/oauth/request_token"</span><span style="color: #007700">);<br />    if(!empty(</span><span style="color: #9876AA">$request_token_info</span><span style="color: #007700">)) {<br />        </span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$request_token_info</span><span style="color: #007700">);<br />    } else {<br />        print </span><span style="color: #DD0000">"Failed fetching request token, response was: " </span><span style="color: #007700">. </span><span style="color: #9876AA">$oauth</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">getLastResponse</span><span style="color: #007700">();<br />    }<br />} catch(</span><span style="color: #9876AA">OAuthException $E</span><span style="color: #007700">) {<br />    echo </span><span style="color: #DD0000">"Response: "</span><span style="color: #007700">. </span><span style="color: #9876AA">$E</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">lastResponse </span><span style="color: #007700">. </span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例的输出类似于：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Array<br>(<br>    [oauth_token] =&gt; some_token<br>    [oauth_token_secret] =&gt; some_token_secret<br>)<br></span></div>    </div>   </div>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauth.getrequesttoken-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::getLastResponse()} - 获取最后一次的响应</span></li>    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::getLastResponseInfo()} - 获取关于最后一次响应的 HTTP 信息</span></li>   </ul>  </span> </div></div>
     * @return array*/
    public function getRequestToken($request_token_url, $callback_url = null, $http_method = 'GET') {}

/**
*<div id="oauth.setauthtype" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::setAuthType</h1>  <p class="verinfo">(PECL OAuth &gt;= 0.99.1)</p><p class="refpurpose"><span class="refname">OAuth::setAuthType</span> &mdash; <span class="dc-title">设置授权类型</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.setauthtype-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::setAuthType</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$auth_type</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置 OAuth 参数应该放在哪里传递。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.setauthtype-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">auth_type</span></dt>      <dd>       <p class="para">        <span class="parameter" style="color:#3A95FF">auth_type</span>可能是下列标志之一（在 OAuth 1.0 规范的第 5.2 章节中按优先级降序排列）：        <dl>                   <dt><strong><span>OAUTH_AUTH_TYPE_AUTHORIZATION</span></strong></dt>          <dd>          <span class="simpara">           在 HTTP <span>Authorization</span> 头部传递 OAuth 参数。          </span>         </dd>                         <dt><strong><span>OAUTH_AUTH_TYPE_FORM</span></strong></dt>         <dd>          <span class="simpara">           将 OAuth 参数附加到 HTTP POST 请求主体中。          </span>         </dd>                         <dt><strong><span>OAUTH_AUTH_TYPE_URI</span></strong></dt>         <dd>          <span class="simpara">           将 OAuth 参数附加到请求的 URI 后面 。          </span>         </dd>                         <dt><strong><span>OAUTH_AUTH_TYPE_NONE</span></strong></dt>         <dd>          <span class="simpara">           无。          </span>         </dd>               </dl>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.setauthtype-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   如果参数设置正确则返回 <strong><span>true</span></strong> ，否则返回 <strong><span>false</span></strong> （比如，传递进一个无效的 <span class="parameter" style="color:#3A95FF">auth_type</span> ）。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-oauth.setauthtype-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL oauth 1.0.0</td>       <td>        以前失败时返回 <strong><span>null</span></strong>，而不是 <strong><span>false</span></strong>。       </td>      </tr>     </tbody>       </table>  </span> </div></div>
     * @return bool*/
    public function setAuthType($auth_type) {}

/**
*<div id="oauth.setcapath" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::setCAPath</h1>  <p class="verinfo">(PECL OAuth &gt;= 0.99.8)</p><p class="refpurpose"><span class="refname">OAuth::setCAPath</span> &mdash; <span class="dc-title">设置 CA 路径和信息</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.setcapath-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::setCAPath</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$ca_path</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$ca_info</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">   设置证书授权中心（<abbr>CA</abbr> ）的路径和信息。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.setcapath-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">ca_path</span></dt>    <dd>     <span>      要设置的 CA 路径。     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">ca_info</span></dt>    <dd>     <p class="para">      要设置的 CA 信息。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.setcapath-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功则返回 <strong><span>true</span></strong> ，如果 <span class="parameter" style="color:#3A95FF">ca_path</span> 或 <span class="parameter" style="color:#3A95FF">ca_info</span> 其中之一被认为无效则返回   <strong><span>false</span></strong> 。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-oauth.setcapath-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL oauth 1.0.0</td>       <td>        以前失败时返回 <strong><span>null</span></strong>，而不是 <strong><span>false</span></strong>。       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauth.setcapath-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::getCaPath()} - 获取 CA 信息</span></li>  </ul> </div></div>
     * @return mixed*/
    public function setCAPath($ca_path = null, $ca_info = null) {}

/**
*<div id="oauth.setnonce" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::setNonce</h1>  <p class="verinfo">(PECL OAuth &gt;= 0.99.1)</p><p class="refpurpose"><span class="refname">OAuth::setNonce</span> &mdash; <span class="dc-title">为后续请求设置现时标志</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.setnonce-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::setNonce</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$nonce</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">   为所有后续请求设置现时标志。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.setnonce-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">nonce</span></dt>     <dd>      <p class="para">        oauth_nonce 的值。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.setnonce-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功返回 <strong><span>true</span></strong> ，如果 <span class="parameter" style="color:#3A95FF">nonce</span>  被认为无效，则返回 <strong><span>false</span></strong> 。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-oauth.setnonce-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL oauth 1.0.0</td>       <td>        以前失败时返回 <strong><span>null</span></strong>，而不是 <strong><span>false</span></strong>。       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauth.setnonce-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::setToken()} - 设置令牌和 secret</span></li>    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::setAuthType()} - 设置授权类型</span></li>    <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::setVersion()} - 设置 OAuth 版本</span></li>   </ul>  </span> </div></div>
     * @return mixed*/
    public function setNonce($nonce) {}

/**
*<div id="oauth.setrequestengine" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::setRequestEngine</h1>  <p class="verinfo">(PECL OAuth &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">OAuth::setRequestEngine</span> &mdash; <span class="dc-title">设置目标请求引擎</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.setrequestengine-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::setRequestEngine</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$reqengine</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   设置请求引擎，用于发送 HTTP 请求。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.setrequestengine-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">reqengine</span></dt>    <dd>     <span>      想要的请求引擎。 设为 <strong><span>OAUTH_REQENGINE_STREAMS</span></strong> 则使用 PHP 流，设为 <strong><span>OAUTH_REQENGINE_CURL</span></strong> 则使用 <a href="https://www.php.net/manual/zh/book.curl.php" class="link">Curl</a>。     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.setrequestengine-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-oauth.setrequestengine-errors">  <h3 class="title">错误／异常</h3>  <p class="para">  如果选择了一个无效的请求引擎，则发出一个 <span class="classname"><a href="https://www.php.net/manual/zh/class.oauthexception.php" class="classname">OAuthException</a></span> 异常。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-oauth.setrequestengine-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">OAuth::setRequestEngine()</strong></span> 例子</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$consumer </span><span style="color: #007700">= new </span><span style="color: #9876AA">OAuth</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$consumer</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setRequestEngine</span><span style="color: #007700">(</span><span style="color: #9876AA">OAUTH_REQENGINE_STREAMS</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauth.setrequestengine-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><a href="https://www.php.net/manual/zh/book.curl.php" class="link">Curl</a></li>   <li class="member"><a href="https://www.php.net/manual/zh/book.stream.php" class="link">PHP 流</a></li>   <li class="member"><span class="classname"><a href="https://www.php.net/manual/zh/class.oauthexception.php" class="classname">OAuthException</a></span></li>  </ul> </div></div>
     * @return void*/
    public function setRequestEngine($reqengine) {}

/**
*<div id="oauth.setrsacertificate" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::setRSACertificate</h1>  <p class="verinfo">(PECL OAuth &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">OAuth::setRSACertificate</span> &mdash; <span class="dc-title">设置 RSA 证书</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.setrsacertificate-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::setRSACertificate</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$cert</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">   设置 <abbr>RSA</abbr> 证书。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.setrsacertificate-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">cert</span></dt>    <dd>     <span>      <abbr>RSA</abbr> 证书。     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.setrsacertificate-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功则返回 <strong><span>true</span></strong> ，失败返回 <strong><span>false</span></strong> （例如，RSA证书不能被传递）。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-oauth.setrsacertificate-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL oauth 1.0.0</td>       <td>        以前失败时返回 <strong><span>null</span></strong>，而不是 <strong><span>false</span></strong>。       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-oauth.setrsacertificate-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 一个 <span class="methodname" style="color:#CC7832"><strong>OAuth::setRsaCertificate()</strong></span> 例子</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$consume </span><span style="color: #007700">= new </span><span style="color: #9876AA">OAuth</span><span style="color: #007700">(</span><span style="color: #DD0000">'1234'</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #9876AA">OAUTH_SIG_METHOD_RSASHA1</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">$consume</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setRSACertificate</span><span style="color: #007700">(</span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #DD0000">'test.pem'</span><span style="color: #007700">));<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauth.setrsacertificate-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::setCaPath()} - 设置 CA 路径和信息</span></li>  </ul> </div></div>
     * @return mixed*/
    public function setRSACertificate($cert) {}

/**
*<div id="oauth.settimestamp" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::setTimestamp</h1>  <p class="verinfo">(PECL OAuth &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">OAuth::setTimestamp</span> &mdash; <span class="dc-title">设置时间戳</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.settimestamp-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::setTimestamp</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$timestamp</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span></div>  <p class="para rdfs-comment">   为后续请求设置时间戳。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.settimestamp-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">timestamp</span></dt>    <dd>     <span>      时间戳。     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.settimestamp-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回 <strong><span>true</span></strong> ，除非 <span class="parameter" style="color:#3A95FF">timestamp</span> 无效，则返回 <strong><span>false</span></strong> 。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-oauth.settimestamp-changelog">  <h3 class="title">更新日志</h3>  <span>   <table class="doctable informaltable">         <thead>      <tr>       <th>版本</th>       <th>说明</th>      </tr>     </thead>     <tbody class="tbody">      <tr>       <td>PECL oauth 1.0.0</td>       <td>        以前失败时返回 <strong><span>null</span></strong>，而不是 <strong><span>false</span></strong>。       </td>      </tr>     </tbody>       </table>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauth.settimestamp-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuth::setNonce()} - 为后续请求设置现时标志</span></li>  </ul> </div></div>
     * @return mixed*/
    public function setTimestamp($timestamp) {}

/**
*<div id="oauth.settoken" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::setToken</h1>  <p class="verinfo">(PECL OAuth &gt;= 0.99.1)</p><p class="refpurpose"><span class="refname">OAuth::setToken</span> &mdash; <span class="dc-title">设置令牌和 secret</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.settoken-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::setToken</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$token</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$token_secret</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   为后续请求设置令牌和 secret。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.settoken-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">token</span></dt>     <dd>      <p class="para">        OAuth 令牌      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">token_secret</span></dt>     <dd>      <p class="para">        OAuth 令牌 secret。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.settoken-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <strong><span>true</span></strong>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-oauth.settoken-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">OAuth::setToken()</strong></span> 例子</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$oauth </span><span style="color: #007700">= new </span><span style="color: #9876AA">OAuth</span><span style="color: #007700">(</span><span style="color: #9876AA">OAUTH_CONSUMER_KEY</span><span style="color: #007700">,</span><span style="color: #9876AA">OAUTH_CONSUMER_SECRET</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$oauth</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">setToken</span><span style="color: #007700">(</span><span style="color: #DD0000">"token"</span><span style="color: #007700">,</span><span style="color: #DD0000">"token-secret"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>  </span> </div></div>
     * @return bool*/
    public function setToken($token, $token_secret) {}

/**
*<div id="oauth.setversion" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuth::setVersion</h1>  <p class="verinfo">(PECL OAuth &gt;= 0.99.1)</p><p class="refpurpose"><span class="refname">OAuth::setVersion</span> &mdash; <span class="dc-title">设置 OAuth 版本</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauth.setversion-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuth::setVersion</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$version</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   为随后请求设置 OAuth 版本  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauth.setversion-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">version</span></dt>     <dd>      <p class="para">       OAuth 版本，默认值为  &quot;1.0&quot;      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauth.setversion-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div></div>
     * @return bool*/
    public function setVersion($version) {}
}

/**
*<div id="class.oauthexception" class="reference"> <h1 class="title">OAuthException 类</h1>  <div class="partintro"><p class="verinfo">(PECL OAuth &gt;= 0.99.1)</p>  <div class="section" id="oauthexception.intro">   <h2 class="title">简介</h2>   <p class="para">    当使用 OAuth 扩展发生异常错误时，抛出此异常和包含了一些有用的调试信息。   </p>  </div>  <div class="section" id="oauthexception.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">OAuthException</strong>     </span>          <span class="ooclass">      <span class="modifier">extends</span>       <a href="https://www.php.net/manual/zh/class.exception.php" class="classname">Exception</a>     </span>     {</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 属性 </div>    <div class="fieldsynopsis">     <span class="modifier">public</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.oauthexception.php#oauthexception.props.lastresponse">$<var class="varname">lastResponse</var></a></var>;</div>    <div class="fieldsynopsis"><span class="modifier">public</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.oauthexception.php#oauthexception.props.debuginfo">$<var class="varname">debugInfo</var></a></var>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的属性 </div>    <div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766">string</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.exception.php#exception.props.message">$<var class="varname">message</var></a></var><span class="initializer"> = &quot;&quot;</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">string</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.exception.php#exception.props.string">$<var class="varname">string</var></a></var><span class="initializer"> = &quot;&quot;</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766">int</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.exception.php#exception.props.code">$<var class="varname">code</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766">string</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.exception.php#exception.props.file">$<var class="varname">file</var></a></var><span class="initializer"> = &quot;&quot;</span>;</div><div class="fieldsynopsis"><span class="modifier">protected</span>     <span class="type" style="color:#EAB766">int</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.exception.php#exception.props.line">$<var class="varname">line</var></a></var>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">array</span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.exception.php#exception.props.trace">$<var class="varname">trace</var></a></var><span class="initializer"> = []</span>;</div><div class="fieldsynopsis"><span class="modifier">private</span>     <span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span><span class="type" style="color:#EAB766"></span></span>      <var class="varname"><a href="https://www.php.net/manual/zh/class.exception.php#exception.props.previous">$<var class="varname">previous</var></a></var><span class="initializer"> = null</span>;</div>    <div class="classsynopsisinfo classsynopsisinfo_comment">// 继承的方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getMessage}</span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getPrevious}</span>(): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.throwable.php" class="type Throwable" style="color:#EAB766">Throwable</a></span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getCode}</span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getFile}</span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getLine}</span>(): <span class="type" style="color:#EAB766">int</span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTrace}</span>(): <span class="type" style="color:#EAB766">array</span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::getTraceAsString}</span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832">{@link Exception::__toString}</span>(): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">private</span> <span class="methodname" style="color:#CC7832">{@link Exception::__clone}</span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>   }</div>  </div>    <div class="section" id="oauthexception.props">   <h2 class="title">属性</h2>   <dl>         <dt id="oauthexception.props.lastresponse"><var class="varname">lastResponse</var></dt>     <dd>      <p class="para">发生异常时的响应，如果有的话</p>     </dd>             <dt id="oauthexception.props.debuginfo"><var class="varname">debugInfo</var></dt>     <dd>      <p class="para"/>     </dd>       </dl>  </div> </div></div>
*/
class OAuthException extends Exception
{
    /**
     * The response of the exception which occurred, if any
     * @var string
     */
    public $lastResponse;

    /**
     * @var array
     */
    public $debugInfo;
}

;

/**
*<div id="class.oauthprovider" class="reference"> <h1 class="title">OAuthProvider 类</h1>  <div class="partintro"><p class="verinfo">(PECL OAuth &gt;= 1.0.0)</p>  <div class="section" id="oauthprovider.intro">   <h2 class="title">简介</h2>   <p class="para">   管理一个  OAuth 提供者类。   </p>   <p class="para">    参考一个外部的深入教程 <a href="http://toys.lerdorf.com/archives/55-Writing-an-OAuth-Provider-Service.html" class="link external">&raquo;&nbsp;写一个 OAuth 提供者服务</a>，用来亲自实践提供服务。也可以参考 OAuth 扩展源代码里的 <a href="https://www.php.net/manual/zh/https://svn.php.net/viewvc/pecl/oauth/trunk/examples" class="link external">&raquo;&nbsp;OAuth 提供者例子</a> 。   </p>  </div>  <div class="section" id="oauthprovider.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis">    <span class="ooclass"><strong class="classname"></strong></span>    <div class="classsynopsisinfo">     <span class="ooclass">      <span class="modifier">class</span> <strong class="classname">OAuthProvider</strong>     </span>     {</div>        <div class="classsynopsisinfo classsynopsisinfo_comment">// 方法 </div>    <div class="methodsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauthprovider.addrequiredparameter.php" class="methodname" style="color:#CC7832">addRequiredParameter</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$req_params</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauthprovider.callconsumerhandler.php" class="methodname" style="color:#CC7832">callconsumerHandler</a></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauthprovider.calltimestampnoncehandler.php" class="methodname" style="color:#CC7832">callTimestampNonceHandler</a></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauthprovider.calltokenhandler.php" class="methodname" style="color:#CC7832">calltokenHandler</a></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauthprovider.checkoauthrequest.php" class="methodname" style="color:#CC7832">checkOAuthRequest</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$uri</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$method</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauthprovider.construct.php" class="methodname" style="color:#CC7832">__construct</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$params_array</span><span class="initializer"> = ?</span></span>)</div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauthprovider.consumerhandler.php" class="methodname" style="color:#CC7832">consumerHandler</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$callback_function</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauthprovider.generatetoken.php" class="methodname" style="color:#CC7832">generateToken</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$size</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$strong</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauthprovider.is2leggedendpoint.php" class="methodname" style="color:#CC7832">is2LeggedEndpoint</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$params_array</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauthprovider.isrequesttokenendpoint.php" class="methodname" style="color:#CC7832">isRequestTokenEndpoint</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$will_issue_request_token</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauthprovider.removerequiredparameter.php" class="methodname" style="color:#CC7832">removeRequiredParameter</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$req_params</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauthprovider.reportproblem.php" class="methodname" style="color:#CC7832">reportProblem</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$oauthexception</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$send_headers</span><span class="initializer"> = <strong><span>true</span></strong></span></span>): <span class="type" style="color:#EAB766">string</span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauthprovider.setparam.php" class="methodname" style="color:#CC7832">setParam</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$param_key</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$param_val</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauthprovider.setrequesttokenpath.php" class="methodname" style="color:#CC7832">setRequestTokenPath</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$path</span></span>): <span class="type" style="color:#EAB766">bool</span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauthprovider.timestampnoncehandler.php" class="methodname" style="color:#CC7832">timestampNonceHandler</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$callback_function</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div><div class="methodsynopsis dc-description"><span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><a href="https://www.php.net/manual/zh/oauthprovider.tokenhandler.php" class="methodname" style="color:#CC7832">tokenHandler</a></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$callback_function</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>   }</div>  </div> </div> <h2>目录</h2><ul class="chunklist chunklist_reference"><li>{@link OAuthProvider::addRequiredParameter} — 添加必需的参数</li><li>{@link OAuthProvider::callconsumerHandler} — 调用 consumerNonceHandler 回调函数</li><li>{@link OAuthProvider::callTimestampNonceHandler} — 调用 timestampNonceHandler 回调函数</li><li>{@link OAuthProvider::calltokenHandler} — 调用 tokenNonceHandler 回调函数</li><li>{@link OAuthProvider::checkOAuthRequest} — 检查一个 oauth 请求</li><li>{@link OAuthProvider::__construct} — 新建一个  OAuthProvider 对象</li><li>{@link OAuthProvider::consumerHandler} — 设置 consumerHandler 句柄回调函数</li><li>{@link OAuthProvider::generateToken} — 生成一个随机令牌</li><li>{@link OAuthProvider::is2LeggedEndpoint} — is2LeggedEndpoint</li><li>{@link OAuthProvider::isRequestTokenEndpoint} — 设置 isRequestTokenEndpoint</li><li>{@link OAuthProvider::removeRequiredParameter} — 移除一个必需的参数</li><li>{@link OAuthProvider::reportProblem} — 报告问题</li><li>{@link OAuthProvider::setParam} — 设置一个参数</li><li>{@link OAuthProvider::setRequestTokenPath} — 设置请求令牌路径</li><li>{@link OAuthProvider::timestampNonceHandler} — 设置 timestampNonceHandler 句柄回调函数</li><li>{@link OAuthProvider::tokenHandler} — 设置 tokenHandler 句柄回调函数</li></ul></div>
*/
class OAuthProvider
{
/**
*<div id="oauthprovider.addrequiredparameter" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuthProvider::addRequiredParameter</h1>  <p class="verinfo">(PECL OAuth &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">OAuthProvider::addRequiredParameter</span> &mdash; <span class="dc-title">添加必需的参数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauthprovider.addrequiredparameter-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuthProvider::addRequiredParameter</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$req_params</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   添加必需的 oauth 提供者参数。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauthprovider.addrequiredparameter-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">req_params</span></dt>    <dd>     <span>      必需的参数。     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauthprovider.addrequiredparameter-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauthprovider.addrequiredparameter-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuthProvider::removeRequiredParameter()} - 移除一个必需的参数</span></li>  </ul> </div></div>
     * @return bool*/
    final public function addRequiredParameter($req_params) {}

/**
*<div id="oauthprovider.callconsumerhandler" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuthProvider::callconsumerHandler</h1>  <p class="verinfo">(No version information available, might only be in Git)</p><p class="refpurpose"><span class="refname">OAuthProvider::callconsumerHandler</span> &mdash; <span class="dc-title">调用 consumerNonceHandler 回调函数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauthprovider.callconsumerhandler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuthProvider::callconsumerHandler</strong></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   调用注册的消费者句柄回调函数，此回调函数通过 <span class="methodname" style="color:#CC7832">{@link OAuthProvider::consumerHandler()}</span> 设置。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauthprovider.callconsumerhandler-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauthprovider.callconsumerhandler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-oauthprovider.callconsumerhandler-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如回调函数无法被调用或未被指定，会引发一个<strong><span>E_ERROR</span></strong> 级别的错误。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauthprovider.callconsumerhandler-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuthProvider::consumerHandler()} - 设置 consumerHandler 句柄回调函数</span></li>  </ul> </div></div>
     * @return void*/
    public function callconsumerHandler() {}

/**
*<div id="oauthprovider.calltimestampnoncehandler" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuthProvider::callTimestampNonceHandler</h1>  <p class="verinfo">(PECL OAuth &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">OAuthProvider::callTimestampNonceHandler</span> &mdash; <span class="dc-title">调用 timestampNonceHandler 回调函数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauthprovider.calltimestampnoncehandler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuthProvider::callTimestampNonceHandler</strong></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   调用注册的时间戳句柄回调函数，此回调函数通过 <span class="methodname" style="color:#CC7832">{@link OAuthProvider::timestampNonceHandler()}</span> 设置。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauthprovider.calltimestampnoncehandler-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauthprovider.calltimestampnoncehandler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-oauthprovider.calltimestampnoncehandler-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如回调函数无法被调用或未被指定，会引发一个<strong><span>E_ERROR</span></strong> 级别的错误。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauthprovider.calltimestampnoncehandler-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuthProvider::timestampNonceHandler()} - 设置 timestampNonceHandler 句柄回调函数</span></li>  </ul> </div></div>
     * @return void*/
    public function callTimestampNonceHandler() {}

/**
*<div id="oauthprovider.calltokenhandler" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuthProvider::calltokenHandler</h1>  <p class="verinfo">(PECL OAuth &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">OAuthProvider::calltokenHandler</span> &mdash; <span class="dc-title">调用 tokenNonceHandler 回调函数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauthprovider.calltokenhandler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuthProvider::calltokenHandler</strong></span>(): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   调用注册的令牌句柄回调函数，此回调函数通过 <span class="methodname" style="color:#CC7832">{@link OAuthProvider::tokenHandler()}</span> 设置。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauthprovider.calltokenhandler-parameters">  <h3 class="title">参数</h3>  <span>此函数没有参数。</span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauthprovider.calltokenhandler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-oauthprovider.calltokenhandler-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   如回调函数无法被调用或未被指定，会引发一个<strong><span>E_ERROR</span></strong> 级别的错误。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauthprovider.calltokenhandler-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuthProvider::tokenHandler()} - 设置 tokenHandler 句柄回调函数</span></li>  </ul> </div></div>
     * @return void*/
    public function calltokenHandler() {}

/**
*<div id="oauthprovider.checkoauthrequest" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuthProvider::checkOAuthRequest</h1>  <p class="verinfo">(PECL OAuth &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">OAuthProvider::checkOAuthRequest</span> &mdash; <span class="dc-title">检查一个 oauth 请求</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauthprovider.checkoauthrequest-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuthProvider::checkOAuthRequest</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$uri</span><span class="initializer"> = ?</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$method</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   检查一个 OAuth 请求。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauthprovider.checkoauthrequest-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">uri</span></dt>    <dd>     <span>      可选的 <abbr title="Uniform Resource Identifier">URI</abbr> 或终点。     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">method</span></dt>    <dd>     <p class="para">       <abbr title="Hypertext Transfer Protocol">HTTP</abbr> 方法。 可选 <strong><span>OAUTH_HTTP_METHOD_*</span></strong> <a href="https://www.php.net/manual/zh/oauth.constants.php" class="link">OAuth 常量</a> 其中之一传递。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauthprovider.checkoauthrequest-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-oauthprovider.checkoauthrequest-errors">  <h3 class="title">错误／异常</h3>  <p class="para">  如果不能检测到 HTTP 方法，则发出一个 <strong><span>E_ERROR</span></strong> 级别的错误。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauthprovider.checkoauthrequest-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuthProvider::reportProblem()} - 报告问题</span></li>  </ul> </div></div>
     * @return void*/
    public function checkOAuthRequest($uri = '', $method = '') {}

    /**
     * @param array $params_array
     */
    public function __construct($params_array) {}

/**
*<div id="oauthprovider.consumerhandler" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuthProvider::consumerHandler</h1>  <p class="verinfo">(PECL OAuth &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">OAuthProvider::consumerHandler</span> &mdash; <span class="dc-title">设置 consumerHandler 句柄回调函数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauthprovider.consumerhandler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuthProvider::consumerHandler</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$callback_function</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   设置消费者句柄回调函数，并将在后面通过 <span class="methodname" style="color:#CC7832">{@link OAuthProvider::callConsumerHandler()}</span> 被调用。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauthprovider.consumerhandler-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">callback_function</span></dt>    <dd>     <span>   <span class="type" style="color:#EAB766"><span class="type 回调类型" style="color:#EAB766">回调类型</span></span> 函数名。     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauthprovider.consumerhandler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-oauthprovider.consumerhandler-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1  <span class="methodname" style="color:#CC7832"><strong>OAuthProvider::consumerHandler()</strong></span> 回调的例子</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">lookupConsumer</span><span style="color: #007700">(</span><span style="color: #9876AA">$provider</span><span style="color: #007700">) {<br /><br />    if (</span><span style="color: #9876AA">$provider</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">consumer_key </span><span style="color: #007700">=== </span><span style="color: #DD0000">'unknown'</span><span style="color: #007700">) {<br />        return </span><span style="color: #9876AA">OAUTH_CONSUMER_KEY_UNKNOWN</span><span style="color: #007700">;<br />    } else if(</span><span style="color: #9876AA">$provider</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">consumer_key </span><span style="color: #007700">== </span><span style="color: #DD0000">'blacklisted' </span><span style="color: #007700">|| </span><span style="color: #9876AA">$provider</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">consumer_key </span><span style="color: #007700">=== </span><span style="color: #DD0000">'throttled'</span><span style="color: #007700">) {<br />        return </span><span style="color: #9876AA">OAUTH_CONSUMER_KEY_REFUSED</span><span style="color: #007700">;<br />    }<br /><br />    </span><span style="color: #9876AA">$provider</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">consumer_secret </span><span style="color: #007700">= </span><span style="color: #DD0000">"the_consumers_secret"</span><span style="color: #007700">;<br /><br />    return </span><span style="color: #9876AA">OAUTH_OK</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauthprovider.consumerhandler-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuthProvider::callConsumerHandler()} - 调用 consumerNonceHandler 回调函数</span></li>  </ul> </div></div>
     * @return void*/
    public function consumerHandler($callback_function) {}

/**
*<div id="oauthprovider.generatetoken" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuthProvider::generateToken</h1>  <p class="verinfo">(PECL OAuth &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">OAuthProvider::generateToken</span> &mdash; <span class="dc-title">生成一个随机令牌</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauthprovider.generatetoken-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>OAuthProvider::generateToken</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$size</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$strong</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">  生成一个伪随机字节的 <span class="type" style="color:#EAB766"><span class="type 字符串" style="color:#EAB766">字符串</span></span> 。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauthprovider.generatetoken-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">size</span></dt>    <dd>     <span>     想要的令牌长度，单位为字节。     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">strong</span></dt>    <dd>     <p class="para">     设置为 <strong><span>true</span></strong> 则意味着将对熵使用 <span>/dev/random</span> ，否则使用非阻塞的 <span>/dev/urandom</span>。在 Windows 平台将忽略此参数。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauthprovider.generatetoken-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   生成的令牌，一个以字节为单位的 <span class="type" style="color:#EAB766"><span class="type 字符串" style="color:#EAB766">字符串</span></span> 。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-oauthprovider.generatetoken-errors">  <h3 class="title">错误／异常</h3>  <p class="para">如果 <span class="parameter" style="color:#3A95FF">strong</span> 参数为 <strong><span>true</span></strong> ， 则当回退到用 <span class="function">{@link rand()}</span> 来实现填充剩余的随机字节的时候，将触发一个 <strong><span>E_WARNING</span></strong> 级别的错误（比如，当最初找不到足够的随机数据的时候）。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-oauthprovider.generatetoken-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">OAuthProvider::generateToken()</strong></span> 例子</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$p </span><span style="color: #007700">= new </span><span style="color: #9876AA">OAuthProvider</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$t </span><span style="color: #007700">= </span><span style="color: #9876AA">$p</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">generateToken</span><span style="color: #007700">(</span><span style="color: #9876AA">4</span><span style="color: #007700">);<br /><br />echo </span><span style="color: #9876AA">strlen</span><span style="color: #007700">(</span><span style="color: #9876AA">$t</span><span style="color: #007700">),  </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br />echo </span><span style="color: #9876AA">bin2hex</span><span style="color: #007700">(</span><span style="color: #9876AA">$t</span><span style="color: #007700">), </span><span style="color: #9876AA">PHP_EOL</span><span style="color: #007700">;<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>   <div class="example-contents"><p>以上示例的输出类似于：</p></div>   <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>4<br>b6a82c27<br></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-oauthprovider.generatetoken-notes">  <h3 class="title">注释</h3>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    当系统没有足够的随机数据可用的时候，此函数将使用 PHP 内部的 <span class="function">{@link rand()}</span> 来实现填充剩余的随机字节。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauthprovider.generatetoken-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="function">{@link openssl_random_pseudo_bytes()} - 生成一个伪随机字节串</span></li>   <li class="member"><span class="function">{@link mcrypt_create_iv()} - 从随机源创建初始向量</span></li>  </ul> </div></div>
     * @return string*/
    final public static function generateToken($size, $strong = false) {}

/**
*<div id="oauthprovider.is2leggedendpoint" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuthProvider::is2LeggedEndpoint</h1>  <p class="verinfo">(PECL OAuth &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">OAuthProvider::is2LeggedEndpoint</span> &mdash; <span class="dc-title">is2LeggedEndpoint </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauthprovider.is2leggedendpoint-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuthProvider::is2LeggedEndpoint</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$params_array</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   2-legged 流程，或请求签名。不需要令牌。   </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauthprovider.is2leggedendpoint-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">params_array</span></dt>    <dd>     <span>     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauthprovider.is2leggedendpoint-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">  返回一个 <span class="classname"><a href="https://www.php.net/manual/zh/class.oauthprovider.php" class="classname">OAuthProvider</a></span> <span class="type" style="color:#EAB766"><span class="type 对象" style="color:#EAB766">对象</span></span>.  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-oauthprovider.is2leggedendpoint-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">OAuthProvider::is2LeggedEndpoint()</strong></span> 例子</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br />$provider </span><span style="color: #007700">= new </span><span style="color: #9876AA">OAuthProvider</span><span style="color: #007700">();<br /><br /></span><span style="color: #9876AA">$provider</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">is2LeggedEndpoint</span><span style="color: #007700">(</span><span style="color: #9876AA">true</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauthprovider.is2leggedendpoint-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuthProvider::__construct()} - 新建一个  OAuthProvider 对象</span></li>  </ul> </div></div>
     * @return void*/
    public function is2LeggedEndpoint($params_array) {}

/**
*<div id="oauthprovider.isrequesttokenendpoint" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuthProvider::isRequestTokenEndpoint</h1>  <p class="verinfo">(PECL OAuth &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">OAuthProvider::isRequestTokenEndpoint</span> &mdash; <span class="dc-title">设置 isRequestTokenEndpoint</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauthprovider.isrequesttokenendpoint-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuthProvider::isRequestTokenEndpoint</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$will_issue_request_token</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauthprovider.isrequesttokenendpoint-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">will_issue_request_token</span></dt>    <dd>     <span>      设置是否发布一个请求令牌，从而决定 <span class="methodname" style="color:#CC7832">{@link OAuthProvider::tokenHandler()}</span> 是否需要被调用。     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauthprovider.isrequesttokenendpoint-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauthprovider.isrequesttokenendpoint-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuthProvider::setRequestTokenPath()} - 设置请求令牌路径</span></li>   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuthProvider::reportProblem()} - 报告问题</span></li>  </ul> </div></div>
     * @return void*/
    public function isRequestTokenEndpoint($will_issue_request_token) {}

/**
*<div id="oauthprovider.removerequiredparameter" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuthProvider::removeRequiredParameter</h1>  <p class="verinfo">(PECL OAuth &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">OAuthProvider::removeRequiredParameter</span> &mdash; <span class="dc-title">移除一个必需的参数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauthprovider.removerequiredparameter-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuthProvider::removeRequiredParameter</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$req_params</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   移除一个必需的参数。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauthprovider.removerequiredparameter-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">req_params</span></dt>    <dd>     <span>      要被移除的必需参数。     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauthprovider.removerequiredparameter-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauthprovider.removerequiredparameter-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuthProvider::setParam()} - 设置一个参数</span></li>   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuthProvider::addRequiredParameter()} - 添加必需的参数</span></li>  </ul> </div></div>
     * @return bool*/
    final public function removeRequiredParameter($req_params) {}

/**
*<div id="oauthprovider.reportproblem" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuthProvider::reportProblem</h1>  <p class="verinfo">(PECL OAuth &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">OAuthProvider::reportProblem</span> &mdash; <span class="dc-title">报告问题</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauthprovider.reportproblem-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">public</span> <span class="modifier">static</span> <span class="methodname" style="color:#CC7832"><strong>OAuthProvider::reportProblem</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$oauthexception</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$send_headers</span><span class="initializer"> = <strong><span>true</span></strong></span></span>): <span class="type" style="color:#EAB766">string</span></div>  <p class="para rdfs-comment">   将问题作为一个 <span class="classname"><a href="https://www.php.net/manual/zh/class.oauthexception.php" class="classname">OAuthException</a></span> 异常传入，可能出现的问题在  <a href="https://www.php.net/manual/zh/oauth.constants.php" class="link">OAuth 常量</a> 章节里已列出。  </p>    <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauthprovider.reportproblem-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">oauthexception</span></dt>    <dd>     <span>    <span class="classname"><a href="https://www.php.net/manual/zh/class.oauthexception.php" class="classname">OAuthException</a></span> 类。     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauthprovider.reportproblem-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauthprovider.reportproblem-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuthProvider::checkOAuthRequest()} - 检查一个 oauth 请求</span></li>   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuthProvider::isRequestTokenEndpoint()} - 设置 isRequestTokenEndpoint</span></li>  </ul> </div></div>
     * @return string*/
    final public static function reportProblem($oauthexception, $send_headers = true) {}

/**
*<div id="oauthprovider.setparam" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuthProvider::setParam</h1>  <p class="verinfo">(PECL OAuth &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">OAuthProvider::setParam</span> &mdash; <span class="dc-title">设置一个参数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauthprovider.setparam-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuthProvider::setParam</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$param_key</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.declarations.php#language.types.declarations.mixed" class="type mixed" style="color:#EAB766">mixed</a></span> <span class="parameter" style="color:#3A95FF">$param_val</span><span class="initializer"> = ?</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置一个参数。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauthprovider.setparam-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">param_key</span></dt>    <dd>     <span>      参数的 key 。     </span>    </dd>          <dt><span class="parameter" style="color:#3A95FF">param_val</span></dt>    <dd>     <p class="para">      参数的值，此为可选项。     </p>     <p class="para">      若要从签名验证中排除参数，请将其值设置为 <strong><span>null</span></strong>。     </p>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauthprovider.setparam-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauthprovider.setparam-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuthProvider::addRequiredParameter()} - 添加必需的参数</span></li>  </ul> </div></div>
     * @return bool*/
    final public function setParam($param_key, $param_val = null) {}

/**
*<div id="oauthprovider.setrequesttokenpath" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuthProvider::setRequestTokenPath</h1>  <p class="verinfo">(PECL OAuth &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">OAuthProvider::setRequestTokenPath</span> &mdash; <span class="dc-title">设置请求令牌路径</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauthprovider.setrequesttokenpath-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">final</span> <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuthProvider::setRequestTokenPath</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$path</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   设置请求令牌路径。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauthprovider.setrequesttokenpath-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">path</span></dt>    <dd>     <span>      路径。     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauthprovider.setrequesttokenpath-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <strong><span>true</span></strong>  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauthprovider.setrequesttokenpath-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuthProvider::tokenHandler()} - 设置 tokenHandler 句柄回调函数</span></li>  </ul> </div></div>
     * @return bool*/
    final public function setRequestTokenPath($path) {}

/**
*<div id="oauthprovider.timestampnoncehandler" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuthProvider::timestampNonceHandler</h1>  <p class="verinfo">(PECL OAuth &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">OAuthProvider::timestampNonceHandler</span> &mdash; <span class="dc-title">设置 timestampNonceHandler 句柄回调函数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauthprovider.timestampnoncehandler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuthProvider::timestampNonceHandler</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$callback_function</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   设置时间戳 nonce 句柄回调函数，此函数将在后面被 <span class="methodname" style="color:#CC7832">{@link OAuthProvider::callTimestampNonceHandler()}</span> 调用。跟时间戳/nonce相关的错误将被抛给此回调函数。   </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauthprovider.timestampnoncehandler-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">callback_function</span></dt>    <dd>     <span>      <span class="type" style="color:#EAB766"><span class="type 回调类型" style="color:#EAB766">回调类型</span></span> 的函数名。     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauthprovider.timestampnoncehandler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-oauthprovider.timestampnoncehandler-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>OAuthProvider::timestampNonceHandler()</strong></span> 回调的例子</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">timestampNonceChecker</span><span style="color: #007700">(</span><span style="color: #9876AA">$provider</span><span style="color: #007700">) {<br /><br />    if (</span><span style="color: #9876AA">$provider</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">nonce </span><span style="color: #007700">=== </span><span style="color: #DD0000">'bad'</span><span style="color: #007700">) {<br />        return </span><span style="color: #9876AA">OAUTH_BAD_NONCE</span><span style="color: #007700">;<br />    } elseif (</span><span style="color: #9876AA">$provider</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">timestamp </span><span style="color: #007700">== </span><span style="color: #DD0000">'0'</span><span style="color: #007700">) {<br />        return </span><span style="color: #9876AA">OAUTH_BAD_TIMESTAMP</span><span style="color: #007700">;<br />    }<br />    <br />    return </span><span style="color: #9876AA">OAUTH_OK</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauthprovider.timestampnoncehandler-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuthProvider::callTimestampNonceHandler()} - 调用 timestampNonceHandler 回调函数</span></li>  </ul> </div></div>
     * @return void*/
    public function timestampNonceHandler($callback_function) {}

/**
*<div id="oauthprovider.tokenhandler" class="refentry"> <div class="refnamediv">  <h1 class="refname">OAuthProvider::tokenHandler</h1>  <p class="verinfo">(PECL OAuth &gt;= 1.0.0)</p><p class="refpurpose"><span class="refname">OAuthProvider::tokenHandler</span> &mdash; <span class="dc-title">设置 tokenHandler 句柄回调函数</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-oauthprovider.tokenhandler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="modifier">public</span> <span class="methodname" style="color:#CC7832"><strong>OAuthProvider::tokenHandler</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$callback_function</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>  <p class="para rdfs-comment">   设置令牌句柄的回调函数，此回调函数将在后面被 <span class="methodname" style="color:#CC7832">{@link OAuthProvider::callTokenHandler()}</span> 调用。  </p>  <div class="warning"><strong class="warning">警告</strong><p class="simpara">本函数还未编写文档，仅有参数列表。</p></div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-oauthprovider.tokenhandler-parameters">  <h3 class="title">参数</h3>  <dl>       <dt><span class="parameter" style="color:#3A95FF">callback_function</span></dt>    <dd>     <span>      <span class="type" style="color:#EAB766"><span class="type 回调类型" style="color:#EAB766">回调类型</span></span> 的函数名。     </span>    </dd>     </dl> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-oauthprovider.tokenhandler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   没有返回值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-oauthprovider.tokenhandler-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 <span class="methodname" style="color:#CC7832"><strong>OAuthProvider::tokenHandler()</strong></span> 回调的例子</strong></p>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">function </span><span style="color: #9876AA">tokenHandler</span><span style="color: #007700">(</span><span style="color: #9876AA">$provider</span><span style="color: #007700">) {<br />    <br />    if (</span><span style="color: #9876AA">$provider</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">token </span><span style="color: #007700">=== </span><span style="color: #DD0000">'rejected'</span><span style="color: #007700">) {<br />        return </span><span style="color: #9876AA">OAUTH_TOKEN_REJECTED</span><span style="color: #007700">;<br />    } elseif (</span><span style="color: #9876AA">$provider</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">token </span><span style="color: #007700">=== </span><span style="color: #DD0000">'revoked'</span><span style="color: #007700">) {<br />        return </span><span style="color: #9876AA">OAUTH_TOKEN_REVOKED</span><span style="color: #007700">;<br />    }<br /><br />    </span><span style="color: #9876AA">$provider</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">token_secret </span><span style="color: #007700">= </span><span style="color: #DD0000">"the_tokens_secret"</span><span style="color: #007700">;<br />    return </span><span style="color: #9876AA">OAUTH_OK</span><span style="color: #007700">;<br />}<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>   </div>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-oauthprovider.tokenhandler-seealso">  <h3 class="title">参见</h3>  <ul class="simplelist">   <li class="member"><span class="methodname" style="color:#CC7832">{@link OAuthProvider::callTokenHandler()} - 调用 tokenNonceHandler 回调函数</span></li>  </ul> </div></div>
     * @return void*/
    public function tokenHandler($callback_function) {}
}
