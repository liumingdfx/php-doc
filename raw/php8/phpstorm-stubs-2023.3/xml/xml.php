<?php

// Start of xml v.
use JetBrains\PhpStorm\Internal\LanguageLevelTypeAware;
use JetBrains\PhpStorm\Pure;

/**
*<div id="function.xml-parser-create" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_parser_create</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_parser_create</span> &mdash; <span class="dc-title">创建 XML 解析器</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-parser-create-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_parser_create</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">xml_parser_create()</strong></span> 新建 XML 解析器并返回可被其它 XML 函数使用的 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-parser-create-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para">       自动检测输入编码，因此 <span class="parameter" style="color:#3A95FF">encoding</span> 参数仅指定输出编码。默认输出字符集是 UTF-8。如果传递的是空字符串，解析器会尝试通过查看头的的       3 或 4 个字节来识别文档的编码方式。支持的编码有 <span>ISO-8859-1</span>、<span>UTF-8</span> 和 <span>US-ASCII</span>。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-parser-create-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回新 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-parser-create-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       此函数现在返回 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前返回 <span class="type" style="color:#EAB766">resource</span>， 或者在失败时返回 <strong><span>false</span></strong>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">encoding</span> 现在可以为 null。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.xml-parser-create-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link xml_parser_create_ns()} - 创建支持命名空间的 XML 解析器</span></li>    <li class="member"><span class="function">{@link xml_parser_free()} - 释放 XML 解析器</span></li>   </ul>  </span> </div></div>
 * @return resource|false|XMLParser a resource handle for the new XML parser.*/
function xml_parser_create(?string $encoding) {}

/**
*<div id="function.xml-parser-create-ns" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_parser_create_ns</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.5, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_parser_create_ns</span> &mdash; <span class="dc-title">创建支持命名空间的 XML 解析器</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-parser-create-ns-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_parser_create_ns</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span><span class="type" style="color:#EAB766"></span></span> <span class="parameter" style="color:#3A95FF">$encoding</span><span class="initializer"> = <strong><span>null</span></strong></span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$separator</span><span class="initializer"> = &quot;:&quot;</span></span>): <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">xml_parser_create_ns()</strong></span> 新建支持 XML 命名空间的解析器并返回可被其它 XML 函数使用的 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-parser-create-ns-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">encoding</span></dt>     <dd>      <p class="para">       自动检测输入编码，因此 <span class="parameter" style="color:#3A95FF">encoding</span> 参数仅指定输出编码。默认输出字符集是 UTF-8。支持的编码有       <span>ISO-8859-1</span>、<span>UTF-8</span> 和 <span>US-ASCII</span>。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">separator</span></dt>     <dd>      <p class="para">       使用名称空间感知的解析器标记参数传递给各种处理函数将由名称空间和标记名称组成，这些名称由 <span class="parameter" style="color:#3A95FF">separator</span> 中指定的字符串分隔。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-parser-create-ns-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回新 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-parser-create-ns-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.0.0</td>      <td>       此函数现在返回 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前返回 <span class="type" style="color:#EAB766">resource</span>， 或者在失败时返回 <strong><span>false</span></strong>。      </td>     </tr>     <tr>      <td>8.0.0</td>      <td>       <span class="parameter" style="color:#3A95FF">encoding</span> 现在可以为 null。      </td>     </tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.xml-parser-create-ns-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link xml_parser_create()} - 创建 XML 解析器</span></li>    <li class="member"><span class="function">{@link xml_parser_free()} - 释放 XML 解析器</span></li>   </ul>  </span> </div></div>
 * @return resource|false|XMLParser a resource handle for the new XML parser.*/
function xml_parser_create_ns(?string $encoding, string $separator = ':') {}

/**
*<div id="function.xml-set-object" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_set_object</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_set_object</span> &mdash; <span class="dc-title">在对象中使用 XML 解析器</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-set-object-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_set_object</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">object</span> <span class="parameter" style="color:#3A95FF">$object</span></span>): <span class="type" style="color:#EAB766"><span class="type true" style="color:#EAB766">true</span></span></div>  <p class="para rdfs-comment">   此函数允许在 <span class="parameter" style="color:#3A95FF">object</span> 内部使用 <span class="parameter" style="color:#3A95FF">parser</span>。所有回调函数都可以用   <span class="function">{@link xml_set_element_handler()}</span> 等设置，并假定为 <span class="parameter" style="color:#3A95FF">object</span> 的方法。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-set-object-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt>     <dd>      <p class="para">       指向对象内要使用的 XML 解析器。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">object</span></dt>     <dd>      <p class="para">       使用 XML 解析器的对象。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-set-object-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-set-object-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">      <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.xml-set-object-examples">  <h3 class="title">示例</h3>  <span>   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">xml_set_object()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /></span><span style="color: #007700">class </span><span style="color: #9876AA">CustomXMLParser<br /></span><span style="color: #007700">{<br />    private </span><span style="color: #9876AA">$parser</span><span style="color: #007700">;<br /><br />    function </span><span style="color: #9876AA">__construct</span><span style="color: #007700">() <br />    {<br />        </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parser </span><span style="color: #007700">= </span><span style="color: #9876AA">xml_parser_create</span><span style="color: #007700">();<br /><br />        </span><span style="color: #9876AA">xml_set_object</span><span style="color: #007700">(</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parser</span><span style="color: #007700">, </span><span style="color: #9876AA">$this</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">xml_set_element_handler</span><span style="color: #007700">(</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parser</span><span style="color: #007700">, </span><span style="color: #DD0000">"tag_open"</span><span style="color: #007700">, </span><span style="color: #DD0000">"tag_close"</span><span style="color: #007700">);<br />        </span><span style="color: #9876AA">xml_set_character_data_handler</span><span style="color: #007700">(</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parser</span><span style="color: #007700">, </span><span style="color: #DD0000">"cdata"</span><span style="color: #007700">);<br />    }<br /><br />    function </span><span style="color: #9876AA">parse</span><span style="color: #007700">(</span><span style="color: #9876AA">$data</span><span style="color: #007700">) <br />    {<br />        </span><span style="color: #9876AA">xml_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parser</span><span style="color: #007700">, </span><span style="color: #9876AA">$data</span><span style="color: #007700">);<br />    }<br /><br />    function </span><span style="color: #9876AA">tag_open</span><span style="color: #007700">(</span><span style="color: #9876AA">$parser</span><span style="color: #007700">, </span><span style="color: #9876AA">$tag</span><span style="color: #007700">, </span><span style="color: #9876AA">$attributes</span><span style="color: #007700">) <br />    {<br />        </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$tag</span><span style="color: #007700">, </span><span style="color: #9876AA">$attributes</span><span style="color: #007700">); <br />    }<br /><br />    function </span><span style="color: #9876AA">cdata</span><span style="color: #007700">(</span><span style="color: #9876AA">$parser</span><span style="color: #007700">, </span><span style="color: #9876AA">$cdata</span><span style="color: #007700">) <br />    {<br />        </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$cdata</span><span style="color: #007700">);<br />    }<br /><br />    function </span><span style="color: #9876AA">tag_close</span><span style="color: #007700">(</span><span style="color: #9876AA">$parser</span><span style="color: #007700">, </span><span style="color: #9876AA">$tag</span><span style="color: #007700">) <br />    {<br />        </span><span style="color: #9876AA">var_dump</span><span style="color: #007700">(</span><span style="color: #9876AA">$tag</span><span style="color: #007700">);<br />    }<br />}<br /><br /></span><span style="color: #9876AA">$xml_parser </span><span style="color: #007700">= new </span><span style="color: #9876AA">CustomXMLParser</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">$xml_parser</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">parse</span><span style="color: #007700">(</span><span style="color: #DD0000">"&lt;A ID='hallo'&gt;PHP&lt;/A&gt;"</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>以上示例会输出：</p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>string(1) &quot;A&quot;<br>array(1) {<br>  [&quot;ID&quot;]=&gt;<br>  string(5) &quot;hallo&quot;<br>}<br>string(3) &quot;PHP&quot;<br>string(1) &quot;A&quot;<br></span></div>    </div>   </div>  </span> </div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function xml_set_object(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser, object $object) {}

/**
*<div id="function.xml-set-element-handler" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_set_element_handler</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_set_element_handler</span> &mdash; <span class="dc-title">建立起始和终止元素处理程序</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-set-element-handler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_set_element_handler</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$start_handler</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$end_handler</span></span>): <span class="type" style="color:#EAB766"><span class="type true" style="color:#EAB766">true</span></span></div>  <p class="para rdfs-comment">   为 <span class="parameter" style="color:#3A95FF">parser</span> 参数指定的 XML 解析器建立元素处理函数。  </p>  <p class="para">   当打开新的 XML 元素时调用 <span class="parameter" style="color:#3A95FF">start_handler</span>，当关闭 XML 元素时调用 <span class="parameter" style="color:#3A95FF">end_handler</span>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-set-element-handler-parameters">  <h3 class="title">参数</h3>  <span>   <dl>     <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <p class="para">   XML 解析器。  </p> </dd>         <dt><span class="parameter" style="color:#3A95FF">start_handler</span></dt>     <dd>      <p class="para"> 如果传递 <strong><span>null</span></strong> 或空字符串，处理程序将重置为其默认状态。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span>，设置的 callable 将作为处理程序。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766">string</span>，它可以是 <span class="function">{@link xml_set_object()}</span> 设置的对象的方法名称。</p>      <p class="para">       处理程序的签名必须是：       <div class="methodsynopsis dc-description">        <span class="methodname" style="color:#CC7832"><span class="replaceable">start_element_handler</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">$attributes</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>       <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <span class="simpara">   XML 解析器调用的处理程序。  </span> </dd>                 <dt><span class="parameter" style="color:#3A95FF">name</span></dt>         <dd>          <span class="simpara">           包含调用此处理程序的元素名称。如果<a href="https://www.php.net/manual/zh/xml.case-folding.php" class="link">大写转换</a>对该解析器有效，元素名将用大写字母表示。          </span>         </dd>                         <dt><span class="parameter" style="color:#3A95FF">attributes</span></dt>         <dd>          <span class="simpara">           带有元素属性的关联数组。如果元素没有数组则为空数组。数组元素的下标为属性名，元素的值即为属性的值。属性名将以和元素名同样的标准进行<a href="https://www.php.net/manual/zh/xml.case-folding.php" class="link">大写转换</a>，值<em>不</em>进行大写转换。          </span>          <span class="simpara">           遍历 <span class="parameter" style="color:#3A95FF">attributes</span> 的顺序与声明 attributes 的顺序相同。          </span>         </dd>               </dl>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">end_handler</span></dt>     <dd>      <p class="para"> 如果传递 <strong><span>null</span></strong> 或空字符串，处理程序将重置为其默认状态。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span>，设置的 callable 将作为处理程序。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766">string</span>，它可以是 <span class="function">{@link xml_set_object()}</span> 设置的对象的方法名称。</p>      <p class="para">       处理程序的签名必须是：       <div class="methodsynopsis dc-description">        <span class="methodname" style="color:#CC7832"><span class="replaceable">end_element_handler</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$name</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>       <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <span class="simpara">   XML 解析器调用的处理程序。  </span> </dd>                 <dt><span class="parameter" style="color:#3A95FF">name</span></dt>         <dd>          <span class="simpara">           包含调用此处理程序的元素名称。如果<a href="https://www.php.net/manual/zh/xml.case-folding.php" class="link">大写转换</a>对该解析器有效，元素名将用大写字母表示。          </span>         </dd>               </dl>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-set-element-handler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-set-element-handler-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">      <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>    </tbody>     </table> </div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function xml_set_element_handler(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser, $start_handler, $end_handler) {}

/**
*<div id="function.xml-set-character-data-handler" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_set_character_data_handler</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_set_character_data_handler</span> &mdash; <span class="dc-title">建立字符数据处理器</span></p> </div>    <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-set-character-data-handler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_set_character_data_handler</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$handler</span></span>): <span class="type" style="color:#EAB766"><span class="type true" style="color:#EAB766">true</span></span></div>  <p class="para rdfs-comment">   为 <span class="parameter" style="color:#3A95FF">parser</span> 变量指向的 XML 解析器指定字符数据处理函数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-set-character-data-handler-parameters">  <h3 class="title">参数</h3>  <span>   <dl>     <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <p class="para">   XML 解析器。  </p> </dd>         <dt><span class="parameter" style="color:#3A95FF">handler</span></dt>     <dd>      <p class="para"> 如果传递 <strong><span>null</span></strong> 或空字符串，处理程序将重置为其默认状态。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span>，设置的 callable 将作为处理程序。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766">string</span>，它可以是 <span class="function">{@link xml_set_object()}</span> 设置的对象的方法名称。</p>      <p class="para">       处理程序的签名必须是：       <div class="methodsynopsis dc-description">        <span class="methodname" style="color:#CC7832"><span class="replaceable">handler</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$data</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>       <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <span class="simpara">   XML 解析器调用的处理程序。  </span> </dd>                 <dt><span class="parameter" style="color:#3A95FF">data</span></dt>         <dd>          <span class="simpara">           字符串格式的字符数据。          </span>         </dd>               </dl>      </p>      <p class="para">       XML 文档的每段文字都会调用字符数据处理程序。可以在每个片段内多次调用（比如非 ASCII 字符串）。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-set-character-data-handler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-set-character-data-handler-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">      <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>    </tbody>     </table> </div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function xml_set_character_data_handler(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser, $handler) {}

/**
*<div id="function.xml-set-processing-instruction-handler" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_set_processing_instruction_handler</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_set_processing_instruction_handler</span> &mdash; <span class="dc-title">   建立处理指令（PI）处理程序  </span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-set-processing-instruction-handler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_set_processing_instruction_handler</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$handler</span></span>): <span class="type" style="color:#EAB766"><span class="type true" style="color:#EAB766">true</span></span></div>  <p class="para rdfs-comment">   为 <span class="parameter" style="color:#3A95FF">parser</span> XML 解析器设置处理指令（PI）处理函数。  </p>  <p class="para">   处理指令有如下格式：   <div class="example-contents"><div class="xmlcode"><span>&lt;?target<br>data<br>?&gt;</span></div>   </div>  </p>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    PHP 代码通过 <span>&lt;?php</span> 处理指令分隔。因此可以在 XML 文档中使用 PHP    代码。但是 PI 结束标记（<span>?&gt;</span>）不能是数据的一部分。如果 PI    结束标记存在于嵌入式 PHP 代码的一部分，则 PHP 代码的其余部分以及“真实的”PI 结束标记将会视为字符数据。   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-set-processing-instruction-handler-parameters">  <h3 class="title">参数</h3>  <span>   <dl>     <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <p class="para">   XML 解析器。  </p> </dd>         <dt><span class="parameter" style="color:#3A95FF">handler</span></dt>     <dd>      <p class="para"> 如果传递 <strong><span>null</span></strong> 或空字符串，处理程序将重置为其默认状态。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span>，设置的 callable 将作为处理程序。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766">string</span>，它可以是 <span class="function">{@link xml_set_object()}</span> 设置的对象的方法名称。</p>      <p class="para">       处理程序的签名必须是：       <div class="methodsynopsis dc-description">        <span class="methodname" style="color:#CC7832"><span class="replaceable">handler</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$target</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$data</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>       <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <span class="simpara">   XML 解析器调用的处理程序。  </span> </dd>                 <dt><span class="parameter" style="color:#3A95FF">target</span></dt>         <dd>          <span class="simpara">           处理指令目标。          </span>         </dd>                         <dt><span class="parameter" style="color:#3A95FF">data</span></dt>         <dd>          <span class="simpara">           处理指令数据。          </span>         </dd>               </dl>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-set-processing-instruction-handler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-set-processing-instruction-handler-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">      <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>    </tbody>     </table> </div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function xml_set_processing_instruction_handler(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser, $handler) {}

/**
*<div id="function.xml-set-default-handler" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_set_default_handler</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_set_default_handler</span> &mdash; <span class="dc-title">建立默认处理程序</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-set-default-handler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_set_default_handler</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$handler</span></span>): <span class="type" style="color:#EAB766"><span class="type true" style="color:#EAB766">true</span></span></div>  <p class="para rdfs-comment">   为 <span class="parameter" style="color:#3A95FF">parser</span> 指定的 XML 处理程序建立默认处理函数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-set-default-handler-parameters">  <h3 class="title">参数</h3>  <span>   <dl>     <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <p class="para">   XML 解析器。  </p> </dd>         <dt><span class="parameter" style="color:#3A95FF">handler</span></dt>     <dd>      <p class="para"> 如果传递 <strong><span>null</span></strong> 或空字符串，处理程序将重置为其默认状态。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span>，设置的 callable 将作为处理程序。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766">string</span>，它可以是 <span class="function">{@link xml_set_object()}</span> 设置的对象的方法名称。</p>      <p class="para">       处理程序的签名必须是：       <div class="methodsynopsis dc-description">        <span class="methodname" style="color:#CC7832"><span class="replaceable">handler</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$data</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>       <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <span class="simpara">   XML 解析器调用的处理程序。  </span> </dd>                 <dt>          <span class="parameter" style="color:#3A95FF">data</span>         </dt>         <dd>          <span class="simpara">           <span class="parameter" style="color:#3A95FF">data</span> 包含字符数据。可以是 XML 声明、文档类型声明、实体名或者其它没有已存在处理程序的数据。          </span>         </dd>               </dl>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-set-default-handler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-set-default-handler-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">      <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>    </tbody>     </table> </div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function xml_set_default_handler(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser, $handler) {}

/**
*<div id="function.xml-set-unparsed-entity-decl-handler" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_set_unparsed_entity_decl_handler</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_set_unparsed_entity_decl_handler</span> &mdash; <span class="dc-title">   建立未解析实体定义声明处理程序  </span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-set-unparsed-entity-decl-handler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_set_unparsed_entity_decl_handler</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$handler</span></span>): <span class="type" style="color:#EAB766"><span class="type true" style="color:#EAB766">true</span></span></div>  <p class="para rdfs-comment">   为 <span class="parameter" style="color:#3A95FF">parser</span> XML 解析器设置未解析实体声明处理函数。  </p>  <p class="para">   当 XML 解析器遇到如下含有 NDATA 声明的外部实体定义声明时，该 <span class="parameter" style="color:#3A95FF">handler</span> 处理程序将被调用：   <div class="example-contents"><div class="xmlcode"><span>&lt;!ENTITY &lt;parameter&gt;name&lt;/parameter&gt; {&lt;parameter&gt;publicId&lt;/parameter&gt; | &lt;parameter&gt;systemId&lt;/parameter&gt;}<br>        NDATA &lt;parameter&gt;notationName&lt;/parameter&gt;</span></div>   </div>  </p>  <p class="para">   请参阅 <a href="http://www.w3.org/TR/1998/REC-xml-19980210#sec-external-ent" class="link external">&raquo;&nbsp;XML 1.0 参考的第 4.2.2 节</a>以获取有关已声明外部实体注释定义的信息。  </p>  </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-set-unparsed-entity-decl-handler-parameters">  <h3 class="title">参数</h3>  <span>   <dl>     <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <p class="para">   XML 解析器。  </p> </dd>         <dt><span class="parameter" style="color:#3A95FF">handler</span></dt>     <dd>      <p class="para"> 如果传递 <strong><span>null</span></strong> 或空字符串，处理程序将重置为其默认状态。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span>，设置的 callable 将作为处理程序。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766">string</span>，它可以是 <span class="function">{@link xml_set_object()}</span> 设置的对象的方法名称。</p>      <p class="para">       处理程序的签名必须是：       <div class="methodsynopsis dc-description">        <span class="methodname" style="color:#CC7832"><span class="replaceable">handler</span></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$entity_name</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span> <span class="parameter" style="color:#3A95FF">$base</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$system_id</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span> <span class="parameter" style="color:#3A95FF">$public_id</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span> <span class="parameter" style="color:#3A95FF">$notation_name</span></span><br>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>       <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <span class="simpara">   XML 解析器调用的处理程序。  </span> </dd>                 <dt><span class="parameter" style="color:#3A95FF">entity_name</span></dt>         <dd>          <span class="simpara">           将被定义的实体名。          </span>         </dd>                         <dt><span class="parameter" style="color:#3A95FF">base</span></dt>         <dd>          <span class="simpara">           这个参数是解析外部实体的系统标识符（<span class="parameter" style="color:#3A95FF">system_id</span>）的基础。          </span>         </dd>                         <dt><span class="parameter" style="color:#3A95FF">system_id</span></dt>         <dd>          <span class="simpara">           外部实体的系统标识符。          </span>         </dd>                         <dt><span class="parameter" style="color:#3A95FF">public_id</span></dt>         <dd>          <span class="simpara">            外部实体的公共标识符。          </span>         </dd>                         <dt><span class="parameter" style="color:#3A95FF">notation_name</span></dt>         <dd>          <span class="simpara">            该实体的注释名（请参阅 <span class="function">{@link xml_set_notation_decl_handler()}</span>）。          </span>         </dd>               </dl>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-set-unparsed-entity-decl-handler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-set-unparsed-entity-decl-handler-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">      <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>    </tbody>     </table> </div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function xml_set_unparsed_entity_decl_handler(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser, $handler) {}

/**
*<div id="function.xml-set-notation-decl-handler" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_set_notation_decl_handler</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_set_notation_decl_handler</span> &mdash; <span class="dc-title">设置符号声明处理程序</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-set-notation-decl-handler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_set_notation_decl_handler</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$handler</span></span>): <span class="type" style="color:#EAB766"><span class="type true" style="color:#EAB766">true</span></span></div>  <p class="para rdfs-comment">   为 XML 解析器 <span class="parameter" style="color:#3A95FF">parser</span> 设置符号声明处理函数。  </p>  <p class="para">   符号声明是文档 DTD 的一部分，并有如下格式：   <div class="example-contents"><div class="xmlcode"><span>&lt;!NOTATION &lt;parameter&gt;name&lt;/parameter&gt;<br>{ &lt;parameter&gt;systemId&lt;/parameter&gt; | &lt;parameter&gt;publicId&lt;/parameter&gt;?&gt;</span></div>   </div>    有关符号声明的定义，请参考 <a href="http://www.w3.org/TR/1998/REC-xml-19980210#Notations" class="link external">&raquo;&nbsp;XML 1.0 规范的第 4.7 节</a>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-set-notation-decl-handler-parameters">  <h3 class="title">参数</h3>  <span>   <dl>     <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <p class="para">   XML 解析器。  </p> </dd>         <dt><span class="parameter" style="color:#3A95FF">handler</span></dt>     <dd>      <p class="para"> 如果传递 <strong><span>null</span></strong> 或空字符串，处理程序将重置为其默认状态。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span>，设置的 callable 将作为处理程序。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766">string</span>，它可以是 <span class="function">{@link xml_set_object()}</span> 设置的对象的方法名称。</p>      <p class="para">       处理程序的签名必须是：       <div class="methodsynopsis dc-description">        <span class="methodname" style="color:#CC7832"><span class="replaceable">handler</span></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$notation_name</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span> <span class="parameter" style="color:#3A95FF">$base</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$system_id</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span> <span class="parameter" style="color:#3A95FF">$public_id</span></span><br>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>       <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <span class="simpara">   XML 解析器调用的处理程序。  </span> </dd>                 <dt><span class="parameter" style="color:#3A95FF">notation_name</span></dt>         <dd>          <span class="simpara">           This is the notation&#039;s name, as per the notation format described above.          </span>         </dd>                         <dt>          <span class="parameter" style="color:#3A95FF">base</span>         </dt>         <dd>          <span class="simpara">           这个参数是解析符号声明的系统标识符（<span>system_id</span>）的基础。          </span>         </dd>                         <dt><span class="parameter" style="color:#3A95FF">system_id</span></dt>         <dd>          <span class="simpara">           外部符号声明的系统标识符。          </span>         </dd>                         <dt>          <span class="parameter" style="color:#3A95FF">public_id</span>         </dt>         <dd>          <span class="simpara">           外部符号声明的公共标识符。          </span>         </dd>               </dl>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-set-notation-decl-handler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-set-notation-decl-handler-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">      <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>    </tbody>     </table> </div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function xml_set_notation_decl_handler(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser, $handler) {}

/**
*<div id="function.xml-set-external-entity-ref-handler" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_set_external_entity_ref_handler</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_set_external_entity_ref_handler</span> &mdash; <span class="dc-title">设置外部实体引用处理程序</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-set-external-entity-ref-handler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_set_external_entity_ref_handler</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$handler</span></span>): <span class="type" style="color:#EAB766"><span class="type true" style="color:#EAB766">true</span></span></div>  <p class="para rdfs-comment">   为 XML 解析器 <span class="parameter" style="color:#3A95FF">parser</span> 设置外部实体引用处理函数。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-set-external-entity-ref-handler-parameters">  <h3 class="title">参数</h3>  <span>   <dl>     <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <p class="para">   XML 解析器。  </p> </dd>         <dt><span class="parameter" style="color:#3A95FF">handler</span></dt>     <dd>      <p class="para"> 如果传递 <strong><span>null</span></strong> 或空字符串，处理程序将重置为其默认状态。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span>，设置的 callable 将作为处理程序。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766">string</span>，它可以是 <span class="function">{@link xml_set_object()}</span> 设置的对象的方法名称。</p>      <p class="para">       处理程序的签名必须是：       <div class="methodsynopsis dc-description">        <span class="methodname" style="color:#CC7832"><span class="replaceable">handler</span></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$open_entity_names</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span> <span class="parameter" style="color:#3A95FF">$base</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$system_id</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span> <span class="parameter" style="color:#3A95FF">$public_id</span></span><br>): <span class="type" style="color:#EAB766">bool</span></div>       <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <span class="simpara">   XML 解析器调用的处理程序。  </span> </dd>                 <dt><span class="parameter" style="color:#3A95FF">open_entity_names</span></dt>         <dd>          <span class="simpara">           为该实体的解析开放的实体名列表（包括被指向的实体名），这些实体名由空格隔开。          </span>         </dd>                         <dt><span class="parameter" style="color:#3A95FF">base</span></dt>         <dd>          <span class="simpara">          这个参数是解析外部实体的系统标识符（<span class="parameter" style="color:#3A95FF">system_id</span>）的基础。          </span>         </dd>                         <dt><span class="parameter" style="color:#3A95FF">system_id</span></dt>         <dd>          <span class="simpara">           在实体定义声明中指定的系统标识符。          </span>         </dd>                         <dt><span class="parameter" style="color:#3A95FF">public_id</span></dt>         <dd>          <span class="simpara">           在实体定义声明中指定的公共标识符，如果未指定任何标识符，则该字符串为空。公共标识符中的空格将按照 XML 的要求被正常化。          </span>         </dd>               </dl>      </p>      <p class="para">       如果实体已经处理，则处理程序应返回 <strong><span>true</span></strong>，否则返回 <strong><span>false</span></strong>。当返回 <strong><span>false</span></strong> 时，XML       解析器将停止解析并且 <span class="function">{@link xml_get_error_code()}</span> 将返回       <strong><span>XML_ERROR_EXTERNAL_ENTITY_HANDLING</span></strong>。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-set-external-entity-ref-handler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-set-external-entity-ref-handler-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">      <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>     <tr>      <td>7.3.0</td>      <td>       如果扩展是针对 libxml 构建的，则不再忽略 <span class="parameter" style="color:#3A95FF">handler</span> 的返回值。以前，会忽略返回值，且解析也从不停止。      </td>     </tr>    </tbody>     </table> </div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function xml_set_external_entity_ref_handler(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser, $handler) {}

/**
*<div id="function.xml-set-start-namespace-decl-handler" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_set_start_namespace_decl_handler</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.5, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_set_start_namespace_decl_handler</span> &mdash; <span class="dc-title">   设置起始命名空间声明处理程序  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-set-start-namespace-decl-handler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_set_start_namespace_decl_handler</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$handler</span></span>): <span class="type" style="color:#EAB766"><span class="type true" style="color:#EAB766">true</span></span></div>  <p class="para rdfs-comment">   设置在声明命名空间时要调用的处理程序。命名空间声明出现在开始标签内。开始标记内的命名空间声明，命名空间声明开始处理程序在开始标记处理程序之前调用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-set-start-namespace-decl-handler-parameters">  <h3 class="title">参数</h3>  <span>   <dl>     <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <p class="para">   XML 解析器。  </p> </dd>         <dt><span class="parameter" style="color:#3A95FF">handler</span></dt>     <dd>      <p class="para"> 如果传递 <strong><span>null</span></strong> 或空字符串，处理程序将重置为其默认状态。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span>，设置的 callable 将作为处理程序。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766">string</span>，它可以是 <span class="function">{@link xml_set_object()}</span> 设置的对象的方法名称。</p>      <p class="para">       处理程序的签名必须是：       <div class="methodsynopsis dc-description">        <span class="methodname" style="color:#CC7832"><span class="replaceable">handler</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span> <span class="parameter" style="color:#3A95FF">$prefix</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$uri</span></span>): <span class="type" style="color:#EAB766"><span class="type void" style="color:#EAB766">void</span></span></div>       <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <span class="simpara">   XML 解析器调用的处理程序。  </span> </dd>                 <dt><span class="parameter" style="color:#3A95FF">prefix</span></dt>         <dd>          <span class="simpara">           前缀是一个字符串，用于引用 XML 对象中的命名空间。如果不存在前缀则为 <strong><span>false</span></strong>。          </span>         </dd>                         <dt><span class="parameter" style="color:#3A95FF">uri</span></dt>         <dd>          <span class="simpara">           命名空间的统一资源标识符 (URI)。          </span>         </dd>               </dl>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-set-start-namespace-decl-handler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-set-start-namespace-decl-handler-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">      <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.xml-set-start-namespace-decl-handler-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link xml_set_end_namespace_decl_handler()} - 设置终止命名空间声明处理程序</span></li>   </ul>  </span> </div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function xml_set_start_namespace_decl_handler(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser, $handler) {}

/**
*<div id="function.xml-set-end-namespace-decl-handler" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_set_end_namespace_decl_handler</h1>  <p class="verinfo">(PHP 4 &gt;= 4.0.5, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_set_end_namespace_decl_handler</span> &mdash; <span class="dc-title">设置终止命名空间声明处理程序</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-set-end-namespace-decl-handler-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_set_end_namespace_decl_handler</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span> <span class="parameter" style="color:#3A95FF">$handler</span></span>): <span class="type" style="color:#EAB766"><span class="type true" style="color:#EAB766">true</span></span></div>  <p class="para rdfs-comment">   设置离开命名空间声明作用域时要调用的处理程序。对于每个命名空间声明，这将在声明命名空间的元素的结束标记的处理程序之后调用。  </p>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    libXML 不支持此事件，因此不会调用已注册的处理程序。   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-set-end-namespace-decl-handler-parameters">  <h3 class="title">参数</h3>  <span>   <dl>     <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <p class="para">   XML 解析器。  </p> </dd>         <dt><span class="parameter" style="color:#3A95FF">handler</span></dt>     <dd>      <p class="para"> 如果传递 <strong><span>null</span></strong> 或空字符串，处理程序将重置为其默认状态。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/language.types.callable.php" class="type callable" style="color:#EAB766">callable</a></span>，设置的 callable 将作为处理程序。</p><p class="para"> 如果 <span class="parameter" style="color:#3A95FF">handler</span> 是 <span class="type" style="color:#EAB766">string</span>，它可以是 <span class="function">{@link xml_set_object()}</span> 设置的对象的方法名称。</p>      <p class="para">       处理程序的签名必须是：       <div class="methodsynopsis dc-description">        <span class="methodname" style="color:#CC7832"><span class="replaceable">handler</span></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766"><span class="type false" style="color:#EAB766">false</span></span></span> <span class="parameter" style="color:#3A95FF">$prefix</span></span>)</div>       <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt> <dd>  <span class="simpara">   XML 解析器调用的处理程序。  </span> </dd>                 <dt><span class="parameter" style="color:#3A95FF">prefix</span></dt>         <dd>          <span class="simpara">           前缀是一个字符串，用于引用 XML 对象中的命名空间。如果不存在前缀，则为 <strong><span>false</span></strong>。          </span>         </dd>               </dl>      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-set-end-namespace-decl-handler-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   总是返回 <strong><span>true</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-set-end-namespace-decl-handler-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">      <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.xml-set-end-namespace-decl-handler-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link xml_set_start_namespace_decl_handler()} - 设置起始命名空间声明处理程序</span></li>   </ul>  </span> </div></div>
 * @return bool <b>TRUE</b> on success or <b>FALSE</b> on failure.*/
function xml_set_end_namespace_decl_handler(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser, $handler) {}

/**
*<div id="function.xml-parse" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_parse</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_parse</span> &mdash; <span class="dc-title">开始解析 XML 文档</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-parse-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_parse</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$data</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">bool</span> <span class="parameter" style="color:#3A95FF">$is_final</span><span class="initializer"> = <strong><span>false</span></strong></span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   <span class="function"><strong style="color:#CC7832">xml_parse()</strong></span> 解析 XML 文档。已配置事件的处理程序根据需要被无限次调用。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-parse-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt>     <dd>      <p class="para">       指向将要使用的 XML 解析器的指针。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       要解析的数据块。可以通过使用新数据多次调用 <span class="function"><strong style="color:#CC7832">xml_parse()</strong></span> 来分段解析文档，只要在解析最后一个数据时设置 <span class="parameter" style="color:#3A95FF">is_final</span> 参数且为 <strong><span>true</span></strong> 即可。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">is_final</span></dt>     <dd>      <p class="para">       如果被设置为 <strong><span>true</span></strong>，则 <span class="parameter" style="color:#3A95FF">data</span> 为当前解析中最后一段数据。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-parse-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 1，失败时返回 0。  </p>  <p class="para">   若解析失败，可以使用如下函数获取错误信息：<span class="function">{@link xml_get_error_code()}</span>、<span class="function">{@link xml_error_string()}</span>、<span class="function">{@link xml_get_current_line_number()}</span>、<span class="function">{@link xml_get_current_column_number()}</span>   和 <span class="function">{@link xml_get_current_byte_index()}</span>。  </p>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:    <p class="para">    将 <span class="parameter" style="color:#3A95FF">is_final</span> 参数设置为 <strong><span>true</span></strong>，一些错误（例如 entity 错误）将会在数据末尾报告。   </p>  </p></blockquote> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-parse-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.xml-parse-examples">  <h3 class="title">示例</h3>  <div class="example" id="">   <p><strong>示例 #1 分块解析大型 XML 文档</strong></p>   <div class="example-contents"><p>     此示例展示了如何以块的形式读取和解析大型 XML 文档，这样就不必将整个文档保存在内存中。为简洁起见，省略了错误处理。   </p></div>   <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$stream </span><span style="color: #007700">= </span><span style="color: #9876AA">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'large.xml'</span><span style="color: #007700">, </span><span style="color: #DD0000">'r'</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">$parser </span><span style="color: #007700">= </span><span style="color: #9876AA">xml_parser_create</span><span style="color: #007700">();<br /></span><span style="color: #FF8000">// set up the handlers here<br /></span><span style="color: #007700">while ((</span><span style="color: #9876AA">$data </span><span style="color: #007700">= </span><span style="color: #9876AA">fread</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">, </span><span style="color: #9876AA">16384</span><span style="color: #007700">))) {<br />    </span><span style="color: #9876AA">xml_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">$parser</span><span style="color: #007700">, </span><span style="color: #9876AA">$data</span><span style="color: #007700">); </span><span style="color: #FF8000">// parse the current chunk<br /></span><span style="color: #007700">}<br /></span><span style="color: #9876AA">xml_parse</span><span style="color: #007700">(</span><span style="color: #9876AA">$parser</span><span style="color: #007700">, </span><span style="color: #DD0000">''</span><span style="color: #007700">, </span><span style="color: #9876AA">true</span><span style="color: #007700">); </span><span style="color: #FF8000">// finalize parsing<br /></span><span style="color: #9876AA">xml_parser_free</span><span style="color: #007700">(</span><span style="color: #9876AA">$parser</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">fclose</span><span style="color: #007700">(</span><span style="color: #9876AA">$stream</span><span style="color: #007700">);</span></span></span></div>   </div>  </div> </div></div>
 * @return int 1 on success or 0 on failure.*/
function xml_parse(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser, string $data, bool $is_final = false): int {}

/**
*<div id="function.xml-parse-into-struct" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_parse_into_struct</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_parse_into_struct</span> &mdash; <span class="dc-title">解析 XML 数据到数组中</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-parse-into-struct-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_parse_into_struct</strong></span>(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">string</span> <span class="parameter" style="color:#3A95FF">$data</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">&$values</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="methodparam"><span class="type" style="color:#EAB766">array</span> <span class="parameter" style="color:#3A95FF">&$index</span><span class="initializer"> = <strong><span>null</span></strong></span></span><br>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   该函数解析 XML 字符串到两个对应的数组中，一个（<span class="parameter" style="color:#3A95FF">index</span>）含有指向 <span class="parameter" style="color:#3A95FF">values</span>   数组中对应值的指针。最后两个参数必须通过引用传递。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-parse-into-struct-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt>     <dd>      <p class="para">       引用的 XML 解析器。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">data</span></dt>     <dd>      <p class="para">       包含 XML 数据的字符串。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">values</span></dt>     <dd>      <p class="para">       包含 XML 数据值的数组      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">index</span></dt>     <dd>      <p class="para">       包含指向 $values 中适当值位置的指针的数组。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-parse-into-struct-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   <span class="function"><strong style="color:#CC7832">xml_parse_into_struct()</strong></span> 失败时返回 0，成功返回 1。这和 <strong><span>false</span></strong> 与 <strong><span>true</span></strong> 不同，使用运算符（比如 ===）时要小心。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-parse-into-struct-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 examples" id="refsect1-function.xml-parse-into-struct-examples">  <h3 class="title">示例</h3>  <span>   下面的示例说明了函数生成的数组的内部结构。使用嵌入在 <span>para</span> 标签中的简单 <span>note</span> 标签，然后解析并打印出生成的结构：   <div class="example" id="">    <p><strong>示例 #1 <span class="function"><strong style="color:#CC7832">xml_parse_into_struct()</strong></span> 示例</strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br />$simple </span><span style="color: #007700">= </span><span style="color: #DD0000">"&lt;para&gt;&lt;note&gt;simple note&lt;/note&gt;&lt;/para&gt;"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">$p </span><span style="color: #007700">= </span><span style="color: #9876AA">xml_parser_create</span><span style="color: #007700">();<br /></span><span style="color: #9876AA">xml_parse_into_struct</span><span style="color: #007700">(</span><span style="color: #9876AA">$p</span><span style="color: #007700">, </span><span style="color: #9876AA">$simple</span><span style="color: #007700">, </span><span style="color: #9876AA">$vals</span><span style="color: #007700">, </span><span style="color: #9876AA">$index</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">xml_parser_free</span><span style="color: #007700">(</span><span style="color: #9876AA">$p</span><span style="color: #007700">);<br />echo </span><span style="color: #DD0000">"Index array\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$index</span><span style="color: #007700">);<br />echo </span><span style="color: #DD0000">"\nVals array\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$vals</span><span style="color: #007700">);<br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>    <div class="example-contents"><p>     运行以上代码，输出将是：    </p></div>    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>Index array<br>Array<br>(<br>    [PARA] =&gt; Array<br>        (<br>            [0] =&gt; 0<br>            [1] =&gt; 2<br>        )<br><br>    [NOTE] =&gt; Array<br>        (<br>            [0] =&gt; 1<br>        )<br><br>)<br><br>Vals array<br>Array<br>(<br>    [0] =&gt; Array<br>        (<br>            [tag] =&gt; PARA<br>            [type] =&gt; open<br>            [level] =&gt; 1<br>        )<br><br>    [1] =&gt; Array<br>        (<br>            [tag] =&gt; NOTE<br>            [type] =&gt; complete<br>            [level] =&gt; 2<br>            [value] =&gt; simple note<br>        )<br><br>    [2] =&gt; Array<br>        (<br>            [tag] =&gt; PARA<br>            [type] =&gt; close<br>            [level] =&gt; 1<br>        )<br><br>)<br></span></div>    </div>   </div>  </span>  <p class="para">   当 XML 文档很复杂时，事件驱动的解析（基于 expat 库）会变得复杂。此函数不会生成 DOM 风格对象，但会生成适合以树形方式遍历的结构。因此，可以轻松地创建表示 XML 文件中数据的对象。考虑以下表示氨基酸信息小型数据库的 XML 文件：   <div class="example" id="">    <p><strong>示例 #2 moldb.xml - 分子信息的小型数据库</strong></p>    <div class="example-contents"><div class="xmlcode"><span>&lt;?xml version=&quot;1.0&quot;?&gt;<br>&lt;moldb&gt;<br><br>  &lt;molecule&gt;<br>      &lt;name&gt;Alanine&lt;/name&gt;<br>      &lt;symbol&gt;ala&lt;/symbol&gt;<br>      &lt;code&gt;A&lt;/code&gt;<br>      &lt;type&gt;hydrophobic&lt;/type&gt;<br>  &lt;/molecule&gt;<br><br>  &lt;molecule&gt;<br>      &lt;name&gt;Lysine&lt;/name&gt;<br>      &lt;symbol&gt;lys&lt;/symbol&gt;<br>      &lt;code&gt;K&lt;/code&gt;<br>      &lt;type&gt;charged&lt;/type&gt;<br>  &lt;/molecule&gt;<br><br>&lt;/moldb&gt;</span></div>    </div>   </div>    还有一些代码用来解析文档并生成相应对象：   <div class="example" id="">    <p><strong>示例 #3      parsemoldb.php - 将 moldb.xml 解析到分子（molecular）对象的数组中    </strong></p>    <div class="example-contents"><div class="phpcode" style="border-color:gray;background:#232525"><span><span style="color: #000000"><span style="color: #9876AA">&lt;?php<br /><br /></span><span style="color: #007700">class </span><span style="color: #9876AA">AminoAcid </span><span style="color: #007700">{<br />    var </span><span style="color: #9876AA">$name</span><span style="color: #007700">;  </span><span style="color: #FF8000">// aa name<br />    </span><span style="color: #007700">var </span><span style="color: #9876AA">$symbol</span><span style="color: #007700">;    </span><span style="color: #FF8000">// three letter symbol<br />    </span><span style="color: #007700">var </span><span style="color: #9876AA">$code</span><span style="color: #007700">;  </span><span style="color: #FF8000">// one letter code<br />    </span><span style="color: #007700">var </span><span style="color: #9876AA">$type</span><span style="color: #007700">;  </span><span style="color: #FF8000">// hydrophobic, charged or neutral<br />    <br />    </span><span style="color: #007700">function </span><span style="color: #9876AA">__construct </span><span style="color: #007700">(</span><span style="color: #9876AA">$aa</span><span style="color: #007700">) <br />    {<br />        foreach (</span><span style="color: #9876AA">$aa </span><span style="color: #007700">as </span><span style="color: #9876AA">$k</span><span style="color: #007700">=&gt;</span><span style="color: #9876AA">$v</span><span style="color: #007700">)<br />            </span><span style="color: #9876AA">$this</span><span style="color: #007700">-&gt;</span><span style="color: #9876AA">$k </span><span style="color: #007700">= </span><span style="color: #9876AA">$aa</span><span style="color: #007700">[</span><span style="color: #9876AA">$k</span><span style="color: #007700">];<br />    }<br />}<br /><br />function </span><span style="color: #9876AA">readDatabase</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">) <br />{<br />    </span><span style="color: #FF8000">// read the XML database of aminoacids<br />    </span><span style="color: #9876AA">$data </span><span style="color: #007700">= </span><span style="color: #9876AA">file_get_contents</span><span style="color: #007700">(</span><span style="color: #9876AA">$filename</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">$parser </span><span style="color: #007700">= </span><span style="color: #9876AA">xml_parser_create</span><span style="color: #007700">();<br />    </span><span style="color: #9876AA">xml_parser_set_option</span><span style="color: #007700">(</span><span style="color: #9876AA">$parser</span><span style="color: #007700">, </span><span style="color: #9876AA">XML_OPTION_CASE_FOLDING</span><span style="color: #007700">, </span><span style="color: #9876AA">0</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">xml_parser_set_option</span><span style="color: #007700">(</span><span style="color: #9876AA">$parser</span><span style="color: #007700">, </span><span style="color: #9876AA">XML_OPTION_SKIP_WHITE</span><span style="color: #007700">, </span><span style="color: #9876AA">1</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">xml_parse_into_struct</span><span style="color: #007700">(</span><span style="color: #9876AA">$parser</span><span style="color: #007700">, </span><span style="color: #9876AA">$data</span><span style="color: #007700">, </span><span style="color: #9876AA">$values</span><span style="color: #007700">, </span><span style="color: #9876AA">$tags</span><span style="color: #007700">);<br />    </span><span style="color: #9876AA">xml_parser_free</span><span style="color: #007700">(</span><span style="color: #9876AA">$parser</span><span style="color: #007700">);<br /><br />    </span><span style="color: #FF8000">// loop through the structures<br />    </span><span style="color: #007700">foreach (</span><span style="color: #9876AA">$tags </span><span style="color: #007700">as </span><span style="color: #9876AA">$key</span><span style="color: #007700">=&gt;</span><span style="color: #9876AA">$val</span><span style="color: #007700">) {<br />        if (</span><span style="color: #9876AA">$key </span><span style="color: #007700">== </span><span style="color: #DD0000">"molecule"</span><span style="color: #007700">) {<br />            </span><span style="color: #9876AA">$molranges </span><span style="color: #007700">= </span><span style="color: #9876AA">$val</span><span style="color: #007700">;<br />            </span><span style="color: #FF8000">// each contiguous pair of array entries are the <br />            // lower and upper range for each molecule definition<br />            </span><span style="color: #007700">for (</span><span style="color: #9876AA">$i</span><span style="color: #007700">=</span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$molranges</span><span style="color: #007700">); </span><span style="color: #9876AA">$i</span><span style="color: #007700">+=</span><span style="color: #9876AA">2</span><span style="color: #007700">) {<br />                </span><span style="color: #9876AA">$offset </span><span style="color: #007700">= </span><span style="color: #9876AA">$molranges</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">] + </span><span style="color: #9876AA">1</span><span style="color: #007700">;<br />                </span><span style="color: #9876AA">$len </span><span style="color: #007700">= </span><span style="color: #9876AA">$molranges</span><span style="color: #007700">[</span><span style="color: #9876AA">$i </span><span style="color: #007700">+ </span><span style="color: #9876AA">1</span><span style="color: #007700">] - </span><span style="color: #9876AA">$offset</span><span style="color: #007700">;<br />                </span><span style="color: #9876AA">$tdb</span><span style="color: #007700">[] = </span><span style="color: #9876AA">parseMol</span><span style="color: #007700">(</span><span style="color: #9876AA">array_slice</span><span style="color: #007700">(</span><span style="color: #9876AA">$values</span><span style="color: #007700">, </span><span style="color: #9876AA">$offset</span><span style="color: #007700">, </span><span style="color: #9876AA">$len</span><span style="color: #007700">));<br />            }<br />        } else {<br />            continue;<br />        }<br />    }<br />    return </span><span style="color: #9876AA">$tdb</span><span style="color: #007700">;<br />}<br /><br />function </span><span style="color: #9876AA">parseMol</span><span style="color: #007700">(</span><span style="color: #9876AA">$mvalues</span><span style="color: #007700">) <br />{<br />    for (</span><span style="color: #9876AA">$i</span><span style="color: #007700">=</span><span style="color: #9876AA">0</span><span style="color: #007700">; </span><span style="color: #9876AA">$i </span><span style="color: #007700">&lt; </span><span style="color: #9876AA">count</span><span style="color: #007700">(</span><span style="color: #9876AA">$mvalues</span><span style="color: #007700">); </span><span style="color: #9876AA">$i</span><span style="color: #007700">++) {<br />        </span><span style="color: #9876AA">$mol</span><span style="color: #007700">[</span><span style="color: #9876AA">$mvalues</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">][</span><span style="color: #DD0000">"tag"</span><span style="color: #007700">]] = </span><span style="color: #9876AA">$mvalues</span><span style="color: #007700">[</span><span style="color: #9876AA">$i</span><span style="color: #007700">][</span><span style="color: #DD0000">"value"</span><span style="color: #007700">];<br />    }<br />    return new </span><span style="color: #9876AA">AminoAcid</span><span style="color: #007700">(</span><span style="color: #9876AA">$mol</span><span style="color: #007700">);<br />}<br /><br /></span><span style="color: #9876AA">$db </span><span style="color: #007700">= </span><span style="color: #9876AA">readDatabase</span><span style="color: #007700">(</span><span style="color: #DD0000">"moldb.xml"</span><span style="color: #007700">);<br />echo </span><span style="color: #DD0000">"** Database of AminoAcid objects:\n"</span><span style="color: #007700">;<br /></span><span style="color: #9876AA">print_r</span><span style="color: #007700">(</span><span style="color: #9876AA">$db</span><span style="color: #007700">);<br /><br /></span><span style="color: #9876AA">?&gt;</span></span></span></div>    </div>   </div>    在执行完 <var class="filename">parsemoldb.php</var> 后，变量 <var class="varname">$db</var> 将包含有由 <span class="classname"><strong class="classname">AminoAcid</strong></span> 对象组成的数组，该脚本的输出如下：   <div class="informalexample">    <div class="example-contents screen" style="color:AFB1B3;background:black;padding-left:5px;"><div class="cdata"><span>** Database of AminoAcid objects:<br>Array<br>(<br>    [0] =&gt; aminoacid Object<br>        (<br>            [name] =&gt; Alanine<br>            [symbol] =&gt; ala<br>            [code] =&gt; A<br>            [type] =&gt; hydrophobic<br>        )<br><br>    [1] =&gt; aminoacid Object<br>        (<br>            [name] =&gt; Lysine<br>            [symbol] =&gt; lys<br>            [code] =&gt; K<br>            [type] =&gt; charged<br>        )<br><br>)<br></span></div>    </div>   </div>  </p> </div></div>
 * @return int <b>xml_parse_into_struct</b> returns 0 for failure and 1 for*/
function xml_parse_into_struct(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser, string $data, &$values, &$index) {}

/**
*<div id="function.xml-get-error-code" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_get_error_code</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_get_error_code</span> &mdash; <span class="dc-title">获取 XML 解析器错误代码</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-get-error-code-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_get_error_code</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   获取 XML 解析器错误代码。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-get-error-code-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt>     <dd>      <p class="para">       一个指向要返回错误代码的 XML 解析器的指针      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-get-error-code-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回<a href="https://www.php.net/manual/zh/xml.error-codes.php" class="link">错误代码部分</a>列出中的某个错误代码。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-get-error-code-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.xml-get-error-code-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link xml_error_string()} - 获取 XML 解析器的错误字符串</span></li>   </ul>  </span> </div></div>
 * @return int|false Returns one of the error codes listed in the error codes*/
function xml_get_error_code(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser) {}

/**
*<div id="function.xml-error-string" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_error_string</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_error_string</span> &mdash; <span class="dc-title">获取 XML 解析器的错误字符串</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-error-string-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_error_string</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$error_code</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">?</span><span class="type" style="color:#EAB766">string</span></span></div>  <p class="para rdfs-comment">   获取与指定 <span class="parameter" style="color:#3A95FF">error_code</span> 关联的 XML 解析器错误字符串。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-error-string-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">error_code</span></dt>     <dd>      <p class="para">       由 <span class="function">{@link xml_get_error_code()}</span> 返回的错误代码。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-error-string-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回带有错误 <span class="parameter" style="color:#3A95FF">error_code</span> 文本描述的字符串，若没有与之对应的描述，则返回 <strong><span>null</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.xml-error-string-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link xml_get_error_code()} - 获取 XML 解析器错误代码</span></li>   </ul>  </span> </div></div>
 * @return string|null a string with a textual description of the error*/
function xml_error_string(int $error_code): ?string {}

/**
*<div id="function.xml-get-current-line-number" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_get_current_line_number</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_get_current_line_number</span> &mdash; <span class="dc-title">获取 XML 解析器的当前行号</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-get-current-line-number-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_get_current_line_number</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   获取指定 XML 解析器当前的行号。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-get-current-line-number-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt>     <dd>      <p class="para">       一个指向要获取当前行号的 XML 解析器的指针。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-get-current-line-number-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回解析器当前在其数据缓冲区的行号。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-get-current-line-number-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.xml-get-current-line-number-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link xml_get_current_column_number()} - 获取 XML 解析器的当前列号</span></li>    <li class="member"><span class="function">{@link xml_get_current_byte_index()} - 获取 XML 解析器的当前字节索引</span></li>   </ul>  </span> </div></div>
 * @return int|false This function returns <b>FALSE</b> if <i>parser</i> does*/
function xml_get_current_line_number(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser) {}

/**
*<div id="function.xml-get-current-column-number" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_get_current_column_number</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_get_current_column_number</span> &mdash; <span class="dc-title">   获取 XML 解析器的当前列号  </span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-get-current-column-number-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_get_current_column_number</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   获得指定 XML 解析器当前的列号。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-get-current-column-number-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt>     <dd>      <p class="para">       一个指向要获取列号的 XML 解析器的指针。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-get-current-column-number-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回指定解析器所在行（由函数 <span class="function">{@link xml_get_current_line_number()}</span> 给出）的列号。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-get-current-column-number-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>    </tbody>     </table> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.xml-get-current-column-number-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link xml_get_current_byte_index()} - 获取 XML 解析器的当前字节索引</span></li>    <li class="member"><span class="function">{@link xml_get_current_line_number()} - 获取 XML 解析器的当前行号</span></li>   </ul>  </span> </div></div>
 * @return int|false This function returns <b>FALSE</b> if <i>parser</i> does*/
function xml_get_current_column_number(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser) {}

/**
*<div id="function.xml-get-current-byte-index" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_get_current_byte_index</h1>   <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_get_current_byte_index</span> &mdash; <span class="dc-title">获取 XML 解析器的当前字节索引</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-get-current-byte-index-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_get_current_byte_index</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>): <span class="type" style="color:#EAB766">int</span></div>  <p class="para rdfs-comment">   获取指定 XML 解析器的当前字节索引（current byte index）。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-get-current-byte-index-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt>     <dd>      <p class="para">       指向要取得字节索引的 XML 解析器的引用。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-get-current-byte-index-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回解析器当前在其数据缓冲区中的字节索引（起始值为 0）。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-get-current-byte-index-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>    </tbody>     </table> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 notes" id="refsect1-function.xml-get-current-byte-index-notes">  <h3 class="title">注释</h3>  <div class="warning"><strong class="warning">警告</strong>   <p class="para">    该函数将返回根据 UTF-8 编码的文本的字节索引，而不论输入是否是其他的编码。   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 seealso" id="refsect1-function.xml-get-current-byte-index-seealso">  <h3 class="title">参见</h3>  <span>   <ul class="simplelist">    <li class="member"><span class="function">{@link xml_get_current_column_number()} - 获取 XML 解析器的当前列号</span></li>    <li class="member"><span class="function">{@link xml_get_current_line_number()} - 获取 XML 解析器的当前行号</span></li>   </ul>  </span> </div></div>
 * @return int|false This function returns <b>FALSE</b> if <i>parser</i> does*/
function xml_get_current_byte_index(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser) {}

/**
*<div id="function.xml-parser-free" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_parser_free</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_parser_free</span> &mdash; <span class="dc-title">释放 XML 解析器</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-parser-free-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_parser_free</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <blockquote class="note" style="border:1px gray solid"><p><strong class="note" style="border:1px gray solid">注意</strong>:  <p class="para">  此函数无效。在 PHP 8.0.0 之前，用于关闭资源。 </p></p></blockquote>  <p class="para">   释放指定 XML <span class="parameter" style="color:#3A95FF">parser</span>。  </p>  <div class="caution"><strong class="caution">警告</strong>   <p class="para">    除了在解析完成时调用 <span class="function"><strong style="color:#CC7832">xml_parser_free()</strong></span> 之外，在 PHP 8.0.0 之前，如果 parser    资源引用自对象，且对象引用 parser 资源，还必须明确取消对 <span class="parameter" style="color:#3A95FF">parser</span> 的引用以避免内存泄漏。   </p>  </div> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-parser-free-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt>     <dd>      <span class="simpara">       指向要释放的 XML 解析器的指针。      </span>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-parser-free-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>， 或者在失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-parser-free-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">      <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>    </tbody>     </table> </div></div>
 * @return bool This function returns <b>FALSE</b> if <i>parser</i> does not*/
function xml_parser_free(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser): bool {}

/**
*<div id="function.xml-parser-set-option" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_parser_set_option</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_parser_set_option</span> &mdash; <span class="dc-title">在 XML 解析器中设置选项</span></p> </div>  <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-parser-set-option-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_parser_set_option</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$option</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">bool</span></span> <span class="parameter" style="color:#3A95FF">$value</span></span>): <span class="type" style="color:#EAB766">bool</span></div>  <p class="para rdfs-comment">   在 XML 解析器中设置选项。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-parser-set-option-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt>     <dd>      <p class="para">       指向要设置选项的 XML 解析器。      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">option</span></dt>     <dd>      <p class="para">       要设置的选项。见下文。      </p>      <p class="para">       以下选项可用：       <table class="doctable table">        <caption><strong>XML 解析器选项</strong></caption>                 <thead>          <tr>           <th>选项常量</th>           <th>数据类型</th>           <th>说明</th>          </tr>         </thead>         <tbody class="tbody">          <tr>           <td><strong><span>XML_OPTION_CASE_FOLDING</span></strong></td>           <td>bool</td>           <td>            控制是否为此 XML 解析器启用<a href="https://www.php.net/manual/zh/xml.case-folding.php" class="link">大写转换</a>。默认启用。           </td>          </tr>          <tr>           <td><strong><span>XML_OPTION_SKIP_TAGSTART</span></strong></td>           <td>integer</td>            <td>            指定在标记名称的开头应略过多少个字符。           </td>          </tr>          <tr>           <td><strong><span>XML_OPTION_SKIP_WHITE</span></strong></td>           <td>bool</td>            <td>            是否略过由空白字符组成的值。           </td>          </tr>          <tr>           <td><strong><span>XML_OPTION_TARGET_ENCODING</span></strong></td>           <td>string</td>            <td>            设置要在此 XML 解析器中使用的<a href="https://www.php.net/manual/zh/xml.encoding.php" class="link">目标编码</a>。默认情况下，设置的编码与 <span class="function">{@link xml_parser_create()}</span>            使用的源编码相同。支持的目标编码有 <span>ISO-8859-1</span>、<span>US-ASCII</span> 和 <span>UTF-8</span>。           </td>          </tr>         </tbody>               </table>      </p>     </dd>             <dt><span class="parameter" style="color:#3A95FF">value</span></dt>     <dd>      <p class="para">       选项的新值。      </p>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-parser-set-option-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   成功时返回 <strong><span>true</span></strong>，失败时返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.xml-parser-set-option-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   当传递到 <span class="parameter" style="color:#3A95FF">option</span> 的值无效时抛出 <span class="classname"><a href="https://www.php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span>。  </p>  <p class="para">   在 PHP 8.0.0 之前，向 <span class="parameter" style="color:#3A95FF">option</span> 传递的值无效时会生成   <strong><span>E_WARNING</span></strong> 并使函数返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-parser-set-option-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       <span class="parameter" style="color:#3A95FF">value</span> 参数现在也接受 bool。选项 <strong><span>XML_OPTION_CASE_FOLDING</span></strong> 和       <strong><span>XML_OPTION_SKIP_WHITE</span></strong> 现在是 bool 选项。      </td>     </tr>     <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>     <tr>      <td>8.0.0</td>      <td>       如果 <span class="parameter" style="color:#3A95FF">option</span> 无效，现在抛出 <span class="classname"><a href="https://www.php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span>。      </td>     </tr>    </tbody>     </table> </div></div>
 * @return bool This function returns <b>FALSE</b> if <i>parser</i> does not*/
function xml_parser_set_option(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser, int $option, $value): bool {}

/**
*<div id="function.xml-parser-get-option" class="refentry"> <div class="refnamediv">  <h1 class="refname">xml_parser_get_option</h1>  <p class="verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class="refpurpose"><span class="refname">xml_parser_get_option</span> &mdash; <span class="dc-title">从 XML 解析器获取选项</span></p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 description" id="refsect1-function.xml-parser-get-option-description">  <h3 class="title">说明</h3>  <div class="methodsynopsis dc-description">   <span class="methodname" style="color:#CC7832"><strong>xml_parser_get_option</strong></span>(<span class="methodparam"><span class="type" style="color:#EAB766"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="type XMLParser" style="color:#EAB766">XMLParser</a></span> <span class="parameter" style="color:#3A95FF">$parser</span></span>, <span class="methodparam"><span class="type" style="color:#EAB766">int</span> <span class="parameter" style="color:#3A95FF">$option</span></span>): <span class="type" style="color:#EAB766"><span class="type" style="color:#EAB766">string</span>|<span class="type" style="color:#EAB766">int</span>|<span class="type" style="color:#EAB766">bool</span></span></div>  <p class="para rdfs-comment">   从 XML 解析器获取选项值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 parameters" id="refsect1-function.xml-parser-get-option-parameters">  <h3 class="title">参数</h3>  <span>   <dl>         <dt><span class="parameter" style="color:#3A95FF">parser</span></dt>     <dd>      <span class="simpara">       指向要获取选项的 XML 解析器。      </span>     </dd>             <dt><span class="parameter" style="color:#3A95FF">option</span></dt>     <dd>      <span class="simpara">       要获取的选项。可以用 <strong><span>XML_OPTION_CASE_FOLDING</span></strong>、<strong><span>XML_OPTION_SKIP_TAGSTART</span></strong>、<strong><span>XML_OPTION_SKIP_WHITE</span></strong>       和 <strong><span>XML_OPTION_TARGET_ENCODING</span></strong>。参阅 <span class="function">{@link xml_parser_set_option()}</span> 获取相应描述。      </span>     </dd>       </dl>  </span> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 returnvalues" id="refsect1-function.xml-parser-get-option-returnvalues">  <h3 class="title">返回值</h3>  <p class="para">   返回选项的值。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 errors" id="refsect1-function.xml-parser-get-option-errors">  <h3 class="title">错误／异常</h3>  <p class="para">   当传递到 <span class="parameter" style="color:#3A95FF">option</span> 的值无效时抛出 <span class="classname"><a href="https://www.php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span>。  </p>  <p class="para">   在 PHP 8.0.0 之前，向 <span class="parameter" style="color:#3A95FF">option</span> 传递的值无效时会生成   <strong><span>E_WARNING</span></strong> 并使函数返回 <strong><span>false</span></strong>。  </p> </div> <br></br><div style="BORDER-TOP: gray 1px dashed; OVERFLOW: hidden; HEIGHT: 1px"></div><div class="refsect1 changelog" id="refsect1-function.xml-parser-get-option-changelog">  <h3 class="title">更新日志</h3>  <table class="doctable informaltable">       <thead>     <tr>      <th>版本</th>      <th>说明</th>     </tr>    </thead>    <tbody class="tbody">     <tr>      <td>8.3.0</td>      <td>       此函数为 bool 选项返回 bool 值。      </td>     </tr>     <tr> <td>8.0.0</td> <td>  <span class="parameter" style="color:#3A95FF">parser</span> 现在接受 <span class="classname"><a href="https://www.php.net/manual/zh/class.xmlparser.php" class="classname">XMLParser</a></span> 实例；之前接受有效的 <span>xml</span> <span class="type" style="color:#EAB766">resource</span>。 </td></tr>     <tr>      <td>8.0.0</td>      <td>       如果 <span class="parameter" style="color:#3A95FF">option</span> 无效，现在抛出 <span class="classname"><a href="https://www.php.net/manual/zh/class.valueerror.php" class="classname">ValueError</a></span>。      </td>     </tr>     <tr>      <td>7.1.24, 7.2.12, 7.3.0</td>      <td>       <span class="parameter" style="color:#3A95FF">options</span> 现在支持 <strong><span>XML_OPTION_SKIP_TAGSTART</span></strong>       和 <strong><span>XML_OPTION_SKIP_WHITE</span></strong>。      </td>     </tr>    </tbody>     </table> </div></div>
 * @return string|int|bool This function returns <b>FALSE</b> if <i>parser</i> does*/
function xml_parser_get_option(#[LanguageLevelTypeAware(["8.0" => "XMLParser"], default: "resource")] $parser, int $option) {}

define('XML_ERROR_NONE', 0);
define('XML_ERROR_NO_MEMORY', 1);
define('XML_ERROR_SYNTAX', 2);
define('XML_ERROR_NO_ELEMENTS', 3);
define('XML_ERROR_INVALID_TOKEN', 4);
define('XML_ERROR_UNCLOSED_TOKEN', 5);
define('XML_ERROR_PARTIAL_CHAR', 6);
define('XML_ERROR_TAG_MISMATCH', 7);
define('XML_ERROR_DUPLICATE_ATTRIBUTE', 8);
define('XML_ERROR_JUNK_AFTER_DOC_ELEMENT', 9);
define('XML_ERROR_PARAM_ENTITY_REF', 10);
define('XML_ERROR_UNDEFINED_ENTITY', 11);
define('XML_ERROR_RECURSIVE_ENTITY_REF', 12);
define('XML_ERROR_ASYNC_ENTITY', 13);
define('XML_ERROR_BAD_CHAR_REF', 14);
define('XML_ERROR_BINARY_ENTITY_REF', 15);
define('XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF', 16);
define('XML_ERROR_MISPLACED_XML_PI', 17);
define('XML_ERROR_UNKNOWN_ENCODING', 18);
define('XML_ERROR_INCORRECT_ENCODING', 19);
define('XML_ERROR_UNCLOSED_CDATA_SECTION', 20);
define('XML_ERROR_EXTERNAL_ENTITY_HANDLING', 21);
define('XML_OPTION_CASE_FOLDING', 1);
define('XML_OPTION_TARGET_ENCODING', 2);
define('XML_OPTION_SKIP_TAGSTART', 3);
define('XML_OPTION_SKIP_WHITE', 4);

/**
*      指定 SAX 实现方法。可为 <code class="literal">libxml</code> 或 <code class="literal">expat</code>。     
*/
define('XML_SAX_IMPL', "libxml");

/**
*<div id="class.xmlparser" class="reference"> <h1 class="title">XMLParser 类</h1>  <div class="partintro"><p class="verinfo">(PHP 8)</p>    <div class="section" id="xmlparser.intro">   <h2 class="title">简介</h2>   <p class="para">    从 PHP 8.0.0 开始替换 <span>xml</span> 资源的完全不透明类。   </p>  </div>    <div class="section" id="xmlparser.synopsis">   <h2 class="title">类摘要</h2>   <div class="classsynopsis"><div class="classsynopsisinfo">         <span class="modifier">final</span>     <span class="modifier">class</span> <strong class="classname"><strong class="classname">XMLParser</strong></strong>     {</div>   }</div>  </div> </div> </div>
*/
final class XMLParser {}

// End of xml v.
